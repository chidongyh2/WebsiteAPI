{"version":3,"sources":["webpack:///./src/app/base-form.component.ts","webpack:///./src/app/base-list.component.ts","webpack:///./src/app/modules/hr/organization/office/services/office.service.ts","webpack:///./src/app/shareds/components/ghm-user-suggestion/ghm-user-suggestion.component.html","webpack:///./src/app/shareds/components/ghm-user-suggestion/ghm-user-suggestion.component.ts","webpack:///./src/app/shareds/components/ghm-user-suggestion/ghm-user-suggestion.module.ts","webpack:///./src/app/shareds/components/ghm-user-suggestion/ghm-user-suggestion.service.ts","webpack:///./src/app/shareds/components/nh-suggestion/nh-suggestion.module.ts","webpack:///./src/app/shareds/components/nh-suggestion/nh-suggestion.service.ts","webpack:///./src/app/shareds/components/nh-tab/nh-tab.service.ts","webpack:///./src/app/shareds/components/nh-tree/nh-dropdown-tree.component.ts.NHDropdownTreeComponent.html","webpack:///./src/app/shareds/components/nh-tree/nh-dropdown-tree.component.ts","webpack:///./src/app/shareds/components/tinymce/tinymce.module.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { FormArray, FormGroup } from '@angular/forms';\r\nimport { EventEmitter, Output } from '@angular/core';\r\nimport { LanguageViewModel, LanguageSearchViewModel } from './shareds/models/language.viewmodel';\r\nimport { Observable } from 'rxjs';\r\nimport { AppService } from './shareds/services/app.service';\r\nimport { PageTranslation } from './modules/configs/page/models/page-translation.model';\r\n\r\nexport class BaseFormComponent {\r\n    @Output() saveSuccessful = new EventEmitter();\r\n    private _message: { type: string, content: string } = {\r\n        type: '',\r\n        content: ''\r\n    };\r\n    model: FormGroup;\r\n    modelTranslationArray: FormArray;\r\n    isSaving = false;\r\n    isUpdate = false;\r\n    currentLanguage: string;\r\n    formErrors: any = {};\r\n    validationMessages: any = {};\r\n    translationFormErrors = {};\r\n    translationValidationMessage = [];\r\n    subscribers: any = {};\r\n    isModified = false;\r\n    isCreateAnother = false;\r\n    languages: LanguageViewModel[] = [];\r\n    languages$: Observable<LanguageSearchViewModel[]>;\r\n\r\n    // Permission.\r\n    permission = {\r\n        view: false,\r\n        insert: false,\r\n        update: false,\r\n        delete: false,\r\n        export: false,\r\n        print: false,\r\n        approve: false,\r\n        report: false\r\n    };\r\n\r\n    constructor() {\r\n    }\r\n\r\n    get message() {\r\n        return this._message;\r\n    }\r\n\r\n    get modelTranslations(): FormArray {\r\n        return this.model.get('modelTranslations') as FormArray;\r\n    }\r\n\r\n    setMessage(type: string, content: string) {\r\n        this._message.type = type;\r\n        this._message.content = content;\r\n    }\r\n\r\n    resetMessage() {\r\n        this._message.type = '';\r\n        this._message.content = '';\r\n    }\r\n\r\n    renderLanguageData(appService: AppService) {\r\n        this.languages = appService.languages.map((language: LanguageSearchViewModel) => {\r\n            if (language.isDefault) {\r\n                this.currentLanguage = language.languageId;\r\n            }\r\n            return {id: language.languageId, name: language.name, isSelected: language.isDefault};\r\n        });\r\n    }\r\n\r\n    renderTranslationFormArray(buildFormFunction: Function) {\r\n        this.modelTranslationArray = this.model.get('modelTranslations') as FormArray;\r\n        this.languages.forEach((language: LanguageViewModel) => {\r\n            const formGroup = buildFormFunction(language.id);\r\n            this.modelTranslationArray.push(formGroup);\r\n        });\r\n    }\r\n\r\n    validateModel<T>(isSubmit: boolean = true) {\r\n        return this.validateFormGroup(this.model, this.formErrors, this.validationMessages, isSubmit);\r\n    }\r\n\r\n    validateTranslationModel(isSubmit: boolean = true) {\r\n        return this.modelTranslations.controls.map((translationModel: FormGroup) => {\r\n            const languageId = translationModel.value.languageId;\r\n            const isValid = this.validateFormGroup(translationModel, this.translationFormErrors[languageId],\r\n                this.translationValidationMessage[languageId], isSubmit);\r\n            return {\r\n                languageId: languageId,\r\n                isValid: isValid,\r\n            };\r\n        });\r\n    }\r\n\r\n    validateFormGroup<T>(formGroup: T, formErrors: any, validationMessages: any, isSubmit?: boolean,\r\n                         elements?: any, data?: any): boolean {\r\n        if (!formGroup) {\r\n            return;\r\n        }\r\n        const form = <any>formGroup as FormGroup;\r\n        return this.checkFormValid(form, formErrors, validationMessages, isSubmit);\r\n    }\r\n\r\n    checkLanguageValid() {\r\n        const languageValidCheck = this.validateTranslationModel();\r\n        const languageValid = languageValidCheck.map((languageCheck: any) => {\r\n            if (!languageCheck.isValid) {\r\n                this.currentLanguage = languageCheck.languageId;\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        });\r\n        return !(languageValid.indexOf(false) > -1);\r\n    }\r\n\r\n    private checkFormValid(form: FormGroup, formErrors: any, validationMessages: any, isSubmit?: boolean): boolean {\r\n        let inValidCount = 0;\r\n        let isValid = true;\r\n        for (const field in formErrors) {\r\n            if (typeof (formErrors[field]) === 'object' && field != null && form != null) {\r\n                const newFormGroup = <any>form.get(field) as FormGroup;\r\n                if (newFormGroup instanceof FormArray) {\r\n                    newFormGroup.controls.forEach((control: FormGroup, index: number) => {\r\n                        isValid = this.checkFormValid(control, formErrors[field], validationMessages[field], isSubmit);\r\n                    });\r\n                } else {\r\n                    isValid = this.checkFormValid(newFormGroup, formErrors[field], validationMessages[field], isSubmit);\r\n                }\r\n            } else {\r\n                if (field != null && form != null) {\r\n                    formErrors[field] = '';\r\n                    const control = form.get(field);\r\n                    if (control && isSubmit) {\r\n                        control.markAsDirty();\r\n                    }\r\n                    if (control && control.dirty && !control.valid) {\r\n                        const messages = validationMessages[field];\r\n                        for (const key in control.errors) {\r\n                            if (control.errors.hasOwnProperty(key)) {\r\n                                formErrors[field] += messages[key];\r\n                                inValidCount++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return inValidCount === 0 && isValid;\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\nexport class BaseListComponent<TEntity> {\r\n    keyword: string;\r\n    currentPage = 1;\r\n    pageSize = 20;\r\n    totalRows = 0;\r\n    totalRows$: Observable<number>;\r\n    isSearching = false;\r\n    listItems: TEntity[] = [];\r\n    listItems$: Observable<TEntity[]>;\r\n    subscribers: any = {};\r\n    // Permission.\r\n    permission = {\r\n        view: false,\r\n        add: false,\r\n        edit: false,\r\n        delete: false,\r\n        export: false,\r\n        print: false,\r\n        approve: false,\r\n        report: false\r\n    };\r\n\r\n    // getPermission(appService: AppService, pageId: number) {\r\n    //     this.permission.view = appService.checkPermission(pageId, Permission.view);\r\n    //     this.permission.add = appService.checkPermission(pageId, Permission.insert);\r\n    //     this.permission.edit = appService.checkPermission(pageId, Permission.update);\r\n    //     this.permission.delete = appService.checkPermission(pageId, Permission.delete);\r\n    //     this.permission.export = appService.checkPermission(pageId, Permission.export);\r\n    //     this.permission.print = appService.checkPermission(pageId, Permission.print);\r\n    //     this.permission.approve = appService.checkPermission(pageId, Permission.approve);\r\n    //     this.permission.report = appService.checkPermission(pageId, Permission.report);\r\n    // }\r\n}\r\n","﻿import { Inject, Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Office } from '../office.model';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport { IActionResultResponse } from '../../../../../interfaces/iaction-result-response.result';\r\n\r\n@Injectable()\r\nexport class OfficeService implements Resolve<Office> {\r\n    url = 'office/';\r\n\r\n    constructor( @Inject(APP_CONFIG) appConfig: IAppConfig,\r\n        private http: HttpClient) {\r\n        this.url = `${appConfig.HR_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        const keyword = queryParams.keyword;\r\n        const isActive = queryParams.isActive;\r\n        const page = queryParams.page;\r\n        const pageSize = queryParams.pageSize;\r\n        return this.search(keyword, isActive, page, pageSize);\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page: number = 1, pageSize: number = 20): Observable<any> {\r\n        return this.http.get(`${this.url}search`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '0')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '20')\r\n        });\r\n    }\r\n\r\n    searchName(keyword: string, isActive?: boolean, page: number = 1, pageSize: number = 20): Observable<any> {\r\n        return this.http.get(`${this.url}search-name`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '0')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '20')\r\n        });\r\n    }\r\n\r\n    getDetail(id: number): Observable<Office> {\r\n        return this.http.get(`${this.url}detail`, {\r\n            params: new HttpParams()\r\n                .set('id', id.toString())\r\n        }) as Observable<Office>;\r\n    }\r\n\r\n    insert(office: Office): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}insert`, office) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    update(office: Office): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}update`, office) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    updateIsActive(office: Office): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}update-active-status`, '', {\r\n            params: new HttpParams()\r\n                .set('id', office.id.toString())\r\n                .set('isActive', office.isActive.toString())\r\n        }) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    delete(id: number): Observable<IActionResultResponse> {\r\n        return this.http.delete(`${this.url}delete`, {\r\n            params: new HttpParams()\r\n                .set('id', id.toString())\r\n        }) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    getTree() {\r\n        return this.http.get(`${this.url}get-tree`);\r\n    }\r\n\r\n    getOfficeUserTree() {\r\n        return this.http.get(`${this.url}get-office-user-tree`);\r\n    }\r\n\r\n    getOfficeUserTreeLazy(parentId: number) {\r\n        return this.http.get(`${this.url}get-office-tree-lazy`, {\r\n            params: new HttpParams()\r\n                .set('parentId', parentId ? parentId.toString() : '')\r\n        });\r\n    }\r\n\r\n    getListSpecialist() {\r\n        return this.http.get(`${this.url}get-list-specialist`);\r\n    }\r\n}\r\n","<div class=\"hus-container\">\r\n    <div class=\"hus-input-container\">\r\n        <ng-container *ngIf=\"isMultiple; else singleUserTemplate\">\r\n            <ul class=\"hus-selected-list\" *ngIf=\"isShowSelected\">\r\n                <li class=\"hus-item hus-suggestion-item\" *ngFor=\"let user of selectedUsers\"\r\n                    [class.active]=\"user.isActive\"\r\n                    (click)=\"selectedUserClick(user)\">\r\n                    <div class=\"hus-left\">\r\n                        <img class=\"avatar-sm rounded-avatar\" src=\"{{ user.image }}?w=50&h=50&mode=crop\" alt=\"\" (error)=\"onImageError(user)\">\r\n                    </div><!-- END: .hus-wrapper-avatar -->\r\n                    <div class=\"hus-body\">\r\n                        <button class=\"hus-close-button\" (click)=\"removeSelectedUser(user)\"></button>\r\n                        <h4 class=\"hus-title\">{{ user.fullName }}</h4><!-- END: .hus-title -->\r\n                        <div class=\"hus-content\">\r\n                            {{ user?.titleName }} - {{user?.officeName}}\r\n                        </div><!-- END: .hus-body -->\r\n                    </div>\r\n                </li><!-- END: .hug-selected-item -->\r\n            </ul><!-- END: .hug-selected-item -->\r\n        </ng-container>\r\n        <ng-template #singleUserTemplate>\r\n            <ul class=\"hus-selected-list\" *ngIf=\"isShowSelected && selectedUsers\">\r\n                <li class=\"hus-item hus-suggestion-item\" (click)=\"selectedUserClick(user)\">\r\n                    <div class=\"hus-left\">\r\n                        <img class=\"avatar-sm rounded-avatar\" src=\"{{ selectedUsers?.image }}?w=50&h=50&mode=crop\" alt=\"\"\r\n                             (error)=\"onImageError(selectedUsers)\">\r\n                    </div><!-- END: .hus-wrapper-avatar -->\r\n                    <div class=\"hus-body\">\r\n                        <button class=\"hus-close-button\" (click)=\"removeSelectedUser(selectedUsers)\"></button>\r\n                        <h4 class=\"hus-title\">{{ selectedUsers?.fullName }}</h4><!-- END: .hus-title -->\r\n                        <div class=\"hus-content\">\r\n                            {{ selectedUsers?.titleName }} - {{ selectedUsers?.officeName }}\r\n                        </div><!-- END: .hus-body -->\r\n                    </div>\r\n                </li><!-- END: .hug-selected-item -->\r\n            </ul><!-- END: .hug-selected-item -->\r\n        </ng-template>\r\n        <input class=\"hus-input\" placeholder=\"{{placeholder}}\"\r\n               (focus)=\"onInputfocus($event)\"\r\n               (keydown.enter)=\"$event.preventDefault()\"\r\n               (keyup)=\"inputKeyUp(husInput.value, $event)\" #husInput>\r\n        <!--<div class=\"hus-input\" contentEditable=\"true\"-->\r\n        <!--data-text=\"enter your name please\"></div>-->\r\n        <!-- END: .hug-input -->\r\n    </div><!-- END: hug-input-container -->\r\n    <ul class=\"hus-suggestion-container\" *ngIf=\"isShowListSuggestion\">\r\n        <li class=\"hus-item hus-suggestion-item\"\r\n            *ngFor=\"let user of listUsers\"\r\n            [class.active]=\"user.isActive || user.isSelected\"\r\n            (click)=\"selectUser(user)\"\r\n        >\r\n            <div class=\"hus-left\">\r\n                <img class=\"rounded-avatar avatar-sm\" src=\"/assets/images/noavatar.png?w=50&h=50&mode=crop\" alt=\"\"\r\n                     (error)=\"onImageError(user)\">\r\n            </div><!-- END: .hus-wrapper-avatar -->\r\n            <div class=\"hus-body\">\r\n                <h4 class=\"hus-title\">{{user.fullName}}</h4><!-- END: .hus-title -->\r\n                <div class=\"hus-content\">\r\n                    {{ user?.titleName }} - {{user?.officeName}}\r\n                </div><!-- END: .hus-body -->\r\n            </div>\r\n        </li><!-- END: .hug-suggestion-item -->\r\n    </ul><!-- END: .hug-suggestion-container -->\r\n</div><!-- END: .nh-user-suggestion-container -->\r\n","import {\r\n    Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, Renderer2,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\nexport class UserSuggestion {\r\n    constructor(public id: string,\r\n                public fullName: string,\r\n                public titleId: number,\r\n                public titleName: string,\r\n                public officeId: number,\r\n                public officeName: string,\r\n                public image?: string,\r\n                public isActive: boolean = false,\r\n                public isSelected: boolean = false,\r\n                public enrollNumber?: number) {\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'ghm-user-suggestion',\r\n    templateUrl: './ghm-user-suggestion.component.html',\r\n    styleUrls: ['./ghm-user-suggestion.component.scss']\r\n})\r\n\r\nexport class GhmUserSuggestionComponent implements OnInit {\r\n    @ViewChild('husInput') husInput: ElementRef;\r\n    private _sources: UserSuggestion[];\r\n    private _selectedUser: UserSuggestion[] | UserSuggestion;\r\n    private _isShowSuggestionList: boolean;\r\n\r\n    @Input() type = 'input';\r\n    @Input() isLoading = false;\r\n    @Input() isMultiple = false;\r\n    @Input() isShowSelected = true;\r\n    @Input() placeholder = 'Vui lòng nhập tên nhân viên cần tìm';\r\n    @Input() noImageFallback = '/assets/images/noavatar.png';\r\n\r\n    @Input()\r\n    set selectedUsers(values: UserSuggestion[] | UserSuggestion) {\r\n        this._selectedUser = values;\r\n    }\r\n\r\n    get selectedUsers() {\r\n        return this._selectedUser;\r\n    }\r\n\r\n    @Input()\r\n    set sources(values: UserSuggestion[]) {\r\n        this._sources = values;\r\n        this.listUsers = values;\r\n    }\r\n\r\n    get sources() {\r\n        return this._sources ? this._sources : null;\r\n    }\r\n\r\n    @Output() onSelectUser = new EventEmitter();\r\n    @Output() onRemoveUser = new EventEmitter();\r\n    @Output() onKeyUp = new EventEmitter();\r\n\r\n    listUsers = [];\r\n    isSearching = false;\r\n\r\n    set isShowListSuggestion(value) {\r\n        this._isShowSuggestionList = value;\r\n        if (value) {\r\n            // console.log(this.listUsers, this.selectedUsers);\r\n            // const intersection = _.intersectionBy(this.listUsers, this.selectedUsers, 'id');\r\n            // console.log(intersection);\r\n        }\r\n    }\r\n\r\n    get isShowListSuggestion() {\r\n        return this._isShowSuggestionList;\r\n    }\r\n\r\n    constructor(private el: ElementRef,\r\n                private renderer: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    onDocumentClick(targetElement) {\r\n        if (this.el.nativeElement && !this.el.nativeElement.contains(targetElement.target)) {\r\n            this.isShowListSuggestion = false;\r\n        }\r\n    }\r\n\r\n    onInputfocus(event) {\r\n        this.isShowListSuggestion = true;\r\n    }\r\n\r\n    inputKeyUp(keyword: string, event) {\r\n        const isNavigation = this.navigate(event);\r\n        if (!isNavigation) {\r\n            this.onKeyUp.emit(keyword);\r\n        }\r\n    }\r\n\r\n    onImageError(user: UserSuggestion) {\r\n        if (user) {\r\n            user.image = this.noImageFallback;\r\n        }\r\n    }\r\n\r\n    selectUser(user: UserSuggestion) {\r\n        if (!this.isMultiple) {\r\n            this.isShowListSuggestion = false;\r\n            this.selectedUsers = user;\r\n            this.husInput.nativeElement.value = '';\r\n            this.onSelectUser.emit(user);\r\n        } else {\r\n            user.isSelected = !user.isSelected;\r\n            const listSelectedUsers = _.filter(this.listUsers, (userItem: UserSuggestion) => userItem.isSelected);\r\n            this.selectedUsers = listSelectedUsers;\r\n            this.renderer.setValue(this.husInput.nativeElement, '');\r\n            this.onSelectUser.emit(listSelectedUsers);\r\n        }\r\n    }\r\n\r\n    selectedUserClick(user: UserSuggestion) {\r\n        this.isShowListSuggestion = true;\r\n    }\r\n\r\n    removeSelectedUser(user: UserSuggestion) {\r\n        if (this.isMultiple && this.selectedUsers instanceof Array) {\r\n            _.remove(this.selectedUsers, (userItem: UserSuggestion) => userItem.id === user.id);\r\n        } else {\r\n            this.selectedUsers = null;\r\n        }\r\n        this.resetActiveStatus();\r\n        this.onRemoveUser.emit(user);\r\n    }\r\n\r\n    private navigate(key) {\r\n        const keyCode = key.keyCode;\r\n        // Escape\r\n        if (keyCode === 27) {\r\n            this.isShowListSuggestion = false;\r\n        }\r\n\r\n        if (keyCode === 27 || keyCode === 17 || key.ctrlKey) {\r\n            return true;\r\n        }\r\n\r\n        // 37: Left arrow\r\n        // 38: Up arrow\r\n        // 39: Right arrow\r\n        // 40: Down arrow\r\n        // 13: Enter\r\n        if (keyCode === 37 || keyCode === 38 || keyCode === 39 || keyCode === 40 || keyCode === 13) {\r\n            switch (keyCode) {\r\n                case 37:\r\n                case 38:\r\n                    this.back();\r\n                    break;\r\n                case 39:\r\n                case 40:\r\n                    this.next();\r\n                    break;\r\n                case 13:\r\n                    const selectedItem = this.listUsers.find((user: UserSuggestion) => {\r\n                        return user.isActive;\r\n                    });\r\n                    this.selectUser(selectedItem);\r\n                    break;\r\n            }\r\n            key.preventDefault();\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private next() {\r\n        let index = this.getActiveUserIndex();\r\n        if (index === -1) {\r\n            const firstUser = this.listUsers[0];\r\n            if (firstUser) {\r\n                firstUser.isActive = true;\r\n            }\r\n        } else {\r\n            index = index < this.listUsers.length - 1 ? index + 1 : 0;\r\n            this.setUserActiveStatus(index);\r\n        }\r\n    }\r\n\r\n    private back() {\r\n        let index = this.getActiveUserIndex();\r\n        if (index === -1) {\r\n            const lastUser = this.listUsers[this.listUsers.length - 1];\r\n            if (lastUser) {\r\n                lastUser.isActive = true;\r\n            }\r\n        } else {\r\n            index = index > 0 ? index - 1 : this.listUsers.length - 1;\r\n            this.setUserActiveStatus(index);\r\n        }\r\n    }\r\n\r\n    private resetActiveStatus() {\r\n        this.listUsers.forEach((user: UserSuggestion) => user.isActive = false);\r\n    }\r\n\r\n    private getActiveUserIndex() {\r\n        return _.findIndex(this.listUsers, (userItem: UserSuggestion) => {\r\n            return userItem.isActive;\r\n        });\r\n    }\r\n\r\n    private setUserActiveStatus(index: number) {\r\n        this.listUsers.forEach((userItem: UserSuggestion) => userItem.isActive = false);\r\n        const user = this.listUsers[index];\r\n        if (user) {\r\n            user.isActive = true;\r\n        }\r\n    }\r\n\r\n    private resetSelectedStatus() {\r\n        if (this.selectedUsers instanceof Array) {\r\n            _.each(this.selectedUsers, (userItem: UserSuggestion) => {\r\n                userItem.isSelected = false;\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GhmUserSuggestionComponent } from './ghm-user-suggestion.component';\r\nimport { GhmUserSuggestionService } from './ghm-user-suggestion.service';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [GhmUserSuggestionComponent],\r\n    declarations: [GhmUserSuggestionComponent],\r\n    providers: [GhmUserSuggestionService],\r\n})\r\nexport class GhmUserSuggestionModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GhmUserSuggestionService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    search(url: string, keyword: string) {\r\n        return this.http.get(url, {\r\n            params: new HttpParams().set('keyword', keyword)\r\n        });\r\n    }\r\n\r\n    stripToVietnameChar(str): string {\r\n        str = str.toLowerCase();\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\r\n        str = str.replace(/đ/g, 'd');\r\n        return str;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NhSuggestionService } from './nh-suggestion.service';\r\nimport { NhSuggestionComponent } from './nh-suggestion.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule],\r\n    declarations: [NhSuggestionComponent],\r\n    exports: [NhSuggestionComponent],\r\n    providers: [NhSuggestionService],\r\n})\r\nexport class NhSuggestionModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class NhSuggestionService {\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    search(url: string, keyword: string): Observable<any> {\r\n        return this.http.get(url, {\r\n            params: new HttpParams().set('keyword', keyword)\r\n        });\r\n    }\r\n}\r\n","/**\r\n * Created by Administrator on 6/19/2017.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NhTabService {\r\n    onTabSelected = new Subject();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    selectTab(tabId: any) {\r\n        this.onTabSelected.next(tabId);\r\n    }\r\n}\r\n","\n        <div class=\"nh-tree-dropdown\">\n            <button class=\"nh-tree-label btn btn-default text-ellipsis\" type=\"button\" (click)=\"dropdownButtonClick()\">\n                {{ defaultLabel }}\n                <span class=\"caret\"></span>\n            </button>\n            <div class=\"nh-content-wrapper\" *ngIf=\"isShow\"\n                 [style.width]=\"width + 'px'\">\n                <ul class=\"nh-tree-default-value\">\n                    <li class=\"center\"><a href=\"javascript://\" (click)=\"selectDefaultNode()\">{{ title }}</a></li>\n                </ul>\n                <div class=\"nh-tree-content\">\n                    <nh-tree\n                        [data]=\"data\"\n                        [isMultiple]=\"isMultiple\"\n                        [selectedIds]=\"value\"\n                        (onSelectNode)=\"selectNode($event)\"\n                    ></nh-tree>\n                </div>\n                <div class=\"nh-tree-footer\" *ngIf=\"isMultiple\">\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"acceptButtonClick()\">\n                        Đồng ý\n                    </button>\n                    <button class=\"btn btn-danger\" type=\"button\" (click)=\"cancelButtonClick()\">\n                        Hủy bỏ\n                    </button>\n                </div>\n            </div>\n        </div>\n    ","﻿import {\r\n    Component, Input, Output, ElementRef, Renderer,\r\n    OnInit, OnChanges, SimpleChanges, EventEmitter,\r\n    forwardRef, ViewEncapsulation, HostListener\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport * as _ from 'lodash';\r\nimport { TreeData } from '../../../view-model/tree-data';\r\n\r\n@Component({\r\n    selector: 'nh-dropdown-tree',\r\n    template: `\r\n        <div class=\"nh-tree-dropdown\">\r\n            <button class=\"nh-tree-label btn btn-default text-ellipsis\" type=\"button\" (click)=\"dropdownButtonClick()\">\r\n                {{ defaultLabel }}\r\n                <span class=\"caret\"></span>\r\n            </button>\r\n            <div class=\"nh-content-wrapper\" *ngIf=\"isShow\"\r\n                 [style.width]=\"width + 'px'\">\r\n                <ul class=\"nh-tree-default-value\">\r\n                    <li class=\"center\"><a href=\"javascript://\" (click)=\"selectDefaultNode()\">{{ title }}</a></li>\r\n                </ul>\r\n                <div class=\"nh-tree-content\">\r\n                    <nh-tree\r\n                        [data]=\"data\"\r\n                        [isMultiple]=\"isMultiple\"\r\n                        [selectedIds]=\"value\"\r\n                        (onSelectNode)=\"selectNode($event)\"\r\n                    ></nh-tree>\r\n                </div>\r\n                <div class=\"nh-tree-footer\" *ngIf=\"isMultiple\">\r\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"acceptButtonClick()\">\r\n                        Đồng ý\r\n                    </button>\r\n                    <button class=\"btn btn-danger\" type=\"button\" (click)=\"cancelButtonClick()\">\r\n                        Hủy bỏ\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styleUrls: ['./nh-tree.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    // animations: [\r\n    //     trigger('toggleDropdownTree', [\r\n    //         state('tree-open', style({\r\n    //             height: '*',\r\n    //             opacity: '1'\r\n    //         })),\r\n    //         state('tree-close', style({\r\n    //             height: '0',\r\n    //             opacity: '0'\r\n    //         })),\r\n    //         transition('tree-open => tree-close', [\r\n    //             animate(150, style({\r\n    //                 height: '0'\r\n    //             }))\r\n    //         ]),\r\n    //         transition('tree-close => tree-open', [\r\n    //             animate(150, style({\r\n    //                 height: '*',\r\n    //                 opacity: 1\r\n    //             }))\r\n    //         ])\r\n    //     ])\r\n    // ],\r\n    providers: [\r\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NHDropdownTreeComponent), multi: true },\r\n    ]\r\n})\r\n\r\nexport class NHDropdownTreeComponent implements OnInit, OnChanges, ControlValueAccessor {\r\n    @Input() isMultiple = false;\r\n    @Input() title = '-- Nhập nội dung --';\r\n    @Input() selectedText = '';\r\n    @Input() width = 250;\r\n\r\n    @Output() onAccept = new EventEmitter();\r\n    @Output() onCancel = new EventEmitter();\r\n    @Output() onButtonClick = new EventEmitter();\r\n    @Output() onExpand = new EventEmitter();\r\n    @Output() onSelectNode = new EventEmitter();\r\n    @Output() valueChange = new EventEmitter();\r\n\r\n    isShow = false;\r\n    listSelected = [];\r\n    defaultLabel = '-- Nhập nội dung --';\r\n\r\n    private _value;\r\n    private _data: TreeData[];\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    @Input()\r\n    set value(val) {\r\n        this._value = val;\r\n        this.getSelectedText();\r\n    }\r\n\r\n    @Input()\r\n    set data(value) {\r\n        this._data = value;\r\n        this.getSelectedText();\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    propagateChange: any = () => {\r\n    };\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.hasOwnProperty('selectedText')) {\r\n            if (changes['selectedText'].currentValue) {\r\n                this.defaultLabel = changes['selectedText'].currentValue;\r\n            } else {\r\n                this.defaultLabel = this.title;\r\n            }\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    writeValue(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    onClick(event) {\r\n        if (!this.el.nativeElement.contains(event.target)) { // or some similar check\r\n            this.isShow = false;\r\n        }\r\n    }\r\n\r\n    acceptButtonClick() {\r\n        this.isShow = false;\r\n        this.onAccept.emit(this.listSelected);\r\n        const selectedNodeName = _(this.listSelected).map('text').value().toString();\r\n        this.defaultLabel = selectedNodeName ? selectedNodeName : this.title;\r\n    }\r\n\r\n    cancelButtonClick() {\r\n        this.onCancel.emit();\r\n        this.isShow = false;\r\n    }\r\n\r\n    expandButtonClick() {\r\n\r\n    }\r\n\r\n    dropdownButtonClick() {\r\n        this.isShow = !this.isShow;\r\n        if (!this.isMultiple) {\r\n            this.onButtonClick.emit(this.isShow);\r\n        }\r\n    }\r\n\r\n    selectNode(node: TreeData) {\r\n        if (!this.isMultiple) {\r\n            this.onSelectNode.emit(node);\r\n            this.isShow = false;\r\n            this.defaultLabel = node.text;\r\n            this.value = node.id;\r\n            this.propagateChange(node.id);\r\n            this.valueChange.emit(this.value);\r\n        } else {\r\n            if (node.isSelected) {\r\n                const isExists = _.find(this.listSelected, (item) => {\r\n                    return item.id === node.id;\r\n                });\r\n\r\n                if (!isExists) {\r\n                    this.listSelected.push(node);\r\n                }\r\n            } else {\r\n                _.remove(this.listSelected, node);\r\n            }\r\n        }\r\n    }\r\n\r\n    selectDefaultNode() {\r\n        this.isShow = false;\r\n        this.defaultLabel = this.title;\r\n        this.onSelectNode.emit(null);\r\n        this.propagateChange(null);\r\n        if (this.isMultiple) {\r\n            this.onAccept.emit(null);\r\n        }\r\n    }\r\n\r\n    private searchSelectedNode(data: TreeData[], parentId?: any) {\r\n        const listNodes = _.filter(data, (node: TreeData) => {\r\n            return node.parentId === parentId;\r\n        });\r\n\r\n        if (listNodes) {\r\n            _.each(listNodes, (node: TreeData) => {\r\n                if (this.value == node.id) {\r\n                    this.listSelected.push(node);\r\n                }\r\n                this.searchSelectedNode(node.children, node.id);\r\n            });\r\n        }\r\n    }\r\n\r\n    private getParentInfo(data: TreeData[]) {\r\n        const selectedNode = _.find(data, (node: TreeData) => {\r\n            if (this.value == node.id) {\r\n                return node;\r\n            } else {\r\n                return this.getParentInfo(node.children);\r\n            }\r\n        });\r\n        this.defaultLabel = selectedNode ? selectedNode.text : this.title;\r\n    }\r\n\r\n    private getSelectedText() {\r\n        if (this.isMultiple) {\r\n            this.searchSelectedNode(this.data, null);\r\n        } else {\r\n            this.getParentInfo(this.data);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TinymceComponent } from './tinymce.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [TinymceComponent],\r\n    declarations: [TinymceComponent],\r\n    providers: [],\r\n})\r\n\r\nexport class TinymceModule {\r\n}\r\n"],"sourceRoot":""}