{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm5/collections.es5.js","webpack:///./node_modules/@angular/material/esm5/paginator.es5.js","webpack:///./node_modules/@angular/material/esm5/select.es5.js","webpack:///./src/app/modules/configs/client/client-form.component.html","webpack:///./src/app/modules/configs/client/client-form.component.ts","webpack:///./src/app/modules/configs/client/client.component.html","webpack:///./src/app/modules/configs/client/client.component.ts","webpack:///./src/app/modules/configs/client/client.model.ts","webpack:///./src/app/modules/configs/client/client.service.ts","webpack:///./src/app/modules/configs/config-routing.module.ts","webpack:///./src/app/modules/configs/config.module.ts","webpack:///./src/app/modules/configs/language/language.component.html","webpack:///./src/app/modules/configs/language/language.component.ts","webpack:///./src/app/modules/configs/page/models/page-translation.model.ts","webpack:///./src/app/modules/configs/page/models/page.model.ts","webpack:///./src/app/modules/configs/page/page-form.component.html","webpack:///./src/app/modules/configs/page/page-form.component.ts","webpack:///./src/app/modules/configs/page/page.component.html","webpack:///./src/app/modules/configs/page/page.component.ts","webpack:///./src/app/modules/configs/role/models/role.model.ts","webpack:///./src/app/modules/configs/role/role-detail/role-detail.component.html","webpack:///./src/app/modules/configs/role/role-detail/role-detail.component.ts","webpack:///./src/app/modules/configs/role/role-form/role-form.component.html","webpack:///./src/app/modules/configs/role/role-form/role-form.component.ts","webpack:///./src/app/modules/configs/role/role.component.html","webpack:///./src/app/modules/configs/role/role.component.ts","webpack:///./src/app/modules/configs/role/role.service.ts","webpack:///./src/app/modules/configs/tenant/tenant-form.component.html","webpack:///./src/app/modules/configs/tenant/tenant-form.component.ts","webpack:///./src/app/modules/configs/tenant/tenant.component.html","webpack:///./src/app/modules/configs/tenant/tenant.component.ts","webpack:///./src/app/modules/configs/tenant/tenant.model.ts","webpack:///./src/app/modules/configs/tenant/tenant.service.ts","webpack:///./src/app/modules/configs/user-setting/user-setting.component.html","webpack:///./src/app/modules/configs/user-setting/user-setting.component.ts","webpack:///./src/app/shareds/components/ghm-alert/ghm-alert.component.html","webpack:///./src/app/shareds/components/ghm-alert/ghm-alert.component.ts","webpack:///./src/app/shareds/components/ghm-select-picker/ghm-select-picker.component.html","webpack:///./src/app/shareds/components/ghm-select-picker/ghm-select-picker.component.ts","webpack:///./src/app/shareds/components/ghm-select-picker/ghm-select-picker.module.ts","webpack:///./src/app/shareds/components/ghm-select-picker/ghm-select-picker.service.ts","webpack:///./src/app/shareds/services/language.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACkB;AACqB;;AAEvC;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,mCAAmC,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,yCAAyC,mCAAmC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,yCAAyC,qCAAqC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sDAAsD,qCAAqC,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA,2IAAqF,wDAAwD,wCAAwC,EAAE,wDAAwD;AAC/O;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvaA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4K;AAC1J;AACE;AACkC;AAC3B;AACJ;AACG;AACA;AACC;;AAE3B;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA,kIAA4E,+CAA+C,+BAA+B,EAAE,+CAA+C;AAC3M;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,gDAAgD,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,wBAAwB,EAAE;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,qBAAqB,EAAE;AAC5C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,8BAA8B,EAAE;AACrD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oEAAoE,8FAAgC,EAAE;AACtG;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,2BAA2B,EAAE;AAClD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mCAAmC,EAAE;AAC1D;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,cAAc,EAAE;AAC7E;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,wEAA0B;AACnC;AACA,oLAAoL,yBAAyB,gVAAgV,gBAAgB,kGAAkG,UAAU,kGAAkG,kDAAkD;AAC7yB,6CAA6C,cAAc,yBAAyB,aAAa,mBAAmB,yBAAyB,gBAAgB,cAAc,uBAAuB,yBAAyB,aAAa,qBAAqB,iBAAiB,mCAAmC,eAAe,gBAAgB,+BAA+B,aAAa,gCAAgC,qBAAqB,WAAW,2BAA2B,qBAAqB,6BAA6B,aAAa,mBAAmB,gBAAgB,oBAAoB,WAAW,kBAAkB,8BAA8B,yBAAyB;AACjqB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,0BAA0B;AACnC,SAAS,yEAA2B;AACpC,MAAM;AACN;AACA,uBAAuB,4DAAc;AACrC,oBAAoB,4DAAc;AAClC,sBAAsB,4DAAc;AACpC,6BAA6B,4DAAc;AAC3C,0BAA0B,4DAAc;AACxC,kCAAkC,4DAAc;AAChD,kBAAkB,6DAAe;AACjC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzgBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACiF;AAC7D;AACiB;AACZ;AACO;AACP;AACwD;AACZ;AAC4L;AACjN;AAC+L;AAC/K;AAChC;AAC6B;AACtC;;AAEvB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yKAAiD,aAAa;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wJAAgC,aAAa;AAC7C;AACA,+EAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wBAAwB,8CAA8C;AACtE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sHAAgF,iCAAiC,EAAE;AACnH;AACA;AACA;AACA,sKAAsD,qCAAqC,EAAE;AAC7F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mIAA2E,UAAU,EAAE,4EAAoB,EAAE;AAC7G;AACA;AACA;AACA,mIAA2E,WAAW,EAAE,4EAAoB,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,0BAA0B,EAAE;AACjD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,qCAAqC,EAAE;AAC5D;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,0BAA0B,EAAE;AACjD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,oBAAoB,EAAE;AAC3C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE,2EAA2E,yBAAyB,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA,mDAAmD,sDAAsD,EAAE;AAC3G;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,0LAA0E,0BAA0B,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sGAAgE,6BAA6B,EAAE;AAC/F;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,sCAAsC,EAAE,4CAA4C,qBAAqB,EAAE;AAC3G;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8DAA8D,kBAAkB,EAAE;AAClF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE,uDAAuD,EAAE;AAClF;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,wEAA0B;AACnC;AACA,yRAAyR,yBAAyB,8HAA8H,cAAc,4uBAA4uB,oBAAoB;AAC9rC,0CAA0C,qBAAqB,WAAW,UAAU,oBAAoB,qBAAqB,eAAe,kBAAkB,sBAAsB,yCAAyC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,kBAAkB,mBAAmB,YAAY,WAAW,gBAAgB,uBAAuB,mBAAmB,uBAAuB,mBAAmB,gBAAgB,uBAAuB,0BAA0B,mBAAmB,sBAAsB,wHAAwH,2BAA2B,6DAA6D,2BAA2B,kBAAkB,QAAQ,SAAS,kCAAkC,mCAAmC,qBAAqB,aAAa,kBAAkB,gBA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","file":"modules-configs-config-module-ngfactory.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Subject } from 'rxjs';\nimport { Injectable, defineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @abstract\n * @template T\n */\nvar  /**\n * @abstract\n * @template T\n */\nDataSource = /** @class */ (function () {\n    function DataSource() {\n    }\n    return DataSource;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nvar  /**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nSelectionModel = /** @class */ (function () {\n    function SelectionModel(_multiple, initiallySelectedValues, _emitChanges) {\n        if (_multiple === void 0) { _multiple = false; }\n        if (_emitChanges === void 0) { _emitChanges = true; }\n        var _this = this;\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.onChange = this._emitChanges ? new Subject() : null;\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(function (value) { return _this._markSelected(value); });\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    Object.defineProperty(SelectionModel.prototype, \"selected\", {\n        /** Selected values. */\n        get: /**\n         * Selected values.\n         * @return {?}\n         */\n        function () {\n            if (!this._selected) {\n                this._selected = Array.from(this._selection.values());\n            }\n            return this._selected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Selects a value or an array of values.\n     */\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    SelectionModel.prototype.select = /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            values[_i] = arguments[_i];\n        }\n        this._verifyValueAssignment(values);\n        values.forEach(function (value) { return _this._markSelected(value); });\n        this._emitChangeEvent();\n    };\n    /**\n     * Deselects a value or an array of values.\n     */\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    SelectionModel.prototype.deselect = /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            values[_i] = arguments[_i];\n        }\n        this._verifyValueAssignment(values);\n        values.forEach(function (value) { return _this._unmarkSelected(value); });\n        this._emitChangeEvent();\n    };\n    /**\n     * Toggles a value between selected and deselected.\n     */\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.toggle = /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    };\n    /**\n     * Clears all of the selected values.\n     */\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    SelectionModel.prototype.clear = /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    function () {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    };\n    /**\n     * Determines whether a value is selected.\n     */\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.isSelected = /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return this._selection.has(value);\n    };\n    /**\n     * Determines whether the model does not have a value.\n     */\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    SelectionModel.prototype.isEmpty = /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    function () {\n        return this._selection.size === 0;\n    };\n    /**\n     * Determines whether the model has a value.\n     */\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    SelectionModel.prototype.hasValue = /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    function () {\n        return !this.isEmpty();\n    };\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    SelectionModel.prototype.sort = /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        if (this._multiple && this._selected) {\n            this._selected.sort(predicate);\n        }\n    };\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @return {?}\n     */\n    SelectionModel.prototype._emitChangeEvent = /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @return {?}\n     */\n    function () {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            if (this.onChange) {\n                this.onChange.next({\n                    source: this,\n                    added: this._selectedToEmit,\n                    removed: this._deselectedToEmit\n                });\n            }\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    };\n    /**\n     * Selects a value.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype._markSelected = /**\n     * Selects a value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    };\n    /**\n     * Deselects a value.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype._unmarkSelected = /**\n     * Deselects a value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    };\n    /**\n     * Clears out the selected values.\n     * @return {?}\n     */\n    SelectionModel.prototype._unmarkAll = /**\n     * Clears out the selected values.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isEmpty()) {\n            this._selection.forEach(function (value) { return _this._unmarkSelected(value); });\n        }\n    };\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @param {?} values\n     * @return {?}\n     */\n    SelectionModel.prototype._verifyValueAssignment = /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @param {?} values\n     * @return {?}\n     */\n    function (values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    };\n    return SelectionModel;\n}());\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nvar UniqueSelectionDispatcher = /** @class */ (function () {\n    function UniqueSelectionDispatcher() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    UniqueSelectionDispatcher.prototype.notify = /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    function (id, name) {\n        for (var _i = 0, _a = this._listeners; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener(id, name);\n        }\n    };\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    UniqueSelectionDispatcher.prototype.listen = /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    function (listener) {\n        var _this = this;\n        this._listeners.push(listener);\n        return function () {\n            _this._listeners = _this._listeners.filter(function (registered) {\n                return listener !== registered;\n            });\n        };\n    };\n    /**\n     * @return {?}\n     */\n    UniqueSelectionDispatcher.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._listeners = [];\n    };\n    UniqueSelectionDispatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ UniqueSelectionDispatcher.ngInjectableDef = defineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n    return UniqueSelectionDispatcher;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { UniqueSelectionDispatcher, DataSource, SelectionModel, getMultipleValuesInSingleSelectionError };\n//# sourceMappingURL=collections.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, Optional, SkipSelf, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation, defineInjectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { __extends } from 'tslib';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized } from '@angular/material/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nvar MatPaginatorIntl = /** @class */ (function () {\n    function MatPaginatorIntl() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = function (page, pageSize, length) {\n            if (length == 0 || pageSize == 0) {\n                return \"0 of \" + length;\n            }\n            length = Math.max(length, 0);\n            var /** @type {?} */ startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            var /** @type {?} */ endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return startIndex + 1 + \" - \" + endIndex + \" of \" + length;\n        };\n    }\n    MatPaginatorIntl.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ MatPaginatorIntl.ngInjectableDef = defineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n    return MatPaginatorIntl;\n}());\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n */\nvar /** @type {?} */ MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n */\nvar /** @type {?} */ DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nvar  /**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nPageEvent = /** @class */ (function () {\n    function PageEvent() {\n    }\n    return PageEvent;\n}());\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatPaginatorBase = /** @class */ (function () {\n    function MatPaginatorBase() {\n    }\n    return MatPaginatorBase;\n}());\nvar /** @type {?} */ _MatPaginatorBase = mixinInitialized(MatPaginatorBase);\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nvar MatPaginator = /** @class */ (function (_super) {\n    __extends(MatPaginator, _super);\n    function MatPaginator(_intl, _changeDetectorRef) {\n        var _this = _super.call(this) || this;\n        _this._intl = _intl;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._pageIndex = 0;\n        _this._length = 0;\n        _this._pageSizeOptions = [];\n        _this._hidePageSize = false;\n        _this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        _this.page = new EventEmitter();\n        _this._intlChanges = _intl.changes.subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n        return _this;\n    }\n    Object.defineProperty(MatPaginator.prototype, \"pageIndex\", {\n        get: /**\n         * The zero-based page index of the displayed list of items. Defaulted to 0.\n         * @return {?}\n         */\n        function () { return this._pageIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"length\", {\n        get: /**\n         * The length of the total number of items that are being paginated. Defaulted to 0.\n         * @return {?}\n         */\n        function () { return this._length; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._length = coerceNumberProperty(value);\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"pageSize\", {\n        get: /**\n         * Number of items to display on a page. By default set to 50.\n         * @return {?}\n         */\n        function () { return this._pageSize; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._pageSize = Math.max(coerceNumberProperty(value), 0);\n            this._updateDisplayedPageSizeOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"pageSizeOptions\", {\n        get: /**\n         * The set of provided page size options to display to the user.\n         * @return {?}\n         */\n        function () { return this._pageSizeOptions; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._pageSizeOptions = (value || []).map(function (p) { return coerceNumberProperty(p); });\n            this._updateDisplayedPageSizeOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"hidePageSize\", {\n        get: /**\n         * Whether to hide the page size selection UI from the user.\n         * @return {?}\n         */\n        function () { return this._hidePageSize; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._hidePageSize = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"showFirstLastButtons\", {\n        get: /**\n         * Whether to show the first/last buttons UI to the user.\n         * @return {?}\n         */\n        function () { return this._showFirstLastButtons; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._showFirstLastButtons = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatPaginator.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    };\n    /**\n     * @return {?}\n     */\n    MatPaginator.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._intlChanges.unsubscribe();\n    };\n    /** Advances to the next page if it exists. */\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    MatPaginator.prototype.nextPage = /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    function () {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        var /** @type {?} */ previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    };\n    /** Move back to the previous page if it exists. */\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    MatPaginator.prototype.previousPage = /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    function () {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        var /** @type {?} */ previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    };\n    /** Move to the first page if not already there. */\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    MatPaginator.prototype.firstPage = /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    function () {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        var /** @type {?} */ previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    };\n    /** Move to the last page if not already there. */\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    MatPaginator.prototype.lastPage = /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    function () {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        var /** @type {?} */ previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages();\n        this._emitPageEvent(previousPageIndex);\n    };\n    /** Whether there is a previous page. */\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    MatPaginator.prototype.hasPreviousPage = /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    function () {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    };\n    /** Whether there is a next page. */\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    MatPaginator.prototype.hasNextPage = /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ numberOfPages = this.getNumberOfPages();\n        return this.pageIndex < numberOfPages && this.pageSize != 0;\n    };\n    /** Calculate the number of pages */\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    MatPaginator.prototype.getNumberOfPages = /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    function () {\n        return Math.ceil(this.length / this.pageSize) - 1;\n    };\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    MatPaginator.prototype._changePageSize = /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    function (pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        var /** @type {?} */ startIndex = this.pageIndex * this.pageSize;\n        var /** @type {?} */ previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    };\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @return {?}\n     */\n    MatPaginator.prototype._updateDisplayedPageSizeOptions = /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @return {?}\n     */\n    function () {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort(function (a, b) { return a - b; });\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    MatPaginator.prototype._emitPageEvent = /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    function (previousPageIndex) {\n        this.page.emit({\n            previousPageIndex: previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    };\n    MatPaginator.decorators = [\n        { type: Component, args: [{selector: 'mat-paginator',\n                    exportAs: 'matPaginator',\n                    template: \"<div class=\\\"mat-paginator-container\\\"><div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\"><div class=\\\"mat-paginator-page-size-label\\\">{{_intl.itemsPerPageLabel}}</div><mat-form-field *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\" class=\\\"mat-paginator-page-size-select\\\"><mat-select [value]=\\\"pageSize\\\" [aria-label]=\\\"_intl.itemsPerPageLabel\\\" (selectionChange)=\\\"_changePageSize($event.value)\\\"><mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">{{pageSizeOption}}</mat-option></mat-select></mat-form-field><div *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div></div><div class=\\\"mat-paginator-range-actions\\\"><div class=\\\"mat-paginator-range-label\\\">{{_intl.getRangeLabel(pageIndex, pageSize, length)}}</div><button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-first\\\" (click)=\\\"firstPage()\\\" [attr.aria-label]=\\\"_intl.firstPageLabel\\\" [matTooltip]=\\\"_intl.firstPageLabel\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"!hasPreviousPage()\\\" *ngIf=\\\"showFirstLastButtons\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-previous\\\" (click)=\\\"previousPage()\\\" [attr.aria-label]=\\\"_intl.previousPageLabel\\\" [matTooltip]=\\\"_intl.previousPageLabel\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"!hasPreviousPage()\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-next\\\" (click)=\\\"nextPage()\\\" [attr.aria-label]=\\\"_intl.nextPageLabel\\\" [matTooltip]=\\\"_intl.nextPageLabel\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"!hasNextPage()\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/></svg></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-paginator-navigation-last\\\" (click)=\\\"lastPage()\\\" [attr.aria-label]=\\\"_intl.lastPageLabel\\\" [matTooltip]=\\\"_intl.lastPageLabel\\\" [matTooltipPosition]=\\\"'above'\\\" [disabled]=\\\"!hasNextPage()\\\" *ngIf=\\\"showFirstLastButtons\\\"><svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"><path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/></svg></button></div></div>\",\n                    styles: [\".mat-paginator{display:block}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center;min-height:48px}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\"],\n                    host: {\n                        'class': 'mat-paginator',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    /** @nocollapse */\n    MatPaginator.ctorParameters = function () { return [\n        { type: MatPaginatorIntl, },\n        { type: ChangeDetectorRef, },\n    ]; };\n    MatPaginator.propDecorators = {\n        \"pageIndex\": [{ type: Input },],\n        \"length\": [{ type: Input },],\n        \"pageSize\": [{ type: Input },],\n        \"pageSizeOptions\": [{ type: Input },],\n        \"hidePageSize\": [{ type: Input },],\n        \"showFirstLastButtons\": [{ type: Input },],\n        \"page\": [{ type: Output },],\n    };\n    return MatPaginator;\n}(_MatPaginatorBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatPaginatorModule = /** @class */ (function () {\n    function MatPaginatorModule() {\n    }\n    MatPaginatorModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatButtonModule,\n                        MatSelectModule,\n                        MatTooltipModule,\n                    ],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                },] },\n    ];\n    return MatPaginatorModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatPaginatorModule, PageEvent, MatPaginatorBase, _MatPaginatorBase, MatPaginator, MatPaginatorIntl, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MAT_PAGINATOR_INTL_PROVIDER };\n//# sourceMappingURL=paginator.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger, query, animateChild, group } from '@angular/animations';\nimport { __extends } from 'tslib';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, Overlay, ViewportRuler, OverlayModule } from '@angular/cdk/overlay';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, Inject, InjectionToken, Input, isDevMode, NgZone, Optional, Output, Self, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, ErrorStateMatcher, MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, mixinDisabled, mixinDisableRipple, mixinErrorState, mixinTabIndex, MatCommonModule, MatOptionModule } from '@angular/material/core';\nimport { MatFormField, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { defer, merge, Subject } from 'rxjs';\nimport { filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nvar /** @type {?} */ matSelectAnimations = {\n    /**\n       * This animation transforms the select's overlay panel on and off the page.\n       *\n       * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n       * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n       * side to ensure the option text correctly overlaps the trigger text.\n       *\n       * When the panel is removed from the DOM, it simply fades out linearly.\n       */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n    /**\n       * This animation fades in the background color and text content of the\n       * select's options. It is time delayed to occur 100ms after the overlay\n       * panel has transformed in.\n       */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ transformPanel = matSelectAnimations.transformPanel;\n/**\n * @deprecated\n * \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ fadeInContent = matSelectAnimations.fadeInContent;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n */\nvar /** @type {?} */ SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n */\nvar /** @type {?} */ SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n */\nvar /** @type {?} */ SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n */\nvar /** @type {?} */ SELECT_ITEM_HEIGHT_EM = 3;\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * (SELECT_PANEL_PADDING_X * 1.5) + 20 = 44\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 20px.\n */\nvar /** @type {?} */ SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 20;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nvar /** @type {?} */ SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n */\nvar /** @type {?} */ MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/**\n * \\@docs-private\n */\nvar /** @type {?} */ MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nvar  /**\n * Change event object that is emitted when the select value has changed.\n */\nMatSelectChange = /** @class */ (function () {\n    function MatSelectChange(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n    return MatSelectChange;\n}());\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatSelectBase = /** @class */ (function () {\n    function MatSelectBase(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n    return MatSelectBase;\n}());\nvar /** @type {?} */ _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nvar MatSelectTrigger = /** @class */ (function () {\n    function MatSelectTrigger() {\n    }\n    MatSelectTrigger.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-select-trigger'\n                },] },\n    ];\n    return MatSelectTrigger;\n}());\nvar MatSelect = /** @class */ (function (_super) {\n    __extends(MatSelect, _super);\n    function MatSelect(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, _scrollStrategyFactory) {\n        var _this = _super.call(this, elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) || this;\n        _this._viewportRuler = _viewportRuler;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._ngZone = _ngZone;\n        _this._dir = _dir;\n        _this._parentFormField = _parentFormField;\n        _this.ngControl = ngControl;\n        _this._scrollStrategyFactory = _scrollStrategyFactory;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        _this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        _this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        _this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        _this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        _this._compareWith = function (o1, o2) { return o1 === o2; };\n        /**\n         * Unique id for this input.\n         */\n        _this._uid = \"mat-select-\" + nextUniqueId++;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        _this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        _this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        _this._onChange = function () { };\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        _this._onTouched = function () { };\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        _this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        _this._transformOrigin = 'top';\n        /**\n         * Whether the panel's animation is done.\n         */\n        _this._panelDoneAnimating = false;\n        /**\n         * Strategy that will be used to handle scrolling while the select panel is open.\n         */\n        _this._scrollStrategy = _this._scrollStrategyFactory();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        _this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        _this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        _this._disableOptionCentering = false;\n        /**\n         * Whether the select is focused.\n         */\n        _this.focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        _this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        _this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        _this.optionSelectionChanges = defer(function () {\n            if (_this.options) {\n                return merge.apply(void 0, _this.options.map(function (option) { return option.onSelectionChange; }));\n            }\n            return _this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap(function () { return _this.optionSelectionChanges; }));\n        });\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        _this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        _this._openedStream = _this.openedChange.pipe(filter(function (o) { return o; }), map(function () { }));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        _this._closedStream = _this.openedChange.pipe(filter(function (o) { return !o; }), map(function () { }));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        _this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        _this.valueChange = new EventEmitter();\n        if (_this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            _this.ngControl.valueAccessor = _this;\n        }\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        // Force setter to be called in case id was not specified.\n        _this.id = _this.id;\n        return _this;\n    }\n    Object.defineProperty(MatSelect.prototype, \"placeholder\", {\n        get: /**\n         * Placeholder to be shown if no value has been selected.\n         * @return {?}\n         */\n        function () { return this._placeholder; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._placeholder = value;\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"required\", {\n        get: /**\n         * Whether the component is required.\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"multiple\", {\n        get: /**\n         * Whether the user should be allowed to select multiple options.\n         * @return {?}\n         */\n        function () { return this._multiple; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._selectionModel) {\n                throw getMatSelectDynamicMultipleError();\n            }\n            this._multiple = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"disableOptionCentering\", {\n        get: /**\n         * Whether to center the active option over the trigger.\n         * @return {?}\n         */\n        function () { return this._disableOptionCentering; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disableOptionCentering = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"compareWith\", {\n        get: /**\n         * A function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         * @return {?}\n         */\n        function () { return this._compareWith; },\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            if (typeof fn !== 'function') {\n                throw getMatSelectNonFunctionValueError();\n            }\n            this._compareWith = fn;\n            if (this._selectionModel) {\n                // A different comparator means the selection could change.\n                this._initializeSelection();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"value\", {\n        get: /**\n         * Value of the select control.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            if (newValue !== this._value) {\n                this.writeValue(newValue);\n                this._value = newValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"id\", {\n        get: /**\n         * Unique id of the element.\n         * @return {?}\n         */\n        function () { return this._id; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._id = value || this._uid;\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._initKeyManager();\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(function () {\n            _this._resetOptions();\n            _this._initializeSelection();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatSelect.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes[\"disabled\"]) {\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    };\n    /** Toggles the overlay panel open or closed. */\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    MatSelect.prototype.toggle = /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    function () {\n        this.panelOpen ? this.close() : this.open();\n    };\n    /** Opens the overlay panel. */\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    MatSelect.prototype.open = /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n            if (_this._triggerFontSize && _this.overlayDir.overlayRef &&\n                _this.overlayDir.overlayRef.overlayElement) {\n                _this.overlayDir.overlayRef.overlayElement.style.fontSize = _this._triggerFontSize + \"px\";\n            }\n        });\n    };\n    /** Closes the overlay panel and focuses the host element. */\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    MatSelect.prototype.close = /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    function () {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    };\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    MatSelect.prototype.writeValue = /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    function (value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    };\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    MatSelect.prototype.registerOnChange = /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    function (fn) {\n        this._onChange = fn;\n    };\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    MatSelect.prototype.registerOnTouched = /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    MatSelect.prototype.setDisabledState = /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    };\n    Object.defineProperty(MatSelect.prototype, \"panelOpen\", {\n        /** Whether or not the overlay panel is open. */\n        get: /**\n         * Whether or not the overlay panel is open.\n         * @return {?}\n         */\n        function () {\n            return this._panelOpen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"selected\", {\n        /** The currently selected option. */\n        get: /**\n         * The currently selected option.\n         * @return {?}\n         */\n        function () {\n            return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"triggerValue\", {\n        /** The value displayed in the trigger. */\n        get: /**\n         * The value displayed in the trigger.\n         * @return {?}\n         */\n        function () {\n            if (this.empty) {\n                return '';\n            }\n            if (this._multiple) {\n                var /** @type {?} */ selectedOptions = this._selectionModel.selected.map(function (option) { return option.viewValue; });\n                if (this._isRtl()) {\n                    selectedOptions.reverse();\n                }\n                // TODO(crisbeto): delimiter should be configurable for proper localization.\n                return selectedOptions.join(', ');\n            }\n            return this._selectionModel.selected[0].viewValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Whether the element is in RTL mode. */\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    MatSelect.prototype._isRtl = /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    function () {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    };\n    /** Handles all keydown events on the select. */\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelect.prototype._handleKeydown = /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    };\n    /**\n     * Handles keyboard events while the select is closed.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelect.prototype._handleClosedKeydown = /**\n     * Handles keyboard events while the select is closed.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ keyCode = event.keyCode;\n        var /** @type {?} */ isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        var /** @type {?} */ isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Handles keyboard events when the selected is open.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelect.prototype._handleOpenKeydown = /**\n     * Handles keyboard events when the selected is open.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ keyCode = event.keyCode;\n        var /** @type {?} */ isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        var /** @type {?} */ manager = this._keyManager;\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        }\n        else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else {\n            var /** @type {?} */ previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    };\n    /**\n     * When the panel element is finished transforming in (though not fading in), it\n     * emits an event and focuses an option if the panel is open.\n     */\n    /**\n     * When the panel element is finished transforming in (though not fading in), it\n     * emits an event and focuses an option if the panel is open.\n     * @return {?}\n     */\n    MatSelect.prototype._onPanelDone = /**\n     * When the panel element is finished transforming in (though not fading in), it\n     * emits an event and focuses an option if the panel is open.\n     * @return {?}\n     */\n    function () {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n            this.openedChange.emit(true);\n        }\n        else {\n            this.openedChange.emit(false);\n            this._panelDoneAnimating = false;\n            this.overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     * @return {?}\n     */\n    MatSelect.prototype._onFadeInDone = /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     * @return {?}\n     */\n    function () {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype._onFocus = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled) {\n            this.focused = true;\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    MatSelect.prototype._onBlur = /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    function () {\n        this.focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    MatSelect.prototype._onAttached = /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.overlayDir.positionChange.pipe(take(1)).subscribe(function () {\n            _this._changeDetectorRef.detectChanges();\n            _this._calculateOverlayOffsetX();\n            _this.panel.nativeElement.scrollTop = _this._scrollTop;\n        });\n    };\n    /** Returns the theme to be used on the panel. */\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    MatSelect.prototype._getPanelTheme = /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    function () {\n        return this._parentFormField ? \"mat-\" + this._parentFormField.color : '';\n    };\n    Object.defineProperty(MatSelect.prototype, \"empty\", {\n        /** Whether the select has a value. */\n        get: /**\n         * Whether the select has a value.\n         * @return {?}\n         */\n        function () {\n            return !this._selectionModel || this._selectionModel.isEmpty();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype._initializeSelection = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(function () {\n            _this._setSelectionByValue(_this.ngControl ? _this.ngControl.value : _this._value);\n        });\n    };\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MatSelect.prototype._setSelectionByValue = /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    function (value, isUserInput) {\n        var _this = this;\n        if (isUserInput === void 0) { isUserInput = false; }\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._clearSelection();\n            value.forEach(function (currentValue) { return _this._selectValue(currentValue, isUserInput); });\n            this._sortValues();\n        }\n        else {\n            this._clearSelection();\n            var /** @type {?} */ correspondingOption = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Finds and selects and option based on its value.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Option that has the corresponding value.\n     */\n    MatSelect.prototype._selectValue = /**\n     * Finds and selects and option based on its value.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Option that has the corresponding value.\n     */\n    function (value, isUserInput) {\n        var _this = this;\n        if (isUserInput === void 0) { isUserInput = false; }\n        var /** @type {?} */ correspondingOption = this.options.find(function (option) {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && _this._compareWith(option.value, value);\n            }\n            catch (/** @type {?} */ error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            isUserInput ? correspondingOption._selectViaInteraction() : correspondingOption.select();\n            this._selectionModel.select(correspondingOption);\n            this.stateChanges.next();\n        }\n        return correspondingOption;\n    };\n    /**\n     * Clears the select trigger and deselects every option in the list.\n     * @param {?=} skip Option that should not be deselected.\n     * @return {?}\n     */\n    MatSelect.prototype._clearSelection = /**\n     * Clears the select trigger and deselects every option in the list.\n     * @param {?=} skip Option that should not be deselected.\n     * @return {?}\n     */\n    function (skip) {\n        this._selectionModel.clear();\n        this.options.forEach(function (option) {\n            if (option !== skip) {\n                option.deselect();\n            }\n        });\n        this.stateChanges.next();\n    };\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @return {?}\n     */\n    MatSelect.prototype._initKeyManager = /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(function () {\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            _this.focus();\n            _this.close();\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(function () {\n            if (_this._panelOpen && _this.panel) {\n                _this._scrollActiveOptionIntoView();\n            }\n            else if (!_this._panelOpen && !_this.multiple && _this._keyManager.activeItem) {\n                _this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    };\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @return {?}\n     */\n    MatSelect.prototype._resetOptions = /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed), filter(function (event) { return event.isUserInput; }))\n            .subscribe(function (event) {\n            _this._onSelect(event.source);\n            if (!_this.multiple && _this._panelOpen) {\n                _this.close();\n                _this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge.apply(void 0, this.options.map(function (option) { return option._stateChanges; })).pipe(takeUntil(changedOrDestroyed))\n            .subscribe(function () {\n            _this._changeDetectorRef.markForCheck();\n            _this.stateChanges.next();\n        });\n        this._setOptionIds();\n    };\n    /**\n     * Invoked when an option is clicked.\n     * @param {?} option\n     * @return {?}\n     */\n    MatSelect.prototype._onSelect = /**\n     * Invoked when an option is clicked.\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        var /** @type {?} */ wasSelected = this._selectionModel.isSelected(option);\n        // TODO(crisbeto): handle blank/null options inside multi-select.\n        if (this.multiple) {\n            this._selectionModel.toggle(option);\n            this.stateChanges.next();\n            wasSelected ? option.deselect() : option.select();\n            this._keyManager.setActiveItem(option);\n            this._sortValues();\n            // In case the user select the option with their mouse, we\n            // want to restore focus back to the trigger, in order to\n            // prevent the select keyboard controls from clashing with\n            // the ones from `mat-option`.\n            this.focus();\n        }\n        else {\n            this._clearSelection(option.value == null ? undefined : option);\n            if (option.value == null) {\n                this._propagateChanges(option.value);\n            }\n            else {\n                this._selectionModel.select(option);\n                this.stateChanges.next();\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n    };\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @return {?}\n     */\n    MatSelect.prototype._sortValues = /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.options.forEach(function (option) {\n                if (option.selected) {\n                    _this._selectionModel.select(option);\n                }\n            });\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * Emits change event to set the model value.\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    MatSelect.prototype._propagateChanges = /**\n     * Emits change event to set the model value.\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    function (fallbackValue) {\n        var /** @type {?} */ valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = (/** @type {?} */ (this.selected)).map(function (option) { return option.value; });\n        }\n        else {\n            valueToEmit = this.selected ? (/** @type {?} */ (this.selected)).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @return {?}\n     */\n    MatSelect.prototype._setOptionIds = /**\n     * Records option IDs to pass to the aria-owns property.\n     * @return {?}\n     */\n    function () {\n        this._optionIds = this.options.map(function (option) { return option.id; }).join(' ');\n    };\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @return {?}\n     */\n    MatSelect.prototype._highlightCorrectOption = /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @return {?}\n     */\n    function () {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    };\n    /**\n     * Scrolls the active option into view.\n     * @return {?}\n     */\n    MatSelect.prototype._scrollActiveOptionIntoView = /**\n     * Scrolls the active option into view.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        var /** @type {?} */ labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    };\n    /** Focuses the select element. */\n    /**\n     * Focuses the select element.\n     * @return {?}\n     */\n    MatSelect.prototype.focus = /**\n     * Focuses the select element.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.focus();\n    };\n    /**\n     * Gets the index of the provided option in the option list.\n     * @param {?} option\n     * @return {?}\n     */\n    MatSelect.prototype._getOptionIndex = /**\n     * Gets the index of the provided option in the option list.\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        return this.options.reduce(function (result, current, index) {\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    };\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayPosition = /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ items = this._getItemCount();\n        var /** @type {?} */ panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        var /** @type {?} */ scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        var /** @type {?} */ maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        var /** @type {?} */ selectedOptionOffset = this.empty ? 0 : /** @type {?} */ ((this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        var /** @type {?} */ scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    };\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayScroll = /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (selectedIndex, scrollBuffer, maxScroll) {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        var /** @type {?} */ halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        var /** @type {?} */ optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    };\n    Object.defineProperty(MatSelect.prototype, \"_ariaLabel\", {\n        /** Returns the aria-label of the select component. */\n        get: /**\n         * Returns the aria-label of the select component.\n         * @return {?}\n         */\n        function () {\n            // If an ariaLabelledby value has been set, the select should not overwrite the\n            // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n            return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    MatSelect.prototype._getAriaActiveDescendant = /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    function () {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    };\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayOffsetX = /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        var /** @type {?} */ viewportSize = this._viewportRuler.getViewportSize();\n        var /** @type {?} */ isRtl = this._isRtl();\n        var /** @type {?} */ paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        var /** @type {?} */ offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            var /** @type {?} */ selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        var /** @type {?} */ leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        var /** @type {?} */ rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors.\n        this.overlayDir.offsetX = offsetX;\n        this.overlayDir.overlayRef.updatePosition();\n    };\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayOffsetY = /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (selectedIndex, scrollBuffer, maxScroll) {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        var /** @type {?} */ maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        var /** @type {?} */ optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            var /** @type {?} */ firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            var /** @type {?} */ selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            var /** @type {?} */ partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height\n        // difference, multiplied by -1 to ensure that the overlay moves in the correct\n        // direction up the page.\n        return optionOffsetFromPanelTop * -1 - optionHeightAdjustment;\n    };\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._checkOverlayWithinViewport = /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (maxScroll) {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ viewportSize = this._viewportRuler.getViewportSize();\n        var /** @type {?} */ topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        var /** @type {?} */ bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        var /** @type {?} */ panelHeightTop = Math.abs(this._offsetY);\n        var /** @type {?} */ totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        var /** @type {?} */ panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    };\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    MatSelect.prototype._adjustPanelUp = /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    function (panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        var /** @type {?} */ distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% bottom 0px\";\n        }\n    };\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._adjustPanelDown = /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        var /** @type {?} */ distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% top 0px\";\n            return;\n        }\n    };\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @return {?}\n     */\n    MatSelect.prototype._getOriginBasedOnOption = /**\n     * Sets the transform origin point based on the selected option.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        var /** @type {?} */ originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return \"50% \" + originY + \"px 0px\";\n    };\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @return {?}\n     */\n    MatSelect.prototype._getItemCount = /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @return {?}\n     */\n    function () {\n        return this.options.length + this.optionGroups.length;\n    };\n    /**\n     * Calculates the height of the select's options.\n     * @return {?}\n     */\n    MatSelect.prototype._getItemHeight = /**\n     * Calculates the height of the select's options.\n     * @return {?}\n     */\n    function () {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    MatSelect.prototype.setDescribedByIds = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        this._ariaDescribedby = ids.join(' ');\n    };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatSelect.prototype.onContainerClick = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        this.focus();\n        this.open();\n    };\n    Object.defineProperty(MatSelect.prototype, \"shouldLabelFloat\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this._panelOpen || !this.empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatSelect.decorators = [\n        { type: Component, args: [{selector: 'mat-select',\n                    exportAs: 'matSelect',\n                    template: \"<div cdk-overlay-origin class=\\\"mat-select-trigger\\\" aria-hidden=\\\"true\\\" (click)=\\\"toggle()\\\" #origin=\\\"cdkOverlayOrigin\\\" #trigger><div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\"><span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\u00A0'}}</span> <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\"><span *ngSwitchDefault>{{triggerValue}}</span><ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content></span></div><div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\" [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\" [cdkConnectedOverlayOrigin]=\\\"origin\\\" [cdkConnectedOverlayOpen]=\\\"panelOpen\\\" [cdkConnectedOverlayPositions]=\\\"_positions\\\" [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\" [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\" (backdropClick)=\\\"close()\\\" (attach)=\\\"_onAttached()\\\" (detach)=\\\"close()\\\"><div #panel class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\" [ngClass]=\\\"panelClass\\\" [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\" (@transformPanel.done)=\\\"_onPanelDone()\\\" [style.transformOrigin]=\\\"_transformOrigin\\\" [class.mat-select-panel-done-animating]=\\\"_panelDoneAnimating\\\" [style.font-size.px]=\\\"_triggerFontSize\\\" (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-select-content\\\" [@fadeInContent]=\\\"'showing'\\\" (@fadeInContent.done)=\\\"_onFadeInDone()\\\"><ng-content></ng-content></div></div></ng-template>\",\n                    styles: [\".mat-select{display:inline-block;width:100%;outline:0}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper,.mat-form-field-appearance-standard .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%}.mat-select-panel:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;transition:none;display:block}\"],\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'role': 'listbox',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-label]': '_ariaLabel',\n                        '[attr.aria-labelledby]': 'ariaLabelledby',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        'class': 'mat-select',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    },\n                    animations: [\n                        matSelectAnimations.transformPanel,\n                        matSelectAnimations.fadeInContent\n                    ],\n                    providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    MatSelect.ctorParameters = function () { return [\n        { type: ViewportRuler, },\n        { type: ChangeDetectorRef, },\n        { type: NgZone, },\n        { type: ErrorStateMatcher, },\n        { type: ElementRef, },\n        { type: Directionality, decorators: [{ type: Optional },] },\n        { type: NgForm, decorators: [{ type: Optional },] },\n        { type: FormGroupDirective, decorators: [{ type: Optional },] },\n        { type: MatFormField, decorators: [{ type: Optional },] },\n        { type: NgControl, decorators: [{ type: Self }, { type: Optional },] },\n        { type: undefined, decorators: [{ type: Attribute, args: ['tabindex',] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] },] },\n    ]; };\n    MatSelect.propDecorators = {\n        \"trigger\": [{ type: ViewChild, args: ['trigger',] },],\n        \"panel\": [{ type: ViewChild, args: ['panel',] },],\n        \"overlayDir\": [{ type: ViewChild, args: [CdkConnectedOverlay,] },],\n        \"options\": [{ type: ContentChildren, args: [MatOption, { descendants: true },] },],\n        \"optionGroups\": [{ type: ContentChildren, args: [MatOptgroup,] },],\n        \"panelClass\": [{ type: Input },],\n        \"customTrigger\": [{ type: ContentChild, args: [MatSelectTrigger,] },],\n        \"placeholder\": [{ type: Input },],\n        \"required\": [{ type: Input },],\n        \"multiple\": [{ type: Input },],\n        \"disableOptionCentering\": [{ type: Input },],\n        \"compareWith\": [{ type: Input },],\n        \"value\": [{ type: Input },],\n        \"ariaLabel\": [{ type: Input, args: ['aria-label',] },],\n        \"ariaLabelledby\": [{ type: Input, args: ['aria-labelledby',] },],\n        \"errorStateMatcher\": [{ type: Input },],\n        \"id\": [{ type: Input },],\n        \"openedChange\": [{ type: Output },],\n        \"_openedStream\": [{ type: Output, args: ['opened',] },],\n        \"_closedStream\": [{ type: Output, args: ['closed',] },],\n        \"selectionChange\": [{ type: Output },],\n        \"valueChange\": [{ type: Output },],\n    };\n    return MatSelect;\n}(_MatSelectMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatSelectModule = /** @class */ (function () {\n    function MatSelectModule() {\n    }\n    MatSelectModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        OverlayModule,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n                },] },\n    ];\n    return MatSelectModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatSelectModule, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelectChange, MatSelectBase, _MatSelectMixinBase, MatSelectTrigger, MatSelect, matSelectAnimations, transformPanel, fadeInContent };\n//# sourceMappingURL=select.es5.js.map\n","<form class=\"form-horizontal\" (ngSubmit)=\"save()\" [formGroup]=\"model\">\r\n    <div class=\"m-portlet\">\r\n        <div class=\"m-portlet__head\">\r\n            <div class=\"m-portlet__head-caption\">\r\n                <div class=\"m-portlet__head-title\">\r\n\t\t\t\t\t\t\t<span class=\"m-portlet__head-icon m--hide\">\r\n\t\t\t\t\t\t\t\t<i class=\"flaticon-computer\"></i>\r\n\t\t\t\t\t\t\t</span>\r\n                    <h3 class=\"m-portlet__head-text\">\r\n                        {{isUpdate ? \"Cập nhật thông tin Client\" : \"Thêm mới Client\"}}\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"m-portlet__body\">\r\n            <pre>{{model.value|json}}</pre>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Client ID\" class=\"col-3 col-form-label\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <div type=\"text\" value=\"\"\r\n                                 class=\"form-control disabled\"\r\n                                 placeholder=\"Nhập mã trang\">\r\n                                {{model.value.clientId}}\r\n                            </div>\r\n                        </div>\r\n                    </div><!-- END: clientId -->\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Client Name\" class=\"col-3 col-form-label\" [required]=\"true\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter client name\"\r\n                                   formControlName=\"clientName\">\r\n                        </div>\r\n                    </div><!-- END: clientName -->\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Refresh token usage\" class=\"col-3 col-form-label\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <nh-select\r\n                                title=\"-- Select refresh token usage --\"\r\n                                [data]=\"[{id: 0, name: 'Reuse'}, {id: 1, name: 'One time only'}]\"\r\n                                formControlName=\"refreshTokenUsage\"\r\n                            ></nh-select>\r\n                        </div>\r\n                    </div><!-- END: Refresh token usage -->\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Refresh Token Expiration\" class=\"col-3 col-form-label\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <nh-select\r\n                                title=\"-- Select refresh token expiration --\"\r\n                                [data]=\"[{id: 0, name: 'Sliding'}, {id: 1, name: 'Absolute'}]\"\r\n                                formControlName=\"refreshTokenExpiration\"\r\n                            ></nh-select>\r\n                        </div>\r\n                    </div><!-- END: Refresh Token Expiration -->\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Allowed Grant Types\" class=\"col-3 col-form-label\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <nh-select\r\n                                title=\"-- Select grant types --\"\r\n                                [data]=\"listGrantTypes\"\r\n                                formControlName=\"clientAllowedGrantTypes\"\r\n                            ></nh-select>\r\n                        </div>\r\n                    </div><!-- END: Allowed Grant Types -->\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Allowed Scopes\" class=\"col-3 col-form-label\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <textarea type=\"text\" class=\"form-control\" rows=\"3\"\r\n                                      placeholder=\"Please enter allowed scope separate by comma.\"\r\n                                      formControlName=\"clientAllowedScopes\"></textarea>\r\n                        </div>\r\n                    </div><!-- END: Allowed Scopes -->\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Allowed Cors Origins\" class=\"col-3 col-form-label\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <textarea class=\"form-control\"\r\n                                      rows=\"3\"\r\n                                      placeholder=\"Please enter allowed cors origin separate by comma.\"\r\n                                      formControlName=\"clientAllowedCorsOrigins\"></textarea>\r\n                        </div>\r\n                    </div><!-- END: Refresh Token Expiration -->\r\n                </div><!-- END: first-col -->\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group m-form__group\">\r\n                        <div class=\"col-sm-12\">\r\n                            <mat-slide-toggle formControlName=\"enabled\"> Enabled</mat-slide-toggle>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group m-form__group\">\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <mat-slide-toggle formControlName=\"allowOfflineAccess\"> Allowed Offline Access\r\n                            </mat-slide-toggle>\r\n                        </div>\r\n                    </div><!-- END: Allowed Offline Access -->\r\n                    <div class=\"form-group m-form__group\">\r\n                        <div class=\"col-sm-12\">\r\n                            <mat-slide-toggle formControlName=\"requireClientSecret\"> Require Client Secret\r\n                            </mat-slide-toggle>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Client Secret\" class=\"col-3 col-form-label\"\r\n                               [required]=\"model.value.requireClientSecret\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <div class=\"input-group\">\r\n                                <input [attr.type]=\"isShowSecret ? 'text' : 'password'\" class=\"form-control\"\r\n                                       placeholder=\"Enter secret\"\r\n                                       formControlName=\"clientSecret\">\r\n                                <div class=\"input-group-append\">\r\n                                    <button class=\"btn btn-primary\" type=\"button\" matTooltip=\"Show secret\"\r\n                                            matTooltipPosition=\"above\" (click)=\"toggleShowSecret()\">\r\n                                        <!--<i class=\"flaticon-medical\"></i>-->\r\n                                        <i class=\"fa fa-eye\" *ngIf=\"isShowSecret\"></i>\r\n                                        <i class=\"fa fa-eye-slash\" *ngIf=\"!isShowSecret\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div><!-- END: clientSecret -->\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Absolute Refresh Token Lifetime\" class=\"col-3 col-form-label\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group\">\r\n                                    <div class=\"input-group\">\r\n                                        <input type=\"text\" class=\"form-control\"\r\n                                               placeholder=\"Enter absolute refresh token lifetime\"\r\n                                               formControlName=\"absoluteRefreshTokenLifetime\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text\"\r\n                                                  id=\"absoluteRefreshTokenLifetime\">seconds</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <span class=\"m-form__help\">\r\n                                Maximum lifetime of a refresh token in seconds. Defaults to 2592000 seconds / 30 days\r\n                            </span>\r\n                        </div>\r\n                    </div><!-- END: AbsoluteRefreshTokenLifetime -->\r\n                    <div class=\"form-group m-form__group\">\r\n                        <label ghmLabel=\"Sliding Refresh Token Lifetime\" class=\"col-3 col-form-label\"></label>\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"text\" class=\"form-control\"\r\n                                           placeholder=\"Enter sliding refresh token lifetime\"\r\n                                           formControlName=\"slidingRefreshTokenLifetime\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <span class=\"input-group-text\" id=\"slidingRefreshTokenLifeTime\">seconds</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <span class=\"m-form__help\">\r\n                                Sliding lifetime of a refresh token in seconds. Defaults to 1296000 seconds / 15 days\r\n                            </span>\r\n                        </div>\r\n                    </div><!-- END: SlidingRefreshTokenLifetime -->\r\n                </div><!-- END: second-col -->\r\n            </div>\r\n        </div><!-- END .m-portlet__body -->\r\n        <div class=\"m-portlet__foot m-portlet__foot--fit\">\r\n            <div class=\"m-form__actions m-form__actions\">\r\n                <button mat-raised-button color=\"primary\">\r\n                    Lưu lại\r\n                </button>\r\n                <button type=\"button\" mat-raised-button routerLink=\"/config/client\">\r\n                    Hủy bỏ\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Client } from './client.model';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DestroySubscribers } from '../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport { ClientService } from './client.service';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\n\r\n@Component({\r\n    selector: 'app-client-form',\r\n    templateUrl: './client-form.component.html'\r\n})\r\n\r\n@DestroySubscribers()\r\nexport class ClientFormComponent extends BaseFormComponent implements OnInit {\r\n    model: FormGroup;\r\n    client: Client = new Client();\r\n    isShowSecret = false;\r\n\r\n    listGrantTypes = [];\r\n    listPostRedirectLogoutUris: string[] = [];\r\n    listIdentityProviderRestrictions: string[] = [];\r\n\r\n    constructor(private router: Router,\r\n                private route: ActivatedRoute,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService,\r\n                private clientService: ClientService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('here');\r\n        this.renderListGrantTypes();\r\n        this.buildForm();\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            if (params.clientId) {\r\n                this.isUpdate = true;\r\n                this.clientService.getDetail(params.clientId)\r\n                    .subscribe(client => {\r\n                        this.model.patchValue(client);\r\n                    });\r\n            } else {\r\n                this.isUpdate = false;\r\n                this.getClientId();\r\n            }\r\n        });\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (isValid) {\r\n            this.client = this.model.value;\r\n            this.spinnerService.show('Đang lưu thông tin client. Vui lòng đợi...');\r\n            if (this.isUpdate) {\r\n                this.clientService.update(this.client)\r\n                    .pipe(finalize(() => this.spinnerService.hide()))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.show(result.message, result.title);\r\n                        this.router.navigateByUrl('/config/client');\r\n                    });\r\n            } else {\r\n                this.clientService.insert(this.client)\r\n                    .pipe(finalize(() => this.spinnerService.hide()))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.show(result.message, result.title);\r\n                        this.model.reset(new Client());\r\n                        this.getClientId();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleShowSecret() {\r\n        this.isShowSecret = !this.isShowSecret;\r\n    }\r\n\r\n    private getClientId() {\r\n        this.spinnerService.show('Đang tạo mã Client. Vui lòng đợi...');\r\n        this.clientService.getCientId()\r\n            .pipe(finalize(() => this.spinnerService.hide()))\r\n            .subscribe(clientId => this.model.patchValue({clientId: clientId}));\r\n    }\r\n\r\n    private renderListGrantTypes() {\r\n        this.listGrantTypes = [\r\n            {id: 'Implicit', name: 'Implicit'},\r\n            {id: 'ImplicitAndClientCredentials', name: 'ImplicitAndClientCredentials'},\r\n            {id: 'Code', name: 'Code'},\r\n            {id: 'CodeAndClientCredentials', name: 'CodeAndClientCredentials'},\r\n            {id: 'Hybrid', name: 'Hybrid'},\r\n            {id: 'HybridAndClientCredentials', name: 'HybridAndClientCredentials'},\r\n            {id: 'ClientCredentials', name: 'ClientCredentials'},\r\n            {id: 'ResourceOwnerPassword', name: 'ResourceOwnerPassword'},\r\n            {id: 'ResourceOwnerPasswordAndClientCredentials', name: 'ResourceOwnerPasswordAndClientCredentials'},\r\n        ];\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['']);\r\n\r\n        this.validationMessages = {};\r\n\r\n        this.model = this.fb.group({\r\n            'clientId': [this.client.clientId],\r\n            'clientName': [this.client.clientName, [\r\n                Validators.required,\r\n                Validators.maxLength(450)\r\n            ]],\r\n            'absoluteRefreshTokenLifetime': [this.client.absoluteRefreshTokenLifetime],\r\n            'accessTokenLifetime': [this.client.accessTokenLifetime],\r\n            'accessTokenType': [this.client.accessTokenType],\r\n            'allowAccessTokensViaBrowser': [this.client.allowAccessTokensViaBrowser],\r\n            'allowOfflineAccess': [this.client.allowOfflineAccess],\r\n            'allowPlainTextPkce': [this.client.allowPlainTextPkce],\r\n            'allowRememberConsent': [this.client.allowRememberConsent],\r\n            'alwaysIncludeUserClaimsInIdToken': [this.client.alwaysIncludeUserClaimsInIdToken],\r\n            'alwaysSendClientClaims': [this.client.alwaysSendClientClaims],\r\n            'authorizationCodeLifetime': [this.client.authorizationCodeLifetime],\r\n            'backChannelLogoutSessionRequired': [this.client.backChannelLogoutSessionRequired],\r\n            'backChannelLogoutUri': [this.client.backChannelLogoutUri],\r\n            'clientAllowedGrantTypes': [this.client.clientAllowedGrantTypes, [\r\n                Validators.required\r\n            ]],\r\n            'clientClaimsPrefix': [this.client.clientClaimsPrefix],\r\n            'clientUri': [this.client.clientUri],\r\n            'consentLifetime': [this.client.consentLifetime],\r\n            'enableLocalLogin': [this.client.enableLocalLogin],\r\n            'enabled': [this.client.enabled],\r\n            'frontChannelLogoutSessionRequired': [this.client.frontChannelLogoutSessionRequired],\r\n            'frontChannelLogoutUri': [this.client.frontChannelLogoutUri],\r\n            'identityTokenLifetime': [this.client.identityTokenLifetime],\r\n            'includeJwtId': [this.client.includeJwtId],\r\n            'logoUri': [this.client.logoUri],\r\n            'pairWiseSubjectSalt': [this.client.pairWiseSubjectSalt],\r\n            'protocolType': [this.client.protocolType],\r\n            'refreshTokenExpiration': [this.client.refreshTokenExpiration],\r\n            'refreshTokenUsage': [this.client.refreshTokenUsage],\r\n            'requireClientSecret': [this.client.requireClientSecret],\r\n            'requireConsent': [this.client.requireConsent],\r\n            'requirePkce': [this.client.requirePkce],\r\n            'slidingRefreshTokenLifetime': [this.client.slidingRefreshTokenLifetime],\r\n            'updateAccessTokenClaimsOnRefresh': [this.client.updateAccessTokenClaimsOnRefresh],\r\n            'clientAllowedScopes': [this.client.clientAllowedScopes],\r\n            'clientAllowedCorsOrigins': [this.client.clientAllowedCorsOrigins],\r\n            'clientSecret': [this.client.clientSecret]\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n}\r\n","<div class=\"m-portlet\">\r\n    <div class=\"m-portlet__head\">\r\n        <div class=\"m-portlet__head-caption\">\r\n            <div class=\"m-portlet__head-title\">\r\n\t\t\t\t\t\t\t<span class=\"m-portlet__head-icon m--hide\">\r\n\t\t\t\t\t\t\t\t<i class=\"flaticon-computer\"></i>\r\n\t\t\t\t\t\t\t</span>\r\n                <h3 class=\"m-portlet__head-text\">\r\n                    Danh sách Client.\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"m-portlet__body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <form class=\"form-inline\" (ngSubmit)=\"search()\">\r\n                    <div class=\"form-group\">\r\n                        <input class=\"form-control\" placeholder=\"Nhập từ khoá tìm kiếm\"\r\n                               (keyup)=\"keyword = searchBox.value\" #searchBox>\r\n                    </div>\r\n                    <!--<div class=\"form-group\">-->\r\n                        <!--<nh-select-->\r\n                            <!--[data]=\"[{id: 1, name: 'Kích hoạt'}, {id: 0, name: 'Chưa kích hoạt'}]\"-->\r\n                            <!--[title]=\"'&#45;&#45; Tất cả trạng thái &#45;&#45;'\"-->\r\n                            <!--[(value)]=\"moduleIdSearch\"-->\r\n                            <!--(onSelectItem)=\"search(1)\"></nh-select>-->\r\n                    <!--</div>-->\r\n                    <div class=\"form-group\">\r\n                        <button mat-raised-button color=\"primary\" type=\"submit\">\r\n                            <i class=\"fa fa-search\"></i>\r\n                            Tìm kiếm\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"form-group pull-right\">\r\n                        <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addNew()\">\r\n                            <i class=\"fa fa-plus\"></i>\r\n                            Thêm mới\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <hr/>\r\n        <div class=\"row\">\r\n            <!--<div class=\"col-sm-12\">-->\r\n            <!--<table-->\r\n            <!--class=\"table table-striped table-bordered table-hover table-full-width dataTable no-footer table-main\">-->\r\n            <!--<thead>-->\r\n            <!--<tr>-->\r\n            <!--<th class=\"center w50\">STT</th>-->\r\n            <!--<th class=\"center\">Tên trang</th>-->\r\n            <!--<th class=\"center\">Module</th>-->\r\n            <!--<th class=\"center\">Icon</th>-->\r\n            <!--<th class=\"center w100\">Thứ tự</th>-->\r\n            <!--<th class=\"center\">Đường dẫn</th>-->\r\n            <!--<th class=\"center w100\">Public</th>-->\r\n            <!--<th class=\"center w100\">Kích hoạt</th>-->\r\n            <!--<th class=\"center w150\" *ngIf=\"isHasUpdatePermission || isHasDeletePermission\">Sửa, Xóa</th>-->\r\n            <!--</tr>-->\r\n            <!--</thead>-->\r\n            <!--<tbody>-->\r\n            <!--<ng-template ngFor let-parent let-parentIndex=\"index\" [ngForOf]=\"listPages\">-->\r\n            <!--<tr>-->\r\n            <!--<td colspan=\"9\" class=\"bg-info bold middle color-white\">{{parent.modulesName}}</td>-->\r\n            <!--</tr>-->\r\n            <!--<tr *ngFor=\"let page of parent.listPage; let i = index\">-->\r\n            <!--<td class=\"center middle\">{{(currentPage - 1) * pageSize + i + 1}}</td>-->\r\n            <!--<td class=\"middle\">{{page.name}}</td>-->\r\n            <!--<td class=\"middle\">{{page.modulesName}}</td>-->\r\n            <!--<td class=\"w100 center middle\">-->\r\n            <!--<i [class]=\"page.icon\"></i>-->\r\n            <!--</td>-->\r\n            <!--<td class=\"middle\">-->\r\n            <!--<span *ngIf=\"!isHasUpdatePermission\">{{page.order}}</span>-->\r\n            <!--<input *ngIf=\"isHasUpdatePermission\" type=\"text\" class=\"form-control text-right\"-->\r\n            <!--value=\"{{page.order}}\"-->\r\n            <!--(blur)=\"onOrderBlur(page, $event)\"/>-->\r\n            <!--</td>-->\r\n            <!--<td class=\"middle\">{{page.url}}</td>-->\r\n            <!--<td class=\"center middle\">-->\r\n            <!--<i *ngIf=\"!isHasUpdatePermission && page.isPubclic\"-->\r\n            <!--class=\"fa fa-check color-green size-16\"></i>-->\r\n            <!--&lt;!&ndash;<mat-checkbox color=\"primary\" *ngIf=\"isHasUpdatePermission\" [checked]=\"page.isPublic\"&ndash;&gt;-->\r\n            <!--&lt;!&ndash;(change)=\"changePublicStatus(page)\"></mat-checkbox>&ndash;&gt;-->\r\n            <!--</td>-->\r\n            <!--<td class=\"center middle\">-->\r\n            <!--<i *ngIf=\"!isHasUpdatePermission && page.isActive\"-->\r\n            <!--class=\"fa fa-check color-green size-16\"></i>-->\r\n            <!--<mat-checkbox color=\"primary\" *ngIf=\"isHasUpdatePermission\" [checked]=\"page.isActive\"-->\r\n            <!--(change)=\"changeActiveStatus(page)\"></mat-checkbox>-->\r\n            <!--</td>-->\r\n            <!--<td class=\"center middle w100\" *ngIf=\"isHasUpdatePermission || isHasDeletePermission\">-->\r\n            <!--<a *ngIf=\"isHasUpdatePermission\" mat-mini-fab color=\"primary\" href=\"javascript://\"-->\r\n            <!--(click)=\"setUpdate(page)\">-->\r\n            <!--<i class=\"fa fa-pencil\"></i>-->\r\n            <!--</a>-->\r\n            <!--<a *ngIf=\"isHasDeletePermission\" mat-mini-fab color=\"warn\"-->\r\n            <!--class=\"btn btn-danger btn-sm\" (click)=\"delete(page)\">-->\r\n            <!--<i class=\"fa fa-trash-o\"></i>-->\r\n            <!--</a>-->\r\n            <!--</td>-->\r\n            <!--</tr>-->\r\n            <!--&lt;!&ndash; /ko &ndash;&gt;-->\r\n            <!--</ng-template>-->\r\n            <!--</tbody>-->\r\n            <!--</table>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--<ghm-paging [totalRows]=\"totalRows\" [currentPage]=\"currentPage\" [pageShow]=\"6\" (pageClick)=\"search($event)\"-->\r\n            <!--[isDisabled]=\"isSearching\" [pageName]=\"'trang'\"></ghm-paging>-->\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { Page } from '../page/models/page.model';\r\nimport { ClientFormComponent } from './client-form.component';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\n\r\n@Component({\r\n    selector: 'app-client',\r\n    templateUrl: './client.component.html'\r\n})\r\nexport class ClientComponent extends BaseListComponent<Page> implements OnInit {\r\n    isActive?: boolean;\r\n\r\n    constructor( @Inject(PAGE_ID) pageId: IPageId,\r\n        private appService: AppService) {\r\n        super();\r\n        console.log(pageId.CONFIG);\r\n        this.appService.setupPage(pageId.CONFIG, pageId.CONFIG_CLIENT, 'Cấu hình', 'Cấu hình');\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    search() {\r\n\r\n    }\r\n\r\n    addNew() {\r\n    }\r\n}\r\n","export class Client {\r\n    clientId: string;\r\n    clientName?: string;\r\n    absoluteRefreshTokenLifetime: number;\r\n    accessTokenLifetime: number;\r\n    accessTokenType: number;\r\n    allowAccessTokensViaBrowser: boolean;\r\n    allowOfflineAccess: boolean;\r\n    allowPlainTextPkce: boolean;\r\n    allowRememberConsent: boolean;\r\n    alwaysIncludeUserClaimsInIdToken: boolean;\r\n    alwaysSendClientClaims: boolean;\r\n    authorizationCodeLifetime: number;\r\n    backChannelLogoutSessionRequired: boolean;\r\n    backChannelLogoutUri?: string;\r\n    clientAllowedGrantTypes?: string;\r\n    clientClaimsPrefix?: string;\r\n    clientUri?: string;\r\n    consentLifetime?: boolean;\r\n    enableLocalLogin: boolean;\r\n    enabled: boolean;\r\n    frontChannelLogoutSessionRequired: boolean;\r\n    frontChannelLogoutUri?: string;\r\n    identityTokenLifetime: number;\r\n    includeJwtId: boolean;\r\n    logoUri?: string;\r\n    pairWiseSubjectSalt?: string;\r\n    protocolType?: string;\r\n    refreshTokenExpiration: number;\r\n    refreshTokenUsage: number;\r\n    requireClientSecret: boolean;\r\n    requireConsent: boolean;\r\n    requirePkce: boolean;\r\n    slidingRefreshTokenLifetime: number;\r\n    updateAccessTokenClaimsOnRefresh: boolean;\r\n    clientAllowedScopes: string;\r\n    clientAllowedCorsOrigins: string;\r\n    clientSecret: string;\r\n\r\n    constructor() {\r\n        this.enabled = true;\r\n        this.requireConsent = false;\r\n        this.requirePkce = false;\r\n        this.requireClientSecret = false;\r\n        this.allowPlainTextPkce = false;\r\n        this.allowOfflineAccess = true;\r\n        this.allowAccessTokensViaBrowser = false;\r\n        this.frontChannelLogoutSessionRequired = true;\r\n        this.backChannelLogoutSessionRequired = true;\r\n        this.enableLocalLogin = false;\r\n\r\n        // Token\r\n        this.identityTokenLifetime = 300;\r\n        this.accessTokenLifetime = 3600;\r\n        this.authorizationCodeLifetime = 300;\r\n        this.absoluteRefreshTokenLifetime = 2592000;\r\n        this.slidingRefreshTokenLifetime = 1296000;\r\n        this.refreshTokenUsage = this.TOKEN_USAGE.oneTimeOnly;\r\n        this.refreshTokenExpiration = this.TOKEN_EXPIRATION.absolute;\r\n        this.updateAccessTokenClaimsOnRefresh = true;\r\n        this.accessTokenType = this.ACCESS_TOKEN_TYPE.jwt;\r\n        this.includeJwtId = false;\r\n        this.clientClaimsPrefix = 'ghm_client';\r\n        this.requireConsent = false;\r\n        this.allowRememberConsent = true;\r\n        this.alwaysIncludeUserClaimsInIdToken = false;\r\n        this.alwaysSendClientClaims = false;\r\n    }\r\n\r\n    ACCESS_TOKEN_TYPE = {\r\n        jwt: 0,\r\n        reference: 1\r\n    };\r\n\r\n    TOKEN_USAGE = {\r\n        reuse: 0,\r\n        oneTimeOnly: 1\r\n    };\r\n\r\n    TOKEN_EXPIRATION = {\r\n        sliding: 0,\r\n        absolute: 1\r\n    };\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Client } from './client.model';\r\nimport { Observable } from 'rxjs';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class ClientService implements Resolve<any> {\r\n    url: string;\r\n\r\n    constructor(private http: HttpClient,\r\n        @Inject(APP_CONFIG) public appConfig: IAppConfig) {\r\n        this.url = `${appConfig.CORE_API_URL}client/`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.queryParams;\r\n        const keyword = queryParams.keyword;\r\n        const enabled = queryParams.enabled;\r\n        const page = queryParams.page;\r\n        const pageSize = queryParams.pageSize;\r\n        return this.search(keyword, enabled, page, pageSize);\r\n    }\r\n\r\n    search(keyword: string, enabled?: boolean, page: number = 1, pageSize: number = 20) {\r\n        return this.http.get(`${this.url}search`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('enabled', enabled != null && enabled !== undefined ? enabled.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<ISearchResult<Client>>;\r\n    }\r\n\r\n    getCientId(): Observable<string> {\r\n        return this.http.get(`${this.url}get-client-id`) as Observable<string>;\r\n    }\r\n\r\n    getDetail(clientId: string): Observable<Client> {\r\n        return this.http.get(`${this.url}get-detail`, {\r\n            params: new HttpParams()\r\n                .set('clientId', clientId)\r\n        }) as Observable<Client>;\r\n    }\r\n\r\n    insert(client: Client): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}insert`, client) as Observable<IResponseResult>;\r\n    }\r\n\r\n    update(client: Client): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}update`, client) as Observable<IResponseResult>;\r\n    }\r\n\r\n    delete(clientId: string): Observable<IResponseResult> {\r\n        return this.http.delete(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('clientId', clientId)\r\n        }) as Observable<IResponseResult>;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PageComponent } from './page/page.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport { ClientFormComponent } from './client/client-form.component';\r\nimport { ClientService } from './client/client.service';\r\nimport { AuthGuardService } from '../../shareds/services/auth-guard.service';\r\nimport { TenantComponent } from './tenant/tenant.component';\r\nimport { TenantService } from './tenant/tenant.service';\r\nimport { LayoutComponent } from '../../shareds/layouts/layout.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { PageService } from './page/page.service';\r\nimport { RoleService } from './role/role.service';\r\nimport { UserSettingComponent } from './user-setting/user-setting.component';\r\n\r\nconst routes: Routes = [\r\n    // {\r\n    //     path: '',\r\n    //     component: LayoutComponent,\r\n    //     canActivate: [AuthGuardService],\r\n    //     children: [\r\n    {\r\n        path: '',\r\n        component: RoleComponent\r\n    },\r\n    {\r\n        path: 'tenants',\r\n        component: TenantComponent,\r\n    },\r\n    {\r\n        path: 'pages',\r\n        component: PageComponent,\r\n        resolve: {\r\n            data: PageService\r\n        }\r\n    },\r\n    {\r\n        path: 'clients',\r\n        resolve: {\r\n            data: ClientService\r\n        },\r\n        component: ClientComponent,\r\n        children: [\r\n            {\r\n                path: 'add-new',\r\n                component: ClientFormComponent\r\n            },\r\n            {\r\n                path: 'edit',\r\n                component: ClientFormComponent\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: 'roles',\r\n        resolve: {\r\n            data: RoleService\r\n        },\r\n        component: RoleComponent\r\n    },\r\n    {\r\n        path: 'languages',\r\n        component: LanguageComponent\r\n    },\r\n    {\r\n        path: 'settings',\r\n        component: UserSettingComponent\r\n    }\r\n    // ]\r\n    // },\r\n    // {\r\n    //     path: '**',\r\n    //     redirectTo: '404',\r\n    //     pathMatch: 'full'\r\n    // }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers: [ClientService, TenantService, PageService, RoleService]\r\n})\r\nexport class ConfigRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { PageComponent } from './page/page.component';\r\nimport { ConfigRoutingModule } from './config-routing.module';\r\nimport { NhSelectModule } from '../../shareds/components/nh-select/nh-select.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n    MatButtonModule, MatCheckboxModule, MatPaginatorModule, MatSlideToggleModule,\r\n    MatTooltipModule\r\n} from '@angular/material';\r\nimport { NhModalModule } from '../../shareds/components/nh-modal/nh-modal.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { GhmPagingModule } from '../../shareds/components/ghm-paging/ghm-paging.module';\r\nimport { PageFormComponent } from './page/page-form.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport { ClientFormComponent } from './client/client-form.component';\r\nimport { LayoutModule } from '../../shareds/layouts/layout.module';\r\nimport { ConfigComponent } from './config.component';\r\nimport { TenantComponent } from './tenant/tenant.component';\r\nimport { TenantFormComponent } from './tenant/tenant-form.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { RoleFormComponent } from './role/role-form/role-form.component';\r\nimport { RoleDetailComponent } from './role/role-detail/role-detail.component';\r\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { NHTreeModule } from '../../shareds/components/nh-tree/nh-tree.module';\r\nimport { UserSettingComponent } from './user-setting/user-setting.component';\r\nimport { NhImageModule } from '../../shareds/components/nh-image/nh-image.module';\r\nimport { GhmSelectPickerModule } from '../../shareds/components/ghm-select-picker/ghm-select-picker.module';\r\nimport { CoreModule } from '../../core/core.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, LayoutModule, ConfigRoutingModule, NhSelectModule, NhImageModule,\r\n        MatCheckboxModule, MatPaginatorModule, MatButtonModule, MatSlideToggleModule,\r\n        NhModalModule, ReactiveFormsModule, FormsModule, MatTooltipModule, NHTreeModule,\r\n        GhmSelectPickerModule, CoreModule, GhmPagingModule, SweetAlert2Module.forRoot({\r\n            buttonsStyling: false,\r\n            customClass: 'modal-content',\r\n            confirmButtonClass: 'btn btn-primary',\r\n            cancelButtonClass: 'btn',\r\n            confirmButtonText: 'Đồng ý',\r\n            showCancelButton: true,\r\n            cancelButtonText: 'Hủy bỏ'\r\n        })\r\n    ],\r\n    exports: [],\r\n    declarations: [PageComponent, PageFormComponent, ClientComponent,\r\n        ClientFormComponent, ConfigComponent, TenantComponent, TenantFormComponent, RoleComponent, RoleFormComponent, RoleDetailComponent,\r\n        LanguageComponent, UserSettingComponent],\r\n    providers: [],\r\n})\r\nexport class ConfigModule {\r\n}\r\n","hello from language component\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-language',\r\n    templateUrl: './language.component.html'\r\n})\r\n\r\nexport class LanguageComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n}\r\n","export class PageTranslation {\r\n    name: string;\r\n    languageId: string;\r\n    description: string;\r\n}\r\n","import { PageTranslation } from './page-translation.model';\r\n\r\nexport class Page {\r\n    id: number;\r\n    pageId: number;\r\n    name: string;\r\n    clientId: string;\r\n    isActive: boolean;\r\n    url: string;\r\n    icon: string;\r\n    bgColor: string;\r\n    order: number;\r\n    parentId?: number;\r\n    childCount: number;\r\n    idPath: string;\r\n    namePrefix: string;\r\n    pageTranslation: PageTranslation[];\r\n\r\n    constructor(id?: number, name?: string, clientId?: string, isActive?: boolean, url?: string, icon?: string, bgColor?: string,\r\n                idPath?: string, order?: number, parentId?: number, childCount?: number, pageTranslation?: PageTranslation[]) {\r\n        this.id = id;\r\n        this.name = name ? name : '';\r\n        this.clientId = clientId ? clientId : '';\r\n        this.isActive = true;\r\n        this.url = url ? url : '';\r\n        this.icon = icon ? icon : '';\r\n        this.bgColor = bgColor;\r\n        this.order = 0;\r\n        this.parentId = parentId;\r\n        this.childCount = childCount ? childCount : 0;\r\n        this.idPath = '';\r\n        this.namePrefix = '';\r\n        this.pageTranslation = pageTranslation ? pageTranslation : [];\r\n    }\r\n}\r\n","<nh-modal #pageFormModal size=\"md\" (onShow)=\"onPageModalOpen()\"\r\n          (onHidden)=\"onPageModalClose()\">\r\n    <nh-modal-header>\r\n        <h4 class=\"modal-title\">\r\n            <i class=\"fa fa-file-text-o\"></i>\r\n            {{isUpdate ? \"Cập nhật trang\" : \"Thêm mới trang\"}}\r\n        </h4>\r\n    </nh-modal-header>\r\n    <form class=\"horizontal-form\" (ngSubmit)=\"save()\" [formGroup]=\"model\">\r\n        <nh-modal-content class=\"form-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\" [class.has-error]=\"formErrors.id\">\r\n                        <label ghmLabel=\"Mã trang\" class=\"control-label\" [required]=\"true\"></label>\r\n                        <input type=\"text\" id=\"pageId\" class=\"form-control\" placeholder=\"Nhập mã trang\"\r\n                               formControlName=\"id\"\r\n                               [attr.disabled]=\"isUpdate ? '' : null\"/>\r\n                        <div class=\"help-block\" *ngIf=\"formErrors.id\">{{formErrors.id}}</div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label ghmLabel=\"Trang cha\" class=\"control-label\"></label>\r\n                        <nh-dropdown-tree\r\n                            [title]=\"'-- Chọn trang cha --'\"\r\n                            [data]=\"pageTree\"\r\n                            [width]=\"350\"\r\n                            formControlName=\"parentId\"\r\n                        ></nh-dropdown-tree>\r\n                        <div class=\"help-block\"></div>\r\n                    </div>\r\n                    <div class=\"form-group\" [class.has-error]=\"formErrors.url\">\r\n                        <label ghmLabel=\"Đường dẫn\" class=\"control-label\"></label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Nhập đường dẫn\" formControlName=\"url\">\r\n                        <div class=\"help-block\" *ngIf=\"formErrors.url\">{{formErrors.url}}</div>\r\n                    </div>\r\n                    <div class=\"form-group\" [class.has-error]=\"formErrors.icon\">\r\n                        <label ghmLabel=\"Icon\" class=\"control-label\"></label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Nhập icon\" formControlName=\"icon\">\r\n                        <div class=\"help-block\" *ngIf=\"formErrors.icon\">{{formErrors.icon}}</div>\r\n                    </div>\r\n                    <div class=\"form-group\" [class.has-error]=\"formErrors.bgColor\">\r\n                        <label ghmLabel=\"Màu nền\" class=\"control-label\"></label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Nhập màu nền\" formControlName=\"bgColor\">\r\n                        <div class=\"help-block\" *ngIf=\"formErrors.bgColor\">{{formErrors.bgColor}}</div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label ghmLabel=\"Thứ tự\" class=\"control-label\"></label>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Nhập thứ tự\" formControlName=\"order\">\r\n                        <div class=\"help-block\"></div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <mat-slide-toggle color=\"primary\" formControlName=\"isActive\">Kích hoạt</mat-slide-toggle>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"tabbable-custom\">\r\n                        <ul class=\"nav nav-tabs \">\r\n                            <li [class.active]=\"item.id === currentLanguage\"\r\n                                *ngFor=\"let item of languages; let i = index\">\r\n                                <a href=\"#tab{{i}}\" data-toggle=\"tab\"> {{ item.name }} </a>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"tab-content\" formArrayName=\"pageTranslations\">\r\n                            <div class=\"tab-pane\" attr.id=\"{{ 'tab' + i }}\"\r\n                                 [class.active]=\"pageTranslation.value.languageId === currentLanguage\"\r\n                                 *ngFor=\"let pageTranslation of pageTranslations.controls; index as i\">\r\n                                <div [formGroupName]=\"i\">\r\n                                    <div class=\"form-group\"\r\n                                         [class.has-error]=\"translationFormErrors[pageTranslation.value.languageId]?.name\">\r\n                                        <label ghmLabel=\"Tên trang\"\r\n                                               class=\"control-label\"\r\n                                               [required]=\"true\"\r\n                                        ></label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Nhập tên trang\"\r\n                                               formControlName=\"name\">\r\n                                        <!--<div class=\"help-block\" *ngIf=\"translationFormErrors[pageTranslation.value.languageId].name\">-->\r\n                                        <!--{{ translationFormErrors[pageTranslation.value.languageId].name }}-->\r\n                                        <!--</div>-->\r\n                                    </div>\r\n                                    <div class=\"form-group\"\r\n                                         [class.has-error]=\"translationFormErrors[pageTranslation.value.languageId]?.description\">\r\n                                        <label ghmLabel=\"Mô tả\"\r\n                                               class=\"control-label\"\r\n                                        ></label>\r\n                                        <textarea class=\"form-control\" rows=\"3\"\r\n                                                  placeholder=\"Nhập nội dung mô tả\"\r\n                                                  formControlName=\"description\"\r\n                                        ></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nh-modal-content>\r\n        <nh-modal-footer>\r\n            <mat-checkbox\r\n                class=\"cm-mgr-5\"\r\n                color=\"primary\"\r\n                name=\"isCreateAnother\"\r\n                *ngIf=\"!isUpdate\"\r\n                [(checked)]=\"isCreateAnother\"\r\n                (change)=\"isCreateAnother = !isCreateAnother\"> Tiếp tục tạo\r\n            </mat-checkbox>\r\n            <ghm-button classes=\"btn btn-primary\" [loading]=\"isSaving\">\r\n                Lưu lại\r\n            </ghm-button>\r\n            <ghm-button type=\"button\" icon=\"fa fa-times\" classes=\"btn btn-default cm-mgl-5\" [loading]=\"isSaving\"\r\n                        nh-dismiss=\"true\">\r\n                Hủy bỏ\r\n            </ghm-button>\r\n        </nh-modal-footer>\r\n    </form>\r\n</nh-modal>\r\n","import { Component, Input, OnInit, Output, ViewChild, EventEmitter } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Page } from './models/page.model';\r\nimport { PageService } from './page.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { NhModalComponent } from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { LanguageService } from '../../../shareds/services/language.service';\r\nimport { PageTranslation } from './models/page-translation.model';\r\nimport { LanguageViewModel, LanguageSearchViewModel } from '../../../shareds/models/language.viewmodel';\r\nimport { TreeData } from '../../../view-model/tree-data';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport * as _ from 'lodash';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { PageDetailViewModel } from './models/page-detail.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-page-form',\r\n    templateUrl: './page-form.component.html',\r\n    providers: [LanguageService]\r\n})\r\nexport class PageFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('pageFormModal') pageFormModal: NhModalComponent;\r\n    @Input() page = new Page();\r\n    @Output() onPageFormClose = new EventEmitter();\r\n    pageTree: TreeData[] = [];\r\n    model: FormGroup;\r\n    pageTranslation = new PageTranslation();\r\n    pageTranslationFormArray: FormArray;\r\n    translationFormErrors = {};\r\n    translationValidationMessage = [];\r\n    // languageData = [];\r\n    // languages: LanguageSearchViewModel[] = [];\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService,\r\n                private pageService: PageService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n        // this.renderLanguageData();\r\n        this.getPageTree();\r\n    }\r\n\r\n    get pageTranslations(): FormArray {\r\n        return this.model.get('pageTranslations') as FormArray;\r\n    }\r\n\r\n    add() {\r\n        this.pageFormModal.show();\r\n        this.isUpdate = false;\r\n    }\r\n\r\n    edit(page: Page) {\r\n        this.pageFormModal.show();\r\n        this.isUpdate = true;\r\n        this.spinnerService.show('Đang tải dữ liệu...');\r\n        this.pageService.getLanguageDetail(page.id)\r\n            .subscribe((result: IActionResultResponse<PageDetailViewModel>) => {\r\n                if (result.data) {\r\n                    const pageData = result.data;\r\n                    this.model.patchValue({\r\n                        id: pageData.id,\r\n                        parentId: pageData.parentId,\r\n                        url: pageData.url,\r\n                        icon: pageData.icon,\r\n                        bgColor: pageData.bgColor,\r\n                        order: pageData.order\r\n                    });\r\n\r\n                    if (pageData.pageTranslation && pageData.pageTranslation.length > 0) {\r\n                        this.languages.forEach((language: LanguageViewModel, index: number) => {\r\n                            // Need to check this function.\r\n                            const pageTranslationFormGroup = this.pageTranslations.at(index);\r\n                            if (pageTranslationFormGroup) {\r\n                                const pageTranslationInfo = _.find(pageData.pageTranslation, (pageTranslation: PageTranslation) => {\r\n                                    return pageTranslationFormGroup.value.languageId === pageTranslation.languageId;\r\n                                });\r\n                                if (pageTranslationInfo) {\r\n                                    pageTranslationFormGroup.patchValue(pageTranslationInfo);\r\n                                } else {\r\n                                    pageTranslationFormGroup.patchValue({name: '', description: ''});\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    onPageModalOpen() {\r\n        this.utilService.focusElement('pageId');\r\n    }\r\n\r\n    onPageModalClose() {\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n        this.model.patchValue({\r\n            id: '',\r\n            icon: '',\r\n            bgColor: '',\r\n            url: ''\r\n        });\r\n        this.pageTranslations.controls.forEach((pageTranslation: FormGroup) => {\r\n            pageTranslation.patchValue({\r\n                name: '',\r\n                description: ''\r\n            });\r\n        });\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        const inValidPageTranslationModel = _.find(this.pageTranslations.controls, (pageTranslationModel: FormGroup) => {\r\n            const isPageTranslationModelValid = this.utilService.onValueChanged(pageTranslationModel,\r\n                this.translationFormErrors[pageTranslationModel.value.languageId],\r\n                this.translationValidationMessage[pageTranslationModel.value.languageId], true);\r\n            return !isPageTranslationModelValid ? pageTranslationModel : null;\r\n        });\r\n\r\n        if (inValidPageTranslationModel) {\r\n            this.currentLanguage = inValidPageTranslationModel.value.languageId;\r\n        }\r\n        if (isValid && !inValidPageTranslationModel) {\r\n            this.page = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.pageService.update(this.page)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.success(result.message);\r\n                        this.model.patchValue(new Page());\r\n                        this.isUpdate = false;\r\n                        this.isModified = true;\r\n                        this.pageFormModal.dismiss();\r\n                        return;\r\n                    });\r\n            } else {\r\n                this.pageService.insert(this.page)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.success(result.message);\r\n                        this.utilService.focusElement('pageId');\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.resetModel();\r\n                        } else {\r\n                            this.pageFormModal.dismiss();\r\n                        }\r\n                        return;\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    // private renderLanguageData() {\r\n    //     this.languages = this.appService.languages;\r\n    //     this.languageData = this.languages.map((language: LanguageSearchViewModel) => {\r\n    //         if (language.isDefault) {\r\n    //             this.currentLanguage = language.languageId;\r\n    //         }\r\n    //         return {id: language.languageId, name: language.name, isSelected: language.isDefault};\r\n    //     });\r\n    //     this.renderPageTranslation();\r\n    // }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['id', 'icon', 'bgColor', 'url']);\r\n        this.validationMessages = {\r\n            id: {\r\n                required: 'Mã trang không được để trống',\r\n            },\r\n            icon: {\r\n                maxlength: 'Icon không được phép vượt quá 50 ký tự.',\r\n            },\r\n            bgColor: {\r\n                maxlength: 'Mã màu nền không được phép lớn hơn 10 ký tự.'\r\n            },\r\n            url: {\r\n                maxlength: 'Url không được phép vượt quá 500 ký tự.'\r\n            }\r\n        };\r\n\r\n        this.model = this.fb.group({\r\n            'id': [this.page.id, [\r\n                Validators.required\r\n            ]],\r\n            'isActive': [this.page.isActive],\r\n            'url': [this.page.url, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            'icon': [this.page.icon, [\r\n                Validators.maxLength(50)\r\n            ]],\r\n            'order': [this.page.order],\r\n            'parentId': [this.page.parentId],\r\n            'bgColor': [this.page.bgColor, [\r\n                Validators.maxLength(10)\r\n            ]],\r\n            'pageTranslations': this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private buildFormLanguage(language: string): FormGroup {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(['name', 'description']);\r\n        this.translationValidationMessage[language] = {\r\n            name: {\r\n                required: 'Vui lòng nhập tên trang',\r\n                maxLength: 'Tên trang không được phép vượt quá 256 ký tự.'\r\n            },\r\n            description: {\r\n                maxLength: 'Mô tả không được phép vượt quá 500 ký tự.'\r\n            }\r\n        };\r\n        const pageTranslationModel = this.fb.group({\r\n            name: [this.pageTranslation.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            languageId: [language],\r\n            description: [this.pageTranslation.description, [\r\n                Validators.maxLength(500)\r\n            ]]\r\n        });\r\n        pageTranslationModel.valueChanges.subscribe((data: any) => this.utilService.onValueChanged(pageTranslationModel,\r\n            this.translationFormErrors[language],\r\n            this.translationValidationMessage[language]));\r\n        return pageTranslationModel;\r\n    }\r\n\r\n    private getPageTree() {\r\n        this.pageService.getPageTree()\r\n            .subscribe((result: TreeData[]) => {\r\n                this.pageTree = result;\r\n            });\r\n    }\r\n\r\n    private renderPageTranslation() {\r\n        this.pageTranslationFormArray = this.model.get('pageTranslations') as FormArray;\r\n        this.languages.forEach((language: LanguageViewModel) => {\r\n            this.pageTranslationFormArray.push(this.buildFormLanguage(language.id));\r\n        });\r\n    }\r\n\r\n    private resetModel() {\r\n        this.model.patchValue({\r\n            id: null,\r\n            name: '',\r\n            isActive: true,\r\n            url: '',\r\n            icon: '',\r\n            bgColor: '',\r\n            order: 0\r\n        });\r\n\r\n        this.pageTranslations.controls.forEach((pageTranslation: FormControl) => {\r\n            pageTranslation.patchValue({\r\n                name: '',\r\n                description: ''\r\n            });\r\n        });\r\n    }\r\n}\r\n","<div class=\"row cm-mgb-10\">\r\n    <div class=\"col-sm-12\">\r\n        <form class=\"form-inline\" (ngSubmit)=\"search()\">\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control cm-mgr-5\" placeholder=\"Nhập từ khoá tìm kiếm\"\r\n                       name=\"keyword\"\r\n                       [(ngModel)]=\"keyword\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <nh-select\r\n                    [class]=\"'cm-mgr-5'\"\r\n                    [data]=\"[{id: true, name: 'Kích hoạt'}, {id: false, name: 'Chưa kích hoạt'}]\"\r\n                    [title]=\"'-- Tất cả --'\"\r\n                    [(value)]=\"isActive\"\r\n                    (onSelectItem)=\"search()\"></nh-select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <ghm-button icon=\"fa fa-search\" [loading]=\"isSearching\"></ghm-button>\r\n            </div>\r\n            <div class=\"form-group pull-right\" *ngIf=\"permission.add\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" *ngIf=\"permission.add\">\r\n                    <i class=\"fa fa-plus\"></i>\r\n                    Thêm\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <table\r\n            class=\"table table-striped table-hover table-full-width dataTable no-footer\">\r\n            <thead>\r\n            <tr>\r\n                <th class=\"center w50\">STT</th>\r\n                <th class=\"center\">Tên trang</th>\r\n                <th class=\"center w100\">Icon</th>\r\n                <th class=\"center\">Đường dẫn</th>\r\n                <th class=\"center w100\">Public</th>\r\n                <th class=\"center w100\">Kích hoạt</th>\r\n                <th class=\"center w150\" *ngIf=\"permission.edit || permission.delete\">Sửa, Xóa</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let page of listItems$ | async; let i = index\">\r\n                <td class=\"center middle\">{{(currentPage - 1) * pageSize + i + 1}}</td>\r\n                <td class=\"middle cursor-pointer\" (click)=\"edit(page)\">\r\n                    <a href=\"javascritp://\">\r\n                        <span [innerHtml]=\"page.namePrefix\"></span>\r\n                        {{page.name}}\r\n                    </a>\r\n                </td>\r\n                <td class=\"w100 center middle\">\r\n                    <i [class]=\"page.icon\"></i>\r\n                </td>\r\n                <td>\r\n                    {{page.url}}\r\n                </td>\r\n                <td class=\"center middle\">\r\n                    <!--<i *ngIf=\"page.isPublic\"-->\r\n                       <!--class=\"fa fa-check color-green size-16\"></i>-->\r\n                </td>\r\n                <td class=\"center middle\">\r\n                    <span class=\"badge\"\r\n                          [class.badge-success]=\"page.isActive\"\r\n                          [class.badge-danger]=\"!page.isActive\">\r\n                        {{ page.isActive ? 'Đã kích hoạt' : 'Chưa kích hoạt' }}\r\n                    </span>\r\n                </td>\r\n                <td class=\"center middle w100\" *ngIf=\"permission.edit || permission.delete\">\r\n                    <ghm-button type=\"button\" classes=\"btn btn-primary btn-sm\" icon=\"fa fa-edit\"\r\n                                matTooltip=\"Update\"\r\n                                *ngIf=\"permission.edit\"\r\n                                (click)=\"edit(page)\">\r\n                    </ghm-button>\r\n                    <ghm-button icon=\"fa fa-trash-o\" classes=\"btn btn-danger btn-sm\"\r\n                                matTooltip=\"Delete\"\r\n                                *ngIf=\"permission.delete\"\r\n                                [swal]=\"{ title: 'Bạn có chắc chắn muốn xóa trang: ' + page.name + ' không?' }\"\r\n                                (confirm)=\"delete(page.id)\"></ghm-button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n<app-page-form [page]=\"page\" (saveSuccessful)=\"search()\"></app-page-form>\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Location } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { Page } from './models/page.model';\r\nimport { PageService } from './page.service';\r\nimport { IPageId, PAGE_ID, PAGE_ID_DI } from '../../../configs/page-id.config';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { PageFormComponent } from './page-form.component';\r\nimport { FilterLink } from '../../../shareds/models/filter-link.model';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { DestroySubscribers } from '../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { CheckPermission } from '../../../shareds/decorator/check-permission.decorator';\r\n\r\n@Component({\r\n    selector: 'app-page-component',\r\n    templateUrl: './page.component.html',\r\n    preserveWhitespaces: false\r\n})\r\n\r\n@DestroySubscribers()\r\n@CheckPermission()\r\nexport class PageComponent extends BaseListComponent<Page> implements OnInit {\r\n    @ViewChild(PageFormComponent) pageFormComponent: PageFormComponent;\r\n    listPageDisplay: Page[] = [];\r\n    isActive?: boolean;\r\n    clientId?: string;\r\n    page = new Page();\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private title: Title,\r\n                private router: Router,\r\n                private route: ActivatedRoute,\r\n                private location: Location,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService,\r\n                private pageService: PageService) {\r\n        super();\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: Page[] }) => {\r\n            return result.data;\r\n        }));\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe((params: any) => {\r\n            this.keyword = params.keyword;\r\n            this.isActive = params.isActive;\r\n        });\r\n        console.log('hello from pages');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_PAGE, 'Cấu hình', 'Cấu hình trang');\r\n        // this.getPermission(this.appService, this.pageId.CONFIG_PAGE);\r\n    }\r\n\r\n    search() {\r\n        this.renderFilterLink();\r\n        this.isSearching = true;\r\n        this.listItems$ = this.pageService.search(this.keyword, this.isActive)\r\n            .pipe(finalize(() => this.isSearching = false));\r\n    }\r\n\r\n    delete(id: number) {\r\n        this.subscribers.deletePage = this.pageService.delete(id)\r\n            .subscribe((result: IResponseResult) => {\r\n                this.toastr.success(result.message);\r\n                this.search();\r\n            });\r\n    }\r\n\r\n    changeActiveStatus(page: Page) {\r\n        page.isActive = !page.isActive;\r\n    }\r\n\r\n    add() {\r\n        this.pageFormComponent.add();\r\n    }\r\n\r\n    edit(page: Page) {\r\n        this.pageFormComponent.edit(page);\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = '/config/pages';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('clientId', this.clientId),\r\n            new FilterLink('isActive', this.isActive),\r\n        ]);\r\n        // this.appService.updateTabItem(`${path}?${query}`);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","export class Role {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    type: number;\r\n    concurrencyStamp: string;\r\n    rolesPagesViewModels?: RolesPagesViewModels[];\r\n}\r\n\r\nexport interface RolesPagesViewModels {\r\n    pageId: number;\r\n    pageName: string;\r\n    permissions: number;\r\n}\r\n","<nh-modal #roleDetailModal size=\"md\">\r\n    <nh-modal-header>\r\n        <i class=\"fa fa-user-secret\" aria-hidden=\"true\"></i>\r\n        <ng-container i18n=\"@@roleDetailModalTitle\">Detail Role: \"<span class=\"bold\">{{ role?.name }}</span>\"\r\n        </ng-container>\r\n    </nh-modal-header>\r\n\r\n    <nh-modal-content>\r\n        <form action=\"\" class=\"form-horizontal\">\r\n            <div class=\"form-body\">\r\n                <div class=\"form-group\">\r\n                    <label i18n-ghmLabel=\"@@roleName\" ghmLabel=\"Role name\" class=\"col-sm-4 control-label\"\r\n                           [required]=\"true\"></label>\r\n                    <div class=\"col-sm-8\">\r\n                        <div class=\"form-control\">{{ role?.name }}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label i18n-ghmLabel=\"@@description\" ghmLabel=\"Description\" class=\"col-sm-4 control-label\"\r\n                           [required]=\"true\"></label>\r\n                    <div class=\"col-sm-8\">\r\n                        <div class=\"form-control height-auto\">{{ role?.description }}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-sm-12\">\r\n                        <table class=\"table table-striped\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th class=\"center\" i18n=\"@@No\">No</th>\r\n                                <th class=\"\" i18n=\"@@pageName\">Page name</th>\r\n                                <th class=\"center\" i18n=\"@@view\">View</th>\r\n                                <th class=\"center\" i18n=\"@@insert\">Add</th>\r\n                                <th class=\"center\" i18n=\"@@update\">Edit</th>\r\n                                <th class=\"center\" i18n=\"@@delete\">Delete</th>\r\n                                <th class=\"center\" i18n=\"@@export\">Export</th>\r\n                                <th class=\"center\" i18n=\"@@print\">Print</th>\r\n                                <th class=\"center\" i18n=\"@@approve\">Approve</th>\r\n                                <th class=\"center\" i18n=\"@@report\">Report</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr *ngFor=\"let page of pages$ | async; let i = index\">\r\n                                <td class=\"center middle w50\">{{ i + 1 }}</td>\r\n                                <td class=\"middle\">{{ page.pageName }}</td>\r\n                                <td class=\"center middle w50\">\r\n                                    <i class=\"fa fa-check color-green\" *ngIf=\"page.view\"></i>\r\n                                </td>\r\n                                <td class=\"center middle w50\">\r\n                                    <i class=\"fa fa-check color-green\" *ngIf=\"page.add\"></i>\r\n                                </td>\r\n                                <td class=\"center middle w50\">\r\n                                    <i class=\"fa fa-check color-green\" *ngIf=\"page.edit\"></i>\r\n                                </td>\r\n                                <td class=\"center middle w50\">\r\n                                    <i class=\"fa fa-check color-green\" *ngIf=\"page.delete\"></i>\r\n                                </td>\r\n                                <td class=\"center middle w50\">\r\n                                    <i class=\"fa fa-check color-green\" *ngIf=\"page.export\"></i>\r\n                                </td>\r\n                                <td class=\"center middle w50\">\r\n                                    <i class=\"fa fa-check color-green\" *ngIf=\"page.print\"></i>\r\n                                </td>\r\n                                <td class=\"center middle w50\">\r\n                                    <i class=\"fa fa-check color-green\" *ngIf=\"page.approve\"></i>\r\n                                </td>\r\n                                <td class=\"center middle w50\">\r\n                                    <i class=\"fa fa-check color-green\" *ngIf=\"page.report\"></i>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-sm-8 col-sm-offset-4\">\r\n                        <ghm-button type=\"button\" classes=\"btn btn-default\"\r\n                                    nh-dismiss=\"true\"\r\n                                    i18n=\"@@close\">\r\n                            Close\r\n                        </ghm-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form><!-- END form role info -->\r\n    </nh-modal-content>\r\n</nh-modal>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Role } from '../models/role.model';\r\nimport { NhModalComponent } from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { RoleService } from '../role.service';\r\nimport { Observable } from 'rxjs';\r\nimport { RolePageViewModel } from '../models/role-page.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-role-detail',\r\n    templateUrl: './role-detail.component.html'\r\n})\r\n\r\nexport class RoleDetailComponent implements OnInit {\r\n    @ViewChild(NhModalComponent) detailModal: NhModalComponent;\r\n    @Input() role: Role = null;\r\n    pages$: Observable<RolePageViewModel[]>;\r\n\r\n    constructor(private roleService: RoleService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    show(role: Role) {\r\n        this.role = role;\r\n        this.pages$ = this.roleService.getRolesPages(this.role.id).pipe();\r\n        this.detailModal.show();\r\n    }\r\n}\r\n","{isUpdate, select, 0 {Thêm mới quyền} 1 {Chỉnh sửa quyền}}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Role, RolesPagesViewModels } from '../models/role.model';\r\nimport { BaseFormComponent } from '../../../../base-form.component';\r\nimport { RoleService } from '../role.service';\r\nimport { UtilService } from '../../../../shareds/services/util.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NhModalComponent } from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { RolePageViewModel } from '../models/role-page.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport { GhmSelectPickerComponent } from '../../../../shareds/components/ghm-select-picker/ghm-select-picker.component';\r\nimport { PageService } from '../../page/page.service';\r\nimport { PageActivatedSearchViewModel } from '../../page/models/page-activated-search.viewmodel';\r\nimport { GhmSelectPickerModel } from '../../../../shareds/components/ghm-select-picker/ghm-select-picker.model';\r\nimport { Permission } from '../../../../shareds/constants/permission.const';\r\nimport { IActionResultResponse } from '../../../../interfaces/iaction-result-response.result';\r\nimport { RoleDetailViewModel } from '../models/role-detail.viewmodel';\r\nimport { AppService } from '../../../../shareds/services/app.service';\r\n\r\n@Component({\r\n    selector: 'app-role-form',\r\n    templateUrl: './role-form.component.html'\r\n})\r\n\r\nexport class RoleFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('roleFormModal') roleFormModal: NhModalComponent;\r\n    @ViewChild(GhmSelectPickerComponent) ghmSelectPickerComponent: GhmSelectPickerComponent;\r\n    role = new Role();\r\n    listPages: { id: number, name: string }[] = [];\r\n    selectedPages: RolePageViewModel[] = [];\r\n    permissionConst = Permission;\r\n    isFullPermission = false;\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private pageService: PageService,\r\n                private roleService: RoleService,\r\n                private appService: AppService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    onModalShown() {\r\n        this.utilService.focusElement('name');\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.model.reset(new Role());\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    onAcceptedSelectPage(pages: GhmSelectPickerModel[]) {\r\n        const listNewPages = [];\r\n        _.each(pages, (page: GhmSelectPickerModel) => {\r\n            const existingPage = _.find(this.selectedPages, (selectedPage: RolePageViewModel) => {\r\n                return selectedPage.pageId === page.id;\r\n            });\r\n            if (!existingPage) {\r\n                const newPage = {\r\n                    pageId: page.id,\r\n                    pageName: page.name,\r\n                    view: false,\r\n                    add: false,\r\n                    edit: false,\r\n                    delete: false,\r\n                    export: false,\r\n                    print: false,\r\n                    approve: false,\r\n                    report: false\r\n                };\r\n                this.selectedPages.push(newPage);\r\n                if (this.isUpdate) {\r\n                    listNewPages.push(newPage);\r\n                }\r\n            }\r\n        });\r\n        if (this.isUpdate) {\r\n            this.roleService.addNewRolePage(this.role.id, listNewPages).subscribe();\r\n        }\r\n    }\r\n\r\n    changePermission(page: RolePageViewModel, permission: number) {\r\n        switch (permission) {\r\n            case this.permissionConst.view:\r\n                page.view = !page.view;\r\n                break;\r\n            case this.permissionConst.add:\r\n                page.add = !page.add;\r\n                break;\r\n            case this.permissionConst.edit:\r\n                page.edit = !page.edit;\r\n                break;\r\n            case this.permissionConst.delete:\r\n                page.delete = !page.delete;\r\n                break;\r\n            case this.permissionConst.export:\r\n                page.export = !page.export;\r\n                break;\r\n            case this.permissionConst.report:\r\n                page.report = !page.report;\r\n                break;\r\n            case this.permissionConst.approve:\r\n                page.approve = !page.approve;\r\n                break;\r\n            case this.permissionConst.print:\r\n                page.print = !page.print;\r\n                break;\r\n        }\r\n        if (this.isUpdate) {\r\n            const permissions = this.calculatePermissions(page);\r\n            this.subscribers.updatePermission = this.roleService.updatePermissions(this.role.id, page.pageId, permissions).subscribe();\r\n        }\r\n    }\r\n\r\n    changeFullPermission(page: RolePageViewModel) {\r\n        page.view = true;\r\n        page.add = true;\r\n        page.edit = true;\r\n        page.delete = true;\r\n        page.report = true;\r\n        page.print = true;\r\n        page.approve = true;\r\n        page.export = true;\r\n        if (this.isUpdate) {\r\n            const permissions = this.calculatePermissions(page);\r\n            this.subscribers.updatePermission = this.roleService.updatePermissions(this.role.id, page.pageId, permissions).subscribe();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.roleFormModal.show();\r\n    }\r\n\r\n    edit(role: Role) {\r\n        this.isUpdate = true;\r\n        this.role = role;\r\n        this.subscribers.getRolesPages = this.roleService.getRoleDetail(role.id)\r\n            .subscribe((roleDetail: RoleDetailViewModel) => {\r\n                this.selectedPages = roleDetail.rolePages;\r\n                this.model.patchValue(roleDetail);\r\n            });\r\n        this.roleFormModal.show();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (this.selectedPages.length === 0) {\r\n            this.setMessage('danger', 'selectOne');\r\n            return;\r\n        }\r\n        if (isValid) {\r\n            this.role = this.model.value;\r\n            this.role.rolesPagesViewModels = this.mapPermissionToPermissionValue();\r\n            const isRolePagePermissionValid = this.validatePagePermission(this.role.rolesPagesViewModels);\r\n            if (!isRolePagePermissionValid) {\r\n                this.setMessage('danger', 'inValid');\r\n                return;\r\n            }\r\n\r\n            this.isSaving = true;\r\n            this.resetMessage();\r\n            if (this.isUpdate) {\r\n                this.roleService.update(this.role)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isUpdate = false;\r\n                        this.isModified = true;\r\n                        this.roleFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.roleService.insert(this.role)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (!this.isCreateAnother) {\r\n                            this.model.reset(new Role());\r\n                            this.roleFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    deletePage(page: RolePageViewModel) {\r\n        if (this.isUpdate) {\r\n            this.subscribers.deletePermission = this.roleService.deletePermission(this.role.id, page.pageId)\r\n                .subscribe((result: IActionResultResponse) => this.removePermission(page.pageId));\r\n        } else {\r\n            this.removePermission(page.pageId);\r\n        }\r\n    }\r\n\r\n    showSelectPage() {\r\n        if (!this.listPages || this.listPages.length === 0) {\r\n            this.subscribers.getListPages = this.pageService.getActivatedPages()\r\n                .subscribe((result: PageActivatedSearchViewModel[]) => this.listPages = result);\r\n        }\r\n        this.ghmSelectPickerComponent.show();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'description']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['maxlength']}\r\n        ]);\r\n        this.model = this.fb.group({\r\n            'id': [this.role.id],\r\n            'name': [this.role.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'description': [this.role.description, [\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'concurrencyStamp': [this.role.concurrencyStamp]\r\n        });\r\n        this.subscribers.modelValueChanges =\r\n            this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private mapPermissionToPermissionValue() {\r\n        return this.selectedPages.map((page: RolePageViewModel) => {\r\n            return {\r\n                pageId: page.pageId,\r\n                pageName: page.pageName,\r\n                permissions: this.calculatePermissions(page)\r\n            };\r\n        });\r\n    }\r\n\r\n    private calculatePermissions(page: RolePageViewModel) {\r\n        let permissions = 0;\r\n        if (page.view) {\r\n            permissions += Permission.view;\r\n        }\r\n        if (page.add) {\r\n            permissions += Permission.add;\r\n        }\r\n        if (page.edit) {\r\n            permissions += Permission.edit;\r\n        }\r\n        if (page.delete) {\r\n            permissions += Permission.delete;\r\n        }\r\n        if (page.export) {\r\n            permissions += Permission.export;\r\n        }\r\n        if (page.print) {\r\n            permissions += Permission.print;\r\n        }\r\n        if (page.approve) {\r\n            permissions += Permission.approve;\r\n        }\r\n        if (page.report) {\r\n            permissions += Permission.report;\r\n        }\r\n        return permissions;\r\n    }\r\n\r\n    private validatePagePermission(pagePermissions: RolesPagesViewModels[]): boolean {\r\n        const inValidCount = _.countBy(pagePermissions, (pagePermission: RolesPagesViewModels) => {\r\n            return pagePermission.permissions === 0;\r\n        }).true;\r\n        return !inValidCount || inValidCount === 0;\r\n    }\r\n\r\n    private removePermission(pageId: number) {\r\n        _.remove(this.selectedPages, (selectedPage: RolePageViewModel) => {\r\n            return selectedPage.pageId === pageId;\r\n        });\r\n    }\r\n}\r\n","<div class=\"row cm-mgb-10\">\r\n    <div class=\"col-sm-12\">\r\n        <form class=\"form-inline\" (ngSubmit)=\"search(1)\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" i18n-placeholder=\"@@keywordSearch\"\r\n                       placeholder=\"Enter keyword for search please.\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <ghm-button icon=\"fa fa-search\" classes=\"btn btn-primary\" [loading]=\"isSearching\"></ghm-button>\r\n            </div>\r\n            <div class=\"form-group pull-right\">\r\n                <button class=\"btn btn-primary\" (click)=\"add()\" i18n=\"@@addNew\" *ngIf=\"permission.add\">\r\n                    Add new\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <table class=\"table table-stripped table-hover\">\r\n            <thead>\r\n            <tr>\r\n                <th class=\"center middle w50\" i18n=\"@@no\">No</th>\r\n                <th class=\"middle\" i18n=\"@@roleName\">Role name</th>\r\n                <th class=\"middle\" i18n=\"@@description\">Description</th>\r\n                <th class=\"middle\" i18n=\"@@roleType\">Role type</th>\r\n                <th class=\"center middle w150\" i18n=\"@@action\"\r\n                    *ngIf=\"permission.view || permission.edit || permission.delete\">Action\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let item of listItems$ | async; let i = index\">\r\n                <td class=\"center middle\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\r\n                <td class=\"middle\"><a href=\"javascript://\" (click)=\"detail(item.id)\">{{ item.name }}</a></td>\r\n                <td class=\"middle\">{{ item.description }}</td>\r\n                <td class=\"middle\" i18n=\"@@roleType\">{item.type, select, 0 {Built in} 1 {Custom}}</td>\r\n                <td class=\"center middle\" *ngIf=\"permission.view || permission.edit || permission.delete\">\r\n                    <ghm-button icon=\"fa fa-eye\" classes=\"btn btn-default btn-sm\"\r\n                                *ngIf=\"item.type !== 0\"\r\n                                (clicked)=\"detail(item)\"></ghm-button>\r\n                    <ghm-button icon=\"fa fa-edit\" classes=\"btn btn-primary btn-sm\"\r\n                                *ngIf=\"item.type !== 0\"\r\n                                (clicked)=\"edit(item)\"></ghm-button>\r\n                    <ghm-button icon=\"fa fa-trash-o\" classes=\"btn btn-danger btn-sm\"\r\n                                *ngIf=\"item.type !== 0\"\r\n                                [swal]=\"deleteRole\"\r\n                                (confirm)=\"delete(item.id)\"></ghm-button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n        <ghm-paging [totalRows]=\"totalRows\" [currentPage]=\"currentPage\" [pageShow]=\"6\" (pageClick)=\"search($event)\"\r\n                    [isDisabled]=\"isSearching\" [pageName]=\"'quyền'\"></ghm-paging>\r\n    </div>\r\n</div>\r\n\r\n<app-role-form (saveSuccessful)=\"search(1)\"></app-role-form>\r\n<app-role-detail></app-role-detail>\r\n\r\n<swal\r\n    i18n=\"@@confirmDeleteRole\"\r\n    i18n-title\r\n    i18n-text\r\n    #deleteRole\r\n    title=\"Are you sure for delete this role?\"\r\n    text=\"You can't recover this role after delete.\"\r\n    type=\"question\"\r\n    [showCancelButton]=\"true\"\r\n    [focusCancel]=\"true\">\r\n</swal>\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { Role } from './models/role.model';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\nimport { RoleService } from './role.service';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { RoleFormComponent } from './role-form/role-form.component';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { CheckPermission } from '../../../shareds/decorator/check-permission.decorator';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RoleDetailComponent } from './role-detail/role-detail.component';\r\n\r\n@Component({\r\n    selector: 'app-role',\r\n    templateUrl: './role.component.html',\r\n    providers: [RoleService]\r\n})\r\n@CheckPermission()\r\nexport class RoleComponent extends BaseListComponent<Role> implements OnInit {\r\n    @ViewChild(RoleFormComponent) roleFormComponent: RoleFormComponent;\r\n    @ViewChild(RoleDetailComponent) roleDetailComponent: RoleDetailComponent;\r\n\r\n    constructor(@Inject(PAGE_ID) private pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private appService: AppService,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private roleService: RoleService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_ROLE, 'Quản lý quyền', 'Danh sách quyền');\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: ISearchResult<Role> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            return data.items;\r\n        }));\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.listItems$ = this.roleService.search(this.keyword, this.currentPage)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((result: ISearchResult<Role>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.spinnerService.show('Đang xóa quyền. Vui lòng đợi...');\r\n        this.roleService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(this.currentPage);\r\n            });\r\n    }\r\n\r\n    add() {\r\n        this.roleFormComponent.add();\r\n    }\r\n\r\n    edit(role: Role) {\r\n        this.roleFormComponent.edit(role);\r\n    }\r\n\r\n    detail(role: Role) {\r\n        this.roleDetailComponent.show(role);\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { Observable } from 'rxjs';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { Role, RolesPagesViewModels } from './models/role.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { RolesPages } from './models/role-page.model';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { RolePageViewModel } from './models/role-page.viewmodel';\r\nimport { Permission } from '../../../shareds/constants/permission.const';\r\nimport { RolePageSearchViewModel } from './models/role-page-search.viewmodel';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { RoleDetailViewModel } from './models/role-detail.viewmodel';\r\n\r\n@Injectable()\r\nexport class RoleService implements Resolve<any> {\r\n    url = 'roles/';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.CORE_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.params;\r\n        return this.search(queryParams.keyword, queryParams.page, queryParams.pageSize);\r\n    }\r\n\r\n    search(keyword: string, page: number, pageSize?: number): Observable<ISearchResult<Role>> {\r\n        return this.http.get(this.url, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<ISearchResult<Role>>;\r\n    }\r\n\r\n    insert(role: Role): Observable<IResponseResult> {\r\n        return this.http.post(this.url, role).pipe(map((result: IResponseResult) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IResponseResult>;\r\n    }\r\n\r\n    update(role: Role): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}/${role.id}`, {\r\n            name: role.name,\r\n            description: role.description,\r\n            concurrencyStamp: role.concurrencyStamp\r\n        }).pipe(map((result: IResponseResult) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    updatePermissions(roleId: string, pageId: number, permissions: number): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}pages/${roleId}/${pageId}/${permissions}`, {})\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    deletePermission(roleId: string, pageId: number): Observable<IActionResultResponse> {\r\n        return this.http.delete(`${this.url}pages/${roleId}/${pageId}`)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    delete(id: string): Observable<IResponseResult> {\r\n        return this.http.delete(`${this.url}${id}`)\r\n            .pipe(map((result: IResponseResult) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    addNewRolePage(roleId: string, rolePagePermission: RolesPagesViewModels[]): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}${roleId}/pages`, rolePagePermission)\r\n            .pipe(map((result: IResponseResult) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    getRolesPages(id: string): Observable<RolePageViewModel[]> {\r\n        return this.http.get(`${this.url}${id}/pages`).pipe(map((result: ISearchResult<RolePageSearchViewModel>) => {\r\n            const data = result.items;\r\n            if (data) {\r\n                const rolePages = [];\r\n                data.forEach((rolePage: RolePageSearchViewModel) => {\r\n                    rolePages.push({\r\n                        pageId: rolePage.pageId,\r\n                        pageName: rolePage.pageName,\r\n                        view: (rolePage.permissions & Permission.view) === Permission.view,\r\n                        add: (rolePage.permissions & Permission.add) === Permission.add,\r\n                        edit: (rolePage.permissions & Permission.edit) === Permission.edit,\r\n                        delete: (rolePage.permissions & Permission.delete) === Permission.delete,\r\n                        export: (rolePage.permissions & Permission.export) === Permission.export,\r\n                        print: (rolePage.permissions & Permission.print) === Permission.print,\r\n                        approve: (rolePage.permissions & Permission.approve) === Permission.approve,\r\n                        report: (rolePage.permissions & Permission.report) === Permission.report,\r\n                    });\r\n                });\r\n                return rolePages;\r\n            }\r\n            return [];\r\n        })) as Observable<RolePageViewModel[]>;\r\n    }\r\n\r\n    getAllPages(): Observable<RolePageViewModel[]> {\r\n        return this.http.get(`${this.url}/pages`)\r\n            .pipe(map((result: ISearchResult<RolesPages>) => {\r\n                const rolesPages = [];\r\n                if (result && result.items) {\r\n                    result.items.forEach((item: RolesPages) => {\r\n                        rolesPages.push({\r\n                            pageId: item.pageId,\r\n                            pageName: item.pageName,\r\n                            view: false,\r\n                            add: false,\r\n                            edit: false,\r\n                            delete: false,\r\n                            export: false,\r\n                            print: false,\r\n                            approve: false,\r\n                            report: false\r\n                        });\r\n                    });\r\n                }\r\n                return rolesPages;\r\n            })) as Observable<RolePageViewModel[]>;\r\n    }\r\n\r\n    getRoleDetail(id: string): Observable<RoleDetailViewModel> {\r\n        return this.http.get(`${this.url}${id}`)\r\n            .pipe(map((result: IActionResultResponse<Role>) => {\r\n                const data = result.data;\r\n                const roleDetail: RoleDetailViewModel = {\r\n                    id: data.id,\r\n                    name: data.name,\r\n                    concurrencyStamp: data.concurrencyStamp,\r\n                    description: data.description,\r\n                    rolePages: []\r\n                };\r\n                if (data.rolesPagesViewModels && data.rolesPagesViewModels.length > 0) {\r\n                    data.rolesPagesViewModels.forEach((rolePage: RolesPagesViewModels) => {\r\n                        roleDetail.rolePages.push({\r\n                            pageId: rolePage.pageId,\r\n                            pageName: rolePage.pageName,\r\n                            view: this.checkPermission(Permission.view, rolePage.permissions),\r\n                            add: this.checkPermission(Permission.add, rolePage.permissions),\r\n                            edit: this.checkPermission(Permission.edit, rolePage.permissions),\r\n                            delete: this.checkPermission(Permission.delete, rolePage.permissions),\r\n                            export: this.checkPermission(Permission.export, rolePage.permissions),\r\n                            print: this.checkPermission(Permission.print, rolePage.permissions),\r\n                            approve: this.checkPermission(Permission.approve, rolePage.permissions),\r\n                            report: this.checkPermission(Permission.report, rolePage.permissions),\r\n                        });\r\n                    });\r\n                }\r\n                return roleDetail;\r\n            })) as Observable<RoleDetailViewModel>;\r\n    }\r\n\r\n    getPages(id: string): Observable<RolePageViewModel[]> {\r\n        return this.http.get(`${this.url}/${id}/pages`)\r\n            .pipe(map((result: ISearchResult<RolesPages>) => {\r\n                const rolesPages = [];\r\n                if (result && result.items) {\r\n                    result.items.forEach((item: RolesPages) => {\r\n                        rolesPages.push({\r\n                            pageId: item.pageId,\r\n                            pageName: item.pageName,\r\n                            view: this.checkPermission(Permission.view, item.permissions),\r\n                            add: this.checkPermission(Permission.add, item.permissions),\r\n                            edit: this.checkPermission(Permission.edit, item.permissions),\r\n                            delete: this.checkPermission(Permission.delete, item.permissions),\r\n                            export: this.checkPermission(Permission.export, item.permissions),\r\n                            print: this.checkPermission(Permission.print, item.permissions),\r\n                            approve: this.checkPermission(Permission.approve, item.permissions),\r\n                            report: this.checkPermission(Permission.report, item.permissions),\r\n                        });\r\n                    });\r\n                }\r\n                return rolesPages;\r\n            })) as  Observable<RolePageViewModel[]>;\r\n    }\r\n\r\n    private checkPermission(permission: number, permissions: number): boolean {\r\n        return (permissions & permission) === permission;\r\n    }\r\n}\r\n","<nh-modal #tenantFormModal size=\"md\" (onHidden)=\"tenantFormModalHidden()\"\r\n          (onShown)=\"tenantFormModalShown()\">\r\n    <nh-modal-header>\r\n        <i class=\"fa fa-desktop\"></i> {{isUpdate ? 'Cập nhật thông tin tenant' : 'Thêm mới tenant'}}\r\n    </nh-modal-header>\r\n    <form class=\"form-horizontal\" (ngSubmit)=\"save()\" [formGroup]=\"model\">\r\n        <nh-modal-content>\r\n            <div class=\"form-group\" [class.has-error]=\"formErrors.name\">\r\n                <label ghmLabel=\"Tên khách hàng\"\r\n                       class=\"col-sm-3 control-label\"\r\n                       [required]=\"true\"\r\n                ></label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"text\" value=\"\"\r\n                           id=\"name\"\r\n                           class=\"form-control\"\r\n                           placeholder=\"Nhập tên tenant\"\r\n                           formControlName=\"name\"/>\r\n                    <span class=\"help-block\" *ngIf=\"formErrors.name\"> {{formErrors.name}} </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\" [class.has-error]=\"formErrors.email\">\r\n                <label ghmLabel=\"Email\"\r\n                       class=\"col-sm-3 control-label\"\r\n                       [required]=\"true\"\r\n                ></label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"text\" value=\"\" class=\"form-control\"\r\n                           placeholder=\"Nhập email\"\r\n                           formControlName=\"email\"/>\r\n                    <span class=\"help-block\" *ngIf=\"formErrors.email\"> {{formErrors.email}} </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\" [class.has-error]=\"formErrors.phoneNumber\">\r\n                <label ghmLabel=\"Số điện thoại\"\r\n                       class=\"col-sm-3 control-label\"\r\n                       [required]=\"true\"\r\n                ></label>\r\n                <div class=\"col-sm-9\">\r\n                    <input type=\"text\" value=\"\" class=\"form-control\"\r\n                           placeholder=\"Nhập số điện thoại\"\r\n                           formControlName=\"phoneNumber\"/>\r\n                    <span class=\"help-block\" *ngIf=\"formErrors.phoneNumber\"> {{formErrors.phoneNumber}} </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\" [class.has-error]=\"formErrors.address\">\r\n                <label ghmLabel=\"Địa chỉ\"\r\n                       class=\"col-sm-3 control-label\"\r\n                       [required]=\"true\"\r\n                ></label>\r\n                <div class=\"col-sm-9\">\r\n                    <textarea type=\"text\" rows=\"3\" class=\"form-control\"\r\n                              placeholder=\"Nhập địa chỉ\"\r\n                              formControlName=\"address\">\r\n                    </textarea>\r\n                    <span class=\"help-block\" *ngIf=\"formErrors.address\"> {{formErrors.address}} </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label ghmLabel=\"Ghi chú\"\r\n                       class=\"col-sm-3 control-label\"\r\n                ></label>\r\n                <div class=\"col-sm-9\">\r\n                    <textarea type=\"text\" rows=\"3\" class=\"form-control\"\r\n                              placeholder=\"Nhập ghi chú\"\r\n                              formControlName=\"note\">\r\n                    </textarea>\r\n                    <div class=\"alert alert-danger\" *ngIf=\"formErrors.note\">\r\n                        {{ formErrors.note }}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label ghmLabel=\"Hỗ trợ ngôn ngữ\"\r\n                       class=\"col-sm-3 control-label\"\r\n                ></label>\r\n                <div class=\"col-sm-9\">\r\n                    <nh-select\r\n                        title=\"-- Chọn ngôn ngữ hỗ trợ --\"\r\n                        [liveSearch]=\"true\"\r\n                        [data]=\"languages\"\r\n                        [multiple]=\"false\"\r\n                        (onSelectItem)=\"onItemSelected($event)\"\r\n                    ></nh-select>\r\n\r\n                    <ul class=\"list-items cm-mgt-10\">\r\n                        <li *ngFor=\"let language of selectedLanguages\">\r\n                            <div class=\"item-body\">\r\n                                <a href=\"javascript://\" (click)=\"removeLanguage(language)\" class=\"text-danger\">\r\n                                    <i class=\"fa fa-trash\"></i>\r\n                                </a>\r\n                                {{language.name}}\r\n                            </div>\r\n                            <ul class=\"item-action-group\">\r\n                                <li><a href=\"javascript://\" (click)=\"changeLanguageDefaultStatus(language)\"\r\n                                       [ngClass]=\"language.isDefault ? 'active' : 'inactive'\">\r\n                                    <i class=\"fa fa-check\"></i>\r\n                                </a></li>\r\n                                <li>\r\n                                    <a href=\"javascript://\" (click)=\"changeLanguageActiveStatus(language)\"\r\n                                       [ngClass]=\"language.isActive ? 'active' : 'inactive'\">\r\n                                        <i class=\"fa fa-eye\" *ngIf=\"language.isActive\"></i>\r\n                                        <i class=\"fa fa-eye-slash\" *ngIf=\"!language.isActive\"></i>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"col-sm-9 col-sm-offset-3\">\r\n                    <mat-checkbox color=\"primary\" formControlName=\"isActive\"> Kích hoạt</mat-checkbox>\r\n                </div>\r\n            </div>\r\n        </nh-modal-content>\r\n        <nh-modal-footer>\r\n            <ghm-button classes=\"btn btn-primary\" [loading]=\"isSaving\"\r\n                        [icon]=\"isUpdate ? 'fa fa-save' : 'fa fa-plus'\">\r\n                {{isUpdate ? 'Lưu lại' : 'Thêm'}}\r\n            </ghm-button>\r\n            <ghm-button type=\"button\" classes=\"btn btn-default\" icon=\"fa fa-times\" nh-dismiss=\"true\">\r\n                Hủy bỏ\r\n            </ghm-button>\r\n        </nh-modal-footer>\r\n    </form>\r\n</nh-modal>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Tenant, TenantLanguage } from './tenant.model';\r\nimport { TenantService } from './tenant.service';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Page } from '../page/models/page.model';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { NhModalComponent } from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LanguageService } from '../../../shareds/services/language.service';\r\nimport { LanguageSearchViewModel } from '../../../shareds/models/language.viewmodel';\r\nimport { DestroySubscribers } from '../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport * as _ from 'lodash';\r\nimport { NhSelectData } from '../../../shareds/components/nh-select/nh-select.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\n\r\n@Component({\r\n    selector: 'app-tenant-form',\r\n    templateUrl: './tenant-form.component.html',\r\n    providers: [LanguageService]\r\n})\r\n\r\n@DestroySubscribers()\r\nexport class TenantFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('tenantFormModal') tenantFormModal: NhModalComponent;\r\n    tenant = new Tenant();\r\n    languages = [];\r\n    selectedLanguages = [];\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private utilService: UtilService,\r\n                private toastr: ToastrService,\r\n                private tenantService: TenantService,\r\n                private appService: AppService,\r\n                private languageService: LanguageService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    onItemSelected(language: NhSelectData) {\r\n        if (language.id == null) {\r\n            return;\r\n        }\r\n\r\n        const languageInfo = _.find(this.selectedLanguages, (languageItem: LanguageSearchViewModel) => {\r\n            return languageItem.languageId === language.id;\r\n        });\r\n\r\n        if (languageInfo) {\r\n            this.toastr.warning('Ngôn ngữ đã tồn tại trong danh sách được chọn.');\r\n            return;\r\n        }\r\n\r\n        language.data.isActive = true;\r\n        this.selectedLanguages.push(language.data);\r\n        if (this.isUpdate) {\r\n            this.subscribers.addLanguage = this.tenantService.addLanguage(this.tenant.id, {\r\n                languageId: language.id,\r\n                name: language.name,\r\n                isActive: true,\r\n                isDefault: false\r\n            }).subscribe();\r\n        }\r\n    }\r\n\r\n    removeLanguage(language: LanguageSearchViewModel) {\r\n        if (this.isUpdate) {\r\n            this.subscribers.removeLanguage = this.tenantService.removeLanguage(this.tenant.id, language.languageId)\r\n                .subscribe((result: IActionResultResponse) => {\r\n                    this.removeSelectedLanguage(language);\r\n                });\r\n        } else {\r\n            this.removeSelectedLanguage(language);\r\n        }\r\n    }\r\n\r\n    changeLanguageDefaultStatus(language: LanguageSearchViewModel) {\r\n        _.each(this.selectedLanguages, (selectedLanguage: LanguageSearchViewModel) => {\r\n            selectedLanguage.isDefault = false;\r\n        });\r\n        language.isDefault = !language.isDefault;\r\n        if (this.isUpdate) {\r\n            this.tenantService.updateTenantLanguageDefaultStatus(this.tenant.id, language.languageId, language.isDefault)\r\n                .subscribe();\r\n        }\r\n    }\r\n\r\n    changeLanguageActiveStatus(language: LanguageSearchViewModel) {\r\n        language.isActive = !language.isActive;\r\n        if (this.isUpdate) {\r\n            this.tenantService.updateTenantLanguageActiveStatus(this.tenant.id, language.languageId, language.isActive)\r\n                .subscribe();\r\n        }\r\n    }\r\n\r\n    tenantFormModalShown() {\r\n        if (this.languages.length === 0) {\r\n            this.subscribers.getAllLanguages = this.languageService.getAllLanguage()\r\n                .subscribe((result: LanguageSearchViewModel[]) => {\r\n                    this.languages = result.map((language: LanguageSearchViewModel) => {\r\n                        language.isActive = false;\r\n                        return {\r\n                            id: language.languageId,\r\n                            name: language.name,\r\n                            isSelected: false,\r\n                            data: language\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n        this.utilService.focusElement('name');\r\n    }\r\n\r\n    tenantFormModalHidden() {\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        this.tenantFormModal.show();\r\n    }\r\n\r\n    edit(tenant: Tenant) {\r\n        this.isUpdate = true;\r\n        this.tenant = tenant;\r\n        this.model.patchValue(tenant);\r\n        this.subscribers.getLanguage = this.tenantService.getLanguage(tenant.id)\r\n            .subscribe((result: TenantLanguage[]) => this.selectedLanguages = result);\r\n        this.tenantFormModal.show();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (this.selectedLanguages.length === 0) {\r\n            this.toastr.error('Vui lòng chọn ít nhất một ngôn ngữ.');\r\n            return;\r\n        }\r\n\r\n        const defaultLanguage = _.find(this.selectedLanguages, (selectedLanguage: LanguageSearchViewModel) => {\r\n            return selectedLanguage.isDefault;\r\n        });\r\n\r\n        if (!defaultLanguage) {\r\n            this.toastr.error('Vui lòng chọn ít nhất 1 ngôn ngữ mặc định.');\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            this.tenant = this.model.value;\r\n            this.tenant.languages = this.selectedLanguages.map((selectedLanguage: LanguageSearchViewModel) => {\r\n                return {\r\n                    languageId: selectedLanguage.languageId,\r\n                    isActive: selectedLanguage.isActive,\r\n                    isDefault: selectedLanguage.isDefault\r\n                } as TenantLanguage;\r\n            });\r\n            if (this.isUpdate) {\r\n                this.isSaving = true;\r\n                this.tenantService.update(this.tenant)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.model.patchValue(new Page());\r\n                        this.isUpdate = false;\r\n                        this.tenantFormModal.dismiss();\r\n                        this.isModified = true;\r\n                        return;\r\n                    });\r\n            } else {\r\n                this.tenantService.insert(this.tenant)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.utilService.focusElement('pageId');\r\n                        this.isModified = true;\r\n                        this.model.reset(new Tenant());\r\n                        this.utilService.focusElement('name');\r\n                        return;\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'email', 'phoneNumber', 'address', 'note']);\r\n        this.validationMessages = {\r\n            'name': {\r\n                'required': 'Tên trang không được để trống',\r\n                'maxLength': 'Tên trang không được vượt quá 256 ký tự'\r\n            },\r\n            'email': {\r\n                'required': 'Vui lòng nhập email.',\r\n                'maxLength': 'Email không được phép vượt quá 256'\r\n            },\r\n            'phoneNumber': {\r\n                'required': 'Vui lòng nhập số điện thoại.',\r\n                'maxLength': 'Số điện thoại không được phép vượt quá 50 ký tự.'\r\n            },\r\n            'address': {\r\n                'required': 'Vui lòng nhập địa chỉ.',\r\n                'maxLength': 'Địa chỉ không được phép vượt quá 500 ký tự.'\r\n            },\r\n            'note': {\r\n                'maxLength': 'Nội dung mô tả không được phép vượt quá 500 ký tự..',\r\n            },\r\n        };\r\n\r\n        this.model = this.fb.group({\r\n            'id': [this.tenant.id],\r\n            'name': [this.tenant.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'email': [this.tenant.email, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'phoneNumber': [this.tenant.phoneNumber, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            'address': [this.tenant.address, [\r\n                Validators.required,\r\n                Validators.maxLength(500)\r\n            ]],\r\n            'note': [this.tenant.note, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            'isActive': [this.tenant.isActive],\r\n        });\r\n        this.model.valueChanges.subscribe(data =>\r\n            this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, false));\r\n    }\r\n\r\n    private removeSelectedLanguage(language: LanguageSearchViewModel) {\r\n        _.remove(this.selectedLanguages, (selectedLanguage: LanguageSearchViewModel) => {\r\n            return selectedLanguage.languageId === language.languageId;\r\n        });\r\n    }\r\n\r\n    private resetForm() {\r\n        this.model.reset(new Tenant());\r\n        this.selectedLanguages = [];\r\n    }\r\n}\r\n","<div class=\"row cm-mgb-10\">\r\n    <div class=\"col-sm-12\">\r\n        <form action=\"\" class=\"form-inline\" (ngSubmit)=\"search(1)\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Nhập từ khóa tìm kiếm\" class=\"form-control cm-mgr-5\"\r\n                       name=\"keyword\" [(ngModel)]=\"keyword\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <ghm-button icon=\"fa fa-search\" [loading]=\"isSearching\"></ghm-button>\r\n            </div>\r\n            <div class=\"form-group pull-right\">\r\n                <ghm-button type=\"button\" (clicked)=\"add()\">\r\n                    Thêm\r\n                </ghm-button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <table class=\"table table-bordered table-striped table-hover\">\r\n            <thead>\r\n            <tr>\r\n                <th class=\"center middle w50\">STT</th>\r\n                <th class=\"center middle\">Tên khách hàng</th>\r\n                <th class=\"center middle w150\">Email</th>\r\n                <th class=\"center middle w100\">Số điện thoại</th>\r\n                <th class=\"center middle w100\">Kích hoạt</th>\r\n                <th class=\"center middle w50\" *ngIf=\"permission.edit\"></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let item of listItems$ | async; let i = index\">\r\n                <td class=\"center middle\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\r\n                <td class=\"middle\">{{ item.name }}</td>\r\n                <td class=\"middle\">{{ item.email }}</td>\r\n                <td class=\"middle\">{{ item.phoneNumber }}</td>\r\n                <td class=\"middle\">\r\n                    <span class=\"badge\"\r\n                          [class.badge-danger]=\"!isActive\"\r\n                          [class.badge-success]=\"isActive\">{{isActive ? 'Đã kích hoạt' : 'chưa kích hoạt'}}</span>\r\n                </td>\r\n                <td class=\"center middle\" *ngIf=\"permission.edit\">\r\n                    <ghm-button type=\"button\" classes=\"btn btn-primary btn-sm\" icon=\"fa fa-edit\"\r\n                                matTooltip=\"Update\"\r\n                                (click)=\"edit(item)\">\r\n                    </ghm-button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <ghm-paging [totalRows]=\"totalRows\" [currentPage]=\"currentPage\" [pageShow]=\"6\" (pageClick)=\"search($event)\"\r\n                    [isDisabled]=\"isSearching\" [pageName]=\"'tenant'\"></ghm-paging>\r\n    </div>\r\n</div>\r\n\r\n<app-tenant-form (saveSuccessful)=\"search(1)\"></app-tenant-form>\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { Tenant } from './tenant.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TenantService } from './tenant.service';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { TenantFormComponent } from './tenant-form.component';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { DestroySubscribers } from '../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport { CheckPermission } from '../../../shareds/decorator/check-permission.decorator';\r\n\r\n@Component({\r\n    selector: 'app-tenant',\r\n    templateUrl: './tenant.component.html'\r\n})\r\n\r\n@DestroySubscribers()\r\n@CheckPermission()\r\nexport class TenantComponent extends BaseListComponent<Tenant> implements OnInit {\r\n    @ViewChild(TenantFormComponent) tenantFormComponent: TenantFormComponent;\r\n    isActive: boolean;\r\n\r\n    constructor(@Inject(PAGE_ID) private pageId: IPageId,\r\n                private toastr: ToastrService,\r\n                private appService: AppService,\r\n                private tenantService: TenantService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_TENANT, 'Quản lý Tenant', 'Danh sách tenant');\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.listItems$ = this.tenantService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((result: ISearchResult<Tenant>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                })\r\n            );\r\n    }\r\n\r\n    add() {\r\n        this.tenantFormComponent.add();\r\n    }\r\n\r\n    edit(tenant: Tenant) {\r\n        this.tenantFormComponent.edit(tenant);\r\n    }\r\n}\r\n","export interface TenantLanguage {\r\n    languageId: string;\r\n    name: string;\r\n    isActive: boolean;\r\n    isDefault: boolean;\r\n}\r\n\r\nexport class Tenant {\r\n    id: string;\r\n    name: string;\r\n    phoneNumber: string;\r\n    logo: string;\r\n    email: string;\r\n    address: string;\r\n    note: string;\r\n    isActive: boolean;\r\n    languages: TenantLanguage[];\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { Tenant, TenantLanguage } from './tenant.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\n\r\n@Injectable()\r\nexport class TenantService {\r\n    url = 'tenants/';\r\n\r\n    constructor(@Inject(APP_CONFIG) appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService) {\r\n        this.url = `${appConfig.CORE_API_URL}${this.url}`;\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page?: number, pageSize: number = 1): Observable<ISearchResult<Tenant>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null && isActive !== undefined ? keyword : '')\r\n                .set('page', page ? page.toString() : '')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '')\r\n        }) as Observable<ISearchResult<Tenant>>;\r\n    }\r\n\r\n    insert(tenant: Tenant): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}`, tenant) as Observable<IResponseResult>;\r\n    }\r\n\r\n    update(tenant: Tenant): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}/${tenant.id}`, {\r\n            name: tenant.name,\r\n            isActive: tenant.isActive,\r\n            phoneNumber: tenant.phoneNumber,\r\n            logo: tenant.logo,\r\n            email: tenant.email,\r\n            address: tenant.address,\r\n            note: tenant.note,\r\n            languages: tenant.languages\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.appService.showActionResultMessage(result);\r\n            return result;\r\n        })) as Observable<IResponseResult>;\r\n    }\r\n\r\n    updateActiveStatus(id: string, isActive?: boolean): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}/${id}/${isActive}`, {})\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    getLanguage(tenantId: string): Observable<TenantLanguage[]> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}${tenantId}/languages`)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<TenantLanguage[]>;\r\n    }\r\n\r\n    addLanguage(tenantId: string, language: TenantLanguage) {\r\n        return this.http.post(`${this.url}${tenantId}/languages`, language)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            }));\r\n    }\r\n\r\n    removeLanguage(tenantId: string, languageId: string) {\r\n        return this.http.delete(`${this.url}${tenantId}/languages/${languageId}`)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            }));\r\n    }\r\n\r\n    updateTenantLanguageActiveStatus(tenantId: string, languageId: string, isActive: boolean): Observable<IActionResultResponse> {\r\n        return this.http.get(`${this.url}${tenantId}/language/${languageId}/active/${isActive}`)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    updateTenantLanguageDefaultStatus(tenantId: string, languageId: string, isDefault: boolean): Observable<IActionResultResponse> {\r\n        return this.http.get(`${this.url}${tenantId}/language/${languageId}/default/${isDefault}`)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Title</title>\r\n</head>\r\n<body>\r\n\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-user-setting',\r\n    templateUrl: './user-setting.component.html'\r\n})\r\n\r\nexport class UserSettingComponent implements OnInit {\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","<div class=\"alert alert-{{type}}\">\r\n    <ng-content></ng-content>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ghm-alert',\r\n    templateUrl: './ghm-alert.component.html'\r\n})\r\n\r\nexport class GhmAlertComponent implements OnInit {\r\n    @Input() type: string;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","<div class=\"ghm-select-picker-container\" *ngIf=\"isShow\">\r\n    <div class=\"ghm-select-picker-header\" *ngIf=\"title\">\r\n        <h4 class=\"bold\">{{ title }}</h4>\r\n    </div><!-- END: .ghm-select-picker-header -->\r\n    <div class=\"ghm-select-picker-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"alert alert-danger\" i18n=\"@@PleaseSelectAtLeastOneItem\" *ngIf=\"errorMessage\">\r\n                    {errorMessage, select, required {Please select at least one item} other {}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"ghm-select-picker-left\">\r\n            <h4 class=\"title\">{{allTitle}}</h4>\r\n            <ul class=\"ghm-select-picker-items\">\r\n                <li *ngFor=\"let item of source\" (click)=\"selectItem(item)\">{{ item.name }}</li>\r\n            </ul>\r\n            <div class=\"row\" *ngIf=\"paging\">\r\n                <div class=\"text-right\" class=\"col-sm-12\" *ngIf=\"totalRows > 0\">\r\n                    <ul class=\"pagination\">\r\n                        <li *ngFor=\"let pageNumber of listPages\" [class.active]=\"pageNumber === currentPage\">\r\n                            <a href=\"javascript://\" (click)=\"pageClick(pageNumber)\">{{pageNumber}}</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div><!-- END: .ghm-select-picker-left -->\r\n        <div class=\"ghm-select-picker-right\">\r\n            <h4 class=\"title\">{{selectedTitle}}</h4>\r\n            <ul class=\"ghm-select-picker-items\">\r\n                <li *ngFor=\"let item of selectedItems\">\r\n                    {{ item.name }}\r\n                    <a href=\"javascript://\" class=\"ghm-select-picker-item-action\" (click)=\"removeItem(item.id)\">\r\n                        <i class=\"fa fa-trash-o\"></i>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div><!-- END: .ghm-select-picker-right -->\r\n    </div><!-- END: .ghm-select-picker-body -->\r\n    <div class=\"ghm-select-picker-footer\">\r\n        <button class=\"btn btn-primary\" i18n=\"@@accept\" (click)=\"accept()\">Accept</button>\r\n        <button class=\"btn btn-default\" i18n=\"@@cancel\" (click)=\"dismiss()\">Cancel</button>\r\n    </div><!-- END: .ghm-select-picker-footer -->\r\n</div><!-- END: .ghm-select-picker-container -->\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { GhmSelectPickerModel } from './ghm-select-picker.model';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'ghm-select-picker',\r\n    templateUrl: 'ghm-select-picker.component.html',\r\n    styleUrls: ['./ghm-select-picker.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class GhmSelectPickerComponent implements OnInit, OnChanges {\r\n    @Input() isShow = false;\r\n    @Input() allTitle = '';\r\n    @Input() selectedTitle = '';\r\n    @Input() source: GhmSelectPickerModel[] = [];\r\n    @Input() selectedItems: GhmSelectPickerModel[] = [];\r\n    @Input() paging = false;\r\n    @Input() totalRows = 0;\r\n    @Input() pageSize = 0;\r\n    @Input() title = '';\r\n\r\n    @Output() selectedItem = new EventEmitter();\r\n    @Output() selectedPage = new EventEmitter();\r\n    @Output() removedItem = new EventEmitter();\r\n    @Output() accepted = new EventEmitter();\r\n\r\n    errorMessage = '';\r\n    listPages = [];\r\n    currentPage = 1;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.hasOwnProperty('totalRows') && changes['totalRows'].currentValue !== 0) {\r\n            this.renderPaging();\r\n        }\r\n    }\r\n\r\n    show() {\r\n        this.isShow = true;\r\n    }\r\n\r\n    dismiss() {\r\n        this.isShow = false;\r\n    }\r\n\r\n    pageClick(pageNumber: number) {\r\n        if (this.paging) {\r\n            this.currentPage = pageNumber;\r\n            this.selectedPage.emit();\r\n        }\r\n    }\r\n\r\n    selectItem(item: GhmSelectPickerModel) {\r\n        this.errorMessage = '';\r\n        this.selectedItem.emit(item);\r\n        const existingItem = _.find(this.selectedItems, (selectedItem: GhmSelectPickerModel) => {\r\n            return selectedItem.id === item.id;\r\n        });\r\n        if (existingItem) {\r\n            return;\r\n        }\r\n        this.selectedItems.push(item);\r\n    }\r\n\r\n    removeItem(id: any) {\r\n        _.remove(this.selectedItems, (selectedItem: GhmSelectPickerModel) => {\r\n            return selectedItem.id === id;\r\n        });\r\n        this.removedItem.emit(id);\r\n    }\r\n\r\n    accept() {\r\n        if (!this.selectedItems || this.selectedItems.length === 0) {\r\n            this.errorMessage = 'required';\r\n            return;\r\n        }\r\n        this.accepted.emit(this.selectedItems);\r\n        this.isShow = false;\r\n        this.selectedItems = [];\r\n    }\r\n\r\n    private renderPaging() {\r\n        if (this.paging) {\r\n            const totalPage = Math.ceil(this.totalRows / this.pageSize);\r\n            for (let i = 1; i <= totalPage; i++) {\r\n                this.listPages.push(i);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GhmSelectPickerComponent } from './ghm-select-picker.component';\r\nimport { GhmSelectPickerService } from './ghm-select-picker.service';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [GhmSelectPickerComponent],\r\n    declarations: [GhmSelectPickerComponent],\r\n    providers: [GhmSelectPickerService],\r\n})\r\nexport class GhmSelectPickerModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GhmSelectPickerService {\r\n\r\n    constructor() {\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { APP_CONFIG, IAppConfig } from '../../configs/app.config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { LanguageSearchViewModel } from '../models/language.viewmodel';\r\n\r\n@Injectable()\r\nexport class LanguageService {\r\n    url = 'languages/';\r\n\r\n    constructor(@Inject(APP_CONFIG) appConfig: IAppConfig,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.CORE_API_URL}${this.url}`;\r\n    }\r\n\r\n    getListSupportedLanguage(): Observable<LanguageSearchViewModel[]> {\r\n        if (localStorage) {\r\n            const language = localStorage.getItem('_lang');\r\n            if (!language) {\r\n                return this.http.get(this.url) as Observable<LanguageSearchViewModel[]>;\r\n            } else {\r\n                const languages = JSON.parse(language);\r\n                return new BehaviorSubject(languages) as Observable<LanguageSearchViewModel[]>;\r\n            }\r\n        } else {\r\n            return this.http.get(this.url) as Observable<LanguageSearchViewModel[]>;\r\n        }\r\n    }\r\n\r\n    getAllLanguage(): Observable<LanguageSearchViewModel[]> {\r\n        return this.http.get(this.url + 'all') as Observable<LanguageSearchViewModel[]>;\r\n    }\r\n}\r\n"],"sourceRoot":""}