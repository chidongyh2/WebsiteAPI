{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm5/text-field.es5.js","webpack:///./node_modules/@angular/material/esm5/icon.es5.js","webpack:///./node_modules/@angular/material/esm5/input.es5.js","webpack:///./node_modules/@angular/material/form-field/typings/index.d.ts.MatFormField.html","webpack:///./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","webpack:///./src/app/base.component.ts","webpack:///./src/app/shareds/components/nh-datetime-picker/nh-date.component.html","webpack:///./src/app/shareds/components/nh-datetime-picker/nh-date.component.ts","webpack:///./src/app/shareds/components/nh-datetime-picker/nh-date.locale.config.ts","webpack:///./src/app/shareds/components/nh-datetime-picker/nh-date.module.ts","webpack:///./src/app/shareds/components/nh-datetime-picker/nh-date.utils.ts","webpack:///./src/app/shareds/models/time-object.model.ts","webpack:///./src/app/shareds/pipe/datetime-format/datetime-format.module.ts","webpack:///./src/app/shareds/pipe/datetime-format/datetime-format.pipe.ts","webpack:///./src/app/validators/number.validator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACkE;AACmD;AACjF;AACL;;AAE/B;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE,uHAAyD,gBAAgB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA,6BAA6B,oBAAoB,EAAE,wCAAwC;AAC3F;AACA;AACA;AACA,6BAA6B,oBAAoB,EAAE,yCAAyC;AAC5F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mEAAmE,sCAAsC,EAAE;AAC3G;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,kDAAkD;AAClD,SAAS,wEAAkB;AAC3B,SAAS,8DAAgB;AACzB,MAAM;AACN,iIAA2E,8CAA8C,8QAA8D,EAAE,8CAA8C;AACvO;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yCAAyC,sCAAsC,EAAE;AACjF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C;AAC9C,SAAS,kEAAoB;AAC7B,SAAS,yBAAyB;AAClC,MAAM;AACN;AACA,yBAAyB,6DAAe;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uCAAuC,EAAE;AACrF,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,0BAA0B,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,0BAA0B,EAAE;AACrD;AACA,uBAAuB,EAAE,+BAA+B,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,YAAY,EAAE;AAC9D;AACA,4DAA4D,YAAY,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,0BAA0B,EAAE;AACrD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,kEAAoB;AAC7B,SAAS,wEAAkB;AAC3B,SAAS,8DAAgB;AACzB,MAAM;AACN;AACA,qBAAqB,2FAA6C;AAClE,qBAAqB,2FAA6C;AAClE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/dA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACmB;AACE;AACsK;AACpK;AACY;AACmB;AAClC;AACkB;AACN;;AAEhC;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE;AAC5B,yCAAyC,EAAE;AAC3C;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uJAAgG,+CAA+C,EAAE,kBAAkB,EAAE,8EAAuB,sBAAsB,EAAE;AACpN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uIAAgF,gCAAgC,EAAE,8EAAuB,sBAAsB,EAAE;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8CAA8C,kCAAkC,EAAE;AAClF;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE,kCAAkC,QAAQ;AACxE,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iGAA0C,sDAAsD,EAAE;AAClG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,6BAA6B,EAAE;AACxD;AACA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE,qBAAqB,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,EAAE,UAAU,+BAA+B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,qCAAqC,uBAAuB,oFAA6B,gDAAgD,EAAE;AACpK;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,kDAAkD;AAClD,SAAS,sFAAiC,+DAAiB,IAAI;AAC/D,SAAS,gFAAsB;AAC/B,SAAS,gCAAgC,+DAAiB,GAAG,gIAAkC,IAAI;AACnG,MAAM;AACN,iIAA2E,8CAA8C,+ZAA8F,EAAE,8CAA8C;AACvQ;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kFAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,0CAA0C;AAC1C,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uKAAgH,kCAAkC,EAAE,kBAAkB,6DAA6D,EAAE;AACrO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA,4BAA4B,EAAE,UAAU,gBAAgB;AACxD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B;AACnC;AACA;AACA,wCAAwC,4BAA4B,qBAAqB,kBAAkB,YAAY,WAAW,0BAA0B,kBAAkB,eAAe,oBAAoB,cAAc,+BAA+B,sBAAsB,gLAAgL,cAAc,kNAAkN,YAAY;AAChrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C;AAC1C,SAAS,kEAAoB;AAC7B,SAAS,yBAAyB;AAClC,SAAS,gCAAgC,wFAA0C,IAAI;AACvF,MAAM;AACN;AACA,oBAAoB,4DAAc;AAClC,qBAAqB,4DAAc;AACnC,qBAAqB,4DAAc;AACnC,sBAAsB,4DAAc;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvqCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoB;AAC4C;AACiC;AACjE;AACW;AACK;AACH;AACK;AAChC;AACK;;AAEvB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,qBAAqB,EAAE;AAC5C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,sBAAsB,EAAE;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,qBAAqB,EAAE;AAC5C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,sBAAsB,EAAE;AAClD;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,gCAAgC,4DAAc;AAC9C,gCAAgC,4DAAc;AAC9C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sGAAwC,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,oBAAoB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,+BAA+B,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,6GAA+C,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mBAAmB,EAAE;AAC1C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uCAAuC,EAAE;AAC9D;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,6GAA+C,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,wCAAwC;AACzD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE,2BAA2B,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,oCAAoC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,oBAAoB,uCAAuC;AAC3D;AACA;AACA;AACA;AACA;AAC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","file":"modules-timekeeping-timekeeping-module-ngfactory~modules-website-website-module-ngfactory.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Platform, supportsPassiveEventListeners, PlatformModule } from '@angular/cdk/platform';\nimport { Directive, ElementRef, EventEmitter, Injectable, NgZone, Output, Input, NgModule, defineInjectable, inject } from '@angular/core';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n */\nvar /** @type {?} */ listenerOptions = supportsPassiveEventListeners() ? { passive: true } : false;\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nvar AutofillMonitor = /** @class */ (function () {\n    function AutofillMonitor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * Monitor for changes in the autofill state of the given input element.\n     * @param element The element to monitor.\n     * @return A stream of autofill state changes.\n     */\n    /**\n     * Monitor for changes in the autofill state of the given input element.\n     * @param {?} element The element to monitor.\n     * @return {?} A stream of autofill state changes.\n     */\n    AutofillMonitor.prototype.monitor = /**\n     * Monitor for changes in the autofill state of the given input element.\n     * @param {?} element The element to monitor.\n     * @return {?} A stream of autofill state changes.\n     */\n    function (element) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        var /** @type {?} */ info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        var /** @type {?} */ result = new Subject();\n        var /** @type {?} */ listener = function (event) {\n            if (event.animationName === 'cdk-text-field-autofill-start') {\n                element.classList.add('cdk-text-field-autofilled');\n                result.next({ target: /** @type {?} */ (event.target), isAutofilled: true });\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end') {\n                element.classList.remove('cdk-text-field-autofilled');\n                result.next({ target: /** @type {?} */ (event.target), isAutofilled: false });\n            }\n        };\n        this._ngZone.runOutsideAngular(function () {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: function () {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result.asObservable();\n    };\n    /**\n     * Stop monitoring the autofill state of the given input element.\n     * @param element The element to stop monitoring.\n     */\n    /**\n     * Stop monitoring the autofill state of the given input element.\n     * @param {?} element The element to stop monitoring.\n     * @return {?}\n     */\n    AutofillMonitor.prototype.stopMonitoring = /**\n     * Stop monitoring the autofill state of the given input element.\n     * @param {?} element The element to stop monitoring.\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AutofillMonitor.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._monitoredElements.forEach(function (_info, element) { return _this.stopMonitoring(element); });\n    };\n    AutofillMonitor.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    AutofillMonitor.ctorParameters = function () { return [\n        { type: Platform, },\n        { type: NgZone, },\n    ]; };\n    /** @nocollapse */ AutofillMonitor.ngInjectableDef = defineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(inject(Platform), inject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n    return AutofillMonitor;\n}());\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nvar CdkAutofill = /** @class */ (function () {\n    function CdkAutofill(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    CdkAutofill.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._autofillMonitor\n            .monitor(this._elementRef.nativeElement)\n            .subscribe(function (event) { return _this.cdkAutofill.emit(event); });\n    };\n    /**\n     * @return {?}\n     */\n    CdkAutofill.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    CdkAutofill.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkAutofill]',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkAutofill.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: AutofillMonitor, },\n    ]; };\n    CdkAutofill.propDecorators = {\n        \"cdkAutofill\": [{ type: Output },],\n    };\n    return CdkAutofill;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nvar CdkTextareaAutosize = /** @class */ (function () {\n    function CdkTextareaAutosize(_elementRef, _platform, _ngZone) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n    }\n    Object.defineProperty(CdkTextareaAutosize.prototype, \"minRows\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._minRows; },\n        set: /**\n         * Minimum amount of rows in the textarea.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._minRows = value;\n            this._setMinHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkTextareaAutosize.prototype, \"maxRows\", {\n        get: /**\n         * Maximum amount of rows in the textarea.\n         * @return {?}\n         */\n        function () { return this._maxRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._maxRows = value;\n            this._setMaxHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._setMinHeight = /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ minHeight = this.minRows && this._cachedLineHeight ?\n            this.minRows * this._cachedLineHeight + \"px\" : null;\n        if (minHeight) {\n            this._setTextareaStyle('minHeight', minHeight);\n        }\n    };\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._setMaxHeight = /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ maxHeight = this.maxRows && this._cachedLineHeight ?\n            this.maxRows * this._cachedLineHeight + \"px\" : null;\n        if (maxHeight) {\n            this._setTextareaStyle('maxHeight', maxHeight);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(function () {\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(_this._destroyed))\n                    .subscribe(function () { return _this.resizeToFitContent(true); });\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /**\n     * Sets a style property on the textarea element.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._setTextareaStyle = /**\n     * Sets a style property on the textarea element.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    function (property, value) {\n        var /** @type {?} */ textarea = /** @type {?} */ (this._elementRef.nativeElement);\n        textarea.style[property] = value;\n    };\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._cacheTextareaLineHeight = /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n    function () {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        var /** @type {?} */ textarea = /** @type {?} */ (this._elementRef.nativeElement);\n        // Use a clone element because we have to override some styles.\n        var /** @type {?} */ textareaClone = /** @type {?} */ (textarea.cloneNode(false));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden'; /** @type {?} */\n        ((textarea.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight; /** @type {?} */\n        ((textarea.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    };\n    /**\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    };\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype.resizeToFitContent = /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        var /** @type {?} */ textarea = /** @type {?} */ (this._elementRef.nativeElement);\n        var /** @type {?} */ value = textarea.value;\n        // Only resize of the value changed since these calculations can be expensive.\n        if (value === this._previousValue && !force) {\n            return;\n        }\n        var /** @type {?} */ placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        var /** @type {?} */ height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = height + \"px\";\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n        // We need to re-set the selection in order for it to scroll to the proper position.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                return requestAnimationFrame(function () {\n                    var selectionStart = textarea.selectionStart, selectionEnd = textarea.selectionEnd;\n                    // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n                    // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n                    // between the time we requested the animation frame and when it was executed.\n                    if (!_this._destroyed.isStopped) {\n                        textarea.setSelectionRange(selectionStart, selectionEnd);\n                    }\n                });\n            });\n        }\n        this._previousValue = value;\n    };\n    /**\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._noopInputHandler = /**\n     * @return {?}\n     */\n    function () {\n        // no-op handler that ensures we're running change detection on input events.\n    };\n    CdkTextareaAutosize.decorators = [\n        { type: Directive, args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    CdkTextareaAutosize.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Platform, },\n        { type: NgZone, },\n    ]; };\n    CdkTextareaAutosize.propDecorators = {\n        \"minRows\": [{ type: Input, args: ['cdkAutosizeMinRows',] },],\n        \"maxRows\": [{ type: Input, args: ['cdkAutosizeMaxRows',] },],\n    };\n    return CdkTextareaAutosize;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TextFieldModule = /** @class */ (function () {\n    function TextFieldModule() {\n    }\n    TextFieldModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    imports: [PlatformModule],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                },] },\n    ];\n    return TextFieldModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n//# sourceMappingURL=text-field.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Optional, SecurityContext, SkipSelf, NgModule, Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation, defineInjectable, inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { forkJoin, of, throwError } from 'rxjs';\nimport { catchError, finalize, map, share, tap, take } from 'rxjs/operators';\nimport { __extends } from 'tslib';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(\"Unable to find icon with the name \\\"\" + iconName + \"\\\"\");\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(\"The URL provided to MatIconRegistry was not trusted as a resource URL \" +\n        (\"via Angular's DomSanitizer. Attempted URL was \\\"\" + url + \"\\\".\"));\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(\"The literal provided to MatIconRegistry was not trusted as safe HTML by \" +\n        (\"Angular's DomSanitizer. Attempted literal was \\\"\" + literal + \"\\\".\"));\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nvar /**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nSvgIconConfig = /** @class */ (function () {\n    function SvgIconConfig(data) {\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!(/** @type {?} */ (data)).nodeName) {\n            this.svgElement = /** @type {?} */ (data);\n        }\n        else {\n            this.url = /** @type {?} */ (data);\n        }\n    }\n    return SvgIconConfig;\n}());\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nvar MatIconRegistry = /** @class */ (function () {\n    function MatIconRegistry(_httpClient, _sanitizer, document) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIcon = /**\n     * Registers an icon by URL in the default namespace.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    function (iconName, url) {\n        return this.addSvgIconInNamespace('', iconName, url);\n    };\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconLiteral = /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @return {?}\n     */\n    function (iconName, literal) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal);\n    };\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconInNamespace = /**\n     * Registers an icon by URL in the specified namespace.\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    function (namespace, iconName, url) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url));\n    };\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconLiteralInNamespace = /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @return {?}\n     */\n    function (namespace, iconName, literal) {\n        var /** @type {?} */ sanitizedLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        var /** @type {?} */ svgElement = this._createSvgElementForSingleIcon(sanitizedLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement));\n    };\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param {?} url\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconSet = /**\n     * Registers an icon set by URL in the default namespace.\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        return this.addSvgIconSetInNamespace('', url);\n    };\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param {?} literal SVG source of the icon set.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconSetLiteral = /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param {?} literal SVG source of the icon set.\n     * @return {?}\n     */\n    function (literal) {\n        return this.addSvgIconSetLiteralInNamespace('', literal);\n    };\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconSetInNamespace = /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @return {?}\n     */\n    function (namespace, url) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url));\n    };\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconSetLiteralInNamespace = /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @return {?}\n     */\n    function (namespace, literal) {\n        var /** @type {?} */ sanitizedLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        var /** @type {?} */ svgElement = this._svgElementFromString(sanitizedLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement));\n    };\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.registerFontClassAlias = /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {?}\n     */\n    function (alias, className) {\n        if (className === void 0) { className = alias; }\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    };\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    MatIconRegistry.prototype.classNameForFontAlias = /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    function (alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    };\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param {?} className\n     * @return {?}\n     */\n    MatIconRegistry.prototype.setDefaultFontSetClass = /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param {?} className\n     * @return {?}\n     */\n    function (className) {\n        this._defaultFontSetClass = className;\n        return this;\n    };\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.getDefaultFontSetClass = /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    function () {\n        return this._defaultFontSetClass;\n    };\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.getSvgIconFromUrl = /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    function (safeUrl) {\n        var _this = this;\n        var /** @type {?} */ url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        var /** @type {?} */ cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap(function (svg) { return _this._cachedIconsByUrl.set(/** @type {?} */ ((url)), svg); }), map(function (svg) { return cloneSvg(svg); }));\n    };\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.getNamedSvgIcon = /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    function (name, namespace) {\n        if (namespace === void 0) { namespace = ''; }\n        // Return (copy of) cached icon if possible.\n        var /** @type {?} */ key = iconKey(namespace, name);\n        var /** @type {?} */ config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        var /** @type {?} */ iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    };\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @param {?} config\n     * @return {?}\n     */\n    MatIconRegistry.prototype._getSvgFromConfig = /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap(function (svg) { return config.svgElement = svg; }), map(function (svg) { return cloneSvg(svg); }));\n        }\n    };\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MatIconRegistry.prototype._getSvgFromIconSetConfigs = /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    function (name, iconSetConfigs) {\n        var _this = this;\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        var /** @type {?} */ namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        var /** @type {?} */ iconSetFetchRequests = iconSetConfigs\n            .filter(function (iconSetConfig) { return !iconSetConfig.svgElement; })\n            .map(function (iconSetConfig) {\n            return _this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError(function (err) {\n                var /** @type {?} */ url = _this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                console.error(\"Loading icon set URL: \" + url + \" failed: \" + err.message);\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(function () {\n            var /** @type {?} */ foundIcon = _this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    };\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MatIconRegistry.prototype._extractIconWithNameFromAnySet = /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    function (iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (var /** @type {?} */ i = iconSetConfigs.length - 1; i >= 0; i--) {\n            var /** @type {?} */ config = iconSetConfigs[i];\n            if (config.svgElement) {\n                var /** @type {?} */ foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    MatIconRegistry.prototype._loadSvgIconFromConfig = /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        var _this = this;\n        return this._fetchUrl(config.url)\n            .pipe(map(function (svgText) { return _this._createSvgElementForSingleIcon(svgText); }));\n    };\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    MatIconRegistry.prototype._loadSvgIconSetFromConfig = /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        var _this = this;\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map(function (svgText) {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = _this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        }));\n    };\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @param {?} responseText\n     * @return {?}\n     */\n    MatIconRegistry.prototype._createSvgElementForSingleIcon = /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @param {?} responseText\n     * @return {?}\n     */\n    function (responseText) {\n        var /** @type {?} */ svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg);\n        return svg;\n    };\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @return {?}\n     */\n    MatIconRegistry.prototype._extractSvgIconFromSet = /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @return {?}\n     */\n    function (iconSet, iconName) {\n        var /** @type {?} */ iconSource = iconSet.querySelector('#' + iconName);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        var /** @type {?} */ iconElement = /** @type {?} */ (iconSource.cloneNode(true));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(/** @type {?} */ (iconElement));\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement));\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        var /** @type {?} */ svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg);\n    };\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @param {?} str\n     * @return {?}\n     */\n    MatIconRegistry.prototype._svgElementFromString = /**\n     * Creates a DOM element from the given SVG string.\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        var /** @type {?} */ div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        var /** @type {?} */ svg = /** @type {?} */ (div.querySelector('svg'));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    };\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @param {?} element\n     * @return {?}\n     */\n    MatIconRegistry.prototype._toSvgElement = /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ svg = this._svgElementFromString('<svg></svg>');\n        for (var /** @type {?} */ i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    };\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @param {?} svg\n     * @return {?}\n     */\n    MatIconRegistry.prototype._setSvgAttributes = /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @param {?} svg\n     * @return {?}\n     */\n    function (svg) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        return svg;\n    };\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    MatIconRegistry.prototype._fetchUrl = /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    function (safeUrl) {\n        var _this = this;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(\"Cannot fetch icon from URL \\\"\" + safeUrl + \"\\\".\");\n        }\n        var /** @type {?} */ url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        var /** @type {?} */ inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        var /** @type {?} */ req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize(function () { return _this._inProgressUrlFetches.delete(url); }), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    };\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {?}\n     */\n    MatIconRegistry.prototype._addSvgIconConfig = /**\n     * Registers an icon config by name in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {?}\n     */\n    function (namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    };\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {?}\n     */\n    MatIconRegistry.prototype._addSvgIconSetConfig = /**\n     * Registers an icon set config in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {?}\n     */\n    function (namespace, config) {\n        var /** @type {?} */ configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    };\n    MatIconRegistry.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    MatIconRegistry.ctorParameters = function () { return [\n        { type: HttpClient, decorators: [{ type: Optional },] },\n        { type: DomSanitizer, },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    /** @nocollapse */ MatIconRegistry.ngInjectableDef = defineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(inject(HttpClient, 8), inject(DomSanitizer), inject(DOCUMENT, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n    return MatIconRegistry;\n}());\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document);\n}\n/**\n * \\@docs-private\n */\nvar /** @type {?} */ ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), /** @type {?} */ (DOCUMENT)],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return /** @type {?} */ (svg.cloneNode(true));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatIconBase = /** @class */ (function () {\n    function MatIconBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatIconBase;\n}());\nvar /** @type {?} */ _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nvar MatIcon = /** @class */ (function (_super) {\n    __extends(MatIcon, _super);\n    function MatIcon(elementRef, _iconRegistry, ariaHidden) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._iconRegistry = _iconRegistry;\n        _this._inline = false;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n        return _this;\n    }\n    Object.defineProperty(MatIcon.prototype, \"inline\", {\n        get: /**\n         * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n         * the element the icon is contained in.\n         * @return {?}\n         */\n        function () {\n            return this._inline;\n        },\n        set: /**\n         * @param {?} inline\n         * @return {?}\n         */\n        function (inline) {\n            this._inline = coerceBooleanProperty(inline);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatIcon.prototype, \"fontSet\", {\n        get: /**\n         * Font set that the icon is a part of.\n         * @return {?}\n         */\n        function () { return this._fontSet; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._fontSet = this._cleanupFontValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatIcon.prototype, \"fontIcon\", {\n        get: /**\n         * Name of an icon within a font set.\n         * @return {?}\n         */\n        function () { return this._fontIcon; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._fontIcon = this._cleanupFontValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @param {?} iconName\n     * @return {?}\n     */\n    MatIcon.prototype._splitIconName = /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @param {?} iconName\n     * @return {?}\n     */\n    function (iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        var /** @type {?} */ parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return /** @type {?} */ (parts);\n            default: throw Error(\"Invalid icon name: \\\"\" + iconName + \"\\\"\");\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatIcon.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        if (changes[\"svgIcon\"]) {\n            if (this.svgIcon) {\n                var _a = this._splitIconName(this.svgIcon), namespace = _a[0], iconName = _a[1];\n                this._iconRegistry.getNamedSvgIcon(iconName, namespace).pipe(take(1)).subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err.message); });\n            }\n            else {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype._usingFontIcon = /**\n     * @return {?}\n     */\n    function () {\n        return !this.svgIcon;\n    };\n    /**\n     * @param {?} svg\n     * @return {?}\n     */\n    MatIcon.prototype._setSvgElement = /**\n     * @param {?} svg\n     * @return {?}\n     */\n    function (svg) {\n        this._clearSvgElement();\n        this._elementRef.nativeElement.appendChild(svg);\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype._clearSvgElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ layoutElement = this._elementRef.nativeElement;\n        var /** @type {?} */ childCount = layoutElement.childNodes.length;\n        // Remove existing child nodes and add the new SVG element. Note that we can't\n        // use innerHTML, because IE will throw if the element has a data binding.\n        for (var /** @type {?} */ i = 0; i < childCount; i++) {\n            layoutElement.removeChild(layoutElement.childNodes[i]);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype._updateFontIconClasses = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        var /** @type {?} */ elem = this._elementRef.nativeElement;\n        var /** @type {?} */ fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    };\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @param {?} value\n     * @return {?}\n     */\n    MatIcon.prototype._cleanupFontValue = /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    };\n    MatIcon.decorators = [\n        { type: Component, args: [{template: '<ng-content></ng-content>',\n                    selector: 'mat-icon',\n                    exportAs: 'matIcon',\n                    styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1,1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"],\n                    inputs: ['color'],\n                    host: {\n                        'role': 'img',\n                        'class': 'mat-icon',\n                        '[class.mat-icon-inline]': 'inline',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatIcon.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: MatIconRegistry, },\n        { type: undefined, decorators: [{ type: Attribute, args: ['aria-hidden',] },] },\n    ]; };\n    MatIcon.propDecorators = {\n        \"inline\": [{ type: Input },],\n        \"svgIcon\": [{ type: Input },],\n        \"fontSet\": [{ type: Input },],\n        \"fontIcon\": [{ type: Input },],\n    };\n    return MatIcon;\n}(_MatIconMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatIconModule = /** @class */ (function () {\n    function MatIconModule() {\n    }\n    MatIconModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                },] },\n    ];\n    return MatIconModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatIconModule, MatIconBase, _MatIconMixinBase, MatIcon, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, getMatIconFailedToSanitizeUrlError, getMatIconFailedToSanitizeLiteralError, MatIconRegistry, ICON_REGISTRY_PROVIDER_FACTORY, ICON_REGISTRY_PROVIDER };\n//# sourceMappingURL=icon.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Inject, Optional, Self, NgZone, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * \\@deletion-target 7.0.0 deprecate in favor of `cdkTextareaAutosize`.\n */\nvar MatTextareaAutosize = /** @class */ (function (_super) {\n    __extends(MatTextareaAutosize, _super);\n    function MatTextareaAutosize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MatTextareaAutosize.prototype, \"matAutosizeMinRows\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.minRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.minRows = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTextareaAutosize.prototype, \"matAutosizeMaxRows\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.maxRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.maxRows = value; },\n        enumerable: true,\n        configurable: true\n    });\n    MatTextareaAutosize.decorators = [\n        { type: Directive, args: [{\n                    selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                    exportAs: 'matTextareaAutosize',\n                    inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                    host: {\n                        'class': 'cdk-textarea-autosize mat-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTextareaAutosize.propDecorators = {\n        \"matAutosizeMinRows\": [{ type: Input },],\n        \"matAutosizeMaxRows\": [{ type: Input },],\n    };\n    return MatTextareaAutosize;\n}(CdkTextareaAutosize));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(\"Input type \\\"\" + type + \"\\\" isn't supported by matInput.\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nvar /** @type {?} */ MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nvar /** @type {?} */ MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nvar /** @type {?} */ nextUniqueId = 0;\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatInputBase = /** @class */ (function () {\n    function MatInputBase(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n    return MatInputBase;\n}());\nvar /** @type {?} */ _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nvar MatInput = /** @class */ (function (_super) {\n    __extends(MatInput, _super);\n    function MatInput(_elementRef, _platform, /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        var _this = _super.call(this, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) || this;\n        _this._elementRef = _elementRef;\n        _this._platform = _platform;\n        _this.ngControl = ngControl;\n        _this._autofillMonitor = _autofillMonitor;\n        _this._uid = \"mat-input-\" + nextUniqueId++;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        _this._isServer = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.autofilled = false;\n        _this._disabled = false;\n        _this._required = false;\n        _this._type = 'text';\n        _this._readonly = false;\n        _this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(function (t) { return getSupportedInputTypes().has(t); });\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        _this._inputValueAccessor = inputValueAccessor || _this._elementRef.nativeElement;\n        _this._previousNativeValue = _this.value;\n        // Force setter to be called in case id was not specified.\n        // Force setter to be called in case id was not specified.\n        _this.id = _this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(function () {\n                _elementRef.nativeElement.addEventListener('keyup', function (event) {\n                    var /** @type {?} */ el = /** @type {?} */ (event.target);\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        _this._isServer = !_this._platform.isBrowser;\n        return _this;\n    }\n    Object.defineProperty(MatInput.prototype, \"disabled\", {\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            if (this.ngControl && this.ngControl.disabled !== null) {\n                return this.ngControl.disabled;\n            }\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // Browsers may not fire the blur event if the input is disabled too quickly.\n            // Reset from here to ensure that the element doesn't become stuck.\n            if (this.focused) {\n                this.focused = false;\n                this.stateChanges.next();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"id\", {\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._id; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._id = value || this._uid; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"required\", {\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"type\", {\n        get: /**\n         * Input type of the element.\n         * @return {?}\n         */\n        function () { return this._type; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._type = value || 'text';\n            this._validateType();\n            // When using Angular inputs, developers are no longer able to set the properties on the native\n            // input element. To ensure that bindings for `type` work, we need to sync the setter\n            // with the native property. Textarea elements don't support the type property or attribute.\n            if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n                this._elementRef.nativeElement.type = this._type;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"value\", {\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._inputValueAccessor.value; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this.value) {\n                this._inputValueAccessor.value = value;\n                this.stateChanges.next();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"readonly\", {\n        get: /**\n         * Whether the element is readonly.\n         * @return {?}\n         */\n        function () { return this._readonly; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._readonly = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(function (event) {\n            _this.autofilled = event.isAutofilled;\n            _this.stateChanges.next();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n    function () {\n        this.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.stateChanges.complete();\n        this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    };\n    /** Focuses the input. */\n    /**\n     * Focuses the input.\n     * @return {?}\n     */\n    MatInput.prototype.focus = /**\n     * Focuses the input.\n     * @return {?}\n     */\n    function () { this._elementRef.nativeElement.focus(); };\n    /** Callback for the cases where the focused state of the input changes. */\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    MatInput.prototype._focusChanged = /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    function (isFocused) {\n        if (isFocused !== this.focused && !this.readonly) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype._onInput = /**\n     * @return {?}\n     */\n    function () {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    };\n    /** Does some manual dirty checking on the native input `value` property. */\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @return {?}\n     */\n    MatInput.prototype._dirtyCheckNativeValue = /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ newValue = this.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    };\n    /** Make sure the input is a supported type. */\n    /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n    MatInput.prototype._validateType = /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n    function () {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    };\n    /** Checks whether the input type is one of the types that are never empty. */\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @return {?}\n     */\n    MatInput.prototype._isNeverEmpty = /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @return {?}\n     */\n    function () {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    };\n    /** Checks whether the input is invalid based on the native validation. */\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @return {?}\n     */\n    MatInput.prototype._isBadInput = /**\n     * Checks whether the input is invalid based on the native validation.\n     * @return {?}\n     */\n    function () {\n        // The `validity` property won't be present on platform-server.\n        var /** @type {?} */ validity = (/** @type {?} */ (this._elementRef.nativeElement)).validity;\n        return validity && validity.badInput;\n    };\n    /** Determines if the component host is a textarea. */\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    MatInput.prototype._isTextarea = /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    function () {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    };\n    Object.defineProperty(MatInput.prototype, \"empty\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n                !this.autofilled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"shouldLabelFloat\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this.focused || !this.empty; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    MatInput.prototype.setDescribedByIds = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) { this._ariaDescribedby = ids.join(' '); };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatInput.prototype.onContainerClick = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () { this.focus(); };\n    MatInput.decorators = [\n        { type: Directive, args: [{\n                    selector: \"input[matInput], textarea[matInput]\",\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                             * @deletion-target 7.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                             */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        '[attr.placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[readonly]': 'readonly',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-required]': 'required.toString()',\n                        '(blur)': '_focusChanged(false)',\n                        '(focus)': '_focusChanged(true)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                },] },\n    ];\n    /** @nocollapse */\n    MatInput.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Platform, },\n        { type: NgControl, decorators: [{ type: Optional }, { type: Self },] },\n        { type: NgForm, decorators: [{ type: Optional },] },\n        { type: FormGroupDirective, decorators: [{ type: Optional },] },\n        { type: ErrorStateMatcher, },\n        { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] },] },\n        { type: AutofillMonitor, },\n        { type: NgZone, },\n    ]; };\n    MatInput.propDecorators = {\n        \"disabled\": [{ type: Input },],\n        \"id\": [{ type: Input },],\n        \"placeholder\": [{ type: Input },],\n        \"required\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"errorStateMatcher\": [{ type: Input },],\n        \"value\": [{ type: Input },],\n        \"readonly\": [{ type: Input },],\n    };\n    return MatInput;\n}(_MatInputMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatInputModule = /** @class */ (function () {\n    function MatInputModule() {\n    }\n    MatInputModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [MatInput, MatTextareaAutosize],\n                    imports: [\n                        CommonModule,\n                        TextFieldModule,\n                        MatFormFieldModule,\n                    ],\n                    exports: [\n                        TextFieldModule,\n                        MatFormFieldModule,\n                        MatInput,\n                        MatTextareaAutosize,\n                    ],\n                    providers: [ErrorStateMatcher],\n                },] },\n    ];\n    return MatInputModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatTextareaAutosize, MatInputBase, _MatInputMixinBase, MatInput, getMatInputUnsupportedTypeError, MatInputModule, MAT_INPUT_VALUE_ACCESSOR };\n//# sourceMappingURL=input.es5.js.map\n","<div class=\"mat-form-field-wrapper\"><div class=\"mat-form-field-flex\" #connectionContainer (click)=\"_control.onContainerClick && _control.onContainerClick($event)\"><div class=\"mat-form-field-prefix\" *ngIf=\"_prefixChildren.length\"><ng-content select=\"[matPrefix]\"></ng-content></div><div class=\"mat-form-field-infix\" #inputContainer><ng-content></ng-content><span class=\"mat-form-field-label-wrapper\"><label class=\"mat-form-field-label\" [attr.for]=\"_control.id\" [attr.aria-owns]=\"_control.id\" [class.mat-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-form-field-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\" #label *ngIf=\"_hasFloatingLabel()\" [ngSwitch]=\"_hasLabel()\"><ng-container *ngSwitchCase=\"false\"><ng-content select=\"mat-placeholder\"></ng-content>{{_control.placeholder}}</ng-container><ng-content select=\"mat-label\" *ngSwitchCase=\"true\"></ng-content><span class=\"mat-placeholder-required mat-form-field-required-marker\" aria-hidden=\"true\" *ngIf=\"!hideRequiredMarker && _control.required && !_control.disabled\">&nbsp;*</span></label></span></div><div class=\"mat-form-field-suffix\" *ngIf=\"_suffixChildren.length\"><ng-content select=\"[matSuffix]\"></ng-content></div></div><div class=\"mat-form-field-underline\" #underline *ngIf=\"appearance != 'outline'\"><span class=\"mat-form-field-ripple\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\"></span></div><ng-container *ngIf=\"appearance == 'outline'\"><div class=\"mat-form-field-outline\"><div class=\"mat-form-field-outline-start\" [style.width.px]=\"_outlineGapStart\"></div><div class=\"mat-form-field-outline-gap\" [style.width.px]=\"_outlineGapWidth\"></div><div class=\"mat-form-field-outline-end\"></div></div><div class=\"mat-form-field-outline mat-form-field-outline-thick\"><div class=\"mat-form-field-outline-start\" [style.width.px]=\"_outlineGapStart\"></div><div class=\"mat-form-field-outline-gap\" [style.width.px]=\"_outlineGapWidth\"></div><div class=\"mat-form-field-outline-end\"></div></div></ng-container><div class=\"mat-form-field-subscript-wrapper\" [ngSwitch]=\"_getDisplayedMessages()\"><div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\"><ng-content select=\"mat-error\"></ng-content></div><div class=\"mat-form-field-hint-wrapper\" *ngSwitchCase=\"'hint'\" [@transitionMessages]=\"_subscriptAnimationState\"><div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div><ng-content select=\"mat-hint:not([align='end'])\"></ng-content><div class=\"mat-form-field-hint-spacer\"></div><ng-content select=\"mat-hint[align='end']\"></ng-content></div></div></div>","<ng-content></ng-content>","﻿﻿import { IMessage } from './interfaces/imessage';\r\nimport { BriefUser } from './view-model/brief-user';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport module String {\r\n    export let format: any;\r\n}\r\n\r\nexport class BaseComponent {\r\n    isSaving = false;\r\n    isUpdate = false;\r\n    isShowForm = false;\r\n    isLoading = false;\r\n    isSearching = false;\r\n    message: IMessage;\r\n    totalRows = 0;\r\n    currentPage = 1;\r\n    pageSize = 20;\r\n    isSubmitted = false;\r\n    keyword = '';\r\n    isActiveSearch = null;\r\n    pageTitle = '';\r\n    errorMessage: string;\r\n    formErrors: any = {};\r\n    validationMessages: any = {};\r\n    isHasInsertPermission = false;\r\n    isHasUpdatePermission = false;\r\n    isHasDeletePermission = false;\r\n    isHasPrintPermission = false;\r\n    isHasApprovePermission = false;\r\n    isHasExportPermission = false;\r\n    isHasViewPermission = false;\r\n    isHasReportPermission = false;\r\n    currentUser: BriefUser;\r\n    subscribers: any = {};\r\n    downloading = false;\r\n    totalRows$: Observable<number>;\r\n    dateTimeValidFormat = [\r\n        'DD/MM/YYYY',\r\n        'DD/MM/YYYY HH:mm',\r\n        'DD/MM/YYYY HH:mm:ss',\r\n        'DD/MM/YYYY HH:mm Z',\r\n        'DD-MM-YYYY',\r\n        'DD-MM-YYYY HH:mm',\r\n        'DD-MM-YYYY HH:mm:ss',\r\n        'DD-MM-YYYY HH:mm Z',\r\n        // --------------------\r\n        'MM/DD/YYYY',\r\n        'MM/DD/YYYY HH:mm',\r\n        'MM/DD/YYYY HH:mm:ss',\r\n        'MM/DD/YYYY HH:mm Z',\r\n        'MM-DD-YYYY',\r\n        'MM-DD-YYYY HH:mm',\r\n        'MM-DD-YYYY HH:mm:ss',\r\n        'MM-DD-YYYY HH:mm Z',\r\n        // --------------------\r\n        'YYYY/MM/DD',\r\n        'YYYY/MM/DD HH:mm',\r\n        'YYYY/MM/DD HH:mm:ss',\r\n        'YYYY/MM/DD HH:mm Z',\r\n        'YYYY-MM-DD',\r\n        'YYYY-MM-DD HH:mm',\r\n        'YYYY-MM-DD HH:mm:ss',\r\n        'YYYY-MM-DD HH:mm Z',\r\n        // --------------------\r\n        'YYYY/DD/MM',\r\n        'YYYY/DD/MM HH:mm',\r\n        'YYYY/DD/MM HH:mm:ss',\r\n        'YYYY/DD/MM HH:mm Z',\r\n        'YYYY-DD-MM',\r\n        'YYYY-DD-MM HH:mm',\r\n        'YYYY-DD-MM HH:mm:ss',\r\n        'YYYY-DD-MM HH:mm Z',\r\n    ];\r\n\r\n    constructor() {\r\n    }\r\n\r\n    resetAfterSave() {\r\n        this.isSaving = false;\r\n        this.isSubmitted = false;\r\n    }\r\n\r\n    formatString(message: string, ...args: string[]) {\r\n        args.forEach((value, index) => {\r\n            const pattern = new RegExp(`\\\\{${index}\\\\}`, 'g');\r\n            message = message.replace(pattern, value);\r\n        });\r\n        return message;\r\n    }\r\n\r\n    // showWarningBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'warning');\r\n    // }\r\n    //\r\n    // showSuccessBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'success');\r\n    // }\r\n    //\r\n    // showDangerBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'error');\r\n    // }\r\n    //\r\n    // showInfoBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'info');\r\n    // }\r\n\r\n    // showAlertBox(title: string, message: string, type: any = 'success') {\r\n    //     setTimeout(() => {\r\n    //         swal({\r\n    //             title: title,\r\n    //             text: message,\r\n    //             type: type,\r\n    //             timer: 1500,\r\n    //             showConfirmButton: false\r\n    //         }).then(() => {\r\n    //         }, () => {\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    getListOrderNumber(currentPage, pageSize, index): number {\r\n        return (currentPage - 1) * pageSize + index + 1;\r\n    }\r\n\r\n    // getPermission(appService: AppService) {\r\n    //     // setTimeout(() => {\r\n    //     //     this.isHasViewPermission = appService.checkPermission(PERMISSION_VALUE_DI.view);\r\n    //     //     this.isHasInsertPermission = appService.checkPermission(PERMISSION_VALUE_DI.insert);\r\n    //     //     this.isHasUpdatePermission = appService.checkPermission(PERMISSION_VALUE_DI.update);\r\n    //     //     this.isHasDeletePermission = appService.checkPermission(PERMISSION_VALUE_DI.delete);\r\n    //     //     this.isHasExportPermission = appService.checkPermission(PERMISSION_VALUE_DI.export);\r\n    //     //     this.isHasPrintPermission = appService.checkPermission(PERMISSION_VALUE_DI.print);\r\n    //     //     this.isHasApprovePermission = appService.checkPermission(PERMISSION_VALUE_DI.approve);\r\n    //     //     this.isHasReportPermission = appService.checkPermission(PERMISSION_VALUE_DI.report);\r\n    //     // });\r\n    // }\r\n\r\n    // renderFormError(args: string[]) {\r\n    //     let object = {};\r\n    //     args.forEach((item) => {\r\n    //         object[item] = \"\";\r\n    //     });\r\n    //     return object;\r\n    // }\r\n    // private getFormErrors(form: FormGroup, formErrors: any, validationMessages: any): boolean {\r\n    //     let isValid = true;\r\n    //     debugger;\r\n    //     for (const field in formErrors) {\r\n    //         if (typeof(formErrors[field]) === \"object\" && field != null && form != null) {\r\n    //             let newFormGroup = <any>form.get(field) as FormGroup;\r\n    //             isValid = this.getFormErrors(newFormGroup, formErrors[field], validationMessages[field]);\r\n    //         } else {\r\n    //             if (field != null && form != null) {\r\n    //                 formErrors[field] = \"\";\r\n    //                 const control = form.get(field);\r\n    //                 if (control && (control.dirty || (this.isSubmitted && control.pristine)) && !control.valid) {\r\n    //                     const messages = validationMessages[field];\r\n    //                     for (const key in control.errors) {\r\n    //                         formErrors[field] += messages[key] + \" \";\r\n    //                         isValid = false;\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //\r\n    //     return isValid;\r\n    // }\r\n}\r\n","<div class=\"nh-date-wrapper\" #dateWrapper>\r\n    <!-- BEGIN: Link -->\r\n    <div *ngIf=\"type === 'link'\">\r\n        <a href=\"javascript://\" class=\"editable\" (click)=\"showDate(true)\">{{ selectedDate ? selectedDate : title\r\n            }}</a>\r\n        <i class=\"{{ removeIcon }} color-red cursor\" (click)=\"removeDate()\"\r\n           *ngIf=\"selectedDate && allowRemove\"></i>\r\n    </div>\r\n    <!-- END: Link -->\r\n    <!-- BEGIN: Material -->\r\n    <mat-form-field class=\"w100pc\" *ngIf=\"type === 'input' && material\">\r\n        <input type=\"text\" name=\"{{name}}\" placeholder=\"{{placeholder}}\"\r\n               #nhDateInputElement\r\n               matInput\r\n               [required]=\"required\"\r\n               [disabled]=\"disabled\"\r\n               [(ngModel)]=\"selectedDate\"\r\n               (focus)=\"showDate(true)\"/>\r\n    </mat-form-field>\r\n    <!-- END: Material -->\r\n    <!-- BEGIN: Input -->\r\n    <input type=\"text\" class=\"form-control\" name=\"{{name}}\" placeholder=\"{{placeholder}}\"\r\n           #nhDateInputElement\r\n           *ngIf=\"type === 'input' && !material\"\r\n           [disabled]=\"disabled\"\r\n           [(ngModel)]=\"selectedDate\"\r\n           (focus)=\"showDate(true)\"/>\r\n    <!-- END: Input -->\r\n    <!-- BEGIN: Input button -->\r\n    <div class=\"input-group\" *ngIf=\"type === 'inputButton'\">\r\n        <!--{{selectedDate}}-->\r\n        <input type=\"text\" class=\"form-control\" name=\"{{name}}\" placeholder=\"{{placeholder}}\"\r\n               #nhDateInputElement\r\n               [disabled]=\"disabled\"\r\n               [(ngModel)]=\"selectedDate\"\r\n               (focus)=\"showDate(true)\"/>\r\n        <span class=\"input-group-btn\">\r\n                    <button class=\"btn btn-default\" type=\"button\"\r\n                            *ngIf=\"selectedDate && allowRemove\"\r\n                            [disabled]=\"disabled\"\r\n                            (click)=\"removeDate()\">\r\n                        <i class=\"{{removeIcon}}\"></i>\r\n                    </button>\r\n                    <button class=\"btn btn-default\" type=\"button\"\r\n                            [disabled]=\"disabled\"\r\n                            (click)=\"showDate(true)\">\r\n                        <i class=\"{{icon}}\"></i>\r\n                    </button>\r\n                </span>\r\n    </div>\r\n    <!-- END: Input button -->\r\n    <!--<div class=\"nh-date-backdrop\" *ngIf=\"isShowDate\" (click)=\"closeDate()\"></div>-->\r\n    <div class=\"nh-date-container\"\r\n         [ngClass]=\"position\"\r\n         *ngIf=\"isShowDate\"\r\n         #dateContainer>\r\n        <div class=\"nh-date-header\">\r\n            <span class=\"btn-navigate previous\" (click)=\"back()\">\r\n                <i class=\"fa fa-arrow-left\"></i>\r\n            </span>\r\n            <button type=\"button\" class=\"btn-month animated\"\r\n                    [class.slideInLeft]=\"isNext\"\r\n                    [class.slideInRight]=\"isPrevious\"\r\n                    (click)=\"showMonth()\">\r\n                {{ months[selectedMonth] }}\r\n            </button>\r\n            <button [class.dropup]=\"isShowYearPicker\" type=\"button\" class=\"btn-year\" (click)=\"showYear()\">\r\n                {{ selectedYear }}<span class=\"caret\"></span>\r\n            </button>\r\n            <span class=\"btn-navigate next\" (click)=\"next()\">\r\n                <i class=\"fa fa-arrow-right\"></i>\r\n            </span>\r\n        </div><!-- END: .nh-date-header -->\r\n        <div class=\"nh-date-body\">\r\n            <ul class=\"nh-date-year-container\" *ngIf=\"isShowYearPicker\">\r\n                <li class=\"year-item\" *ngFor=\"let year of listYear\" [class.active]=\"year === selectedYear\"\r\n                    (click)=\"selectYear(year)\">{{ year }}\r\n                </li>\r\n            </ul><!-- END: year-container -->\r\n            <ul class=\"nh-date-month-container animated\" *ngIf=\"isShowMonthPicker\"\r\n                [class.zoomIn]=\"isZoomIn\"\r\n                [class.zoomOut]=\"isZoomOut\">\r\n                <li class=\"month-item\"\r\n                    *ngFor=\"let month of months; let i = index\"\r\n                    [class.active]=\"i === selectedMonth\"\r\n                    (click)=\"selectMonth(i)\">\r\n                    {{ month }}\r\n                </li>\r\n            </ul><!-- END: .month-container -->\r\n            <ul class=\"nh-date-name-day\" *ngIf=\"!isShowYearPicker && !isShowMonthPicker\">\r\n                <li class=\"nh-date-name-day-item\" *ngFor=\"let day of dayOfWeekShort\">{{ day }}</li>\r\n            </ul>\r\n            <!-- END: .nh-date-name-day -->\r\n            <div class=\"nh-day-container animated\" *ngIf=\"!isShowYearPicker && !isShowMonthPicker\"\r\n                 [class.zoomIn]=\"isZoomIn\">\r\n                <div class=\"nh-day-row\" *ngFor=\"let row of listRows\">\r\n                    <div class=\"nh-day-item\" *ngFor=\"let date of row\" (click)=\"selectDay(date)\"\r\n                         [class.active]=\"date.day === selectedDay && date.month === selectedMonth\"\r\n                         [class.out-month]=\"date.month !== selectedMonth\">{{ date.day }}\r\n                    </div>\r\n                </div><!-- END: .nh-day-row -->\r\n            </div>\r\n            <div class=\"nh-date-time-container\" *ngIf=\"showTime\">\r\n                <span class=\"time-label\">Thời gian:</span>\r\n                <span class=\"wrapper-time-input\">\r\n                            <span class=\"btn-action increase left dropup\" (click)=\"updateHours(true)\"><i\r\n                                class=\"caret\"></i></span>\r\n                            <span class=\"btn-action decrease left\" (click)=\"updateHours()\"><i class=\"caret\"></i></span>\r\n                            <input type=\"text\" class=\"hour\" name=\"hour\"\r\n                                   [(ngModel)]=\"hours\"\r\n                            />\r\n                        </span>\r\n                <span>:</span>\r\n                <span class=\"wrapper-time-input\">\r\n                            <input type=\"text\" class=\"minute\"\r\n                                   name=\"minutes\"\r\n                                   [(ngModel)]=\"minutes\"\r\n                            />\r\n                            <span class=\"btn-action increase right dropup\" (click)=\"updateMinutes(true)\"><i\r\n                                class=\"caret\"></i></span>\r\n                            <span class=\"btn-action decrease right\" (click)=\"updateMinutes()\"><i\r\n                                class=\"caret\"></i></span>\r\n                        </span>\r\n            </div><!-- END: .nh-date-time-container -->\r\n            <div class=\"nh-date-footer-container\" *ngIf=\"showTime\">\r\n                <button type=\"button\" class=\"button-accept\" (click)=\"acceptChange()\">\r\n                    <i class=\"fa fa-check\"></i>\r\n                    Chọn\r\n                </button>\r\n                <button type=\"button\" class=\"button-cancel\" (click)=\"cancel()\">\r\n                    <i class=\"fa fa-times\"></i>\r\n                    Hủy bỏ\r\n                </button>\r\n                <!--<button type=\"button\" class=\"btn btn-primary\">-->\r\n                <!--<i class=\"fa fa-calendar-o\"></i>-->\r\n                <!--Ngày hôm nay-->\r\n                <!--</button>-->\r\n            </div><!-- END: .nh-date-footer-container -->\r\n        </div><!-- END: .nh-date-body -->\r\n        <div class=\"nh-date-footer\"></div>\r\n    </div><!-- END: .nh-date-container -->\r\n</div>\r\n","/**\r\n * Created by HoangNH on 3/9/2017.\r\n */\r\nimport {\r\n    Component, Input, Output, EventEmitter, ElementRef, ViewChild,\r\n    forwardRef, AfterViewInit, ViewEncapsulation, HostListener, Renderer2\r\n} from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { NhDateLocale } from './nh-date.locale.config';\r\nimport 'moment/locale/vi';\r\n\r\nimport { NhDateUtils } from './nh-date.utils';\r\nimport { Moment } from 'moment';\r\n\r\nclass NhDay {\r\n    day: number;\r\n    month: number;\r\n    year: number;\r\n    hours: number;\r\n    minutes: number;\r\n\r\n    constructor(year: number, month: number, day: number, hours?: number, minutes?: number) {\r\n        this.day = day;\r\n        this.month = month;\r\n        this.year = year;\r\n        this.hours = hours ? hours : 0;\r\n        this.minutes = minutes ? minutes : 0;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'nh-date',\r\n    templateUrl: './nh-date.component.html',\r\n    styleUrls: ['./nh-date.scss'],\r\n    providers: [\r\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NhDateComponent), multi: true}\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NhDateComponent implements AfterViewInit, ControlValueAccessor {\r\n    @Input() themeColor: 'dark' | 'blue' | 'white' | 'green' = 'green';\r\n    @Input() disabled = false;\r\n    @Input() material = false;\r\n    @Input() type: 'input' | 'inputButton' | 'inline' | 'link' = 'input';\r\n    @Input() format = 'DD/MM/YYYY';\r\n    @Input() placeholder = 'Vui lòng chọn ngày tháng';\r\n    @Input() showTime = false;\r\n    @Input() allowRemove = true;\r\n    @Input() icon = 'fa fa-calendar';\r\n    @Input() removeIcon = 'fa fa-times';\r\n    @Input() position: 'above' | 'below' | 'left' | 'right' | 'auto' = 'auto';\r\n    @Input() mask: boolean | string;\r\n    @Output() selectedDateEvent = new EventEmitter();\r\n    @Output() removedDateEvent = new EventEmitter();\r\n\r\n    private _locale = 'vi';\r\n    private _months = NhDateLocale[this.locale].months;\r\n    private _dayOfWeek = NhDateLocale[this.locale].dayOfWeek;\r\n    private _dayOfWeekShort = NhDateLocale[this.locale].dayOfWeekShort;\r\n    private _value = moment();\r\n    private _separator = '/';\r\n    private _hours = '00';\r\n    private _minutes = '00';\r\n    private _mask = '';\r\n    private _caretPosition = 0;\r\n    private _KEY0 = 48;\r\n    private _KEY9 = 57;\r\n    private __KEY0 = 96;\r\n    private __KEY9 = 105;\r\n    private _CTRLKEY = 17;\r\n    private _DEL = 46;\r\n    private _ENTER = 13;\r\n    private _ESC = 27;\r\n    private _BACKSPACE = 8;\r\n    private _ARROWLEFT = 37;\r\n    private _ARROWUP = 38;\r\n    private _ARROWRIGHT = 39;\r\n    private _ARROWDOWN = 40;\r\n    private _TAB = 9;\r\n    private _F5 = 116;\r\n    private _AKEY = 65;\r\n    private _CKEY = 67;\r\n    private _VKEY = 86;\r\n    private _ZKEY = 90;\r\n    private _YKEY = 89;\r\n    private _ctrlDown = false;\r\n    // private _inputValue: string;\r\n    private _isShowDate = false;\r\n    private _inputDateTimeAllowedFormat = {\r\n        vi: [\r\n            'DD/MM/YYYY',\r\n            'DD/MM/YYYY HH:mm',\r\n            'DD/MM/YYYY HH:mm:ss',\r\n            'DD/MM/YYYY HH:mm',\r\n            'DD-MM-YYYY',\r\n            'DD-MM-YYYY HH:mm',\r\n            'DD-MM-YYYY HH:mm:ss',\r\n            'DD-MM-YYYY HH:mm',\r\n        ],\r\n        en: [\r\n            'MM/DD/YYYY',\r\n            'MM/DD/YYYY HH:mm',\r\n            'MM/DD/YYYY HH:mm:ss',\r\n            'MM/DD/YYYY HH:mm',\r\n            'MM-DD-YYYY',\r\n            'MM-DD-YYYY HH:mm',\r\n            'MM-DD-YYYY HH:mm:ss',\r\n            'MM-DD-YYYY HH:mm',\r\n        ]\r\n    };\r\n    private _originalValue: Moment;\r\n\r\n    private _numberRegex = /^[-+]?(\\d+|\\d+\\.\\d*|\\d*\\.\\d+)$/;\r\n\r\n    @ViewChild('dateContainer') dateContainer: ElementRef;\r\n    @ViewChild('dateWrapper') dateWrapper: ElementRef;\r\n    @ViewChild('nhDateInputElement') nhDateInputElement: ElementRef;\r\n\r\n    @Input()\r\n    set locale(value: string) {\r\n        this._locale = value;\r\n    }\r\n\r\n    get locale() {\r\n        return this._locale;\r\n    }\r\n\r\n    @Input()\r\n    set months(months: string[]) {\r\n        this._months = months;\r\n    }\r\n\r\n    get months() {\r\n        return this._months;\r\n    }\r\n\r\n    @Input()\r\n    set dayOfWeek(dayOfWeek: string[]) {\r\n        this._dayOfWeek = dayOfWeek;\r\n    }\r\n\r\n    get dayOfWeek() {\r\n        return this._dayOfWeek;\r\n    }\r\n\r\n    @Input()\r\n    set dayOfWeekShort(dayOfWeekShort: string[]) {\r\n        this._dayOfWeekShort = dayOfWeekShort;\r\n    }\r\n\r\n    get dayOfWeekShort() {\r\n        return this._dayOfWeekShort;\r\n    }\r\n\r\n    set hours(value: string) {\r\n        const hour = parseInt(value);\r\n        this._hours = !this._numberRegex.test(value) || hour > 23 || hour < 0 ? '00' : hour < 10 ? `0${hour}` : hour.toString();\r\n        this.value.hour(hour);\r\n        this.selectedDate = this.value.format(this.format);\r\n    }\r\n\r\n    get hours() {\r\n        return this._hours;\r\n    }\r\n\r\n    set minutes(value: string) {\r\n        const minute = parseInt(value);\r\n        this._minutes = !this._numberRegex.test(value) || minute > 59 || minute < 0 ? '00' : minute < 10 ? `0${minute}` : minute.toString();\r\n        this.value.minute(minute);\r\n        this.selectedDate = this.value.format(this.format);\r\n    }\r\n\r\n    get minutes() {\r\n        return this._minutes;\r\n    }\r\n\r\n    @Input()\r\n    set value(date: any) {\r\n        if (date) {\r\n            const isMoment = moment.isMoment(date);\r\n            if (isMoment) {\r\n                this._value = date;\r\n            } else {\r\n                this._value = moment(date, this._inputDateTimeAllowedFormat[this.locale]);\r\n            }\r\n        } else {\r\n            this._value = null;\r\n        }\r\n        this.setSelectedValue();\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    get caretPosition() {\r\n        return this._caretPosition;\r\n    }\r\n\r\n    set caretPosition(value: number) {\r\n        this._caretPosition = value;\r\n        NhDateUtils.setCaretPos(this.nhDateInputElement, this.caretPosition);\r\n    }\r\n\r\n    get isShowDate() {\r\n        return this._isShowDate;\r\n    }\r\n\r\n    set isShowDate(value: boolean) {\r\n        this._isShowDate = value;\r\n        if (value) {\r\n            this.calculatePosition();\r\n        }\r\n    }\r\n\r\n    name: string;\r\n    selectedMonth: number;\r\n    selectedYear: number;\r\n    selectedDay: number;\r\n    selectedDate = '';\r\n    isNext = false;\r\n    isPrevious = false;\r\n    isZoomIn = false;\r\n    isZoomOut = false;\r\n    isShowYearPicker = false;\r\n    isShowMonthPicker = false;\r\n    listRows = [];\r\n    // listMonth = [];\r\n    listYear = [];\r\n    listDay = [];\r\n\r\n    propagateChange: any = () => {\r\n    }\r\n\r\n    constructor(private el: ElementRef,\r\n                private renderer: Renderer2) {\r\n        this.name = (new Date().getTime() * Math.ceil(Math.random() * 1000)).toString();\r\n        const today = moment();\r\n        this.value.date(today.date());\r\n        this.value.month(today.month());\r\n        this.value.year(today.year());\r\n        this.value.hours(0);\r\n        this.value.minute(0);\r\n        this.selectedYear = today.year();\r\n        this.selectedMonth = today.month();\r\n        this.selectedDay = today.date();\r\n\r\n        // Init list year.\r\n        for (let i = 1950; i <= this.selectedYear + 20; i++) {\r\n            this.listYear.push(i);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initMask();\r\n    }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    clickOutSide(event) {\r\n        if (this.isShowDate === false) {\r\n            return;\r\n        }\r\n        if (!this.el.nativeElement.contains(event.target)) {\r\n            this.isShowDate = false;\r\n            if (this.mask) {\r\n                // this.selectedDate = this._inputValue;\r\n                this.emitDateValue(this.selectedDate);\r\n            }\r\n        }\r\n    }\r\n\r\n    showDate(isShow: boolean = false) {\r\n        this.isShowDate = isShow;\r\n        this.renderListDay();\r\n    }\r\n\r\n    removeDate() {\r\n        // this._inputValue = null;\r\n        this.selectedDate = null;\r\n        this.propagateChange(null);\r\n        this.removedDateEvent.emit();\r\n        if (this.mask) {\r\n            this.selectedDate = this._mask;\r\n        }\r\n    }\r\n\r\n    next() {\r\n        if (this.selectedMonth < 11) {\r\n            this.selectedMonth += 1;\r\n        } else {\r\n            this.selectedYear += 1;\r\n            this.selectedMonth = 0;\r\n        }\r\n        this.renderListDay();\r\n        this.setZoomInAnimate();\r\n    }\r\n\r\n    back() {\r\n        if (this.selectedMonth === 0) {\r\n            this.selectedMonth = 11;\r\n            this.selectedYear -= 1;\r\n        } else {\r\n            this.selectedMonth -= 1;\r\n        }\r\n        this.renderListDay();\r\n        this.setZoomInAnimate();\r\n    }\r\n\r\n    selectDay(date?: NhDay) {\r\n        this.value = moment().year(date.year).month(date.month).date(date.day).hours(0).minutes(0).second(0);\r\n        this.setSelectedValue();\r\n        if (!this.showTime) {\r\n            this.isShowDate = false;\r\n            this.emitDateValue();\r\n        }\r\n    }\r\n\r\n    acceptChange() {\r\n        this.isShowDate = false;\r\n        this.emitDateValue();\r\n    }\r\n\r\n    cancel() {\r\n        this.isShowDate = false;\r\n    }\r\n\r\n    selectMonth(month) {\r\n        this.isShowMonthPicker = false;\r\n        if (month !== this.selectedMonth) {\r\n            this.selectedMonth = month;\r\n            this.renderListDay();\r\n        }\r\n    }\r\n\r\n    selectYear(year) {\r\n        this.isShowYearPicker = false;\r\n        if (year !== this.selectedYear) {\r\n            this.selectedYear = year;\r\n            this.renderListDay();\r\n        }\r\n    }\r\n\r\n    showYear() {\r\n        this.isShowYearPicker = !this.isShowYearPicker;\r\n        this.isShowMonthPicker = false;\r\n        this.setZoomInAnimate();\r\n    }\r\n\r\n    showMonth() {\r\n        this.isShowYearPicker = false;\r\n        this.isShowMonthPicker = !this.isShowMonthPicker;\r\n        this.setZoomInAnimate();\r\n    }\r\n\r\n    updateHours(isIncrease: boolean = false) {\r\n        let hourNumber = parseInt(this.hours);\r\n        if (isIncrease) {\r\n            if (hourNumber === 23) {\r\n                hourNumber = 0;\r\n                this.hours = '01';\r\n            } else {\r\n                hourNumber += 1;\r\n            }\r\n        } else {\r\n            if (hourNumber === 0) {\r\n                hourNumber = 23;\r\n                this.hours = '23';\r\n            } else {\r\n                hourNumber -= 1;\r\n            }\r\n        }\r\n        this.hours = hourNumber.toString();\r\n    }\r\n\r\n    updateMinutes(isIncrease: boolean = false) {\r\n        let minuteNumber = parseInt(this.minutes);\r\n        if (isIncrease) {\r\n            if (minuteNumber === 59) {\r\n                minuteNumber = 0;\r\n                this.minutes = '00';\r\n                this.updateHours(true);\r\n            } else {\r\n                minuteNumber += 1;\r\n            }\r\n        } else {\r\n            if (minuteNumber === 0) {\r\n                minuteNumber = 59;\r\n                this.minutes = '59';\r\n                this.updateHours();\r\n            } else {\r\n                minuteNumber -= 1;\r\n            }\r\n        }\r\n        // this.minutes = minuteNumber > 9 ? minuteNumber.toString() : `0${minuteNumber.toString()}`;\r\n        this.minutes = minuteNumber.toString();\r\n    }\r\n\r\n    closeDate() {\r\n        this.isShowDate = false;\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    writeValue(value) {\r\n        this.value = value;\r\n        if (!value) {\r\n            this._originalValue = null;\r\n        } else {\r\n            if (moment.isMoment(value)) {\r\n                this._originalValue = value;\r\n            } else {\r\n                this._originalValue = moment(value, this._inputDateTimeAllowedFormat[this.locale]);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n\r\n    private getDayOfWeek(year: number, month: number, day: number): number {\r\n        const date = new Date(year, month, day);\r\n        return date.getDay();\r\n    }\r\n\r\n    private renderListDay() {\r\n        this.listDay = [];\r\n        this.listRows = [];\r\n        const dayOfWeek = this.getDayOfWeek(this.selectedYear, this.selectedMonth, 1);\r\n        const totalDay = moment(new Date(this.selectedYear, this.selectedMonth, this.selectedDay)).daysInMonth();\r\n        const firstDay = new Date(this.selectedYear, this.selectedMonth, 1);\r\n        const lastDay = new Date(this.selectedYear, this.selectedMonth, totalDay);\r\n        const lastDayOfWeek = this.getDayOfWeek(this.selectedYear, this.selectedMonth, totalDay);\r\n\r\n        for (let day = 1; day <= totalDay; day++) {\r\n            this.listDay.push(new NhDay(this.selectedYear, this.selectedMonth, day));\r\n        }\r\n\r\n        if (dayOfWeek > 0) {\r\n            const previousDay = moment(firstDay).add(-dayOfWeek, 'day');\r\n            const totalDayInPreviousMonth = previousDay.daysInMonth();\r\n            for (let day = totalDayInPreviousMonth; day >= previousDay.date(); day--) {\r\n                this.listDay.unshift(new NhDay(previousDay.year(), previousDay.month(), day));\r\n            }\r\n        }\r\n\r\n        if (lastDayOfWeek < 6) {\r\n            const nextDay = moment(lastDay).add(6 - lastDayOfWeek, 'day');\r\n            for (let day = 1; day <= nextDay.date(); day++) {\r\n                this.listDay.push(new NhDay(nextDay.year(), nextDay.month(), day));\r\n            }\r\n        }\r\n\r\n        const rows = Math.ceil(this.listDay.length / 7);\r\n        for (let row = 1; row <= rows; row++) {\r\n            const dates = [];\r\n            this.listDay.forEach((item, index) => {\r\n                if (index < (row * 7) && index >= ((row - 1) * 7)) {\r\n                    dates.push(item);\r\n                }\r\n            });\r\n\r\n            this.listRows[row] = dates;\r\n        }\r\n    }\r\n\r\n    private setZoomInAnimate() {\r\n        this.isZoomIn = true;\r\n        setTimeout(() => {\r\n            this.isZoomIn = false;\r\n        }, 800);\r\n    }\r\n\r\n    private formatDateByRegex(text: string, regex: RegExp): string {\r\n        return text.replace(regex, (match: any, p1: any, p2: any, p3: any) => {\r\n            let str = p1;\r\n            if (p2) {\r\n                str += '/' + p2;\r\n            }\r\n            if (p3) {\r\n                str += '/' + p3;\r\n            }\r\n            return str;\r\n        });\r\n    }\r\n\r\n    private formatDateTimeByRegex(text: string, regex: RegExp) {\r\n        return text.replace(regex, (match: any, p1: any, p2: any, p3: any, p4: any, p5: any) => {\r\n            let str = p1;\r\n            if (p2) {\r\n                str += '/' + p2;\r\n            }\r\n            if (p3) {\r\n                str += '/' + p3;\r\n            }\r\n            if (p4) {\r\n                str += ' ' + p4;\r\n            }\r\n            if (p5) {\r\n                str += ':' + p5;\r\n            }\r\n            return str;\r\n        });\r\n    }\r\n\r\n    private formatTimeByRegex(text: string, regex: RegExp) {\r\n        return text.replace(regex, (match: any, p1: any, p2: any) => {\r\n            let str = p1;\r\n            if (p2) {\r\n                str += ':' + p2;\r\n            }\r\n            return str;\r\n        });\r\n    }\r\n\r\n    private refreshUiByLocale() {\r\n        this.months = NhDateLocale[this.locale].months;\r\n        this.dayOfWeek = NhDateLocale[this.locale].dayOfWeek;\r\n        this.dayOfWeekShort = NhDateLocale[this.locale].dayOfWeekShort;\r\n    }\r\n\r\n    private emitDateValue(date?: string) {\r\n        if (this.mask && date === this._mask) {\r\n            return;\r\n        }\r\n\r\n        if (date) {\r\n            if (this._originalValue && date === this._originalValue.format(this.format)) {\r\n                return;\r\n            }\r\n\r\n            this.propagateChange(date);\r\n            this.selectedDateEvent.emit({\r\n                previousValue: this._originalValue ? this._originalValue.format(this.format) : null,\r\n                currentValue: date\r\n            });\r\n        } else {\r\n            if (this.value === this._originalValue) {\r\n                return;\r\n            }\r\n            this.propagateChange(this.value ? this.value.format(this.format) : null);\r\n            this.selectedDateEvent.emit({\r\n                previousValue: this._originalValue ? this._originalValue.format(this.format) : null,\r\n                currentValue: this.value ? this.value.format(this.format) : null\r\n            });\r\n        }\r\n    }\r\n\r\n    private setSelectedValue() {\r\n        if (this.value && this.value.isValid()) {\r\n            this.selectedDay = this.value.date();\r\n            this.selectedMonth = this.value.month();\r\n            this.selectedYear = this.value.year();\r\n            this.hours = this.value.hours().toString();\r\n            this.minutes = this.value.minutes().toString();\r\n            this.selectedDate = this.value.format(this.format);\r\n        } else {\r\n            if (this.mask) {\r\n                this.selectedDate = this._mask;\r\n            } else {\r\n                this.selectedDate = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    private generateRegex(mask: string) {\r\n        const reg = mask\r\n            .replace(/([\\[\\]\\/\\{\\}\\(\\)\\-\\.\\+]{1})/g, '\\\\$1')\r\n            .replace(/_/g, '{digit+}')\r\n            .replace(/([0-9]{1})/g, '{digit$1}')\r\n            .replace(/\\{digit([0-9]{1})\\}/g, '[0-$1_]{1}')\r\n            .replace(/\\{digit[\\+]\\}/g, '[0-9_]{1}');\r\n        return reg;\r\n    }\r\n\r\n    private calculatePosition() {\r\n        if (this.position === 'auto') {\r\n            setTimeout(() => {\r\n                const clientBound = this.el.nativeElement.getBoundingClientRect();\r\n                const windowInnerWidth = window.innerWidth;\r\n                const windowInnerHeight = window.innerHeight;\r\n                const dateContainerBound = this.dateContainer.nativeElement.getBoundingClientRect();\r\n                const leftDistance = windowInnerWidth - clientBound.left;\r\n                const botDistance = windowInnerHeight - clientBound.bottom;\r\n\r\n                if (leftDistance < dateContainerBound.width) {\r\n                    this.renderer.setStyle(this.dateContainer.nativeElement, 'left', `-${dateContainerBound.width - clientBound.width}px`);\r\n                }\r\n\r\n                if (botDistance < dateContainerBound.height) {\r\n                    this.renderer.setStyle(this.dateContainer.nativeElement, 'top', `-${dateContainerBound.height}px`);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private initMask() {\r\n        if (!this.mask) {\r\n            return;\r\n        }\r\n\r\n        if (typeof this.mask === 'boolean') {\r\n            this._mask = this.format\r\n                .replace(/Y{4}/g, '9999')\r\n                .replace(/Y{2}/g, '99')\r\n                .replace(/M{2}/g, '19')\r\n                .replace(/D{2}/g, '39')\r\n                .replace(/H{2}/g, '29')\r\n                .replace(/m{2}/g, '59')\r\n                .replace(/s{2}/g, '59');\r\n\r\n            this._mask = this._mask.replace(/[0-9]/g, '_');\r\n            // this._inputValue = this._mask;\r\n        } else if (typeof this.mask === 'string') {\r\n            this._mask = this.mask;\r\n            // this._inputValue = this._mask;\r\n            if (!NhDateUtils.isValidValue(this.mask, this.el.nativeElement.value)) {\r\n                this.el.nativeElement.value = this._mask.replace(/[0-9]/g, '_');\r\n                NhDateUtils.setCaretPos(this.el, 0);\r\n            }\r\n        }\r\n\r\n        if (typeof this._mask !== 'undefined' && !this.selectedDate) {\r\n            setTimeout(() => {\r\n                this.selectedDate = this._mask;\r\n            }, 1);\r\n        }\r\n\r\n        // Add event listener\r\n        this.renderer.listen(this.nhDateInputElement.nativeElement, 'keydown', (e) => {\r\n            const key = e.which;\r\n            let val = this.selectedDate;\r\n            if (((key >= this._KEY0 && key <= this._KEY9) || (key >= this.__KEY0 && key <= this.__KEY9))\r\n                || (key === this._BACKSPACE || key === this._DEL)) {\r\n                let pos = NhDateUtils.getCaretPos(this.nhDateInputElement);\r\n                let digit = (key !== this._BACKSPACE && key !== this._DEL) ?\r\n                    String.fromCharCode((this.__KEY0 <= key && key <= this.__KEY9) ? key - this._KEY0 : key) : '_';\r\n                if ((key === this._BACKSPACE || key === this._DEL) && pos) {\r\n                    pos -= 1;\r\n                    digit = '_';\r\n                }\r\n                while (/[^0-9_]/.test(this._mask.substr(pos, 1)) && pos < this._mask.length && pos > 0) {\r\n                    pos += (key === this._BACKSPACE || key === this._DEL) ? -1 : 1;\r\n                }\r\n                val = val.substr(0, pos) + digit + val.substr(pos + 1);\r\n                if ($.trim(val) === '') {\r\n                    val = this._mask.replace(/[0-9]/g, '_');\r\n                    return false;\r\n                } else {\r\n                    if (pos === this._mask.length) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                pos += (key === this._BACKSPACE || key === this._DEL) ? 0 : 1;\r\n                while (/[^0-9_]/.test(this._mask.substr(pos, 1)) && pos < this._mask.length && pos > 0) {\r\n                    pos += (key === this._BACKSPACE || key === this._DEL) ? -1 : 1;\r\n                }\r\n                if (NhDateUtils.isValidValue(this._mask, val)) {\r\n                    this.nhDateInputElement.nativeElement.value = val;\r\n                    this.selectedDate = val;\r\n                    this.caretPosition = pos;\r\n                } else if ($.trim(val) === '') {\r\n                    this.selectedDate = this._mask.replace(/[0-9]/g, '_');\r\n                } else {\r\n                    // input.trigger('error_input.xdsoft');\r\n                }\r\n            } else {\r\n                if (([this._AKEY, this._CKEY, this._VKEY, this._ZKEY, this._YKEY].indexOf(key) !== -1 && this._ctrlDown) ||\r\n                    [this._ESC, this._ARROWUP, this._ARROWDOWN, this._ARROWLEFT, this._ARROWRIGHT, this._F5,\r\n                        this._CTRLKEY, this._TAB, this._ENTER].indexOf(key) !== -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            return false;\r\n        });\r\n    }\r\n}\r\n","export const NhDateLocale = {\r\n    ar: { // Arabic\r\n        months: [\r\n            'كانون الثاني', 'شباط', 'آذار', 'نيسان', 'مايو', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'ن', 'ث', 'ع', 'خ', 'ج', 'س', 'ح'\r\n        ],\r\n        dayOfWeek: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت', 'الأحد']\r\n    },\r\n    ro: { // Romanian\r\n        months: [\r\n            'Ianuarie', 'Februarie', 'Martie', 'Aprilie', 'Mai', 'Iunie', 'Iulie', 'August', 'Septembrie', 'Octombrie', 'Noiembrie', 'Decembrie'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Du', 'Lu', 'Ma', 'Mi', 'Jo', 'Vi', 'Sâ'\r\n        ],\r\n        dayOfWeek: ['Duminică', 'Luni', 'Marţi', 'Miercuri', 'Joi', 'Vineri', 'Sâmbătă']\r\n    },\r\n    id: { // Indonesian\r\n        months: [\r\n            'Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Min', 'Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab'\r\n        ],\r\n        dayOfWeek: ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu']\r\n    },\r\n    is: { // Icelandic\r\n        months: [\r\n            'Janúar', 'Febrúar', 'Mars', 'Apríl', 'Maí', 'Júní', 'Júlí', 'Ágúst', 'September', 'Október', 'Nóvember', 'Desember'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Sun', 'Mán', 'Þrið', 'Mið', 'Fim', 'Fös', 'Lau'\r\n        ],\r\n        dayOfWeek: ['Sunnudagur', 'Mánudagur', 'Þriðjudagur', 'Miðvikudagur', 'Fimmtudagur', 'Föstudagur', 'Laugardagur']\r\n    },\r\n    bg: { // Bulgarian\r\n        months: [\r\n            'Януари', 'Февруари', 'Март', 'Април', 'Май', 'Юни', 'Юли', 'Август', 'Септември', 'Октомври', 'Ноември', 'Декември'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Нд', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'\r\n        ],\r\n        dayOfWeek: ['Неделя', 'Понеделник', 'Вторник', 'Сряда', 'Четвъртък', 'Петък', 'Събота']\r\n    },\r\n    fa: { // Persian/Farsi\r\n        months: [\r\n            'فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه', 'شنبه'\r\n        ],\r\n        dayOfWeek: ['یک‌شنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه', 'شنبه', 'یک‌شنبه']\r\n    },\r\n    ru: { // Russian\r\n        months: [\r\n            'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'\r\n        ],\r\n        dayOfWeek: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота']\r\n    },\r\n    uk: { // Ukrainian\r\n        months: [\r\n            'Січень', 'Лютий', 'Березень', 'Квітень', 'Травень', 'Червень', 'Липень', 'Серпень', 'Вересень', 'Жовтень', 'Листопад', 'Грудень'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Ндл', 'Пнд', 'Втр', 'Срд', 'Чтв', 'Птн', 'Сбт'\r\n        ],\r\n        dayOfWeek: ['Неділя', 'Понеділок', 'Вівторок', 'Середа', 'Четвер', 'П\\'ятниця', 'Субота']\r\n    },\r\n    en: { // English\r\n        months: [\r\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\r\n        ],\r\n        dayOfWeek: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n    },\r\n    el: { // Ελληνικά\r\n        months: [\r\n            'Ιανουάριος', 'Φεβρουάριος', 'Μάρτιος', 'Απρίλιος', 'Μάιος', 'Ιούνιος', 'Ιούλιος', 'Αύγουστος', 'Σεπτέμβριος', 'Οκτώβριος', 'Νοέμβριος', 'Δεκέμβριος'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Κυρ', 'Δευ', 'Τρι', 'Τετ', 'Πεμ', 'Παρ', 'Σαβ'\r\n        ],\r\n        dayOfWeek: ['Κυριακή', 'Δευτέρα', 'Τρίτη', 'Τετάρτη', 'Πέμπτη', 'Παρασκευή', 'Σάββατο']\r\n    },\r\n    de: { // German\r\n        months: [\r\n            'Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'\r\n        ],\r\n        dayOfWeek: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag']\r\n    },\r\n    nl: { // Dutch\r\n        months: [\r\n            'januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'\r\n        ],\r\n        dayOfWeek: ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag']\r\n    },\r\n    tr: { // Turkish\r\n        months: [\r\n            'Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Paz', 'Pts', 'Sal', 'Çar', 'Per', 'Cum', 'Cts'\r\n        ],\r\n        dayOfWeek: ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi']\r\n    },\r\n    fr: { // French\r\n        months: [\r\n            'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'\r\n        ],\r\n        dayOfWeek: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi']\r\n    },\r\n    es: { // Spanish\r\n        months: [\r\n            'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'\r\n        ],\r\n        dayOfWeek: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado']\r\n    },\r\n    th: { // Thai\r\n        months: [\r\n            'มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'อา.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.'\r\n        ],\r\n        dayOfWeek: ['อาทิตย์', 'จันทร์', 'อังคาร', 'พุธ', 'พฤหัส', 'ศุกร์', 'เสาร์', 'อาทิตย์']\r\n    },\r\n    pl: { // Polish\r\n        months: [\r\n            'styczeń', 'luty', 'marzec', 'kwiecień', 'maj', 'czerwiec', 'lipiec', 'sierpień', 'wrzesień', 'październik', 'listopad', 'grudzień'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'nd', 'pn', 'wt', 'śr', 'cz', 'pt', 'sb'\r\n        ],\r\n        dayOfWeek: ['niedziela', 'poniedziałek', 'wtorek', 'środa', 'czwartek', 'piątek', 'sobota']\r\n    },\r\n    pt: { // Portuguese\r\n        months: [\r\n            'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'\r\n        ],\r\n        dayOfWeek: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado']\r\n    },\r\n    ch: { // Simplified Chinese\r\n        months: [\r\n            '一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'\r\n        ],\r\n        dayOfWeekShort: [\r\n            '日', '一', '二', '三', '四', '五', '六'\r\n        ]\r\n    },\r\n    se: { // Swedish\r\n        months: [\r\n            'Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Sön', 'Mån', 'Tis', 'Ons', 'Tor', 'Fre', 'Lör'\r\n        ]\r\n    },\r\n    km: { // Khmer (ភាសាខ្មែរ)\r\n        months: [\r\n            'មករា​', 'កុម្ភៈ', 'មិនា​', 'មេសា​', 'ឧសភា​', 'មិថុនា​', 'កក្កដា​', 'សីហា​', 'កញ្ញា​', 'តុលា​', 'វិច្ឆិកា', 'ធ្នូ​'\r\n        ],\r\n        dayOfWeekShort: ['អាទិ​', 'ច័ន្ទ​', 'អង្គារ​', 'ពុធ​', 'ព្រហ​​', 'សុក្រ​', 'សៅរ៍'],\r\n        dayOfWeek: ['អាទិត្យ​', 'ច័ន្ទ​', 'អង្គារ​', 'ពុធ​', 'ព្រហស្បតិ៍​', 'សុក្រ​', 'សៅរ៍']\r\n    },\r\n    kr: { // Korean\r\n        months: [\r\n            '1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'\r\n        ],\r\n        dayOfWeekShort: [\r\n            '일', '월', '화', '수', '목', '금', '토'\r\n        ],\r\n        dayOfWeek: ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일']\r\n    },\r\n    it: { // Italian\r\n        months: [\r\n            'Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'\r\n        ],\r\n        dayOfWeek: ['Domenica', 'Lunedì', 'Martedì', 'Mercoledì', 'Giovedì', 'Venerdì', 'Sabato']\r\n    },\r\n    da: { // Dansk\r\n        months: [\r\n            'Januar', 'Februar', 'Marts', 'April', 'Maj', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'December'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Søn', 'Man', 'Tir', 'Ons', 'Tor', 'Fre', 'Lør'\r\n        ],\r\n        dayOfWeek: ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag']\r\n    },\r\n    no: { // Norwegian\r\n        months: [\r\n            'Januar', 'Februar', 'Mars', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Desember'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Søn', 'Man', 'Tir', 'Ons', 'Tor', 'Fre', 'Lør'\r\n        ],\r\n        dayOfWeek: ['Søndag', 'Mandag', 'Tirsdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lørdag']\r\n    },\r\n    ja: { // Japanese\r\n        months: [\r\n            '1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'\r\n        ],\r\n        dayOfWeekShort: [\r\n            '日', '月', '火', '水', '木', '金', '土'\r\n        ],\r\n        dayOfWeek: ['日曜', '月曜', '火曜', '水曜', '木曜', '金曜', '土曜']\r\n    },\r\n    vi: { // Vietnamese\r\n        months: [\r\n            'Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'\r\n        ],\r\n        dayOfWeek: ['Chủ nhật', 'Thứ hai', 'Thứ ba', 'Thứ tư', 'Thứ năm', 'Thứ sáu', 'Thứ bảy']\r\n    },\r\n    sl: { // Slovenščina\r\n        months: [\r\n            'Januar', 'Februar', 'Marec', 'April', 'Maj', 'Junij', 'Julij', 'Avgust', 'September', 'Oktober', 'November', 'December'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Ned', 'Pon', 'Tor', 'Sre', 'Čet', 'Pet', 'Sob'\r\n        ],\r\n        dayOfWeek: ['Nedelja', 'Ponedeljek', 'Torek', 'Sreda', 'Četrtek', 'Petek', 'Sobota']\r\n    },\r\n    cs: { // Čeština\r\n        months: [\r\n            'Leden', 'Únor', 'Březen', 'Duben', 'Květen', 'Červen', 'Červenec', 'Srpen', 'Září', 'Říjen', 'Listopad', 'Prosinec'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Ne', 'Po', 'Út', 'St', 'Čt', 'Pá', 'So'\r\n        ]\r\n    },\r\n    hu: { // Hungarian\r\n        months: [\r\n            'Január', 'Február', 'Március', 'Április', 'Május', 'Június', 'Július', 'Augusztus', 'Szeptember', 'Október', 'November', 'December'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Va', 'Hé', 'Ke', 'Sze', 'Cs', 'Pé', 'Szo'\r\n        ],\r\n        dayOfWeek: ['vasárnap', 'hétfő', 'kedd', 'szerda', 'csütörtök', 'péntek', 'szombat']\r\n    },\r\n    az: { // Azerbaijanian (Azeri)\r\n        months: [\r\n            'Yanvar', 'Fevral', 'Mart', 'Aprel', 'May', 'Iyun', 'Iyul', 'Avqust', 'Sentyabr', 'Oktyabr', 'Noyabr', 'Dekabr'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'B', 'Be', 'Ça', 'Ç', 'Ca', 'C', 'Ş'\r\n        ],\r\n        dayOfWeek: ['Bazar', 'Bazar ertəsi', 'Çərşənbə axşamı', 'Çərşənbə', 'Cümə axşamı', 'Cümə', 'Şənbə']\r\n    },\r\n    bs: { // Bosanski\r\n        months: [\r\n            'Januar', 'Februar', 'Mart', 'April', 'Maj', 'Jun', 'Jul', 'Avgust', 'Septembar', 'Oktobar', 'Novembar', 'Decembar'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Ned', 'Pon', 'Uto', 'Sri', 'Čet', 'Pet', 'Sub'\r\n        ],\r\n        dayOfWeek: ['Nedjelja', 'Ponedjeljak', 'Utorak', 'Srijeda', 'Četvrtak', 'Petak', 'Subota']\r\n    },\r\n    ca: { // Català\r\n        months: [\r\n            'Gener', 'Febrer', 'Març', 'Abril', 'Maig', 'Juny', 'Juliol', 'Agost', 'Setembre', 'Octubre', 'Novembre', 'Desembre'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Dg', 'Dl', 'Dt', 'Dc', 'Dj', 'Dv', 'Ds'\r\n        ],\r\n        dayOfWeek: ['Diumenge', 'Dilluns', 'Dimarts', 'Dimecres', 'Dijous', 'Divendres', 'Dissabte']\r\n    },\r\n    'en-GB': { // English (British)\r\n        months: [\r\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\r\n        ],\r\n        dayOfWeek: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n    },\r\n    et: { // \"Eesti\"\r\n        months: [\r\n            'Jaanuar', 'Veebruar', 'Märts', 'Aprill', 'Mai', 'Juuni', 'Juuli', 'August', 'September', 'Oktoober', 'November', 'Detsember'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'P', 'E', 'T', 'K', 'N', 'R', 'L'\r\n        ],\r\n        dayOfWeek: ['Pühapäev', 'Esmaspäev', 'Teisipäev', 'Kolmapäev', 'Neljapäev', 'Reede', 'Laupäev']\r\n    },\r\n    eu: { // Euskara\r\n        months: [\r\n            'Urtarrila', 'Otsaila', 'Martxoa', 'Apirila', 'Maiatza', 'Ekaina', 'Uztaila', 'Abuztua', 'Iraila', 'Urria', 'Azaroa', 'Abendua'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Ig.', 'Al.', 'Ar.', 'Az.', 'Og.', 'Or.', 'La.'\r\n        ],\r\n        dayOfWeek: ['Igandea', 'Astelehena', 'Asteartea', 'Asteazkena', 'Osteguna', 'Ostirala', 'Larunbata']\r\n    },\r\n    fi: { // Finnish (Suomi)\r\n        months: [\r\n            'Tammikuu', 'Helmikuu', 'Maaliskuu', 'Huhtikuu', 'Toukokuu', 'Kesäkuu', 'Heinäkuu', 'Elokuu', 'Syyskuu', 'Lokakuu', 'Marraskuu', 'Joulukuu'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Su', 'Ma', 'Ti', 'Ke', 'To', 'Pe', 'La'\r\n        ],\r\n        dayOfWeek: ['sunnuntai', 'maanantai', 'tiistai', 'keskiviikko', 'torstai', 'perjantai', 'lauantai']\r\n    },\r\n    gl: { // Galego\r\n        months: [\r\n            'Xan', 'Feb', 'Maz', 'Abr', 'Mai', 'Xun', 'Xul', 'Ago', 'Set', 'Out', 'Nov', 'Dec'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Dom', 'Lun', 'Mar', 'Mer', 'Xov', 'Ven', 'Sab'\r\n        ],\r\n        dayOfWeek: ['Domingo', 'Luns', 'Martes', 'Mércores', 'Xoves', 'Venres', 'Sábado']\r\n    },\r\n    hr: { // Hrvatski\r\n        months: [\r\n            'Siječanj', 'Veljača', 'Ožujak', 'Travanj', 'Svibanj', 'Lipanj', 'Srpanj', 'Kolovoz', 'Rujan', 'Listopad', 'Studeni', 'Prosinac'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Ned', 'Pon', 'Uto', 'Sri', 'Čet', 'Pet', 'Sub'\r\n        ],\r\n        dayOfWeek: ['Nedjelja', 'Ponedjeljak', 'Utorak', 'Srijeda', 'Četvrtak', 'Petak', 'Subota']\r\n    },\r\n    ko: { // Korean (한국어)\r\n        months: [\r\n            '1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'\r\n        ],\r\n        dayOfWeekShort: [\r\n            '일', '월', '화', '수', '목', '금', '토'\r\n        ],\r\n        dayOfWeek: ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일']\r\n    },\r\n    lt: { // Lithuanian (lietuvių)\r\n        months: [\r\n            'Sausio', 'Vasario', 'Kovo', 'Balandžio', 'Gegužės', 'Birželio', 'Liepos', 'Rugpjūčio', 'Rugsėjo', 'Spalio', 'Lapkričio', 'Gruodžio'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Sek', 'Pir', 'Ant', 'Tre', 'Ket', 'Pen', 'Šeš'\r\n        ],\r\n        dayOfWeek: ['Sekmadienis', 'Pirmadienis', 'Antradienis', 'Trečiadienis', 'Ketvirtadienis', 'Penktadienis', 'Šeštadienis']\r\n    },\r\n    lv: { // Latvian (Latviešu)\r\n        months: [\r\n            'Janvāris', 'Februāris', 'Marts', 'Aprīlis ', 'Maijs', 'Jūnijs', 'Jūlijs', 'Augusts', 'Septembris', 'Oktobris', 'Novembris', 'Decembris'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Sv', 'Pr', 'Ot', 'Tr', 'Ct', 'Pk', 'St'\r\n        ],\r\n        dayOfWeek: ['Svētdiena', 'Pirmdiena', 'Otrdiena', 'Trešdiena', 'Ceturtdiena', 'Piektdiena', 'Sestdiena']\r\n    },\r\n    mk: { // Macedonian (Македонски)\r\n        months: [\r\n            'јануари', 'февруари', 'март', 'април', 'мај', 'јуни', 'јули', 'август', 'септември', 'октомври', 'ноември', 'декември'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'нед', 'пон', 'вто', 'сре', 'чет', 'пет', 'саб'\r\n        ],\r\n        dayOfWeek: ['Недела', 'Понеделник', 'Вторник', 'Среда', 'Четврток', 'Петок', 'Сабота']\r\n    },\r\n    mn: { // Mongolian (Монгол)\r\n        months: [\r\n            '1-р сар', '2-р сар', '3-р сар', '4-р сар', '5-р сар', '6-р сар', '7-р сар', '8-р сар', '9-р сар', '10-р сар', '11-р сар', '12-р сар'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Дав', 'Мяг', 'Лха', 'Пүр', 'Бсн', 'Бям', 'Ням'\r\n        ],\r\n        dayOfWeek: ['Даваа', 'Мягмар', 'Лхагва', 'Пүрэв', 'Баасан', 'Бямба', 'Ням']\r\n    },\r\n    'pt-BR': { // Português(Brasil)\r\n        months: [\r\n            'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'\r\n        ],\r\n        dayOfWeek: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado']\r\n    },\r\n    sk: { // Slovenčina\r\n        months: [\r\n            'Január', 'Február', 'Marec', 'Apríl', 'Máj', 'Jún', 'Júl', 'August', 'September', 'Október', 'November', 'December'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Ne', 'Po', 'Ut', 'St', 'Št', 'Pi', 'So'\r\n        ],\r\n        dayOfWeek: ['Nedeľa', 'Pondelok', 'Utorok', 'Streda', 'Štvrtok', 'Piatok', 'Sobota']\r\n    },\r\n    sq: { // Albanian (Shqip)\r\n        months: [\r\n            'Janar', 'Shkurt', 'Mars', 'Prill', 'Maj', 'Qershor', 'Korrik', 'Gusht', 'Shtator', 'Tetor', 'Nëntor', 'Dhjetor'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Die', 'Hën', 'Mar', 'Mër', 'Enj', 'Pre', 'Shtu'\r\n        ],\r\n        dayOfWeek: ['E Diel', 'E Hënë', 'E Martē', 'E Mërkurë', 'E Enjte', 'E Premte', 'E Shtunë']\r\n    },\r\n    'sr-YU': { // Serbian (Srpski)\r\n        months: [\r\n            'Januar', 'Februar', 'Mart', 'April', 'Maj', 'Jun', 'Jul', 'Avgust', 'Septembar', 'Oktobar', 'Novembar', 'Decembar'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Ned', 'Pon', 'Uto', 'Sre', 'čet', 'Pet', 'Sub'\r\n        ],\r\n        dayOfWeek: ['Nedelja', 'Ponedeljak', 'Utorak', 'Sreda', 'Četvrtak', 'Petak', 'Subota']\r\n    },\r\n    sr: { // Serbian Cyrillic (Српски)\r\n        months: [\r\n            'јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'нед', 'пон', 'уто', 'сре', 'чет', 'пет', 'суб'\r\n        ],\r\n        dayOfWeek: ['Недеља', 'Понедељак', 'Уторак', 'Среда', 'Четвртак', 'Петак', 'Субота']\r\n    },\r\n    sv: { // Svenska\r\n        months: [\r\n            'Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Sön', 'Mån', 'Tis', 'Ons', 'Tor', 'Fre', 'Lör'\r\n        ],\r\n        dayOfWeek: ['Söndag', 'Måndag', 'Tisdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lördag']\r\n    },\r\n    'zh-TW': { // Traditional Chinese (繁體中文)\r\n        months: [\r\n            '一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'\r\n        ],\r\n        dayOfWeekShort: [\r\n            '日', '一', '二', '三', '四', '五', '六'\r\n        ],\r\n        dayOfWeek: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\r\n    },\r\n    zh: { // Simplified Chinese (简体中文)\r\n        months: [\r\n            '一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'\r\n        ],\r\n        dayOfWeekShort: [\r\n            '日', '一', '二', '三', '四', '五', '六'\r\n        ],\r\n        dayOfWeek: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\r\n    },\r\n    ug: { // Uyghur(ئۇيغۇرچە)\r\n        months: [\r\n            '1-ئاي', '2-ئاي', '3-ئاي', '4-ئاي', '5-ئاي', '6-ئاي', '7-ئاي', '8-ئاي', '9-ئاي', '10-ئاي', '11-ئاي', '12-ئاي'\r\n        ],\r\n        dayOfWeek: [\r\n            'يەكشەنبە', 'دۈشەنبە', 'سەيشەنبە', 'چارشەنبە', 'پەيشەنبە', 'جۈمە', 'شەنبە'\r\n        ]\r\n    },\r\n    he: { // Hebrew (עברית)\r\n        months: [\r\n            'ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'א\\'', 'ב\\'', 'ג\\'', 'ד\\'', 'ה\\'', 'ו\\'', 'שבת'\r\n        ],\r\n        dayOfWeek: ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון']\r\n    },\r\n    hy: { // Armenian\r\n        months: [\r\n            'Հունվար', 'Փետրվար', 'Մարտ', 'Ապրիլ', 'Մայիս', 'Հունիս', 'Հուլիս', 'Օգոստոս', 'Սեպտեմբեր', 'Հոկտեմբեր', 'Նոյեմբեր', 'Դեկտեմբեր'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Կի', 'Երկ', 'Երք', 'Չոր', 'Հնգ', 'Ուրբ', 'Շբթ'\r\n        ],\r\n        dayOfWeek: ['Կիրակի', 'Երկուշաբթի', 'Երեքշաբթի', 'Չորեքշաբթի', 'Հինգշաբթի', 'Ուրբաթ', 'Շաբաթ']\r\n    },\r\n    kg: { // Kyrgyz\r\n        months: [\r\n            'Үчтүн айы', 'Бирдин айы', 'Жалган Куран', 'Чын Куран', 'Бугу', 'Кулжа', 'Теке', 'Баш Оона', 'Аяк Оона', 'Тогуздун айы', 'Жетинин айы', 'Бештин айы'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Жек', 'Дүй', 'Шей', 'Шар', 'Бей', 'Жум', 'Ише'\r\n        ],\r\n        dayOfWeek: [\r\n            'Жекшемб', 'Дүйшөмб', 'Шейшемб', 'Шаршемб', 'Бейшемби', 'Жума', 'Ишенб'\r\n        ]\r\n    },\r\n    rm: { // Romansh\r\n        months: [\r\n            'Schaner', 'Favrer', 'Mars', 'Avrigl', 'Matg', 'Zercladur', 'Fanadur', 'Avust', 'Settember', 'October', 'November', 'December'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'Du', 'Gli', 'Ma', 'Me', 'Gie', 'Ve', 'So'\r\n        ],\r\n        dayOfWeek: [\r\n            'Dumengia', 'Glindesdi', 'Mardi', 'Mesemna', 'Gievgia', 'Venderdi', 'Sonda'\r\n        ]\r\n    },\r\n    ka: { // Georgian\r\n        months: [\r\n            'იანვარი', 'თებერვალი', 'მარტი', 'აპრილი', 'მაისი', 'ივნისი', 'ივლისი', 'აგვისტო', 'სექტემბერი', 'ოქტომბერი', 'ნოემბერი', 'დეკემბერი'\r\n        ],\r\n        dayOfWeekShort: [\r\n            'კვ', 'ორშ', 'სამშ', 'ოთხ', 'ხუთ', 'პარ', 'შაბ'\r\n        ],\r\n        dayOfWeek: ['კვირა', 'ორშაბათი', 'სამშაბათი', 'ოთხშაბათი', 'ხუთშაბათი', 'პარასკევი', 'შაბათი']\r\n    },\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material';\r\nimport { NhDateComponent } from './nh-date.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, MatInputModule],\r\n    declarations: [NhDateComponent],\r\n    exports: [NhDateComponent]\r\n})\r\n\r\nexport class NhDateModule {\r\n}\r\n","import { ElementRef } from '@angular/core';\r\n\r\nexport class NhDateUtils {\r\n    static isValidValue(mask, value) {\r\n        const reg = mask\r\n            .replace(/([\\[\\]\\/\\{\\}\\(\\)\\-\\.\\+]{1})/g, '\\\\$1')\r\n            .replace(/_/g, '{digit+}')\r\n            .replace(/([0-9]{1})/g, '{digit$1}')\r\n            .replace(/\\{digit([0-9]{1})\\}/g, '[0-$1_]{1}')\r\n            .replace(/\\{digit[\\+]\\}/g, '[0-9_]{1}');\r\n        return (new RegExp(reg)).test(value);\r\n    }\r\n\r\n    static getCaretPos(elRef: ElementRef) {\r\n        try {\r\n            if (elRef.nativeElement.selection && elRef.nativeElement.selection.createRange) {\r\n                const range = elRef.nativeElement.selection.createRange();\r\n                return range.getBookmark().charCodeAt(2) - 2;\r\n            }\r\n            if (elRef.nativeElement.setSelectionRange) {\r\n                return elRef.nativeElement.selectionStart;\r\n            }\r\n        } catch (e) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static setCaretPos(elRef: ElementRef, pos) {\r\n        if (elRef.nativeElement.createTextRange) {\r\n            const textRange = elRef.nativeElement.createTextRange();\r\n            textRange.collapse(true);\r\n            textRange.moveEnd('character', pos);\r\n            textRange.moveStart('character', pos);\r\n            textRange.select();\r\n            return true;\r\n        }\r\n        if (elRef.nativeElement.setSelectionRange) {\r\n            elRef.nativeElement.setSelectionRange(pos, pos);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class TimeObject {\r\n    hour: number;\r\n    minute: number;\r\n    second: number;\r\n\r\n    constructor(hour?: number, minute?: number, second?: number) {\r\n        this.hour = hour;\r\n        this.minute = minute;\r\n        this.second = second;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DateTimeFormatPipe } from './datetime-format.pipe';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [DateTimeFormatPipe],\r\n    declarations: [DateTimeFormatPipe],\r\n    providers: [],\r\n})\r\nexport class DatetimeFormatModule {\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'dateTimeFormat' })\r\nexport class DateTimeFormatPipe implements PipeTransform {\r\n    private _inputDateTimeAllowedFormat = [\r\n        'DD/MM/YYYY',\r\n        'DD/MM/YYYY HH:mm',\r\n        'DD/MM/YYYY HH:mm:ss',\r\n        'DD/MM/YYYY HH:mm Z',\r\n        'DD-MM-YYYY',\r\n        'DD-MM-YYYY HH:mm',\r\n        'DD-MM-YYYY HH:mm:ss',\r\n        'DD-MM-YYYY HH:mm Z',\r\n        // --------------------\r\n        'MM/DD/YYYY',\r\n        'MM/DD/YYYY HH:mm',\r\n        'MM/DD/YYYY HH:mm:ss',\r\n        'MM/DD/YYYY HH:mm Z',\r\n        'MM-DD-YYYY',\r\n        'MM-DD-YYYY HH:mm',\r\n        'MM-DD-YYYY HH:mm:ss',\r\n        'MM-DD-YYYY HH:mm Z',\r\n        // --------------------\r\n        'YYYY/MM/DD',\r\n        'YYYY/MM/DD HH:mm',\r\n        'YYYY/MM/DD HH:mm:ss',\r\n        'YYYY/MM/DD HH:mm Z',\r\n        'YYYY-MM-DD',\r\n        'YYYY-MM-DD HH:mm',\r\n        'YYYY-MM-DD HH:mm:ss',\r\n        'YYYY-MM-DD HH:mm Z',\r\n        // --------------------\r\n        'YYYY/DD/MM',\r\n        'YYYY/DD/MM HH:mm',\r\n        'YYYY/DD/MM HH:mm:ss',\r\n        'YYYY/DD/MM HH:mm Z',\r\n        'YYYY-DD-MM',\r\n        'YYYY-DD-MM HH:mm',\r\n        'YYYY-DD-MM HH:mm:ss',\r\n        'YYYY-DD-MM HH:mm Z',\r\n    ];\r\n\r\n    transform(value: number, exponent: string, isUtc: boolean = false) {\r\n        return this.formatDate(value, exponent, isUtc);\r\n    }\r\n\r\n    formatDate(value, format, isUtc = false) {\r\n        if (!moment(value, this._inputDateTimeAllowedFormat).isValid()) {\r\n            return '';\r\n        }\r\n        return isUtc ? moment.utc(value, this._inputDateTimeAllowedFormat).format(format)\r\n            : moment(value, this._inputDateTimeAllowedFormat).format(format);\r\n        // return value;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, Validators, ValidatorFn } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class NumberValidator implements Validators {\r\n    constructor() {\r\n    }\r\n\r\n    isValid(c: FormControl) {\r\n        if (c && c.value && c.value != null) {\r\n            if (isNaN(parseFloat(c.value)) || !isFinite(c.value)) {\r\n                return { isValid: false };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    greaterThan(value: number): ValidatorFn {\r\n        return (c: FormControl) => {\r\n            if (value && c.value) {\r\n                if (c.value <= value) {\r\n                    return { greaterThan: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n\r\n    lessThan(value: number) {\r\n        return (c: FormControl) => {\r\n            if (value && c.value) {\r\n                if (c.value >= value) {\r\n                    return { lessThan: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n\r\n    range(value: { fromValue: number, toValue: number }): ValidatorFn {\r\n        return (c: FormControl) => {\r\n            if (value && c.value) {\r\n                if (c.value < value.fromValue || c.value > value.toValue) {\r\n                    return { invalidRange: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}