{"version":3,"sources":["webpack:///./src/app/modules/notifications/notification-routing.module.ts","webpack:///./src/app/modules/notifications/notification.component.html","webpack:///./src/app/modules/notifications/notification.component.ts","webpack:///./src/app/modules/notifications/notification.module.ts","webpack:///./src/app/modules/notifications/notification.service.ts","webpack:///./src/app/shareds/components/ghm-paging/ghm-paging.component.html","webpack:///./src/app/shareds/components/ghm-paging/ghm-paging.component.ts","webpack:///./src/app/shareds/components/ghm-paging/ghm-paging.module.ts"],"names":[],"mappings":"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","file":"modules-notifications-notification-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NotificationComponent } from './notification.component';\r\nimport { NotificationService } from './notification.service';\r\nimport { LayoutComponent } from '../../shareds/layouts/layout.component';\r\nimport { AuthGuardService } from '../../shareds/services/auth-guard.service';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LayoutComponent,\r\n        canActivate: [AuthGuardService],\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: NotificationComponent,\r\n                resolve: {\r\n                    data: NotificationService\r\n                }\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers: [NotificationService]\r\n})\r\n\r\nexport class NotificationRoutingModule {\r\n}\r\n","<div class=\"notification-container\">\r\n    <h1 class=\"title\">Thông báo của bạn</h1>\r\n    <hr>\r\n    <ul class=\"dropdown-menu-list list-notify-container\" #notifyContentContainer>\r\n        <li class=\"notify-item\" *ngFor=\"let item of listItems$ | async\" [class.info]=\"item.type === 0\"\r\n            [class.warning]=\"item.type === 1\"\r\n            [class.danger]=\"item.type === 2\" [class.success]=\"item.type === 3\" [class.readed]=\"item.isRead\"\r\n            (click)=\"updateRead(item)\">\r\n            <button class=\"notification-close\" (click)=\"closeNotify(item)\">\r\n                <i class=\"fa fa-times\"></i>\r\n            </button>\r\n            <div class=\"notify-left\">\r\n                <a href=\"javascript://\">\r\n                    <!--<nh-image [baseUrl]=\"baseUrl\" [value]=\"item.fromUserImage\" [alt]=\"item.title\" [width]=\"40\"-->\r\n                              <!--[height]=\"40\"></nh-image>-->\r\n                </a>\r\n            </div>\r\n            <div class=\"notify-body\">\r\n                <p class=\"content\" *ngIf=\"!item.image\" [innerHTML]=\"item.content\"></p>\r\n                <div class=\"notify-item\" *ngIf=\"item.image\">\r\n                    <div class=\"notify-body\">\r\n                        <p class=\"content\" [innerHTML]=\"item.content\"></p>\r\n                    </div>\r\n                    <div class=\"notify-right\">\r\n                        <a href=\"javascript://\">\r\n                            <!--<nh-image [baseUrl]=\"baseUrl\" [value]=\"item.image\" [width]=\"40\" [height]=\"40\"></nh-image>-->\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"times\">\r\n                    <i class=\"fa fa-clock-o\"></i>{{item.time}}\r\n                </div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n\r\n    <ghm-paging [totalRows]=\"totalRows\" [currentPage]=\"currentPage\" [pageShow]=\"6\" (pageClick)=\"search($event)\"\r\n                [isDisabled]=\"isSearching\" [pageName]=\"'thông báo'\"></ghm-paging>\r\n</div><!-- END: .notification-container -->\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { BaseListComponent } from '../../base-list.component';\r\nimport { NotificationService } from './notification.service';\r\nimport { Notifications } from './notifications.viewmodel';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ISearchResult } from '../../interfaces/isearch.result';\r\nimport { IAppConfig } from '../../interfaces/iapp-config';\r\nimport { APP_CONFIG } from '../../configs/app.config';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-notification',\r\n    templateUrl: './notification.component.html'\r\n})\r\n\r\nexport class NotificationComponent extends BaseListComponent<Notifications> implements OnInit {\r\n    isRead: boolean;\r\n    baseUrl: string;\r\n\r\n    constructor(@Inject(APP_CONFIG) appConfig: IAppConfig,\r\n                private route: ActivatedRoute,\r\n                private notificationService: NotificationService) {\r\n        super();\r\n        this.baseUrl = appConfig.baseUrl;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: ISearchResult<Notifications> }) => {\r\n            const data = result.data;\r\n            if (data) {\r\n                this.totalRows = data.totalRows;\r\n                return data.items;\r\n            }\r\n        }));\r\n    }\r\n\r\n    updateRead(notification: Notifications) {\r\n        console.log(notification);\r\n        this.notificationService.updateReadStatus(notification.id, true);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.listItems$ = this.notificationService.search(this.isRead, currentPage)\r\n            .pipe(map((result: ISearchResult<Notifications>) => {\r\n                this.totalRows = result.totalRows;\r\n                return result.items;\r\n            }));\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NotificationComponent } from './notification.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NotificationRoutingModule } from './notification-routing.module';\r\nimport { GhmPagingModule } from '../../shareds/components/ghm-paging/ghm-paging.module';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, NotificationRoutingModule, GhmPagingModule],\r\n    exports: [],\r\n    declarations: [NotificationComponent],\r\n    providers: [],\r\n})\r\nexport class NotificationModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ISearchResult } from '../../interfaces/isearch.result';\r\nimport { Notifications } from './notifications.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport * as moment from 'moment';\r\nimport { IResponseResult } from '../../interfaces/iresponse-result';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class NotificationService implements Resolve<ISearchResult<Notifications>> {\r\n    url = 'notification/';\r\n\r\n    constructor(private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.queryParams;\r\n        const isRead = queryParams.isRead;\r\n        const page = queryParams.page;\r\n        const pageSize = queryParams.pageSize;\r\n        return this.search(isRead, page, pageSize);\r\n    }\r\n\r\n    updateReadStatus(id: number, isRead: boolean) {\r\n        this.http.get(`${this.url}update-read`, {\r\n            params: new HttpParams()\r\n                .set('id', id.toString())\r\n                .set('isRead', isRead.toString())\r\n        }).subscribe((result: IResponseResult) => {\r\n            this.toastr.success(result.message);\r\n        });\r\n    }\r\n\r\n    search(isRead?: boolean, page: number = 1, pageSize: number = 20): Observable<ISearchResult<Notifications>> {\r\n        return this.http.get(`${this.url}search`, {\r\n            params: new HttpParams()\r\n                .set('isRead', isRead !== undefined && isRead != null ? isRead.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '')\r\n        }).pipe(map((result: ISearchResult<Notifications>) => {\r\n            _.each(result.items, (item: Notifications) => {\r\n                item.time = moment(item.time).fromNow();\r\n            });\r\n            return result;\r\n        })) as Observable<ISearchResult<Notifications>>;\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-6\" *ngIf=\"isShowSummary\">\r\n        {{ summaryMessage }}\r\n    </div>\r\n    <div class=\"text-right\" [ngClass]=\"isShowSummary ? 'col-sm-6' : 'col-sm-12'\" *ngIf=\"totalRows > 0\">\r\n        <ul class=\"pagination\" *ngIf=\"isShowPaging\">\r\n            <li *ngIf=\"isShowPrevious\" (click)=\"previousClick()\" [class.disabled]=\"isDisabled\">\r\n                <a href=\"javascript://\" aria-label=\"Previous\">\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                </a>\r\n            </li>\r\n            <li *ngFor=\"let item of listPageShow\" [class.active]=\"item === currentPage\"\r\n                [class.disabled]=\"isDisabled\"><a href=\"javascript://\" (click)=\"onClick(item)\">{{item}}</a></li>\r\n            <li *ngIf=\"isShowNext\" (click)=\"nextClick()\" [class.disabled]=\"isDisabled\">\r\n                <a href=\"javascript://\" aria-label=\"Next\">\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n","﻿import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ghm-paging',\r\n    templateUrl: './ghm-paging.component.html',\r\n    styleUrls: ['./ghm-paging.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class GhmPagingComponent implements OnInit, OnChanges {\r\n    @Input() totalRows: number;\r\n    @Input() pageSize = 20;\r\n    @Input() isShowSummary = true;\r\n    @Input() pageShow = 5;\r\n    @Input() currentPage = 5;\r\n    @Input() isDisabled = false;\r\n    @Input() pageName = false;\r\n\r\n    @Output() pageClick = new EventEmitter();\r\n\r\n    isShowPaging = true;\r\n    isShowNext = false;\r\n    isShowPrevious = false;\r\n    totalPage = 0;\r\n    fromPageSummary = 1;\r\n    toPageSummary = 1;\r\n    summaryMessage = '';\r\n\r\n    listPageShow = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.hasOwnProperty('totalRows') && changes['totalRows'].currentValue !== 0) {\r\n            this.buildPaging();\r\n        }\r\n\r\n        if (changes.hasOwnProperty('totalRows') && changes['totalRows'].currentValue === 0) {\r\n            this.summaryMessage = `Chưa có ${this.pageName} nào để hiển thị.`;\r\n        }\r\n    }\r\n\r\n    onClick(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.refreshPaging();\r\n        this.pageClick.emit(currentPage);\r\n    }\r\n\r\n    previousClick() {\r\n        this.currentPage -= 1;\r\n        this.refreshPaging();\r\n        this.pageClick.emit(this.currentPage);\r\n    }\r\n\r\n    nextClick() {\r\n        this.currentPage += 1;\r\n        this.refreshPaging();\r\n        this.pageClick.emit(this.currentPage);\r\n    }\r\n\r\n    buildPaging() {\r\n        let pageForShow = this.pageShow;\r\n        this.totalPage = Math.ceil(this.totalRows / this.pageSize);\r\n        if (this.totalPage <= 1) {\r\n            this.isShowPaging = false;\r\n        } else {\r\n            this.isShowPaging = true;\r\n        }\r\n\r\n        if (this.totalPage > 0) {\r\n            this.listPageShow = [];\r\n\r\n            if (this.totalPage < this.pageShow) {\r\n                pageForShow = this.totalPage;\r\n            } else {\r\n                pageForShow = this.pageShow;\r\n            }\r\n\r\n            for (let i = 1; i <= pageForShow; i++) {\r\n                this.listPageShow.push(i);\r\n            }\r\n\r\n            this.isShowPrevious = this.currentPage > 1;\r\n            this.isShowNext = this.currentPage < this.totalPage;\r\n            this.renderSummary();\r\n        }\r\n    }\r\n\r\n    refreshPaging() {\r\n        if (this.totalPage > this.pageShow) {\r\n            const pageStep = Math.floor(this.pageShow / 2);\r\n            let previousPage = this.currentPage - (pageStep - (this.pageShow % 2 > 0 ? 0 : 1));\r\n            let nextPage = this.currentPage + pageStep;\r\n\r\n            if (previousPage < 1) {\r\n                previousPage = 1;\r\n                nextPage = this.pageShow;\r\n            }\r\n\r\n            if (nextPage > this.totalPage) {\r\n                nextPage = this.totalPage;\r\n            }\r\n\r\n            if (this.totalPage - this.currentPage < pageStep) {\r\n                previousPage = this.totalPage - this.pageShow + 1;\r\n                nextPage = this.totalPage;\r\n            }\r\n\r\n            this.listPageShow = [];\r\n\r\n            for (let i = previousPage; i < this.currentPage; i++) {\r\n                this.listPageShow.push(i);\r\n            }\r\n\r\n            for (let i = this.currentPage; i <= nextPage; i++) {\r\n                this.listPageShow.push(i);\r\n            }\r\n        }\r\n\r\n        this.isShowPrevious = this.currentPage > 1;\r\n        this.isShowNext = this.currentPage < this.totalPage;\r\n        this.renderSummary();\r\n    }\r\n\r\n    renderSummary() {\r\n        this.fromPageSummary = (this.currentPage - 1) * this.pageSize + 1;\r\n        this.toPageSummary = this.currentPage * this.pageSize;\r\n\r\n        if (this.toPageSummary > this.totalRows) {\r\n            this.toPageSummary = this.totalRows;\r\n        }\r\n\r\n        this.summaryMessage = `Hiển thị từ ${this.fromPageSummary} đến ${this.toPageSummary} của  ${this.totalRows} ${this.pageName}`;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { GhmPagingComponent } from './ghm-paging.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [GhmPagingComponent],\r\n    declarations: [GhmPagingComponent],\r\n    providers: [],\r\n})\r\nexport class GhmPagingModule {\r\n}\r\n"],"sourceRoot":""}