// <auto-generated />
using System;
using GHM.Warehouse.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GHM.Warehouse.Infrastructure.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    partial class WarehouseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GHM.Warehouse.Domain.ModelMetas.Brand", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.ModelMetas.ProductCategoriesAttribute", b =>
                {
                    b.Property<string>("AttributeId")
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("AttributeId", "CategoryId");

                    b.ToTable("ProductCategoriesAttributes");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.Attribute", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorAvatar")
                        .HasColumnType("text");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultiple")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequire")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSelfContent")
                        .HasColumnType("boolean");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.AttributeTranslation", b =>
                {
                    b.Property<string>("AttributeId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("AttributeId", "LanguageId");

                    b.ToTable("AttributeTranslations");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.AttributeValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AttributeId")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AttributeValues");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.AttributeValueTranslation", b =>
                {
                    b.Property<string>("AttributeValueId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ProductAttributeId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("AttributeValueId", "LanguageId");

                    b.ToTable("AttributeValueTranslations");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("PositionName")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("SubjectId")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.GoodsDeliver", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("SupplierId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GoodsDelivers");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.GoodsDeliveryNote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorAvatar")
                        .HasColumnType("text");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<byte>("Day")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeliveryNo")
                        .HasColumnType("text");

                    b.Property<string>("ForecatstId")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<byte>("Month")
                        .HasColumnType("smallint");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("integer");

                    b.Property<string>("OfficeName")
                        .HasColumnType("text");

                    b.Property<byte>("Quarter")
                        .HasColumnType("smallint");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverId")
                        .HasColumnType("text");

                    b.Property<string>("SubjectId")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalAmounts")
                        .HasColumnType("numeric");

                    b.Property<int>("TotalItems")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id", "TenantId");

                    b.ToTable("GoodsDeliveryNotes");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.GoodsDeliveryNoteDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("ConversionUnitGroupId")
                        .HasColumnType("text");

                    b.Property<decimal>("ConversionValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool?>("DiscountByPercent")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("GoodsDeliveryNoteId")
                        .HasColumnType("text");

                    b.Property<string>("GoodsReceiptNoteCode")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("LotId")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RecommendedQuantity")
                        .HasColumnType("numeric");

                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.HasKey("Id", "TenantId");

                    b.HasIndex("GoodsDeliveryNoteId", "TenantId");

                    b.ToTable("GoodsDeliveryNoteDetails");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.GoodsDeliveryNoteReceiver", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("CustomerId")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GoodsDeliveryNoteReceivers");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.GoodsReceiptNote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TenantId")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorAvatar")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("CreatorFullName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("Day")
                        .HasColumnType("smallint");

                    b.Property<string>("DeliverId")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FollowId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<byte>("Month")
                        .HasColumnType("smallint");

                    b.Property<string>("Note")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<byte>("Quarter")
                        .HasColumnType("smallint");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReceiverFullName")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReceiverId")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SubjectId")
                        .HasColumnType("text");

                    b.Property<string>("SupplierId")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Taxes")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalAmounts")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalBeforeTaxes")
                        .HasColumnType("numeric");

                    b.Property<int>("TotalItems")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<byte?>("VAT")
                        .HasColumnType("smallint");

                    b.Property<string>("WarehouseId")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id", "TenantId");

                    b.ToTable("GoodsReceiptNotes");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.GoodsReceiptNoteDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("character varying(50)");

                    b.Property<string>("BrandId")
                        .HasColumnType("text");

                    b.Property<decimal?>("ChargeableWeight")
                        .HasColumnType("numeric");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("ConversionUnitGroupId")
                        .HasColumnType("text");

                    b.Property<decimal>("ConversionValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GoodsReceiptNoteId")
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<decimal?>("InvoiceQuantity")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int?>("Length")
                        .HasColumnType("integer");

                    b.Property<string>("LotId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ManufactureDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("SKU")
                        .HasColumnType("text");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Taxes")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalAmounts")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalBeforeTaxes")
                        .HasColumnType("numeric");

                    b.Property<string>("UPC")
                        .HasColumnType("text");

                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.Property<byte?>("VAT")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("VolumnWidth")
                        .HasColumnType("numeric");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.Property<int?>("Weight")
                        .HasColumnType("integer");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id", "TenantId");

                    b.HasIndex("GoodsReceiptNoteId", "TenantId");

                    b.ToTable("GoodsReceiptNoteDetails");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.GoodsReceiptNoteFollow", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("Id", "TenantId");

                    b.ToTable("GoodsReceiptNoteFollows");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.Inventory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<DateTime>("InventoryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.InventoryDailyReport", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("ClosingStockQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ClosingStockValue")
                        .HasColumnType("numeric");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("Day")
                        .HasColumnType("smallint");

                    b.Property<decimal>("DeliveringQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DeliveringValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("Month")
                        .HasColumnType("smallint");

                    b.Property<decimal>("OpeningStockQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OpeningStockValue")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<byte>("Quarter")
                        .HasColumnType("smallint");

                    b.Property<decimal>("ReceivingQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ReceivingValue")
                        .HasColumnType("numeric");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("InventoryDailyReports");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.InventoryDetail", b =>
                {
                    b.Property<string>("InventoryId")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal?>("InventoryQuantity")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("LotId")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("RealQuantity")
                        .HasColumnType("numeric");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.HasKey("InventoryId", "ProductId");

                    b.ToTable("InventoryDetails");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.InventoryMember", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("InventoryId")
                        .HasColumnType("text");

                    b.Property<string>("OfficeName")
                        .HasColumnType("text");

                    b.Property<string>("PositionName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("InventoryMembers");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.InventoryReport", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("ClosingStockQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ClosingStockValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReceived")
                        .HasColumnType("boolean");

                    b.Property<decimal>("OpeningStockQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OpeningStockValue")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("ProductUnitId")
                        .HasColumnType("text");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("ReceiptId")
                        .HasColumnType("text");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalAmounts")
                        .HasColumnType("numeric");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InventoryReports");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.InventoryReportDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("ClosingStockQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ClosingStockValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("ExWarehousePrice")
                        .HasColumnType("numeric");

                    b.Property<string>("GoodsReceiptNoteDetailCode")
                        .HasColumnType("text");

                    b.Property<string>("InventoryReportId")
                        .HasColumnType("text");

                    b.Property<bool>("IsReceived")
                        .HasColumnType("boolean");

                    b.Property<string>("LotId")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<decimal>("OpeningStockQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OpeningStockValue")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("ProductUnitId")
                        .HasColumnType("text");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("ReceiptId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InventoryReportId");

                    b.ToTable("InventoryReportDetails");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.Lot", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id", "TenantId");

                    b.ToTable("Lots");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("CusomerId")
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric");

                    b.Property<byte?>("DiscountType")
                        .HasColumnType("smallint");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("SessionId")
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Transport")
                        .HasColumnType("numeric");

                    b.Property<byte?>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.Property<decimal?>("VAT")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric");

                    b.Property<byte?>("DiscountType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ApprovedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ApproverAvartar")
                        .HasColumnType("text");

                    b.Property<string>("ApproverComment")
                        .HasColumnType("text");

                    b.Property<string>("ApproverFullName")
                        .HasColumnType("text");

                    b.Property<string>("ApproverUserId")
                        .HasColumnType("text");

                    b.Property<int>("CommentCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHomePage")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHot")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsManagementByLot")
                        .HasColumnType("boolean");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateHomePage")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LastUpdateHot")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("LikeCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("text");

                    b.Property<int>("ViewCount")
                        .HasColumnType("integer");

                    b.HasKey("Id", "TenantId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductAttribute", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AttributeId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShowClient")
                        .HasColumnType("boolean");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductAttributeValue", b =>
                {
                    b.Property<string>("ProductAttributeId")
                        .HasColumnType("text");

                    b.Property<string>("AttributeValueId")
                        .HasColumnType("text");

                    b.HasKey("ProductAttributeId", "AttributeValueId");

                    b.HasIndex("AttributeValueId");

                    b.ToTable("ProductAttributeValues");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ChildCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("IdPath")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHomePage")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHot")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSolution")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("OrderPath")
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductCategoryTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ParentName")
                        .HasColumnType("text");

                    b.Property<string>("SeoLink")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "ProductCategoryId", "LanguageId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductCategoryTranslations");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductConversionUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConversionUnitGroupId")
                        .HasColumnType("text");

                    b.Property<string>("ConversionUnitId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("ProductConversionUnits");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductConversionUnitGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ProductConversionUnitId")
                        .HasColumnType("text");

                    b.HasKey("Id", "ProductConversionUnitId");

                    b.ToTable("ProductConversionUnitGroups");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductImage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductTranslation", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("SeoLink")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("ProductId", "LanguageId", "TenantId");

                    b.HasIndex("ProductId", "TenantId");

                    b.ToTable("ProductTranslations");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("numeric");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductUnits");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductsCategory", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("ProductId", "CategoryId");

                    b.ToTable("ProductsCategories");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.Supplier", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.Unit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.UnitTranslation", b =>
                {
                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("UnitId", "LanguageId", "TenantId");

                    b.ToTable("UnitTranslations");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.Warehouse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.WarehouseConfig", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "Key");

                    b.ToTable("WarehouseConfigs");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.WarehouseLimit", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<string>("UnitId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("TenantId", "WarehouseId", "ProductId", "UnitId");

                    b.ToTable("WarehouseLimits");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.WarehouseManagerConfig", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("WarehouseId")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("Permissions")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "UserId", "WarehouseId");

                    b.ToTable("WarehouseManagerConfigs");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.AttributeTranslation", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.Attribute", "Attribute")
                        .WithMany("Translations")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.AttributeValueTranslation", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.AttributeValue", "AttributeValue")
                        .WithMany("Translations")
                        .HasForeignKey("AttributeValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.GoodsDeliveryNoteDetail", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.GoodsDeliveryNote", "GoodsDeliveryNote")
                        .WithMany("GoodsDeliveryNoteDetails")
                        .HasForeignKey("GoodsDeliveryNoteId", "TenantId");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.GoodsReceiptNoteDetail", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.GoodsReceiptNote", "GoodsReceiptNote")
                        .WithMany("GoodsReceiptNoteDetails")
                        .HasForeignKey("GoodsReceiptNoteId", "TenantId");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.InventoryDetail", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.Inventory", "Inventory")
                        .WithMany("InventoryDetails")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.InventoryMember", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.Inventory", "Inventory")
                        .WithMany("InventoryMembers")
                        .HasForeignKey("InventoryId");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.InventoryReportDetail", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.InventoryReport", "InventoryReport")
                        .WithMany("InventoryReportDetails")
                        .HasForeignKey("InventoryReportId");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.OrderDetail", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductAttributeValue", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.ProductAttribute", "ProductAttribute")
                        .WithMany("ProductAttributeValues")
                        .HasForeignKey("AttributeValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductCategoryTranslation", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.ProductCategory", null)
                        .WithMany("ProductCategoryTranslations")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Warehouse.Domain.Models.ProductTranslation", b =>
                {
                    b.HasOne("GHM.Warehouse.Domain.Models.Product", "Product")
                        .WithMany("Translations")
                        .HasForeignKey("ProductId", "TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
