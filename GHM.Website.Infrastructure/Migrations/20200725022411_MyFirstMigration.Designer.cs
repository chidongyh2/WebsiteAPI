// <auto-generated />
using System;
using GHM.Website.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GHM.Website.Infrastructure.Migrations
{
    [DbContext(typeof(WebsiteDbContext))]
    [Migration("20200725022411_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GHM.Website.Domain.Models.AgencyInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<int>("DistrictId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("GoogleMap")
                        .HasColumnType("text");

                    b.Property<double?>("Height")
                        .HasColumnType("double precision");

                    b.Property<string>("IdCard")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IdCardDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsShow")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<double?>("Length")
                        .HasColumnType("double precision");

                    b.Property<int?>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<double?>("TotalArea")
                        .HasColumnType("double precision");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.Property<double?>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("AgencyInfos");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.AgencyInfoTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("AgencyInfoId")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AddressRegistered")
                        .HasColumnType("text");

                    b.Property<string>("AgencyName")
                        .HasColumnType("text");

                    b.Property<string>("DistrictName")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("IdCardAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("text");

                    b.Property<string>("UnsingName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "AgencyInfoId");

                    b.HasIndex("AgencyInfoId");

                    b.ToTable("AgencyInfoTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.AlbumTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("AlbumId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("text");

                    b.Property<string>("SeoLink")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "AlbumId");

                    b.ToTable("AlbumTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Appointment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Service")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Banner", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DisplayType")
                        .HasColumnType("integer");

                    b.Property<int>("EffectType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPopUp")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Position")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.BannerItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Alt")
                        .HasColumnType("text");

                    b.Property<string>("BannerId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Order")
                        .HasColumnType("integer");

                    b.Property<int?>("TotalClick")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BannerItems");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.BranchContact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsOffice")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.Property<string>("WorkTime")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BranchContacts");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.BranchContactDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("BranchContactId")
                        .HasColumnType("text");

                    b.Property<int>("ContactType")
                        .HasColumnType("integer");

                    b.Property<string>("ContactValue")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BranchContactDetails");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.BranchContactTranslation", b =>
                {
                    b.Property<string>("BranchContactId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("BranchContactId", "LanguageId");

                    b.ToTable("BranchContactTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Brand", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.CategoriesNews", b =>
                {
                    b.Property<string>("NewsId")
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.HasKey("NewsId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoriesNews");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BannerImage")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorAvatar")
                        .HasColumnType("text");

                    b.Property<string>("CreatorFullName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("IdPath")
                        .IsRequired()
                        .HasColumnType("character varying(4000)")
                        .HasMaxLength(4000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHomePage")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("OrderPath")
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.CategoryInvolve", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryInvolveId")
                        .HasColumnType("integer");

                    b.HasKey("CategoryId", "CategoryInvolveId");

                    b.ToTable("CategoryInvolves");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.CategoryTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("MetaTitle")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("SeoLink")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.HasKey("TenantId", "LanguageId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<int?>("ChildCount")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("IdPath")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsShow")
                        .HasColumnType("boolean");

                    b.Property<string>("ObjectId")
                        .HasColumnType("text");

                    b.Property<int?>("ObjectType")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int?>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.ConfigMailTemp", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("MailTempGroupId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ConfigMailTemp");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.ConfigMailTempDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConfigMailTempId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MailId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ConfigMailTempDetails");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.CoreValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CoreValues");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.CoreValueTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("CoreValueId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "CoreValueId");

                    b.HasIndex("CoreValueId");

                    b.ToTable("CoreValueTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Faq", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("FaqGroupId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Faqs");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.FaqGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FaqGroups");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.FaqGroupTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("FaqGroupId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "FaqGroupId");

                    b.HasIndex("FaqGroupId");

                    b.ToTable("FaqGroupTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.FaqTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("FaqId")
                        .HasColumnType("text");

                    b.Property<string>("Answer")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "FaqId");

                    b.HasIndex("FaqId");

                    b.ToTable("FaqTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Feedback", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsView")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Mail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("MailTypeId")
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.MailTempContent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("MailTempGroupId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MailTempContents");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.MailTempContentTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("MailTempContentId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("ContentMail")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("UnsignTitle")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "MailTempContentId", "LanguageId");

                    b.ToTable("MailTempContentTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.MailTempGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MailTempGroups");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.MailTempGroupTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("MailTempGroupId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "MailTempGroupId", "LanguageId");

                    b.ToTable("MailGroupTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.MailType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Host")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<bool>("Ssl")
                        .HasColumnType("boolean");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MailTypes");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Menu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("EffectType")
                        .HasColumnType("integer");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ChildCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("IdPath")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("MenuId")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("OrderPath")
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("SubjectId")
                        .HasColumnType("text");

                    b.Property<int>("SubjectType")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.MenuItemTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NamePath")
                        .HasColumnType("text");

                    b.Property<string>("ParentName")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "MenuItemId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuItemTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.News", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AltImage")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ApprovedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ApproverAvatar")
                        .HasColumnType("text");

                    b.Property<string>("ApproverComment")
                        .HasColumnType("text");

                    b.Property<string>("ApproverFullName")
                        .HasColumnType("text");

                    b.Property<string>("ApproverUserId")
                        .HasColumnType("text");

                    b.Property<string>("BannerImage")
                        .HasColumnType("text");

                    b.Property<int>("CommentCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorAvatar")
                        .HasColumnType("text");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("FeatureImage")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHomePage")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHot")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateAvatar")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateIsHomePage")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LastUpdateIsHot")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("LikeCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SentTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<int>("ViewCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.NewsTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("NewsId")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("text");

                    b.Property<string>("SeoLink")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "NewsId");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Photo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AlbumId")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Setting", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "Key", "LanguageId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.SettingTranslation", b =>
                {
                    b.Property<string>("SettingId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("SettingId", "TenantId", "LanguageId");

                    b.ToTable("SettingTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.SocialNetwork", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SocialNetworks");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.Video", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AlbumId")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsHomePage")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdateIsHomePage")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("VideoLinkId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.VideoGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastUpdateFullName")
                        .HasColumnType("text");

                    b.Property<string>("LastUpdateUserId")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VideoGroups");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.VideoGroupTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("VideoGroupId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "VideoGroupId");

                    b.HasIndex("VideoGroupId");

                    b.ToTable("VideoGroupTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.VideoTranslation", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("text");

                    b.Property<string>("LanguageId")
                        .HasColumnType("text");

                    b.Property<string>("VideoId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("UnsignName")
                        .HasColumnType("text");

                    b.HasKey("TenantId", "LanguageId", "VideoId");

                    b.HasIndex("VideoId");

                    b.ToTable("VideoTranslations");
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.AgencyInfoTranslation", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.AgencyInfo", "AgencyInfo")
                        .WithMany("AgencyInfoTranslations")
                        .HasForeignKey("AgencyInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.CategoriesNews", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GHM.Website.Domain.Models.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.CategoryTranslation", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.Category", "Category")
                        .WithMany("CategoryTranslations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.CoreValueTranslation", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.CoreValue", "CoreValue")
                        .WithMany("CoreValueTranslations")
                        .HasForeignKey("CoreValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.FaqGroupTranslation", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.FaqGroup", "FaqGroup")
                        .WithMany("FaqGroupTranslations")
                        .HasForeignKey("FaqGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.FaqTranslation", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.Faq", "Faq")
                        .WithMany("FaqTranslations")
                        .HasForeignKey("FaqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.MenuItemTranslation", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.MenuItem", "MenuItem")
                        .WithMany("MenuItemTranslations")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.NewsTranslation", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.News", "News")
                        .WithMany("NewsTranslations")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.VideoGroupTranslation", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.VideoGroup", "VideoGroup")
                        .WithMany("VideoGroupTranslations")
                        .HasForeignKey("VideoGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GHM.Website.Domain.Models.VideoTranslation", b =>
                {
                    b.HasOne("GHM.Website.Domain.Models.Video", "Video")
                        .WithMany("Translations")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
