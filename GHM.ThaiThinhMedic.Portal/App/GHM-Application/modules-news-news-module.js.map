{"version":3,"sources":["webpack:///./src/app/shareds/components/tinymce/tinymce.component.scss","webpack:///./src/app/shareds/components/tinymce/tinymce.component.ts","webpack:///./src/app/shareds/components/tinymce/tinymce.module.ts","webpack:///./src/app/validators/number.validator.ts"],"names":[],"mappings":";;;;;;;;;AAAA,sCAAsC,4BAA4B,EAAE,0BAA0B,6BAA6B,EAAE,qBAAqB,gCAAgC,cAAc,eAAe,cAAc,qBAAqB,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACAvI;AACvD;AAoBvE;IAgCI;QA7BS,WAAM,GAAG,KAAK,CAAC;QACf,SAAI,GAAG;YACZ,IAAI,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,qBAAqB,EAAC;YACnD,IAAI,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,kDAAkD,EAAC;YAChF,iEAAiE;YACjE,IAAI,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,mCAAmC,EAAC;YACjE,MAAM,EAAE;gBACJ,KAAK,EAAE,QAAQ;gBACf,KAAK,EAAE,qFAAqF;aAC/F;YACD,KAAK,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,sDAAsD,EAAC;YACtF,KAAK,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;SAC1C,CAAC;QACQ,kBAAa,GAAG,IAAI,0DAAY,EAAO,CAAC;QACxC,aAAQ,GAAG,IAAI,0DAAY,EAAO,CAAC;QAY7C,oBAAe,GAAQ;QACvB,CAAC,CAAC;IAGF,CAAC;yBAjCQ,gBAAgB;IAoBzB,sBAAI,qCAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;aAGD,UAAY,GAAG;YACX,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACxB,CAAC;;;OALA;IAaD,0CAAe,GAAf;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,sCAAW,GAAX;QACI,OAAO,CAAC,MAAM,CAAC,KAAG,IAAI,CAAC,SAAW,CAAC,CAAC;IACxC,CAAC;IAED,qCAAU,GAAV;QAAA,iBAqCC;QApCG,UAAU,CAAC;YACP,OAAO,CAAC,MAAM,CAAC,MAAI,KAAI,CAAC,SAAW,CAAC,CAAC;YACrC,OAAO,CAAC,IAAI,CAAC;gBACT,QAAQ,EAAE,MAAI,KAAI,CAAC,SAAW;gBAC9B,OAAO,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc;oBAClH,aAAa,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC;gBAC3E,OAAO,EAAE,qEAAqE;oBAC9E,kDAAkD;oBAClD,4DAA4D;gBAC5D,gBAAgB,EAAE,iDAAiD;gBACnE,QAAQ,EAAE,yBAAyB;gBACnC,IAAI,EAAE,KAAI,CAAC,IAAI;gBACf,MAAM,EAAE,KAAI,CAAC,MAAM;gBACnB,KAAK,EAAE,gBAAM;oBACT,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK;wBACrB,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;wBACpC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;wBACvB,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;wBAC9B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC;4BACpB,IAAI,EAAE,MAAM,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC;4BACzC,OAAO,EAAE,KAAI,CAAC,OAAO;yBACxB,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;oBACH,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAAK;wBACtB,IAAM,aAAa,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;wBAC1C,KAAI,CAAC,OAAO,GAAG,aAAa,CAAC;wBAC7B,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;wBACnC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;4BACf,IAAI,EAAE,MAAM,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC;4BACzC,OAAO,EAAE,KAAI,CAAC,OAAO;yBACxB,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;gBACP,CAAC;aACJ,CAAC,CAAC;QACP,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAED,qCAAU,GAAV,UAAW,OAAe;QACtB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC/D;IACL,CAAC;IAED,iCAAM,GAAN,UAAO,IAAY,EAAE,QAAiB;QAClC,IAAM,MAAM,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/E,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,MAAM,CAAC,WAAW,CAAC,kBAAkB,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACvD;IACL,CAAC;IAED,2CAAgB,GAAhB,UAAiB,EAAE;QACf,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,kCAAO,GAAP;QACI,OAAO,CAAC,MAAM,CAAC,MAAI,IAAI,CAAC,SAAW,CAAC,CAAC;IACzC,CAAC;IAED,qCAAU,GAAV,UAAW,KAAK;QACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC/D;IACL,CAAC;IAED,4CAAiB,GAAjB;IACA,CAAC;;IAlHQ;QAAR,2DAAK,EAAE;;uDAAmB;IAClB;QAAR,2DAAK,EAAE;;oDAAgB;IACf;QAAR,2DAAK,EAAE;;oDAAgB;IACf;QAAR,2DAAK,EAAE;;kDAWN;IACQ;QAAT,4DAAM,EAAE;;2DAAyC;IACxC;QAAT,4DAAM,EAAE;;sDAAoC;IAQ7C;QADC,2DAAK,EAAE;;;mDAGP;IA3BQ,gBAAgB;QAhB5B,+DAAS,CAAC;YACP,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,SAAS;YACnB,QAAQ,EAAE,mXAOT;;YAED,SAAS,EAAE;gBACP,EAAC,OAAO,EAAE,gEAAiB,EAAE,WAAW,EAAE,gEAAU,CAAC,cAAM,yBAAgB,EAAhB,CAAgB,CAAC,EAAE,KAAK,EAAE,IAAI,EAAC;aAC7F;SACJ,CAAC;;OACW,gBAAgB,CAoH5B;IAAD,uBAAC;CAAA;AApH4B;;;;;;;;;;;;;;;;;;;;;;;;ACrBY;AACM;AACQ;AASvD;IAAA;IACA,CAAC;IADY,aAAa;QAPzB,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,OAAO,EAAE,CAAC,mEAAgB,CAAC;YAC3B,YAAY,EAAE,CAAC,mEAAgB,CAAC;YAChC,SAAS,EAAE,EAAE;SAChB,CAAC;OAEW,aAAa,CACzB;IAAD,oBAAC;CAAA;AADyB;;;;;;;;;;;;;;;;;;;;;;;;;ACXiB;AAI3C;IACI;IACA,CAAC;IAED,iCAAO,GAAP,UAAQ,CAAc;QAClB,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;YACjC,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBAClD,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;aAC7B;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,qCAAW,GAAX,UAAY,KAAa;QACrB,OAAO,UAAC,CAAc;YAClB,IAAI,KAAK,KAAK,SAAS,IAAI,CAAC,CAAC,KAAK,EAAE;gBAChC,IAAI,CAAC,CAAC,KAAK,IAAI,KAAK,EAAE;oBAClB,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;iBACjC;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;IACN,CAAC;IAED,kCAAQ,GAAR,UAAS,KAAa;QAClB,OAAO,UAAC,CAAc;YAClB,IAAI,KAAK,IAAI,CAAC,CAAC,KAAK,EAAE;gBAClB,IAAI,CAAC,CAAC,KAAK,IAAI,KAAK,EAAE;oBAClB,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;iBAC9B;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;IACN,CAAC;IAED,+BAAK,GAAL,UAAM,KAA6C;QAC/C,OAAO,UAAC,CAAc;YAClB,IAAI,KAAK,IAAI,CAAC,CAAC,KAAK,EAAE;gBAClB,IAAI,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,IAAI,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,EAAE;oBACtD,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;iBAClC;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;IACN,CAAC;IA/CQ,eAAe;QAD3B,gEAAU,EAAE;;OACA,eAAe,CAgD3B;IAAD,sBAAC;CAAA;AAhD2B","file":"modules-news-news-module.js","sourcesContent":["module.exports = \"div.tinymce-editor {\\n  height: auto !important; }\\n  div.tinymce-editor p {\\n    margin: 0 0 !important; }\\n  .mce-fullscreen {\\n  margin-top: 50px !important;\\n  border: 0;\\n  padding: 0;\\n  margin: 0;\\n  overflow: hidden;\\n  height: 100%; }\\n\"","import {AfterViewInit, Component, EventEmitter, forwardRef, Input, OnDestroy, Output, ViewEncapsulation} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\ndeclare var tinymce: any;\r\n\r\n@Component({\r\n    encapsulation: ViewEncapsulation.None,\r\n    selector: 'tinymce',\r\n    template: `\r\n        <div class=\"form-control tinymce-editor\" id=\"{{elementId}}\" *ngIf=\"inline\"\r\n             [ngStyle]=\"{'height': height + 'px'}\">\r\n            <span [innerHTML]=\"content\"></span>\r\n        </div>\r\n        <textarea *ngIf=\"!inline\" id=\"{{elementId}}\" [ngStyle]=\"{'height': height + 'px'}\"\r\n                  value=\"{{content}}\"></textarea>\r\n    `,\r\n    styleUrls: ['./tinymce.component.scss'],\r\n    providers: [\r\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TinymceComponent), multi: true}\r\n    ]\r\n})\r\nexport class TinymceComponent implements AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    @Input() elementId: string;\r\n    @Input() height: number;\r\n    @Input() inline = false;\r\n    @Input() menu = {\r\n        file: {title: 'File', items: 'newdocument | print'},\r\n        edit: {title: 'Edit', items: 'undo redo | cut copy paste pastetext | selectall'},\r\n        // insert: {title: 'Insert', items: 'link media | template hr '},\r\n        view: {title: 'View', items: 'visualaid | preview | fullscreen '},\r\n        format: {\r\n            title: 'Format',\r\n            items: 'bold italic underline strikethrough superscript subscript | formats | removeformat '\r\n        },\r\n        table: {title: 'Table', items: 'inserttable tableprops deletetable | cell row column'},\r\n        tools: {title: 'Tools', items: 'code '}\r\n    };\r\n    @Output() onEditorKeyup = new EventEmitter<any>();\r\n    @Output() onChange = new EventEmitter<any>();\r\n    editor;\r\n    private _content;\r\n    get content() {\r\n        return this._content;\r\n    }\r\n\r\n    @Input()\r\n    set content(val) {\r\n        this._content = val;\r\n    }\r\n\r\n    propagateChange: any = () => {\r\n    };\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        tinymce.remove(`${this.elementId}`);\r\n    }\r\n\r\n    initEditor() {\r\n        setTimeout(() => {\r\n            tinymce.remove(`#${this.elementId}`);\r\n            tinymce.init({\r\n                selector: `#${this.elementId}`,\r\n                plugins: ['fullscreen', 'link', 'autolink', 'paste', 'image', 'table', 'textcolor', 'print', 'preview', 'spellchecker',\r\n                    'colorpicker', 'fullscreen', 'code', 'lists', 'emoticons', 'wordcount'],\r\n                toolbar: 'insertfile undo redo | | fontselect | fontsizeselect | bold italic ' +\r\n                '| alignleft aligncenter alignright alignjustify ' +\r\n                '| bullist numlist outdent indent | link image | fullscreen',\r\n                fontsize_formats: '8pt 9pt 10pt 11pt 12pt 13pt 14pt 18pt 24pt 36pt',\r\n                skin_url: '/assets/skins/lightgray',\r\n                menu: this.menu,\r\n                inline: this.inline,\r\n                setup: editor => {\r\n                    this.editor = editor;\r\n                    editor.on('keyup', (event) => {\r\n                        const content = editor.getContent();\r\n                        this.content = content;\r\n                        this.propagateChange(content);\r\n                        this.onEditorKeyup.emit({\r\n                            text: editor.getContent({format: 'text'}),\r\n                            content: this.content\r\n                        });\r\n                    });\r\n                    editor.on('change', (event) => {\r\n                        const contentChange = editor.getContent();\r\n                        this.content = contentChange;\r\n                        this.propagateChange(this.content);\r\n                        this.onChange.emit({\r\n                            text: editor.getContent({format: 'text'}),\r\n                            content: this.content\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }, 100);\r\n    }\r\n\r\n    setContent(content: string) {\r\n        this.content = content;\r\n        const editor = tinymce.get(this.elementId);\r\n        if (editor != null) {\r\n            editor.setContent(this.content != null ? this.content : '');\r\n        }\r\n    }\r\n\r\n    append(data: string, editorId?: string) {\r\n        const editor = !editorId ? tinymce.get(this.elementId) : tinymce.get(editorId);\r\n        if (editor != null) {\r\n            editor.execCommand('mceInsertContent', false, data);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    destroy() {\r\n        tinymce.remove(`#${this.elementId}`);\r\n    }\r\n\r\n    writeValue(value) {\r\n        this.content = value;\r\n        const editor = tinymce.get(this.elementId);\r\n        this.initEditor();\r\n        if (editor != null) {\r\n            editor.setContent(this.content != null ? this.content : '');\r\n        }\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TinymceComponent } from './tinymce.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [TinymceComponent],\r\n    declarations: [TinymceComponent],\r\n    providers: [],\r\n})\r\n\r\nexport class TinymceModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, Validators, ValidatorFn } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class NumberValidator implements Validators {\r\n    constructor() {\r\n    }\r\n\r\n    isValid(c: FormControl) {\r\n        if (c && c.value && c.value != null) {\r\n            if (isNaN(parseFloat(c.value)) || !isFinite(c.value)) {\r\n                return { isValid: false };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    greaterThan(value: number): ValidatorFn {\r\n        return (c: FormControl) => {\r\n            if (value !== undefined && c.value) {\r\n                if (c.value <= value) {\r\n                    return { greaterThan: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n\r\n    lessThan(value: number) {\r\n        return (c: FormControl) => {\r\n            if (value && c.value) {\r\n                if (c.value >= value) {\r\n                    return { lessThan: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n\r\n    range(value: { fromValue: number, toValue: number }): ValidatorFn {\r\n        return (c: FormControl) => {\r\n            if (value && c.value) {\r\n                if (c.value < value.fromValue || c.value > value.toValue) {\r\n                    return { invalidRange: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}