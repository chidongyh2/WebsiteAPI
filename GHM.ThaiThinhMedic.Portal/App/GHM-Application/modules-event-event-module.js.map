{"version":3,"sources":["webpack:///./src/app/modules/event/constants/event-status.const.ts","webpack:///./src/app/modules/event/event-album/event-album-form/event-album-form.component.html","webpack:///./src/app/modules/event/event-album/event-album-form/event-album-form.component.ts","webpack:///./src/app/modules/event/event-album/event-album.component.html","webpack:///./src/app/modules/event/event-album/event-album.component.scss","webpack:///./src/app/modules/event/event-album/event-album.component.ts","webpack:///./src/app/modules/event/event-album/event-album.model.ts","webpack:///./src/app/modules/event/event-day-detail/event-day-detail.component.html","webpack:///./src/app/modules/event/event-day-detail/event-day-detail.component.ts","webpack:///./src/app/modules/event/event-day-form/event-day-form.component.css","webpack:///./src/app/modules/event/event-day-form/event-day-form.component.html","webpack:///./src/app/modules/event/event-day-form/event-day-form.component.ts","webpack:///./src/app/modules/event/event-day/event-day.component.css","webpack:///./src/app/modules/event/event-day/event-day.component.html","webpack:///./src/app/modules/event/event-day/event-day.component.ts","webpack:///./src/app/modules/event/event-detail/event-detail.component.html","webpack:///./src/app/modules/event/event-detail/event-detail.component.ts","webpack:///./src/app/modules/event/event-form/event-form.component.css","webpack:///./src/app/modules/event/event-form/event-form.component.html","webpack:///./src/app/modules/event/event-form/event-form.component.ts","webpack:///./src/app/modules/event/event-list/event-list.component.html","webpack:///./src/app/modules/event/event-list/event-list.component.ts","webpack:///./src/app/modules/event/event-register-detail/event-register-detail.component.html","webpack:///./src/app/modules/event/event-register-detail/event-register-detail.component.ts","webpack:///./src/app/modules/event/event-register-list/event-register-list.component.html","webpack:///./src/app/modules/event/event-register-list/event-register-list.component.ts","webpack:///./src/app/modules/event/event-register/event-register.component.html","webpack:///./src/app/modules/event/event-register/event-register.component.ts","webpack:///./src/app/modules/event/event-routing.module.ts","webpack:///./src/app/modules/event/event.module.ts","webpack:///./src/app/modules/event/event.service.ts","webpack:///./src/app/modules/event/models/event-day.model.ts","webpack:///./src/app/modules/event/models/event-register.model.ts","webpack:///./src/app/modules/event/models/event-translation.model.ts","webpack:///./src/app/modules/event/models/event.model.ts","webpack:///./src/app/shareds/components/nh-suggestion/nh-suggestion.module.ts","webpack:///./src/app/shareds/constants/pattern.const.ts","webpack:///./src/app/shareds/constants/register-role.conts.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAO,IAAM,WAAW,GAAG;IACvB,KAAK,EAAE,CAAC;IACR,OAAO,EAAE,CAAC;IACV,QAAQ,EAAE,CAAC;IACX,QAAQ,EAAE,CAAC;CACd;AAEM,IAAM,mBAAmB,GAAG;IAC/B,QAAQ,EAAE,CAAC;IACX,MAAM,EAAE,CAAC;IACT,QAAQ,EAAE,CAAC;CACd;;;;;;;;;;;;ACXD,o/EAAo/E,mCAAmC,2BAA2B,wkCAAwkC,yCAAyC,0CAA0C,4UAA4U,ooCAAooC,wOAAwO,yBAAyB,+DAA+D,2CAA2C,gEAAgE,uBAAuB,iDAAiD,2TAA2T,oiCAAoiC,2OAA2O,uCAAuC,iDAAiD,mUAAmU,+gCAA+gC,mOAAmO,2CAA2C,6CAA6C,+QAA+Q,qgCAAqgC,iOAAiO,0CAA0C,6CAA6C,uQAAuQ,6hCAA6hC,uOAAuO,iDAAiD,6CAA6C,0cAA0c,iCAAiC,UAAU,IAAI,UAAU,mbAAmb,iCAAiC,OAAO,IAAI,YAAY,4mDAA4mD,aAAa,ykEAAykE,i1G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzuhB;AACO;AAC0B;AACrB;AACW;AAElB;AAEQ;AACjB;AACW;AACzB;AAC6B;AAC1C;AACqB;AACD;AACR;AASxC;IAA6C,2CAAiB;IAiB1D,iCAAoB,EAAe,EACf,MAAc,EACd,KAAqB,EACrB,MAAqB,EACrB,WAAwB,EACxB,cAA8B,EAC9B,YAA0B;QAN9C,YAOI,iBAAO,SAMV;QAbmB,QAAE,GAAF,EAAE,CAAa;QACf,YAAM,GAAN,MAAM,CAAQ;QACd,WAAK,GAAL,KAAK,CAAgB;QACrB,YAAM,GAAN,MAAM,CAAe;QACrB,iBAAW,GAAX,WAAW,CAAa;QACxB,oBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAY,GAAZ,YAAY,CAAc;QAjB9C,WAAK,GAAG,IAAI,uEAAK,EAAE,CAAC;QACpB,WAAK,GAAG,IAAI,uEAAK,EAAE,CAAC;QACpB,iBAAW,GAAG,IAAI,kFAAgB,EAAE,CAAC;QACrC,YAAM,GAAY,EAAE,CAAC;QACrB,gBAAU,GAAU,EAAE,CAAC;QACvB,YAAM,GAAY,EAAE,CAAC;QAIrB,gBAAU,GAAG,IAAI,8DAAU,EAAE,CAAC;QA6LtB,uBAAiB,GAAG,UAAC,QAAgB;YACzC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC,CAAC;YACtF,KAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,GAAG,KAAI,CAAC,sBAAsB,CAAC;gBACtE,EAAC,OAAO,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,EAAC;gBAC/C,EAAC,aAAa,EAAE,CAAC,WAAW,CAAC,EAAC;gBAC9B,EAAC,SAAS,EAAE,CAAC,WAAW,CAAC,EAAC;gBAC1B,EAAC,WAAW,EAAE,CAAC,WAAW,CAAC,EAAC;gBAC5B,EAAC,iBAAiB,EAAE,CAAC,WAAW,CAAC,EAAC;aACrC,CAAC,CAAC;YACH,IAAM,oBAAoB,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvC,UAAU,EAAE,CAAC,QAAQ,CAAC;gBACtB,KAAK,EAAE,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE;wBAC5B,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;wBACzB,yDAAU,CAAC,OAAO,CAAC,SAAS,CAAC;qBAChC,CAAC;gBACF,WAAW,EAAE,CAAC,KAAI,CAAC,WAAW,CAAC,WAAW,EAAE;wBACxC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;gBACF,OAAO,EAAE,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE;wBAChC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;gBACF,SAAS,EAAE,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE;wBACpC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;gBACF,eAAe,EAAE,CAAC,KAAI,CAAC,WAAW,CAAC,eAAe,EAAE;wBAChD,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;aACL,CAAC,CAAC;YACH,oBAAoB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAS,IAAK,YAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAA/B,CAA+B,CAAC,CAAC;YAC5F,OAAO,oBAAoB,CAAC;QAChC,CAAC,CAAC;QAjNE,KAAI,CAAC,UAAU,GAAG;YACd,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAC;YACtB,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAC;SACzB,CAAC;;IACN,CAAC;IAED,0CAAQ,GAAR;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,+CAAa,GAAb;IACA,CAAC;IAED,qCAAG,GAAH,UAAI,OAAe;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,sCAAI,GAAJ,UAAK,OAAe,EAAE,OAAe;QACjC,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,qDAAmB,GAAnB,UAAoB,YAA0B;QAC1C,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,SAAS,EAAE,YAAY,CAAC,GAAG;SAC9B,CAAC,CAAC;IACP,CAAC;IAED,sDAAoB,GAApB,UAAqB,aAA6B;QAAlD,iBAIC;QAHG,aAAa,CAAC,GAAG,CAAC,UAAC,YAA0B;YACzC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,uEAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uDAAqB,GAArB;QACI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,0CAAQ,GAAR;QACI,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,sCAAI,GAAJ;QAAA,iBAkCC;QAjCG,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzC,IAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAChD,IAAI,OAAO,IAAI,eAAe,EAAE;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG;gBACd,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,KAAK,EAAE,IAAI,CAAC,KAAK;aACpB,CAAC;YACF,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC;qBAChE,IAAI,CAAC,gEAAQ,CAAC,cAAM,YAAI,CAAC,QAAQ,GAAG,KAAK,EAArB,CAAqB,CAAC,CAAC;qBAC3C,SAAS,CAAC,UAAC,MAA6B;oBACrC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBACpC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,KAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;gBAClC,CAAC,CAAC,CAAC;aACV;iBAAM;gBACH,IAAI,CAAC,YAAY;qBACZ,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC;qBAC1C,IAAI,CAAC,gEAAQ,CAAC,cAAM,YAAI,CAAC,QAAQ,GAAG,KAAK,EAArB,CAAqB,CAAC,CAAC;qBAC3C,SAAS,CAAC,UAAC,MAA6B;oBACrC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBACpC,KAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE;wBACvB,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;qBACjC;gBACL,CAAC,CAAC,CAAC;aACV;SACJ;IACL,CAAC;IAED,2CAAS,GAAT,UAAU,KAAY;QAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,6CAAW,GAAX,UAAY,KAAY;QACpB,8CAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,iDAAe,GAAf;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/C,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,KAAK,GAAG,iDAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,KAAK,CAAC,WAAW,GAAG,iDAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;SACjC;IACL,CAAC;IAEO,2CAAS,GAAjB;QAAA,iBAyBC;QAxBG,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;aAChF,SAAS,CAAC,UAAC,WAAkB;YAC1B,IAAI,WAAW,EAAE;gBACb,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC;oBAClB,QAAQ,EAAE,WAAW,CAAC,QAAQ;oBAC9B,SAAS,EAAE,WAAW,CAAC,SAAS;oBAChC,IAAI,EAAE,WAAW,CAAC,IAAI;oBACtB,gBAAgB,EAAE,WAAW,CAAC,gBAAgB;iBACjD,CAAC,CAAC;gBAEH,IAAI,WAAW,CAAC,YAAY,IAAI,WAAW,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjE,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAgB;wBAChD,IAAM,MAAM,GAAG,4CAAM,CAAC,WAAW,CAAC,YAAY,EAAE,UAAC,WAA6B;4BAC1E,OAAO,WAAW,CAAC,UAAU,KAAK,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC;wBAC7D,CAAC,CAAC,CAAC;wBACH,IAAI,MAAM,EAAE;4BACR,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;yBAC5B;oBACL,CAAC,CAAC,CAAC;iBACN;gBACD,KAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;gBACjC,KAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;aACpC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,4CAAU,GAAlB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;YACf,gBAAgB,EAAE,EAAE;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAgB;YAChD,KAAK,CAAC,UAAU,CAAC;gBACb,KAAK,EAAE,EAAE;gBACT,WAAW,EAAE,EAAE;aAClB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACpD,CAAC;IAEO,4CAAU,GAAlB;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxD,CAAC;IAEO,2CAAS,GAAjB;QAAA,iBAmBC;QAlBG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAClD,EAAC,MAAM,EAAE,CAAC,UAAU,CAAC,EAAC;YACtB,EAAC,WAAW,EAAE,CAAC,WAAW,CAAC,EAAC;SAC/B,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/B,gBAAgB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;YAC/C,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;oBACpB,yDAAU,CAAC,QAAQ;iBACtB,CAAC;YACF,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBAC9B,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;iBAC5B,CAAC;YACF,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAClC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC;IACvE,CAAC;IAzM4B;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;kCAAiB,gGAAgB;mEAAC;IACjC;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;kCAAiB,gGAAgB;mEAAC;IACnC;QAA1B,+DAAS,CAAC,8EAAc,CAAC;kCAAiB,8EAAc;mEAAC;IAHjD,uBAAuB;QANnC,+DAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;;;SAGnC,CAAC;yCAmB0B,0DAAW;YACP,sDAAM;YACP,8DAAc;YACb,wDAAa;YACR,2EAAW;YACR,4EAAc;YAChB,4DAAY;OAvBrC,uBAAuB,CA4OnC;IAAD,8BAAC;CAAA,CA5O4C,sEAAiB,GA4O7D;AA5OmC;;;;;;;;;;;;ACzBpC,g4CAAg4C,sEAAsE,wCAAwC,qSAAqS,cAAc,6KAA6K,cAAc,kCAAkC,oBAAoB,uFAAuF,oBAAoB,iNAAiN,sBAAsB,MAAM,IAAI,OAAO,2QAA2Q,0BAA0B,SAAS,IAAI,WAAW,wzE;;;;;;;;;;;ACAlrF,gCAAgC,qBAAqB,oBAAoB,qBAAqB,kBAAkB,oBAAoB,oBAAoB,EAAE,qBAAqB,kBAAkB,yBAAyB,0BAA0B,uBAAuB,EAAE,2BAA2B,wBAAwB,EAAE,iDAAiD,wCAAwC,gCAAgC,EAAE,wDAAwD,yBAAyB,EAAE,uCAAuC,+BAA+B,2BAA2B,yBAAyB,EAAE,2CAA2C,sBAAsB,4CAA4C,EAAE,kDAAkD,wBAAwB,2BAA2B,0BAA0B,2BAA2B,6BAA6B,iBAAiB,kBAAkB,sBAAsB,uBAAuB,yCAAyC,6BAA6B,2BAA2B,EAAE,qDAAqD,kCAAkC,8BAA8B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtoC;AACvB;AAEE;AACxB;AACA;AAC0B;AACA;AAEpB;AACuC;AACxC;AACN;AAQxC;IAAyC,uCAAsC;IAK3E,6BAAuC,SAAqB,EACxB,MAAe,EAC/B,KAAqB,EACrB,WAAwB,EACxB,QAAkB,EAClB,MAAqB,EACrB,GAAsB,EACtB,YAA0B;QAP9C,YAQI,iBAAO,SACV;QATsC,eAAS,GAAT,SAAS,CAAY;QACxB,YAAM,GAAN,MAAM,CAAS;QAC/B,WAAK,GAAL,KAAK,CAAgB;QACrB,iBAAW,GAAX,WAAW,CAAa;QACxB,cAAQ,GAAR,QAAQ,CAAU;QAClB,YAAM,GAAN,MAAM,CAAe;QACrB,SAAG,GAAH,GAAG,CAAmB;QACtB,kBAAY,GAAZ,YAAY,CAAc;;IAE9C,CAAC;IAED,sCAAQ,GAAR;QAAA,iBASC;QARG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,iBAAiB,EAClF,iBAAiB,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC7D,IAAI,MAAM,CAAC,EAAE,EAAE;gBACX,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC;gBACzB,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAClB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAQ,GAAR;QACI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,oCAAM,GAAN,UAAO,WAAmB;QAA1B,iBAWC;QAVG,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,YAAY;aACZ,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC1D,IAAI,CAAC,gEAAQ,CAAC,cAAM,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;aAC9C,SAAS,CAAC,UAAC,MAAkD;YAC1D,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAClC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,kCAAI,GAAJ,UAAK,EAAU;QACX,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,oCAAM,GAAN,UAAO,EAAU;QAAjB,iBAKC;QAJG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;aAC/C,SAAS,CAAC,UAAC,MAA6B;YACrC,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACX,CAAC;IApDmC;QAAnC,+DAAS,CAAC,oGAAuB,CAAC;kCAAiB,oGAAuB;+DAAC;IADnE,mBAAmB;QAL/B,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;;SAE9B,CAAC;QAOe,uEAAM,CAAC,8DAAU,CAAC;QAClB,uEAAM,CAAC,+DAAO,CAAC;yDACD,8DAAc;YACR,0EAAW;YACd,wDAAQ;YACV,wDAAa;YAChB,+DAAiB;YACR,2DAAY;OAZrC,mBAAmB,CAsD/B;IAAD,0BAAC;CAAA,CAtDwC,sEAAiB,GAsDzD;AAtD+B;;;;;;;;;;;;;;AClBhC;AAAA;IAAA;IAGA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;ACLD,uzBAAuzB,k2BAAk2B,yhBAAyhB,iDAAiD,qSAAqS,iiBAAiiB,wDAAwD,6kBAA6kB,2DAA2D,giBAAgiB,gCAAgC,qjBAAqjB,2CAA2C,qSAAqS,2dAA2d,oDAAoD,+gBAA+gB,6BAA6B,GAAG,+BAA+B,6aAA6a,2BAA2B,GAAG,6BAA6B,0lBAA0lB,mDAAmD,uBAAuB,+CAA+C,+JAA+J,2kBAA2kB,qCAAqC,UAAU,IAAI,QAAQ,0uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzpQ;AAEjB;AAC0B;AAC3C;AAOhD;IAA6C,2CAAiB;IAM1D,iCAAoB,YAA0B;QAA9C,YACI,iBAAO,SACV;QAFmB,kBAAY,GAAZ,YAAY,CAAc;;IAE9C,CAAC;IAED,0CAAQ,GAAR;IACA,CAAC;IAED,4CAAU,GAAV,UAAW,EAAU;QAArB,iBAIC;QAHG,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;aAChD,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,cAAc,GAAG,MAAM,EAA5B,CAA4B,CAAC,CAAC;IAC3D,CAAC;IAhBiC;QAAjC,+DAAS,CAAC,qBAAqB,CAAC;kCAAsB,gGAAgB;wEAAC;IAC/D;QAAR,2DAAK,EAAE;;4DAAiB;IAFhB,uBAAuB;QALnC,+DAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;;SAEnC,CAAC;yCAQoC,2DAAY;OANrC,uBAAuB,CAkBnC;IAAD,8BAAC;CAAA,CAlB4C,sEAAiB,GAkB7D;AAlBmC;;;;;;;;;;;;ACXpC,mB;;;;;;;;;;;ACAA,wPAAwP,qBAAqB,kBAAkB,IAAI,kBAAkB,+xBAA+xB,g8BAAg8B,iJAAiJ,4BAA4B,YAAY,8CAA8C,iCAAiC,qMAAqM,+/BAA+/B,wJAAwJ,yBAAyB,2CAA2C,4CAA4C,iCAAiC,6xBAA6xB,gGAAgG,yBAAyB,6BAA6B,+zBAA+zB,kIAAkI,6BAA6B,6CAA6C,u6BAAu6B,6IAA6I,wCAAwC,6CAA6C,oQAAoQ,g5BAAg5B,qJAAqJ,uCAAuC,iCAAiC,ywCAAywC,+CAA+C,uBAAuB,IAAI,yDAAyD,2UAA2U,iCAAiC,UAAU,IAAI,QAAQ,k3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr2T;AAC3C;AAC0B;AAC3C;AAC0B;AACN;AAEtC;AACyC;AAC7B;AAE2B;AASnE;IAA2C,yCAAiB;IAOxD,+BAAoB,EAAe,EACf,eAAgC,EAChC,WAAwB,EACxB,YAA0B;QAH9C,YAII,iBAAO,SACV;QALmB,QAAE,GAAF,EAAE,CAAa;QACf,qBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAW,GAAX,WAAW,CAAa;QACxB,kBAAY,GAAZ,YAAY,CAAc;QAP9C,mBAAa,GAAe,EAAE,CAAC;QAC/B,cAAQ,GAAG,IAAI,gEAAQ,EAAE,CAAC;QAC1B,yBAAmB,GAAG,IAAI,2EAAmB,EAAE,CAAC;QAgKxC,uBAAiB,GAAG,UAAC,QAAgB;YACzC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC;YAChG,KAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,GAAG,KAAI,CAAC,sBAAsB,CAAC;gBACtE,EAAC,MAAM,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC,EAAC;gBACnC,EAAC,aAAa,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC,EAAC;gBAC1C,EAAC,SAAS,EAAE,CAAC,WAAW,CAAC,EAAC;aAC7B,CAAC,CAAC;YACH,IAAM,gBAAgB,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnC,UAAU,EAAE,CAAC,QAAQ,CAAC;gBACtB,IAAI,EAAE,CAAC,KAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE;wBAClC,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;gBACF,WAAW,EAAE,CAAC,KAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE;wBAChD,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,SAAS,CAAC,IAAI,CAAC;qBAC7B,CAAC;gBACF,OAAO,EAAE,CAAC,KAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE;wBACxC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;aACL,CAAC,CAAC;YACH,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAS,IAAK,YAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAApC,CAAoC,CAAC,CAAC;YAC7F,OAAO,gBAAgB,CAAC;QAC5B,CAAC;;IAhLD,CAAC;IAED,wCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,6CAAa,GAAb;QACI,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SAC9B;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,mCAAG,GAAH,UAAI,OAAe;QACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAED,oCAAI,GAAJ,UAAK,OAAe,EAAE,EAAU;QAC5B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAED,oCAAI,GAAJ;QAAA,iBA6BC;QA5BG,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzC,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAClD,IAAI,OAAO,IAAI,eAAe,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;YAC1E,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC;qBACjE,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,QAAQ,GAAG,KAAK,EAArB,CAAqB,CAAC,CAAC;qBAC3C,SAAS,CAAC,UAAC,MAA6B;oBACrC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gDAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACrD,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBACrC,CAAC,CAAC,CAAC;aACV;iBAAM;gBACH,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC;qBACxD,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,QAAQ,GAAG,KAAK,EAArB,CAAqB,CAAC,CAAC;qBAC3C,SAAS,CAAC,UAAC,MAA6B;oBACrC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,KAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;oBAC/B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gDAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACpD,IAAI,KAAI,CAAC,eAAe,EAAE;wBACtB,KAAI,CAAC,UAAU,EAAE,CAAC;qBACrB;yBAAM;wBACH,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;qBACpC;gBACL,CAAC,CAAC,CAAC;aACV;SACJ;IACL,CAAC;IAEO,yCAAS,GAAjB,UAAkB,EAAU;QAA5B,iBAiBC;QAhBG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;aACrD,SAAS,CAAC,UAAC,QAAkB;YAC1B,IAAI,QAAQ,EAAE;gBACV,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAChC,IAAI,QAAQ,CAAC,oBAAoB,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3E,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAgB;wBACrD,IAAM,MAAM,GAAG,2CAAM,CAAC,QAAQ,CAAC,oBAAoB,EAAE,UAAC,WAA8B;4BAChF,OAAO,WAAW,CAAC,UAAU,KAAK,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC;wBAC7D,CAAC,CAAC,CAAC;wBACH,IAAI,MAAM,EAAE;4BACR,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;yBAC5B;oBACL,CAAC,CAAC,CAAC;iBACN;aACJ;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,0CAAU,GAAlB;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC5D,CAAC;IAEO,yCAAS,GAAjB;QAAA,iBAyCC;QAxCG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,cAAc,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,EAAE,WAAW;YACpG,WAAW,EAAE,yBAAyB,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAClD,EAAC,cAAc,EAAE,CAAC,SAAS,CAAC,EAAC;YAC7B,EAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,EAAC;YACxC,EAAC,WAAW,EAAE,CAAC,SAAS,CAAC,EAAC;YAC1B,EAAC,aAAa,EAAE,CAAC,SAAS,CAAC,EAAC;YAC5B,EAAC,SAAS,EAAE,CAAC,SAAS,CAAC,EAAC;YACxB,EAAC,WAAW,EAAE,CAAC,SAAS,CAAC,EAAC;YAC1B,EAAC,WAAW,EAAE,CAAC,UAAU,CAAC,EAAC;SAC9B,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAClC,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;oBACvC,IAAI,CAAC,eAAe,CAAC,OAAO;iBAC/B,CAAC;YACF,uBAAuB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;oBAClD,IAAI,CAAC,eAAe,CAAC,OAAO;iBAC/B,CAAC;YACF,gBAAgB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;YAClD,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;oBACjC,yDAAU,CAAC,QAAQ;iBACtB,CAAC;YACF,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;YACpC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;oBACjC,IAAI,CAAC,eAAe,CAAC,OAAO;iBAC/B,CAAC;YACF,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;oBACrC,IAAI,CAAC,eAAe,CAAC,OAAO;iBAC/B,CAAC;YACF,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;oBAC7B,IAAI,CAAC,eAAe,CAAC,OAAO;iBAC/B,CAAC;YACF,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;oBACjC,IAAI,CAAC,eAAe,CAAC,OAAO;iBAC/B,CAAC;YACF,sBAAsB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC;YAC9D,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SACvC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAS,IAAK,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC;IAChF,CAAC;IAEO,0CAAU,GAAlB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,QAAQ,EAAE,IAAI;YACd,YAAY,EAAE,EAAE;YAChB,uBAAuB,EAAE,EAAE;YAC3B,gBAAgB,EAAE,EAAE;YACpB,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,KAAK;YAChB,sBAAsB,EAAE,IAAI;YAC5B,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,EAAE;YACf,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;SAChB,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAgB;YACrD,KAAK,CAAC,UAAU,CAAC;gBACb,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,EAAE;gBACf,OAAO,EAAE,EAAE;aACd,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACpD,CAAC;IAlK+B;QAA/B,+DAAS,CAAC,mBAAmB,CAAC;kCAAoB,gGAAgB;oEAAC;IAC3D;QAAR,2DAAK,EAAE;;0DAAiB;IAFhB,qBAAqB;QANjC,+DAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;;;YAG9B,SAAS,EAAE,CAAC,4EAAe,CAAC;SAC/B,CAAC;yCAQ0B,0DAAW;YACE,4EAAe;YACnB,0EAAW;YACV,2DAAY;OAVrC,qBAAqB,CA6LjC;IAAD,4BAAC;CAAA,CA7L0C,sEAAiB,GA6L3D;AA7LiC;;;;;;;;;;;;ACpBlC,mB;;;;;;;;;;;ACAA,2kBAA2kB,owBAAowB,4DAA4D,WAAW,gDAAgD,aAAa,gDAAgD,gDAAgD,2DAA2D,kBAAkB,GAAG,oBAAoB,2DAA2D,gBAAgB,GAAG,kBAAkB,qMAAqM,qBAAqB,g0D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA74D;AACH;AAEkB;AACnC;AAEpB;AAE6D;AAOzF;IAAuC,qCAAoC;IAOvE,2BAAoB,YAA0B;QAA9C,YACI,iBAAO,SACV;QAFmB,kBAAY,GAAZ,YAAY,CAAc;QAHrC,cAAQ,GAAG,KAAK,CAAC;;IAK1B,CAAC;IAED,oCAAQ,GAAR;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IAED,4CAAgB,GAAhB,UAAiB,SAAgC;QAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,+BAAG,GAAH;QACI,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,gCAAI,GAAJ,UAAK,EAAU;QACX,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,kCAAM,GAAN,UAAO,EAAU;QACb,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,kCAAM,GAAN,UAAO,EAAU;QAAjB,iBAUC;QATG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;SACV;QACD,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;aAC7C,SAAS,CAAC,UAAC,MAA6B;YACrC,6CAAQ,CAAC,KAAI,CAAC,SAAS,EAAE,UAAC,QAAkB;gBACxC,OAAO,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACX,CAAC;IAGO,wCAAY,GAApB;QAAA,iBAGC;QAFG,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC;aAC5E,SAAS,CAAC,UAAC,MAA2B,IAAK,YAAI,CAAC,SAAS,GAAG,MAAM,EAAvB,CAAuB,CAAC,CAAC;IAC7E,CAAC;IAhDiC;QAAjC,+DAAS,CAAC,8FAAqB,CAAC;kCAAwB,8FAAqB;oEAAC;IAC3C;QAAnC,+DAAS,CAAC,oGAAuB,CAAC;kCAA0B,oGAAuB;sEAAC;IAC5E;QAAR,2DAAK,EAAE;;sDAAiB;IAChB;QAAR,2DAAK,EAAE;;uDAAkB;IACjB;QAAR,2DAAK,EAAE;;wDAAuB;IALtB,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;;;SAG5B,CAAC;yCAQoC,2DAAY;OAPrC,iBAAiB,CAkD7B;IAAD,wBAAC;CAAA,CAlDsC,sEAAiB,GAkDvD;AAlD6B;;;;;;;;;;;;ACf9B,2wBAA2wB,kzBAAkzB,2yBAA2yB,qzBAAqzB,s5BAAs5B,qbAAqb,gDAAgD,4RAA4R,kaAAka,gGAAgG,4RAA4R,2rBAA2rB,uDAAuD,mXAAmX,sDAAsD,ydAAyd,4BAA4B,kiBAAkiB,uCAAuC,idAAid,qDAAqD,mBAAmB,2CAA2C,uDAAuD,8bAA8b,kCAAkC,UAAU,IAAI,QAAQ,80D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl2R;AACV;AACC;AAGgB;AAEE;AAOnE;IAA0C,wCAAiB;IAOvD,8BAAoC,MAAe,EAC/B,KAAqB,EACrB,YAA0B;QAF9C,YAGI,iBAAO,SAOV;QAVmC,YAAM,GAAN,MAAM,CAAS;QAC/B,WAAK,GAAL,KAAK,CAAgB;QACrB,kBAAY,GAAZ,YAAY,CAAc;QAP9C,eAAS,GAAwB,EAAE,CAAC;QACpC,uBAAiB,GAAuB,EAAE,CAAC;QAC3C,cAAQ,GAAG,CAAC,CAAC;QAOT,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC9B,IAAI,MAAM,CAAC,EAAE,EAAE;gBACX,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;gBACpB,KAAI,CAAC,cAAc,EAAE,CAAC;aACzB;QACL,CAAC,CAAC,CAAC;;IACP,CAAC;IAED,uCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,kBAAkB,EACnF,iBAAiB,CAAC,CAAC;IAC3B,CAAC;IAED,6CAAc,GAAd,UAAe,QAAgB;QAC3B,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;YAC5B,OAAO;SACV;QACD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC1C,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;IACL,CAAC;IAEO,6CAAc,GAAtB;QAAA,iBAGC;QAFG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;aAC/B,SAAS,CAAC,UAAC,MAAa,IAAK,YAAI,CAAC,WAAW,GAAG,MAAM,EAAzB,CAAyB,CAAC,CAAC;IACjE,CAAC;IArCQ,oBAAoB;QALhC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;;SAE/B,CAAC;QASe,uEAAM,CAAC,+DAAO,CAAC;iDACD,8DAAc;YACP,2DAAY;OATrC,oBAAoB,CAsChC;IAAD,2BAAC;CAAA,CAtCyC,sEAAiB,GAsC1D;AAtCgC;;;;;;;;;;;;ACdjC,mB;;;;;;;;;;;ACAA,6GAA6G,qBAAqB,cAAc,IAAI,cAAc,8uDAA8uD,mlCAAmlC,iLAAiL,wBAAwB,YAAY,0CAA0C,iDAAiD,yzDAAyzD,quCAAquC,wLAAwL,yBAAyB,2DAA2D,2CAA2C,iDAAiD,6SAA6S,uwCAAuwC,qCAAqC,0XAA0X,mOAAmO,qBAAqB,2DAA2D,iDAAiD,iDAAiD,6SAA6S,8nCAA8nC,oOAAoO,2CAA2C,iDAAiD,ijBAAijB,klCAAklC,uLAAuL,0CAA0C,iDAAiD,6SAA6S,qsCAAqsC,6LAA6L,gDAAgD,iDAAiD,6SAA6S,i7EAAi7E,kIAAkI,6BAA6B,6CAA6C,6jCAA6jC,6IAA6I,wCAAwC,6CAA6C,0aAA0a,oDAAoD,mBAAmB,2CAA2C,uDAAuD,yTAAyT,iCAAiC,UAAU,IAAI,QAAQ,44D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl7mB;AAC5C;AACG;AACtB;AACuB;AACrB;AAEN;AACiD;AACpB;AACzC;AAC2D;AACtB;AAEL;AACb;AAC6C;AAS5F;IAAwC,sCAAiB;IASrD,4BAAoC,MAAe,EAC/B,KAAqB,EACrB,EAAe,EACf,YAA0B,EAC1B,eAAgC;QAJpD,YAKI,iBAAO,SASV;QAdmC,YAAM,GAAN,MAAM,CAAS;QAC/B,WAAK,GAAL,KAAK,CAAgB;QACrB,QAAE,GAAF,EAAE,CAAa;QACf,kBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAe,GAAf,eAAe,CAAiB;QATpD,WAAK,GAAG,IAAI,yDAAK,EAAE,CAAC;QACpB,eAAS,GAAwB,EAAE,CAAC;QACpC,sBAAgB,GAAG,IAAI,gFAAgB,EAAE,CAAC;QAC1C,mBAAa,GAAG,KAAK,CAAC;QAmLd,uBAAiB,GAAG,UAAC,QAAgB;YACzC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE,aAAa,EAAE,iBAAiB,EAAE,WAAW;gBAC9G,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;YACtC,KAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,GAAG,KAAI,CAAC,sBAAsB,CAAC;gBACtE,EAAC,MAAM,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC,EAAC;gBACnC,EAAC,aAAa,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC,EAAC;gBAC1C,EAAC,WAAW,EAAE,CAAC,WAAW,CAAC,EAAC;gBAC5B,EAAC,iBAAiB,EAAE,CAAC,WAAW,CAAC,EAAC;gBAClC,EAAC,SAAS,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC,EAAC;gBACtC,EAAC,SAAS,EAAE,CAAC,WAAW,CAAC,EAAC;gBAC1B,EAAC,SAAS,EAAE,CAAC,WAAW,CAAC,EAAC;aAC7B,CAAC,CAAC;YACH,IAAM,gBAAgB,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnC,UAAU,EAAE,CAAC,QAAQ,CAAC;gBACtB,IAAI,EAAE,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;wBAC/B,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;gBACF,WAAW,EAAE,CAAC,KAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;wBAC7C,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;gBACF,SAAS,EAAE,CAAC,KAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;wBACzC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;gBACF,eAAe,EAAE,CAAC,KAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE;wBACrD,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;gBACF,OAAO,EAAE,CAAC,KAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;wBACrC,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,SAAS,CAAC,IAAI,CAAC;qBAC7B,CAAC;gBACF,OAAO,EAAE,CAAC,KAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;wBACrC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC5B,CAAC;aACL,CAAC,CAAC;YACH,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAS;gBAC9C,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;gBACrC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC9B,CAAC,CAAC,CAAC;YACH,OAAO,gBAAgB,CAAC;QAC5B,CAAC,CAAC;QApNE,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC3D,IAAM,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YACrB,IAAI,EAAE,EAAE;gBACJ,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,KAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;aACtB;QACL,CAAC,CAAC,CAAC;;IACP,CAAC;IAED,qCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,mBAAmB,EACpF,iBAAiB,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,4CAAe,GAAf;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,4CAAe,GAAf,UAAgB,IAAkB;QAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;gBAClB,SAAS,EAAE,IAAI,CAAC,GAAG;aACtB,CAAC,CAAC;SACN;IACL,CAAC;IAED,uCAAU,GAAV,UAAW,IAAY;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,gDAAmB,GAAnB,UAAoB,KAAU;QAC1B,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,0EAAW,CAAC,OAAO,CAAC;aACvF,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,kDAAqB,GAArB,UAAsB,cAA6C;QAAnE,iBAmBC;QAlBG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAC,aAA+B;YAC7D,IAAM,QAAQ,GAAG,iBAAe,KAAI,CAAC,eAAiB,CAAC;YACvD,IAAI,aAAa,CAAC,SAAS,KAAK,QAAQ,EAAE;gBACtC,IAAI,cAAc,YAAY,KAAK,EAAE;oBACjC,cAAc,CAAC,OAAO,CAAC,UAAC,YAA0B;wBAC9C,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;4BACvB,OAAO;yBACV;wBACD,aAAa,CAAC,MAAM,CAAC,yFAAkF,YAAY,CAAC,WAAW,sBAAe,YAAY,CAAC,GAAG,UAAM,EAAE,QAAQ,CAAC,CAAC;oBACpL,CAAC,CAAC,CAAC;iBACN;qBAAM;oBACH,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;wBACzB,OAAO;qBACV;oBACD,aAAa,CAAC,MAAM,CAAC,yFAAkF,cAAc,CAAC,WAAW,sBAAe,cAAc,CAAC,GAAG,UAAM,EAAE,QAAQ,CAAC,CAAC;iBACvL;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gCAAG,GAAH;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,iCAAI,GAAJ,UAAK,EAAU;QACX,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,4CAAe,GAAf;QACI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,SAAS,EAAE,IAAI;SAClB,CAAC,CAAC;IACP,CAAC;IAED,iCAAI,GAAJ;QAAA,iBA+BC;QA9BG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO;SACV;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzC,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAClD,IAAI,OAAO,IAAI,eAAe,EAAE;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;YACpE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;qBACxC,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,QAAQ,GAAG,KAAK,EAArB,CAAqB,CAAC,CAAC;qBAC3C,SAAS,CAAC,UAAC,MAA6B;oBACrC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC;wBAClB,gBAAgB,EAAE,MAAM,CAAC,IAAI;qBAChC,CAAC,CAAC;oBACH,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;gBAC5B,CAAC,CAAC,CAAC;aACV;iBAAM;gBACH,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;qBAC/B,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,QAAQ,GAAG,KAAK,EAArB,CAAqB,CAAC,CAAC;qBAC3C,SAAS,CAAC,UAAC,MAA6B;oBACrC,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;oBACtB,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;gBAC5B,CAAC,CAAC,CAAC;aACV;SACJ;IACL,CAAC;IAEO,uCAAU,GAAlB;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC5D,CAAC;IAEO,sCAAS,GAAjB;QAAA,iBAyBC;QAxBG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,cAAc,EAAE,yBAAyB,CAAC,CAAC,CAAC;QACpF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAC,cAAc,EAAE,CAAC,SAAS,CAAC,EAAC,EAAE,EAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,CAAC;QACjI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/B,YAAY,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;oBACpC,IAAI,CAAC,eAAe,CAAC,OAAO;iBAC/B,CAAC;YACF,uBAAuB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE;oBAC1D,IAAI,CAAC,eAAe,CAAC,OAAO;iBAC/B,CAAC;YACF,gBAAgB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;YAC/C,2BAA2B,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC;YACrE,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACjC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YAC7B,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACjC,eAAe,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;YAC7C,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACjC,sBAAsB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;YAC3D,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SACvC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,IAAS;YACxC,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1B,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,uCAAU,GAAlB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,QAAQ,EAAE,IAAI;YACd,YAAY,EAAE,EAAE;YAChB,uBAAuB,EAAE,EAAE;YAC3B,gBAAgB,EAAE,EAAE;YACpB,2BAA2B,EAAE,KAAK;YAClC,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,KAAK;YAClB,eAAe,EAAE,IAAI;YACrB,sBAAsB,EAAE,IAAI;SAC/B,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAgB;YACrD,KAAK,CAAC,UAAU,CAAC;gBACb,IAAI,EAAE,EAAE;gBACR,WAAW,EAAE,EAAE;gBACf,SAAS,EAAE,EAAE;gBACb,eAAe,EAAE,EAAE;gBACnB,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,EAAE;aACd,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACpD,CAAC;IA6CO,sCAAS,GAAjB,UAAkB,EAAU;QAA5B,iBA8BC;QA7BG,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC;aACvD,SAAS,CAAC,UAAC,WAAkB;YAC1B,IAAI,WAAW,EAAE;gBACb,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC;oBAClB,YAAY,EAAE,WAAW,CAAC,YAAY;oBACtC,uBAAuB,EAAE,WAAW,CAAC,uBAAuB;oBAC5D,SAAS,EAAE,WAAW,CAAC,SAAS;oBAChC,SAAS,EAAE,WAAW,CAAC,SAAS;oBAChC,OAAO,EAAE,WAAW,CAAC,OAAO;oBAC5B,eAAe,EAAE,WAAW,CAAC,eAAe;oBAC5C,QAAQ,EAAE,WAAW,CAAC,QAAQ;oBAC9B,2BAA2B,EAAE,WAAW,CAAC,2BAA2B;oBACpE,sBAAsB,EAAE,WAAW,CAAC,sBAAsB;oBAC1D,gBAAgB,EAAE,WAAW,CAAC,gBAAgB;oBAC9C,SAAS,EAAE,WAAW,CAAC,SAAS;iBACnC,CAAC,CAAC;gBACH,IAAI,WAAW,CAAC,iBAAiB,IAAI,WAAW,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3E,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAgB;wBACrD,IAAM,MAAM,GAAG,2CAAM,CAAC,WAAW,CAAC,iBAAiB,EAAE,UAAC,WAA6B;4BAC/E,OAAO,WAAW,CAAC,UAAU,KAAK,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC;wBAC7D,CAAC,CAAC,CAAC;wBACH,IAAI,MAAM,EAAE;4BACR,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;yBAC5B;oBACL,CAAC,CAAC,CAAC;iBACN;gBACD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,uCAAU,GAAlB;QACI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAC,kBAAoC;YAClE,kBAAkB,CAAC,UAAU,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAxQ4B;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;kCAAiB,gGAAgB;8DAAC;IACpC;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAc,oGAAiB;2DAAC;IACzB;QAA/B,kEAAY,CAAC,+FAAgB,CAAC;kCAAsB,uDAAS;mEAAmB;IAHxE,kBAAkB;QAN9B,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;;;YAG1B,SAAS,EAAE,CAAC,4EAAe,CAAC;SAC/B,CAAC;QAUe,uEAAM,CAAC,gEAAO,CAAC;iDACD,+DAAc;YACjB,0DAAW;YACD,2DAAY;YACT,4EAAe;OAb3C,kBAAkB,CA0Q9B;IAAD,yBAAC;CAAA,CA1QuC,sEAAiB,GA0QxD;AA1Q8B;;;;;;;;;;;;ACzB/B,wqHAAwqH,2DAA2D,wCAAwC,uWAAuW,aAAa,+JAA+J,WAAW,qDAAqD,yBAAyB,aAAa,uFAAuF,aAAa,0IAA0I,gDAAgD,wCAAwC,8CAA8C,wCAAwC,wBAAwB,ueAAue,wBAAwB,MAAM,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,6OAA6O,0BAA0B,OAAO,IAAI,UAAU,ojDAAojD,WAAW,4tBAA4tB,WAAW,kWAAkW,WAAW,mUAAmU,WAAW,4iGAA4iG,QAAQ,mCAAmC,IAAI,0N;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvnX;AACJ;AAEvB;AACM;AAGC;AACkB;AACL;AAClC;AACwD;AAOpF;IAAwC,sCAAiC;IAWrE,4BAAoC,MAAe,EAC/B,KAAqB,EACrB,YAA0B;QAF9C,YAGI,iBAAO,SACV;QAJmC,YAAM,GAAN,MAAM,CAAS;QAC/B,WAAK,GAAL,KAAK,CAAgB;QACrB,kBAAY,GAAZ,YAAY,CAAc;QAP9C,wBAAkB,GAAa,EAAE,CAAC;QAClC,YAAM,GAAG,yEAAW,CAAC;;IAQrB,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAUC;QATG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;QAC7G,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;aAC1C,SAAS,CAAC,UAAC,MAAuD;YAC/D,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACzB,IAAI,IAAI,EAAE;gBACN,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAChC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;aAC/B;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,8CAAiB,GAAjB,UAAkB,IAAS;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACzC,CAAC;IAED,4CAAe,GAAf;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,oCAAO,GAAP;QACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,yCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc,EAAE,aAAmB;QAA5D,iBAWC;QAVG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE,MAAM,EAAE,aAAa,CAAC;aACpD,SAAS,CAAC,UAAC,MAA6B;YACrC,IAAM,SAAS,GAAG,2CAAM,CAAC,KAAI,CAAC,SAAS,EAAE,UAAC,IAAoB;gBAC1D,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,IAAI,SAAS,EAAE;gBACX,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;gBAC1B,SAAS,CAAC,aAAa,GAAG,gDAAW,CAAC,aAAa,CAAC,CAAC;aACxD;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mCAAM,GAAN,UAAO,WAAmB;QAA1B,iBAYC;QAXG,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY;aAC5C,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EACjF,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC;aAClD,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAC3C,CAAC,SAAS,CAAC,UAAC,MAA6C;YACtD,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAClC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mCAAM,GAAN,UAAO,EAAU;QAAjB,iBAGC;QAFG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;aACjD,SAAS,CAAC,UAAC,MAA6B,IAAK,YAAI,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,EAA7B,CAA6B,CAAC,CAAC;IACrF,CAAC;IAED,mCAAM,GAAN,UAAO,EAAU;IAEjB,CAAC;IAED,yCAAY,GAAZ,UAAa,MAAc;QAA3B,iBAgBC;QAfG,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;YACnC,OAAO;SACV;QAED,IAAI,CAAC,WAAW,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAC1E,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAC,EAAU;YACnC,OAAO;gBACH,EAAE,EAAE,EAAE;gBACN,MAAM,EAAE,MAAM;aACjB,CAAC;QACN,CAAC,CAAC,CACL,CAAC,SAAS,CAAC,UAAC,MAA6B;YACtC,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAc,GAAd;QAAA,iBAaC;QAZG,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;YACtC,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;YACnC,OAAO;SACV;QAED,IAAI,CAAC,WAAW,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CACpE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAC,EAAU;YACnC,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CACL,CAAC,SAAS,CAAC,UAAC,MAA6B;YACtC,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAQ,GAAR,UAAS,OAAe;QACpB,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC;IAnHkC;QAAlC,+DAAS,CAAC,+FAAsB,CAAC;kCAAyB,+FAAsB;sEAAC;IADzE,kBAAkB;QAL9B,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;;SAE7B,CAAC;QAae,uEAAM,CAAC,+DAAO,CAAC;iDACD,8DAAc;YACP,2DAAY;OAbrC,kBAAkB,CAqH9B;IAAD,yBAAC;CAAA,CArHuC,sEAAiB,GAqHxD;AArH8B;;;;;;;;;;;;AClB/B,s7CAAs7C,oCAAoC,+nBAA+nB,iCAAiC,2jBAA2jB,8BAA8B,2kBAA2kB,gCAAgC,qkBAAqkB,6BAA6B,+1CAA+1C,+BAA+B,oEAAoE,6DAA6D,wxCAAwxC,6BAA6B,gGAAgG,gCAAgC,o/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvxN;AACI;AAC0B;AAE3C;AAC0B;AAW1E;IAAkD,gDAAiB;IAM/D,sCAAoB,YAA0B,EAC1B,eAAgC;QADpD,YAEI,iBAAO,SACV;QAHmB,kBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAe,GAAf,eAAe,CAAiB;;IAEpD,CAAC;IAED,+CAAQ,GAAR;IACA,CAAC;IAED,2CAAI,GAAJ,UAAK,OAAe,EAAE,EAAU;QAC5B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;IAEO,gDAAS,GAAjB;QAAA,iBAKC;QAJG,IAAI,CAAC,WAAW,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;aACpG,SAAS,CAAC,UAAC,mBAAiD;YACzD,KAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QACnD,CAAC,CAAC,CAAC;IACX,CAAC;IAzB2B;QAA3B,+DAAS,CAAC,eAAe,CAAC;kCAAgB,gGAAgB;uEAAC;IADnD,4BAA4B;QANxC,+DAAS,CAAC;YACP,QAAQ,EAAE,2BAA2B;;YAErC,SAAS,EAAE,CAAC,kFAAe,CAAC;SAC/B,CAAC;yCAQoC,2DAAY;YACT,kFAAe;OAP3C,4BAA4B,CA2BxC;IAAD,mCAAC;CAAA,CA3BiD,sEAAiB,GA2BlE;AA3BwC;;;;;;;;;;;;AChBzC,0tEAA0tE,8KAA8K,mDAAmD,2IAA2I,oCAAoC,2IAA2I,uCAAuC,2IAA2I,iCAAiC,2IAA2I,mCAAmC,4LAA4L,sBAAsB,cAAc,IAAI,SAAS,IAAI,WAAW,IAAI,aAAa,IAAI,UAAU,uFAAuF,iBAAiB,27G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt7G;AACJ;AACjB;AAEC;AACkB;AACzB;AAC0C;AAEd;AAEkC;AAC7D;AACb;AAO5B;IAAgD,8CAA6C;IAOzF,oCAAoC,MAAe,EAC/B,KAAqB,EACrB,MAAqB,EACrB,YAA0B;QAH9C,YAII,iBAAO,SAQV;QAZmC,YAAM,GAAN,MAAM,CAAS;QAC/B,WAAK,GAAL,KAAK,CAAgB;QACrB,YAAM,GAAN,MAAM,CAAe;QACrB,kBAAY,GAAZ,YAAY,CAAc;QAL9C,YAAM,GAAG,iFAAmB,CAAC;QAQzB,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC7D,IAAI,MAAM,CAAC,EAAE,EAAE;gBACX,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC;gBACzB,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAClB;QACL,CAAC,CAAC,CAAC;;IACP,CAAC;IAED,6CAAQ,GAAR;QACI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,0BAA0B,EAC3F,iBAAiB,CAAC,CAAC;IAC3B,CAAC;IAED,qDAAgB,GAAhB;QACI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,iDAAY,GAAZ,UAAa,QAAmC,EAAE,MAAc;QAAhE,iBAMC;QALG,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC;aAC9F,SAAS,CAAC,UAAC,MAA6B;YACrC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,2CAAM,GAAN,UAAO,WAAmB;QAA1B,iBAWC;QAVG,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY;aACtC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC9F,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;aAC9C,SAAS,CAAC,UAAC,MAAyD;YACjE,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAClC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,4CAAO,GAAP;QACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,6CAAQ,GAAR;QACI,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,+CAAU,GAAV,UAAW,UAAkB;QACzB,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IACrE,CAAC;IAED,yCAAI,GAAJ,UAAK,UAAkB;QACnB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IAC/D,CAAC;IAED,2CAAM,GAAN,UAAO,IAAgC;QAAvC,iBAMC;QALG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YACnE,8CAAQ,CAAC,KAAI,CAAC,SAAS,EAAE,UAAC,QAAoC;gBAC1D,OAAO,QAAQ,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IA1EkC;QAAlC,+DAAS,CAAC,+FAAsB,CAAC;kCAAyB,+FAAsB;8EAAC;IACzC;QAAxC,+DAAS,CAAC,mHAA4B,CAAC;kCAA+B,mHAA4B;oFAAC;IAF3F,0BAA0B;QALtC,+DAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;;SAEtC,CAAC;QASe,uEAAM,CAAC,+DAAO,CAAC;iDACD,8DAAc;YACb,wDAAa;YACP,2DAAY;OAVrC,0BAA0B,CA4EtC;IAAD,iCAAC;CAAA,CA5E+C,sEAAiB,GA4EhE;AA5EsC;;;;;;;;;;;;ACpBvC,m9DAAm9D,kLAAkL,mBAAmB,yDAAyD,qBAAqB,6CAA6C,gwBAAgwB,ifAAif,yLAAyL,0BAA0B,2DAA2D,4CAA4C,yDAAyD,qBAAqB,6CAA6C,+9CAA+9C,sLAAsL,uBAAuB,2DAA2D,wCAAwC,6CAA6C,27BAA27B,oLAAoL,sCAAsC,yDAAyD,cAAc,6CAA6C,k8IAAk8I,iDAAiD,iIAAiI,+nBAA+nB,kfAAkf,gCAAgC,oEAAoE,8DAA8D,8wCAA8wC,iBAAiB,gGAAgG,oBAAoB,+kGAA+kG,mSAAmS,sBAAsB,mFAAmF,6CAA6C,yEAAyE,yqBAAyqB,sSAAsS,0BAA0B,mFAAmF,4CAA4C,iFAAiF,qBAAqB,yEAAyE,miG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArkmB;AACI;AAC0B;AACZ;AACmB;AAClD;AAGlB;AACqC;AACE;AACrB;AAC0B;AAE/B;AAE4B;AACO;AAS5E;IAA4C,0CAAiB;IA0BzD,gCAAoB,QAAqB,EACrB,EAAe,EACf,WAAwB,EACxB,eAAgC,EAChC,MAAqB,EACrB,YAA0B,EAC1B,eAAgC;QANpD,YAOI,iBAAO,SACV;QARmB,cAAQ,GAAR,QAAQ,CAAa;QACrB,QAAE,GAAF,EAAE,CAAa;QACf,iBAAW,GAAX,WAAW,CAAa;QACxB,qBAAe,GAAf,eAAe,CAAiB;QAChC,YAAM,GAAN,MAAM,CAAe;QACrB,kBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAe,GAAf,eAAe,CAAiB;QA7BpD,mBAAa,GAAG,IAAI,0EAAa,EAAE,CAAC;QACpC,sBAAgB,GAAG,IAAI,6EAAgB,EAAE,CAAC;QAC1C,qBAAe,GAAG,IAAI,4EAAe,EAAE,CAAC;QACxC,uBAAiB,GAAuB,EAAE,CAAC;QAE3C,iBAAW,GAAG,KAAK,CAAC;QAEpB,6BAAuB,GAAG,KAAK,CAAC;QAGhC,yBAAmB,GAAG,EAAE,CAAC;QACzB,iCAA2B,GAAG,EAAE,CAAC;QAEjC,kBAAY,GAAG,oFAAY,CAAC;QAE5B,mBAAa,GAAG;YACZ,EAAC,EAAE,EAAE,oFAAY,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAC;YAC7C,EAAC,EAAE,EAAE,oFAAY,CAAC,UAAU,EAAE,IAAI,EAAE,YAAY,EAAC;YACjD,EAAC,EAAE,EAAE,oFAAY,CAAC,WAAW,EAAE,IAAI,EAAE,eAAe,EAAC;YACrD,EAAC,EAAE,EAAE,oFAAY,CAAC,YAAY,EAAE,IAAI,EAAE,cAAc,EAAC;YACrD,EAAC,EAAE,EAAE,oFAAY,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAC;SAC9C,CAAC;;IAUF,CAAC;IAED,sBAAI,qDAAiB;aAArB;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAc,CAAC;QAC5D,CAAC;;;OAAA;IAED,mDAAkB,GAAlB,UAAmB,KAAK;QACpB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,MAAM,EAAE,KAAK,CAAC,EAAE;YAChB,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,QAAQ,EAAE,KAAK,CAAC,IAAI;SACvB,CAAC,CAAC;IACP,CAAC;IAED,kDAAiB,GAAjB;QACI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACf,CAAC,CAAC;IACP,CAAC;IAED,iDAAgB,GAAhB,UAAiB,KAAK;QAAtB,iBAMC;QALG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;aAClC,SAAS,CAAC,UAAC,MAAqC,IAAK,YAAI,CAAC,kBAAkB,GAAG,MAAM,EAAhC,CAAgC,CAAC,CAAC;QAC5F,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,WAAW,EAAE,KAAK;SACrB,CAAC,CAAC;IACP,CAAC;IAED,wDAAuB,GAAvB,UAAwB,IAAe;QACnC,OAAO,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAc,CAAC;IACpD,CAAC;IAED,8CAAa,GAAb;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SAC9B;IACL,CAAC;IAED,yCAAQ,GAAR;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,oCAAG,GAAH,UAAI,OAAe;QAAnB,iBAcC;QAbG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC;aACxF,SAAS,CAAC,UAAC,MAA2B;YACnC,KAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,2CAAM,CAAC,MAAM,EAAE,UAAC,QAA2B;gBACvC,KAAI,CAAC,iBAAiB,CAAC,IAAI,CACvB,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CACzE,CAAC;YACN,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAED,qCAAI,GAAJ,UAAK,OAAe,EAAE,EAAU;QAC5B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAED,+CAAc,GAAd;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,2CAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,UAAC,aAAwB;YAC7D,aAAa,CAAC,UAAU,CAAC;gBACrB,UAAU,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU;aAC9C,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAkB,GAAlB,UAAmB,aAAwB;QACvC,8DAA8D;QAC9D,IAAM,UAAU,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAC1D,aAAa,CAAC,UAAU,CAAC;YACrB,UAAU,EAAE,UAAU;SACzB,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,aAAa,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SACtE;IACL,CAAC;IAED,gDAAe,GAAf,UAAgB,IAAkB;QAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;gBAClB,MAAM,EAAE,IAAI,CAAC,WAAW;aAC3B,CAAC,CAAC;SACN;IACL,CAAC;IAED,gDAAe,GAAf;QACI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;IACP,CAAC;IAED,qCAAI,GAAJ;QAAA,iBA8BC;QA7BG,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzC,IAAM,aAAa,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACtD,IAAI,CAAC,aAAa,EAAE;YAChB,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,GAAG,UAAU,CAAC;SACrD;QACD,IAAI,OAAO,IAAI,aAAa,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YACtC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,YAAY;qBACZ,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC;qBACzD,SAAS,CAAC,UAAC,MAA6B;oBACrC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBACpC,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBACrC,CAAC,CAAC,CAAC;aACV;iBAAM;gBACH,IAAI,CAAC,YAAY;qBACZ,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC;qBAC1C,SAAS,CAAC,UAAC,MAA6B;oBACrC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBACpC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,KAAI,CAAC,eAAe,EAAE;wBACtB,KAAI,CAAC,SAAS,EAAE,CAAC;wBACjB,OAAO;qBACV;oBACD,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBACrC,CAAC,CAAC,CAAC;aACV;SACJ;IACL,CAAC;IAED,oDAAmB,GAAnB,UAAoB,QAAmB;QACnC,IAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC;QAC7C,IAAM,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACpE,IAAM,yBAAyB,GAAG,oBAAoB,CAAC,KAAK,CAAC;QAC7D,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAC7F,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,KAAK,CAAC;SAChB;QACD,IAAM,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;QAChE,6BAA6B;QAC7B,IAAM,mBAAmB,GAAG,8CAAS,CAAC,gBAAgB,EAAE,UAAC,eAAgC;YACrF,OAAO,eAAe,CAAC,WAAW,KAAK,yBAAyB,CAAC,WAAW;mBACrE,eAAe,CAAC,EAAE,KAAK,yBAAyB,CAAC,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC,IAAI,CAAC;QACR,IAAI,mBAAmB,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,EAAE,EAAE;gBACvD,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SAChB;QACD,sBAAsB;QACtB,IAAM,aAAa,GAAG,8CAAS,CAAC,gBAAgB,EAAE,UAAC,eAAgC;YAC/E,OAAO,eAAe,CAAC,KAAK,KAAK,yBAAyB,CAAC,KAAK;mBACzD,eAAe,CAAC,EAAE,KAAK,yBAAyB,CAAC,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC,IAAI,CAAC;QACR,IAAI,aAAa,GAAG,CAAC,EAAE;YACnB,OAAO;SACV;QAED,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAC9B,IAAM,sBAAsB,GAAG,2CAAM,CAAC,gBAAgB,EAAE,UAAC,eAAgC;gBACrF,OAAO,eAAe,CAAC,EAAE,KAAK,yBAAyB,CAAC,EAAE,CAAC;YAC/D,CAAC,CAAC,CAAC;YACH,IAAI,sBAAsB,EAAE;gBACxB,sBAAsB,CAAC,QAAQ,GAAG,yBAAyB,CAAC,QAAQ,CAAC;gBACrE,sBAAsB,CAAC,WAAW,GAAG,yBAAyB,CAAC,WAAW,CAAC;aAC9E;SACJ;aAAM;YACH,gBAAgB,CAAC,IAAI,CAAC,gDAAW,CAAC,yBAAyB,CAAC,CAAC,CAAC;YAC9D,QAAQ,CAAC,UAAU,CAAC;gBAChB,gBAAgB,EAAE,gBAAgB;aACrC,CAAC,CAAC;SACN;QACD,oBAAoB,CAAC,UAAU,CAAC,IAAI,4EAAe,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACrC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oDAAmB,GAAnB,UAAoB,eAAgC;QAChD,IAAI,CAAC,qBAAqB,GAAG,eAAe,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE;YAC7B,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;IACP,CAAC;IAED,qDAAoB,GAApB,UAAqB,aAAwB;QACzC,IAAM,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAc,CAAC;QACtF,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAC5D,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;IAC5C,CAAC;IAED,+CAAc,GAAd,UAAe,KAAgB;QAC3B,OAAO,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACzC,CAAC;IAED,oDAAmB,GAAnB,UAAoB,aAAwB,EAAE,eAAgC;QAC1E,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAM,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAc,CAAC;QACtF,oBAAoB,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;IACrD,CAAC;IAED,sDAAqB,GAArB,UAAsB,QAA0B,EAAE,eAAgC;QAC9E,6CAAQ,CAAC,QAAQ,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;IACzD,CAAC;IAEO,0CAAS,GAAjB;QAAA,iBA6CC;QA5CG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,mBAAmB,EAAE,MAAM,CAAC,CAAC,CAAC;QACvI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAClD,EAAC,aAAa,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,EAAC;YACrD,EAAC,UAAU,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC,EAAC;YACvC,EAAC,OAAO,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,EAAC;YACnC,EAAC,SAAS,EAAE,CAAC,WAAW,CAAC,EAAC;YAC1B,EAAC,MAAM,EAAE,CAAC,WAAW,CAAC,EAAC;YACvB,EAAC,mBAAmB,EAAE,CAAC,UAAU,CAAC,EAAC;YACnC,EAAC,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,EAAC;YACjC;gBACI,QAAQ,EAAE,CAAC,WAAW;iBACrB;aACJ;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,MAAM,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACnC,MAAM,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAChE,WAAW,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;oBAC1C,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,OAAO,CAAC,wEAAO,CAAC,WAAW,CAAC;iBAC1C,CAAC;YACF,QAAQ,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;oBACpC,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBAC3B,CAAC;YACF,KAAK,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;oBAC9B,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;oBACzB,yDAAU,CAAC,OAAO,CAAC,wEAAO,CAAC,KAAK,CAAC;iBACpC,CAAC;YACF,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;oBAClC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;iBAC5B,CAAC;YACF,IAAI,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;oBAC5B,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;iBAC5B,CAAC;YACF,IAAI,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YACpF,gBAAgB,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;YACvD,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE;gBACjC,yDAAU,CAAC,QAAQ;aACtB,CAAC;SACL,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC;IACzE,CAAC;IAEO,0CAAS,GAAjB;QACI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAClB,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,oFAAY,CAAC,WAAW;SACjC,CAAC,CAAC;QACH,0EAA0E;QAC1E,iCAAiC;QACjC,6BAA6B;QAC7B,gCAAgC;QAChC,yFAAyF;QACzF,UAAU;QACV,MAAM;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAEO,+CAAc,GAAtB;QACI,IAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;QAC1D,IAAI,CAAC,WAAW,GAAG,8CAAS,CAAC,iBAAiB,EAAE,UAAC,aAAwB;YACrE,OAAO,aAAa,CAAC,KAAK,CAAC,UAAU,CAAC;QAC1C,CAAC,CAAC,CAAC,IAAI,KAAK,iBAAiB,CAAC,MAAM,CAAC;IACzC,CAAC;IAEO,kDAAiB,GAAzB,UAA0B,EAAU,EAAE,IAAY,EAAE,IAAY,EAAE,UAA2B,EACnE,gBAAwC;QADlE,iBAYC;QAZiE,+CAA2B;QACnE,wDAAwC;QAC9D,IAAM,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,eAAe,EAAE,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC;YAClD,gBAAgB,EAAE,CAAC,gBAAgB,CAAC;SACvC,CAAC,CAAC;QACH,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC;QACrE,OAAO,YAAY,CAAC;IACxB,CAAC;IAEO,yDAAwB,GAAhC,UAAiC,OAAe;QAAhD,iBA8BC;QA7BG,IAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC7E,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,UAAU,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC;QAC/F,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC;YACpE,EAAC,UAAU,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,EAAC;YAClD,EAAC,aAAa,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,EAAC;YACrD,EAAC,OAAO,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,EAAC;SACtC,CAAC,CAAC;QACH,IAAM,oBAAoB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvC,EAAE,EAAE,CAAC,iBAAiB,CAAC;YACvB,QAAQ,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;oBACtC,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBAC3B,CAAC;YACF,WAAW,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;oBAC5C,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,OAAO,CAAC,wEAAO,CAAC,WAAW,CAAC;iBAC1C,CAAC;YACF,KAAK,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;oBAChC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,OAAO,CAAC,wEAAO,CAAC,KAAK,CAAC;iBACpC,CAAC;SACL,CAAC,CAAC;QACH,oBAAoB,CAAC,YAAY,CAAC,SAAS,CACvC,cAAM,YAAI,CAAC,iBAAiB,CAAC,oBAAoB,EAC7C,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EACjC,KAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,EACzC,KAAK,CAAC,EAHJ,CAGI,CAAC,CAAC;QAChB,OAAO,oBAAoB,CAAC;IAChC,CAAC;IAEO,iDAAgB,GAAxB,UAAyB,EAAU;QAC/B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IAEO,yDAAwB,GAAhC;QACI,OAAO,8CAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,UAAC,aAAwB;YACvE,OAAO,aAAa,CAAC,KAAK,CAAC,UAAU,CAAC;QAC1C,CAAC,CAAC,CAAC,IAAI,CAAC;IACZ,CAAC;IAEO,uDAAsB,GAA9B;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACjD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACtC;IACL,CAAC;IAEO,0CAAS,GAAjB;QAAA,iBA6BC;QA5BG,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;aAC1D,SAAS,CAAC,UAAC,MAAoC;YAC5C,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC;gBAClB,EAAE,EAAE,MAAM,CAAC,EAAE;gBACb,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,WAAW,EAAE,MAAM,CAAC,WAAW;gBAC/B,gBAAgB,EAAE,MAAM,CAAC,gBAAgB;gBACzC,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,MAAM,EAAE,MAAM,CAAC,MAAM;aACxB,CAAC,CAAC;YACH,KAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,MAAM,CAAC,iBAAiB,EAAE;gBAC1B,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,gBAA2C;oBACzE,KAAI,CAAC,iBAAiB,CAAC,IAAI,CACvB,KAAI,CAAC,iBAAiB,CAClB,gBAAgB,CAAC,UAAU,EAC3B,gBAAgB,CAAC,YAAY,EAC7B,gBAAgB,CAAC,YAAY,EAC7B,gBAAgB,CAAC,UAAU,EAC3B,gBAAgB,CAAC,gBAAgB,CAAC,CACzC,CAAC;gBACN,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IA9Z+B;QAA/B,+DAAS,CAAC,mBAAmB,CAAC;kCAAoB,gGAAgB;qEAAC;IAD3D,sBAAsB;QANlC,+DAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;;YAE9B,SAAS,EAAE,CAAC,mFAAe,EAAE,6EAAe,CAAC;SAChD,CAAC;yCA4BgC,6DAAW;YACjB,0DAAW;YACF,0EAAW;YACP,6EAAe;YACxB,yDAAa;YACP,2DAAY;YACT,mFAAe;OAhC3C,sBAAsB,CAgalC;IAAD,6BAAC;CAAA,CAha2C,sEAAiB,GAga5D;AAhakC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BM;AACc;AACgB;AACxB;AACwB;AACM;AACoB;AACzB;AAExE,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mFAAkB;QAC7B,OAAO,EAAE;YACL,IAAI,EAAE,2DAAY;SACrB;KACJ;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,mFAAkB;KAChC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,mFAAkB;KAChC;IACD;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,yFAAoB;KAClC;IACD;QACI,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,6GAA0B;KACxC;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sFAAmB;KACjC;CACJ,CAAC;AAOF;IAAA;IACA,CAAC;IADY,kBAAkB;QAL9B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC5B,CAAC;OACW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CQ;AAC8B;AACxB;AACmB;AACd;AACoC;AACrB;AACkB;AACH;AACiB;AAUtE;AACqD;AACH;AAC6B;AAC/C;AACmB;AACpB;AAC8B;AACO;AAC1B;AACH;AACc;AAChC;AACmC;AACuB;AAC1G,4GAA4G;AACI;AACrC;AACW;AACL;AACc;AACA;AACM;AACZ;AACjC;AACgB;AAC0B;AAuBlG;IAAA;IACA,CAAC;IADY,WAAW;QArBvB,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,2EAAY,EAAE,yEAAkB,EAAE,6FAAc,EAAE,0FAAa,EAAE,2GAAkB;gBACvG,oEAAiB,EAAE,qEAAkB,EAAE,kEAAe,EAAE,uEAAoB,EAAE,yFAAa,EAAE,0GAAoB;gBACjH,2FAAa,EAAE,kEAAmB,EAAE,0DAAW,EAAE,mEAAgB,EAAE,wFAAY,EAAE,mGAAY,EAAE,gEAAe;gBAC9G,8FAAc,EAAE,qHAAqB,EAAE,2HAAuB,EAAE,oEAAiB,EAAE,0GAAkB;gBACrG,iEAAc,EAAE,oGAAgB,EAAE,gEAAa,EAAE,sEAAa;gBAC9D,qHAAqB,EAAE,4DAAU,EAAE,gGAAe,EAAE,2EAAiB,CAAC,OAAO,CAAC;oBAC1E,cAAc,EAAE,KAAK;oBACrB,WAAW,EAAE,eAAe;oBAC5B,kBAAkB,EAAE,iBAAiB;oBACrC,iBAAiB,EAAE,KAAK;oBACxB,iBAAiB,EAAE,QAAQ;oBAC3B,gBAAgB,EAAE,IAAI;oBACtB,gBAAgB,EAAE,QAAQ;iBAC7B,CAAC,CAAC;YACP,OAAO,EAAE,EAAE;YACX,YAAY,EAAE,CAAC,mFAAkB,EAAE,oFAAkB,EAAE,iFAAiB,EAAE,+FAAqB,EAAE,0FAAoB;gBACjH,qGAAuB,EAAE,gGAAsB,EAAE,8GAA0B,EAAE,oHAA4B,EAAE,uFAAmB;gBAC9H,iHAAuB,CAAC;YAC5B,SAAS,EAAE,EAAE;SAChB,CAAC;OACW,WAAW,CACvB;IAAD,kBAAC;CAAA;AADuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEyB;AACe;AACE;AACzB;AACmB;AAGf;AAYjB;AAM5B;IAGI,sBAAwC,SAAqB,EACzC,cAA8B,EAC9B,MAAqB,EACrB,IAAgB;QAHI,cAAS,GAAT,SAAS,CAAY;QACzC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAe;QACrB,SAAI,GAAJ,IAAI,CAAY;QALpC,QAAG,GAAG,sBAAsB,CAAC;QAMzB,IAAI,CAAC,GAAG,GAAG,KAAG,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,GAAK,CAAC;IACzD,CAAC;IAED,8BAAO,GAAP,UAAQ,KAA6B,EAAE,KAAa;QAChD,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACtC,OAAO,IAAI,CAAC,MAAM,CACd,WAAW,CAAC,OAAO,EACnB,WAAW,CAAC,SAAS,EACrB,WAAW,CAAC,OAAO,EACnB,WAAW,CAAC,QAAQ,EACpB,WAAW,CAAC,IAAI,EAChB,WAAW,CAAC,QAAQ,CACvB,CAAC;IACN,CAAC;IAED,6BAAM,GAAN,UAAO,OAAe,EAAE,SAAkB,EAAE,OAAgB,EAAE,SAAkB,EAAE,MAAe,EAC1F,QAAkB,EAAE,IAAgB,EACpC,QAA2C;QADvB,+BAAgB;QACpC,sCAAmB,IAAI,CAAC,SAAS,CAAC,SAAS;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,GAAK,EAAE;YAChC,MAAM,EAAE,IAAI,+DAAU,EAAE;iBACnB,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;iBACtC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC5C,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;iBACtC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC5C,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC9C,GAAG,CAAC,UAAU,EAAE,QAAQ,IAAI,IAAI,IAAI,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;iBACtF,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;iBACxC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SAC5D,CAAsD,CAAC;IAC5D,CAAC;IAED,6BAAM,GAAN,UAAO,KAAY;QAAnB,iBAUC;QATG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,IAAI,CAAC,GAAK,EAAE,KAAK,CAAC;aACtC,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA6B;YAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACgC,CAAC;IAC/C,CAAC;IAED,6BAAM,GAAN,UAAO,EAAU,EAAE,KAAY;QAA/B,iBAUC;QATG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,EAAI,EAAE,KAAK,CAAC;aAC5C,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA6B;YAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACgC,CAAC;IAC/C,CAAC;IAED,6BAAM,GAAN,UAAO,EAAU;QAAjB,iBAQC;QAPG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,SAAI,EAAI,CAAC,CAAC,IAAI,CAC7C,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA6B;YAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CAAsC,CAAC;IACjD,CAAC;IAED,qCAAc,GAAd,UAAe,GAAa;QAA5B,iBAYC;QAXG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAG,IAAI,CAAC,GAAK,EAAE;YACnC,MAAM,EAAE;gBACJ,GAAG,EAAE,GAAG;aACX;SACJ,CAAC,CAAC,IAAI,CACH,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA6B;YAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CAAsC,CAAC;IACjD,CAAC;IAED,mCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc,EAAE,aAAsB;QAA/D,iBAWC;QAVG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,EAAE,gBAAW,MAAQ,EAAE,aAAa,CAAC;aACzD,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA6B;YAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACgC,CAAC;IAC/C,CAAC;IAED,2CAAoB,GAApB,UAAqB,aAA+C;QAApE,iBAKC;QAJG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,YAAS,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,MAA6B;YAC9F,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CAAsC,CAAC;IAC7C,CAAC;IAED,gCAAS,GAAT,UAAU,EAAU;QAApB,iBAOC;QANG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,EAAI,CAAC;aACpC,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAAoC,IAAK,aAAM,CAAC,IAAI,EAAX,CAAW,CAAC,CACxC,CAAC;IAC/B,CAAC;IAED,mCAAY,GAAZ,UAAa,OAAe;QAA5B,iBASC;QARG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,UAAO,CAAC;aAC9C,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAAgD;YACjD,OAAO,MAAM,CAAC,KAAK,CAAC;QACxB,CAAC,CAAC,CAC8B,CAAC;IAC7C,CAAC;IAED,4CAAqB,GAArB,UAAsB,OAAe;QAArC,iBASC;QARG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,cAAW,CAAC;aAClD,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAAgD;YACjD,OAAO,MAAM,CAAC,KAAK,CAAC;QACxB,CAAC,CAAC,CAC8B,CAAC;IAC7C,CAAC;IAED,wCAAiB,GAAjB,UAAkB,OAAe,EAAE,KAAa;QAAhD,iBAMC;QALG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,cAAS,KAAO,CAAC;aAC3C,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,CAA8D,CAAC;IAEvH,CAAC;IAED,wCAAiB,GAAjB,UAAkB,OAAe,EAAE,KAAa;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,cAAS,KAAO,CAAC;aACvD,IAAI,CAAC,0DAAG,CAAC,UAAC,MAAuC,IAAK,aAAM,CAAC,IAAI,EAAX,CAAW,CAAC,CAAwB,CAAC;IACpG,CAAC;IAED,qCAAc,GAAd,UAAe,OAAe,EAAE,QAAkB;QAAlD,iBAUC;QATG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,UAAO,EAAE,QAAQ,CAAC;aACzD,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA6B;YAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACgC,CAAC;IAC/C,CAAC;IAED,qCAAc,GAAd,UAAe,OAAe,EAAE,EAAU,EAAE,QAAkB;QAA9D,iBAUC;QATG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,cAAS,EAAI,EAAE,QAAQ,CAAC;aAC/D,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA6B;YAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACgC,CAAC;IAC/C,CAAC;IAED,qCAAc,GAAd,UAAe,OAAe,EAAE,EAAU;QAA1C,iBAUC;QATG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,cAAS,EAAI,CAAC;aACvD,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA6B;YAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACgC,CAAC;IAC/C,CAAC;IAED,qCAAc,GAAd,UAAe,OAAe,EAAE,OAAe,EAAE,MAAe,EAAE,IAAgB,EACnE,QAAqB;QAD8B,+BAAgB;QACnE,wCAAqB;QAChC,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,eAAY,EAAE;YACrC,MAAM,EAAE,IAAI,+DAAU,EAAE;iBACnB,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;iBACtC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC9C,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;iBACxC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SAC5D,CAAkE,CAAC;IAC5E,CAAC;IAED,6CAAsB,GAAtB,UAAuB,OAAe,EAAE,UAAkB;QAA1D,iBASC;QARG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,mBAAc,UAAY,CAAC;aACjE,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA2D;YAC5D,OAAO,MAAM,CAAC,IAAI,CAAC;QACvB,CAAC,CAAC,CACuC,CAAC;IACtD,CAAC;IAED,+BAAQ,GAAR,UAAS,OAAe,EAAE,aAA4B;QAAtD,iBAiBC;QAhBG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,eAAY,EACpD;YACI,MAAM,EAAE,aAAa,CAAC,MAAM;YAC5B,QAAQ,EAAE,aAAa,CAAC,QAAQ;YAChC,WAAW,EAAE,aAAa,CAAC,WAAW;YACtC,KAAK,EAAE,aAAa,CAAC,KAAK;YAC1B,OAAO,EAAE,aAAa,CAAC,OAAO;YAC9B,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,MAAM,EAAE,aAAa,CAAC,MAAM;YAC5B,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,iBAAiB,EAAE,6CAAQ,CAAC,aAAa,CAAC,iBAAiB,EAAE,UAAC,gBAAkC;gBAC5F,OAAO,gBAAgB,CAAC,UAAU,CAAC;YACvC,CAAC,CAAC;SACL,CAAC;aACD,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,CAAsC,CAAC;IAC/F,CAAC;IAED,qCAAc,GAAd,UAAe,OAAe,EAAE,EAAU,EAC3B,aAA4B;QAD3C,iBAmBC;QAjBG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,mBAAc,EAAI,EAAE;YAC5C,MAAM,EAAE,aAAa,CAAC,MAAM;YAC5B,QAAQ,EAAE,aAAa,CAAC,QAAQ;YAChC,WAAW,EAAE,aAAa,CAAC,WAAW;YACtC,KAAK,EAAE,aAAa,CAAC,KAAK;YAC1B,OAAO,EAAE,aAAa,CAAC,OAAO;YAC9B,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,MAAM,EAAE,aAAa,CAAC,MAAM;YAC5B,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,gBAAgB,EAAE,aAAa,CAAC,gBAAgB;YAChD,iBAAiB,EAAE,6CAAQ,CAAC,aAAa,CAAC,iBAAiB,EAAE,UAAC,gBAAkC;gBAC5F,OAAO,gBAAgB,CAAC,UAAU,CAAC;YACvC,CAAC,CAAC;SACL,CAAC;aACD,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,CAAoE,CAAC;IAC7H,CAAC;IAED,gDAAyB,GAAzB,UAA0B,OAAe,EAAE,UAAkB,EAAE,eAAuB,EAC5D,MAAc;QADxC,iBAMC;QAJG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,0BAAqB,UAAU,SAAI,eAAe,SAAI,MAAQ,EAAE,EAAE,CAAC;aAC9F,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,CAAsC,CAAC;IAC/F,CAAC;IAED,0CAAmB,GAAnB,UAAoB,OAAe,EAAE,UAAkB;QAAvD,iBAMC;QALG,OAAO,IAAI,CAAC,IAAI;aACX,MAAM,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,mBAAc,UAAY,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,MAA6B;YAC7F,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC,IAAI,CAAC;QACvB,CAAC,CAAC,CAAsC,CAAC;IACjD,CAAC;IAED,QAAQ;IACR,kCAAW,GAAX,UAAY,OAAe,EAAE,IAAgB,EAAE,QAA2C;QAA7D,+BAAgB;QAAE,sCAAmB,IAAI,CAAC,SAAS,CAAC,SAAS;QACtF,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,YAAS,EAAE;YAClC,MAAM,EAAE,IAAI,+DAAU,EAAE;iBACnB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;iBACxC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SAC5D,CAA2D,CAAC;IACrE,CAAC;IAED,0CAAmB,GAAnB,UAAoB,OAAe,EAAE,OAAe;QAApD,iBASC;QARG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,gBAAW,OAAS,CAAC;aAC3D,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAAoC;YACrC,OAAO,MAAM,CAAC,IAAI,CAAC;QACvB,CAAC,CAAC,CACgB,CAAC;IAC/B,CAAC;IAED,kCAAW,GAAX,UAAY,OAAe,EAAE,UAAsB;QAAnD,iBAIC;QAHG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,YAAS,EAAE,UAAU,CAAC;aAC7D,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,CAAsC,CAAC;IAC/F,CAAC;IAED,kCAAW,GAAX,UAAY,OAAe,EAAE,OAAe,EAAE,UAAsB;QAApE,iBAKC;QAJG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,gBAAW,OAAS,EAAE,UAAU,CAAC;aAC5D,IAAI,CAAC,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,CAAoE,CAAC;IAC7H,CAAC;IAED,uCAAgB,GAAhB,UAAiB,OAAe,EAAE,EAAU;QAA5C,iBAUC;QATG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,SAAI,OAAO,gBAAW,EAAI,CAAC;aACzD,IAAI,CACD,+DAAQ,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC,EAC1C,0DAAG,CAAC,UAAC,MAA6B;YAC9B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACgC,CAAC;IAC/C,CAAC;IArTQ,YAAY;QADxB,gEAAU,EAAE;QAII,uEAAM,CAAC,8DAAU,CAAC;iDACK,4EAAc;YACtB,wDAAa;YACf,+DAAU;OAN3B,YAAY,CAsTxB;IAAD,mBAAC;CAAA;AAtTwB;;;;;;;;;;;;;;;ACzBzB;AAAA;IAeI;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACvB,CAAC;IACL,eAAC;AAAD,CAAC;;AAED;IAAA;IAOA,CAAC;IAAD,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACjC2E;AAE5E;IAaI;QACI,IAAI,CAAC,IAAI,GAAG,mFAAY,CAAC,WAAW,CAAC;IACzC,CAAC;IACL,oBAAC;AAAD,CAAC;;AAED;IAOI;QACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IACL,uBAAC;AAAD,CAAC;;AAED;IAMI;QACI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;AC5CD;AAAA;IAAA;IAWA,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACTD;AAAA;IAgBI;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;IACL,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBwC;AACM;AACF;AACiB;AACI;AAQlE;IAAA;IACA,CAAC;IADY,kBAAkB;QAN9B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,CAAC;YACpC,YAAY,EAAE,CAAC,8EAAqB,CAAC;YACrC,OAAO,EAAE,CAAC,8EAAqB,CAAC;YAChC,SAAS,EAAE,CAAC,0EAAmB,CAAC;SACnC,CAAC;OACW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B;;;;;;;;;;;;;;;ACZxB,IAAM,OAAO,GAAG;IACnB,WAAW,EAAE,2DAA2D;IACxE,KAAK,EAAE,2KAA2K;IAClL,UAAU,EAAE,SAAS;IACrB,GAAG,EAAE,wDAAwD;CAChE;;;;;;;;;;;;;;;ACLM,IAAM,YAAY,GAAG;IACxB,WAAW,EAAE,CAAC;IACd,QAAQ,EAAE,CAAC;IACX,UAAU,EAAE,CAAC;IACb,YAAY,EAAE,CAAC;IACf,QAAQ,EAAE,CAAC;IACX,OAAO,EAAE,CAAC;CACb,CAAC","file":"modules-event-event-module.js","sourcesContent":["export const EventStatus = {\r\n    draft: 0,\r\n    pending: 1,\r\n    approved: 2,\r\n    declined: 3\r\n}\r\n\r\nexport const EventRegisterStatus = {\r\n    register: 0,\r\n    joined: 1,\r\n    canceled: 2\r\n}\r\n\r\n","module.exports = \"<nh-modal #albumFormModal size=\\\"full\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header [showCloseButton]=\\\"true\\\">\\r\\n        <h4 class=\\\"title uppercase bold\\\" i18n=\\\"@@album\\\">Album</h4>\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"row cm-mgt-10\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"portlet light bordered\\\">\\r\\n                        <div class=\\\"portlet-title\\\">\\r\\n                            <div class=\\\"caption font-red-sunglo\\\">\\r\\n                                <i class=\\\"icon-share font-red-sunglo\\\"></i>\\r\\n                                <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@albumInfo\\\"> Album info </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"portlet-body\\\">\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"languages.length > 1\\\">\\r\\n                                <label ghmLabel=\\\"Choose language\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@chooseLanguage\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <nh-select [data]=\\\"languages\\\" [(value)]=\\\"currentLanguage\\\"></nh-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"!isUpdate\\\">\\r\\n                                <label ghmLabel=\\\"Album type\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@albumType\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <nh-select\\r\\n                                            [data]=\\\"albumTypes\\\"\\r\\n                                            i18n-title=\\\"@@pleaseSelectAlbumType\\\"\\r\\n                                            title=\\\"-- Please select album type --\\\"\\r\\n                                            formControlName=\\\"type\\\"></nh-select>\\r\\n                                    <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.thumbnail\\\">\\r\\n                                {formErrors.type, select, requried {Please select video type.}}\\r\\n                            </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors.thumbnail\\\">\\r\\n                                <label ghmLabel=\\\"Thumbnail\\\" i18n-ghmLabel=\\\"@@thumbnail\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <ghm-file-explorer buttonText=\\\"Select thumbnail\\\"\\r\\n                                                       i18n-buttonText=\\\"@@selectThumbnail\\\"\\r\\n                                                       (itemSelected)=\\\"onThumbnailSelected($event)\\\"></ghm-file-explorer>\\r\\n                                    <br>\\r\\n                                    <img ghmImage [src]=\\\"model.value.thumbnail\\\" class=\\\"w150\\\" alt=\\\"\\\">\\r\\n                                    <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.thumbnail\\\">\\r\\n                                {formErrors.thumbnail, select, maxlength {Thumbnail can not exceed 500 characters.}}\\r\\n                            </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <span formArrayName=\\\"translations\\\">\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let translation of translations.controls; index as i\\\"\\r\\n                                 [hidden]=\\\"translation.value.languageId !== currentLanguage\\\"\\r\\n                                 [formGroupName]=\\\"i\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[translation.value.languageId]?.title\\\">\\r\\n                                <label ghmLabel=\\\"Album title\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@albumTitle\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                           placeholder=\\\"Please enter album title.\\\"\\r\\n                                           i18n-placeholder=\\\"@@pleaseEnterAlbumTitle\\\"\\r\\n                                           formControlName=\\\"title\\\">\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                         <span class=\\\"help-block\\\">\\r\\n                                            {\\r\\n                                                translationFormErrors[translation.value.languageId]?.title,\\r\\n                                                select,\\r\\n                                                required {Please enter album title}\\r\\n                                                maxlength {Album title can not exceed 256 characters.}\\r\\n                                                 pattern   {Album title is inValid}\\r\\n                                            }\\r\\n                                         </span>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        <div class=\\\"form-group\\\"\\r\\n                             *ngFor=\\\"let translation of translations.controls; index as i\\\"\\r\\n                             [hidden]=\\\"translation.value.languageId !== currentLanguage\\\"\\r\\n                             [formGroupName]=\\\"i\\\"\\r\\n                             [class.has-error]=\\\"translationFormErrors[translation.value.languageId]?.seoLink\\\">\\r\\n                                <label ghmLabel=\\\"SeoLink\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@seoLink\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                           placeholder=\\\"Enter seo link.\\\"\\r\\n                                           i18n-placeholder=\\\"@@enterSeoLink\\\"\\r\\n                                           formControlName=\\\"seoLink\\\">\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                         <span class=\\\"help-block\\\">\\r\\n                                            {\\r\\n                                                translationFormErrors[translation.value.languageId]?.seoLink,\\r\\n                                                select,\\r\\n                                                maxlength {SeoLink can not exceed 500 characters.}\\r\\n                                            }\\r\\n                                         </span>\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let translation of translations.controls; index as i\\\"\\r\\n                                 [hidden]=\\\"translation.value.languageId !== currentLanguage\\\"\\r\\n                                 [formGroupName]=\\\"i\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[translation.value.languageId]?.description\\\">\\r\\n                                <label ghmLabel=\\\"Description\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@description\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                              placeholder=\\\"Enter description.\\\"\\r\\n                                              i18n-placeholder=\\\"@@enterDescription\\\"\\r\\n                                              formControlName=\\\"description\\\"></textarea>\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                            translationFormErrors[translation.value.languageId]?.description,\\r\\n                                            select,\\r\\n                                            maxlength {Description can not exceed 500 chacracters}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let translation of translations.controls; index as i\\\"\\r\\n                                 [hidden]=\\\"translation.value.languageId !== currentLanguage\\\"\\r\\n                                 [formGroupName]=\\\"i\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[translation.value.languageId]?.metaTitle\\\">\\r\\n                                <label ghmLabel=\\\"Meta title\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@metaTitle\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                              placeholder=\\\"Enter meta title.\\\"\\r\\n                                              i18n-placeholder=\\\"@@enterMetaTitle\\\"\\r\\n                                              formControlName=\\\"metaTitle\\\"></textarea>\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                            translationFormErrors[translation.value.languageId]?.metaTitle,\\r\\n                                            select,\\r\\n                                            maxlength {Meta title can not exceed 256 characters.}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        <div class=\\\"form-group\\\"\\r\\n                             *ngFor=\\\"let translation of translations.controls; index as i\\\"\\r\\n                             [hidden]=\\\"translation.value.languageId !== currentLanguage\\\"\\r\\n                             [formGroupName]=\\\"i\\\"\\r\\n                             [class.has-error]=\\\"translationFormErrors[translation.value.languageId]?.metaDescription\\\">\\r\\n                                <label ghmLabel=\\\"Meta description\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@metaDescription\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                              placeholder=\\\"Enter meta description.\\\"\\r\\n                                              i18n-placeholder=\\\"@@enterMetaDescription\\\"\\r\\n                                              formControlName=\\\"metaDescription\\\"></textarea>\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                            translationFormErrors[translation.value.languageId]?.metaDescription,\\r\\n                                            select,\\r\\n                                            maxlength {Meta description can not exceed 256 characters..}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                    </span>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                    <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                                        {model.value.isActive, select, 1 {Activated} 0 {InActive}}\\r\\n                                    </mat-checkbox>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                    <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isPublic\\\" i18n=\\\"@@isPublic\\\">\\r\\n                                        {model.value.isPublic, select, 1 {Public} 0 {Not Public}}\\r\\n                                    </mat-checkbox>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- BEGIN: Photos -->\\r\\n                <div class=\\\"col-sm-6\\\" *ngIf=\\\"model.value.type === 0\\\">\\r\\n                    <div class=\\\"portlet light bordered\\\">\\r\\n                        <div class=\\\"portlet-title\\\">\\r\\n                            <div class=\\\"caption font-red-sunglo\\\">\\r\\n                                <i class=\\\"fa fa-photo font-red-sunglo\\\"></i>\\r\\n                                <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@photos\\\"> Photos </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"portlet-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <ghm-file-explorer buttonText=\\\"Select photos\\\"\\r\\n                                                       [multiple]=\\\"true\\\"\\r\\n                                                       i18n-buttonText=\\\"@@selectPhoto\\\"\\r\\n                                                       (acceptSelected)=\\\"onAcceptSelectPhotos($event)\\\"></ghm-file-explorer>\\r\\n                                    <ul class=\\\"list-photos\\\">\\r\\n                                        <li *ngFor=\\\"let photo of photos\\\">\\r\\n                                            <div class=\\\"photo-wrapper\\\">\\r\\n                                                <img src=\\\"{{ photo.url }}\\\">\\r\\n                                                <ul class=\\\"actions\\\">\\r\\n                                                    <li>\\r\\n                                                        <button type=\\\"button\\\" class=\\\"btn blue btn-sm\\\"\\r\\n                                                                (click)=\\\"editPhoto(photo)\\\">\\r\\n                                                            <mat-icon>edit</mat-icon>\\r\\n                                                        </button>\\r\\n                                                    </li>\\r\\n                                                    <li>\\r\\n                                                        <button type=\\\"button\\\" class=\\\"btn red btn-sm\\\"\\r\\n                                                                (click)=\\\"removePhoto(photo)\\\">\\r\\n                                                            <mat-icon>delete</mat-icon>\\r\\n                                                        </button>\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- END: Photos -->\\r\\n                <!-- BEGIN: Videos -->\\r\\n                <div class=\\\"col-sm-6\\\" *ngIf=\\\"model.value.type === 1\\\">\\r\\n                    <div class=\\\"portlet light bordered\\\">\\r\\n                        <div class=\\\"portlet-title\\\">\\r\\n                            <div class=\\\"caption font-red-sunglo\\\">\\r\\n                                <i class=\\\"fa fa-film font-red-sunglo\\\"></i>\\r\\n                                <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@videos\\\"> Videos </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"actions\\\">\\r\\n                                <a href=\\\"javascript:;\\\" class=\\\"btn btn-circle red-sunglo btn-sm\\\" (click)=\\\"addVideo()\\\">\\r\\n                                    <i class=\\\"fa fa-plus\\\"></i> Add </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"portlet-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <app-video [albumId]=\\\"id\\\" [(videos)]=\\\"videos\\\"></app-video>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- END: Videos -->\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer class=\\\"text-right\\\">\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn blue cm-mgr-5\\\" [loading]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                Save\\r\\n            </ghm-button>\\r\\n            <ghm-button type=\\\"button\\\" classes=\\\"btn btn-light\\\" nh-dismiss [loading]=\\\"isSaving\\\" i18n=\\\"@@cancel\\\">\\r\\n                Cancel\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\\r\\n<nh-modal #editPhotoModal size=\\\"sm\\\"\\r\\n          (shown)=\\\"onEditPhotoModalShown()\\\">\\r\\n    <nh-modal-header>\\r\\n        <mat-icon>edit</mat-icon>\\r\\n        <span i18n=\\\"@@editPhotoInfo\\\"> Edit photo info </span>\\r\\n    </nh-modal-header>\\r\\n    <form action=\\\"\\\" (ngSubmit)=\\\"saveDescription()\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" ghmLabel=\\\"Title\\\" i18n-ghmLabel=\\\"@@title\\\"></label>\\r\\n                <input type=\\\"text\\\"\\r\\n                       class=\\\"form-control\\\"\\r\\n                       placeholder=\\\"Enter title\\\"\\r\\n                       id=\\\"title\\\"\\r\\n                       [(ngModel)]=\\\"title\\\"\\r\\n                       name=\\\"title\\\"\\r\\n                       i18n-placeholder=\\\"@@enterTitle\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" ghmLabel=\\\"Description\\\" i18n-ghmLabel=\\\"@@description\\\"></label>\\r\\n                <textarea type=\\\"text\\\"\\r\\n                          rows=\\\"4\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          placeholder=\\\"Enter description\\\"\\r\\n                          id=\\\"description\\\"\\r\\n                          [(ngModel)]=\\\"description\\\"\\r\\n                          name=\\\"description\\\"\\r\\n                          i18n-placeholder=\\\"@@enterDescription\\\"></textarea>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer class=\\\"text-right\\\">\\r\\n            <button class=\\\"btn blue\\\" i18n=\\\"@@save\\\">\\r\\n                Save\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" i18n=\\\"@@cancel\\\" nh-dismiss>\\r\\n                Cancel\\r\\n            </button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../../base-form.component';\r\nimport {NhModalComponent} from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {VideoComponent} from '../../../gallery/videos/video.component';\r\nimport {Album, AlbumTranslation} from '../../../gallery/photo/models/album.model';\r\nimport {Video} from '../../../gallery/videos/models/video.model';\r\nimport {Photo} from '../../../gallery/photo/models/photo.model';\r\nimport {ExplorerItem} from '../../../../shareds/components/ghm-file-explorer/explorer-item.model';\r\nimport {SpinnerService} from '../../../../core/spinner/spinner.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport * as _ from 'lodash';\r\nimport {EventService} from '../../event.service';\r\nimport {EventAlbum} from '../event-album.model';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-event-album-form',\r\n    templateUrl: './event-album-form.component.html',\r\n    styleUrls: ['../event-album.component.scss']\r\n})\r\n\r\nexport class EventAlbumFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('albumFormModal') albumFormModal: NhModalComponent;\r\n    @ViewChild('editPhotoModal') editPhotoModal: NhModalComponent;\r\n    @ViewChild(VideoComponent) videoComponent: VideoComponent;\r\n\r\n    eventId;\r\n    album = new Album();\r\n    photo = new Photo();\r\n    translation = new AlbumTranslation();\r\n    photos: Photo[] = [];\r\n    albumTypes: any[] = [];\r\n    videos: Video[] = [];\r\n    title: string;\r\n    description: string;\r\n    currentPhotoId: number;\r\n    eventAlbum = new EventAlbum();\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private router: Router,\r\n                private route: ActivatedRoute,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private spinnerService: SpinnerService,\r\n                private eventService: EventService) {\r\n        super();\r\n\r\n        this.albumTypes = [\r\n            {id: 0, name: 'Photo'},\r\n            {id: 1, name: 'Video'}\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalHidden() {\r\n    }\r\n\r\n    add(eventId: string) {\r\n        this.eventId = eventId;\r\n        this.isUpdate = false;\r\n        this.albumFormModal.open();\r\n    }\r\n\r\n    edit(eventId: string, albumId: string) {\r\n        this.id = albumId;\r\n        this.eventId = eventId;\r\n        this.isUpdate = true;\r\n        this.getDetail();\r\n        this.albumFormModal.open();\r\n    }\r\n\r\n    onThumbnailSelected(explorerItem: ExplorerItem) {\r\n        this.model.patchValue({\r\n            thumbnail: explorerItem.url\r\n        });\r\n    }\r\n\r\n    onAcceptSelectPhotos(explorerItems: ExplorerItem[]) {\r\n        explorerItems.map((explorerItem: ExplorerItem) => {\r\n            this.photos.push(new Photo(explorerItem.absoluteUrl));\r\n        });\r\n    }\r\n\r\n    onEditPhotoModalShown() {\r\n        this.utilService.focusElement('title');\r\n    }\r\n\r\n    addVideo() {\r\n        this.videoComponent.add();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.validateModel(true);\r\n        const isLanguageValid = this.validateLanguage();\r\n        if (isValid && isLanguageValid) {\r\n            this.album = this.model.value;\r\n            this.album.photos = this.photos;\r\n            this.album.videos = this.videos;\r\n            this.isSaving = true;\r\n            this.eventAlbum = {\r\n                eventId: this.eventId,\r\n                album: this.album\r\n            };\r\n            if (this.isUpdate) {\r\n                this.eventService.updateAlbum(this.eventId, this.id, this.eventAlbum)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.toastr.success(result.message);\r\n                        this.isModified = true;\r\n                        this.resetModel();\r\n                        this.albumFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.eventService\r\n                    .insertAlbum(this.eventId, this.eventAlbum)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.toastr.success(result.message);\r\n                        this.resetModel();\r\n                        if (!this.isCreateAnother) {\r\n                            this.albumFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    editPhoto(photo: Photo) {\r\n        this.currentPhotoId = this.photos.indexOf(photo);\r\n        this.title = photo.title;\r\n        this.description = photo.description;\r\n        this.editPhotoModal.open();\r\n    }\r\n\r\n    removePhoto(photo: Photo) {\r\n        _.remove(this.photos, photo);\r\n    }\r\n\r\n    saveDescription() {\r\n        const photo = this.photos[this.currentPhotoId];\r\n        if (photo) {\r\n            photo.title = _.cloneDeep(this.title);\r\n            photo.description = _.cloneDeep(this.description);\r\n            this.description = '';\r\n            this.title = '';\r\n            this.currentPhotoId = null;\r\n            this.editPhotoModal.dismiss();\r\n        }\r\n    }\r\n\r\n    private getDetail() {\r\n        this.subscribers.photo = this.eventService.getEventAlbumDetail(this.eventId, this.id)\r\n            .subscribe((albumDetail: Album) => {\r\n                if (albumDetail) {\r\n                    this.model.patchValue({\r\n                        isActive: albumDetail.isActive,\r\n                        thumbnail: albumDetail.thumbnail,\r\n                        type: albumDetail.type,\r\n                        concurrencyStamp: albumDetail.concurrencyStamp,\r\n                    });\r\n\r\n                    if (albumDetail.translations && albumDetail.translations.length > 0) {\r\n                        this.translations.controls.forEach((model: FormGroup) => {\r\n                            const detail = _.find(albumDetail.translations, (translation: AlbumTranslation) => {\r\n                                return translation.languageId === model.value.languageId;\r\n                            });\r\n                            if (detail) {\r\n                                model.patchValue(detail);\r\n                            }\r\n                        });\r\n                    }\r\n                    this.photos = albumDetail.photos;\r\n                    this.videos = albumDetail.videos;\r\n                }\r\n            });\r\n    }\r\n\r\n    private resetModel() {\r\n        this.isUpdate = false;\r\n        this.model.patchValue({\r\n            isActive: true,\r\n            isPublic: false,\r\n            concurrencyStamp: ''\r\n        });\r\n        this.translations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                title: '',\r\n                description: ''\r\n            });\r\n        });\r\n        this.photos = [];\r\n        this.videos = [];\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.renderFormError(['type', 'thumbnail']);\r\n        this.validationMessages = this.renderFormErrorMessage([\r\n            {'type': ['required']},\r\n            {'thumbnail': ['maxlength']},\r\n        ]);\r\n        this.model = this.fb.group({\r\n            isActive: [this.album.isActive],\r\n            isPublic: [this.album.isPublic],\r\n            concurrencyStamp: [this.album.concurrencyStamp],\r\n            type: [this.album.type, [\r\n                Validators.required\r\n            ]],\r\n            thumbnail: [this.album.thumbnail, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            translations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.validateModel(false));\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.renderFormError(['title', 'description']);\r\n        this.translationValidationMessage[language] = this.renderFormErrorMessage([\r\n            {'title': ['required', 'maxlength', 'pattern']},\r\n            {'description': ['maxlength']},\r\n            {'seoLink': ['maxlength']},\r\n            {'metaTitle': ['maxlength']},\r\n            {'metaDescription': ['maxlength']},\r\n        ]);\r\n        const pageTranslationModel = this.fb.group({\r\n            languageId: [language],\r\n            title: [this.translation.title, [\r\n                Validators.required,\r\n                Validators.maxLength(256),\r\n                Validators.pattern(`.*\\\\S.*`)\r\n            ]],\r\n            description: [this.translation.description, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            seoLink: [this.translation.seoLink, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            metaTitle: [this.translation.metaTitle, [\r\n                Validators.maxLength(256)\r\n            ]],\r\n            metaDescription: [this.translation.metaDescription, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n        });\r\n        pageTranslationModel.valueChanges.subscribe((data: any) => this.validateTranslation(false));\r\n        return pageTranslationModel;\r\n    };\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listAlbumEventTitle\\\">Event Albums</span>\\r\\n    <small i18n=\\\"@@eventModuleTitle\\\">Event management</small>\\r\\n</h1>\\r\\n\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button class=\\\"btn blue\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <a href=\\\"javascript://\\\" class=\\\"btn blue\\\" i18n=\\\"@@add\\\"\\r\\n           *ngIf=\\\"permission.add\\\"\\r\\n           (click)=\\\"addAlbum()\\\">\\r\\n            Add\\r\\n        </a>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"center middle w50 visible-lg\\\" i18n=\\\"@@no\\\">No</th>\\r\\n        <th class=\\\"middle w100\\\" i18n=\\\"@@albumName\\\">Album title</th>\\r\\n        <th class=\\\"middle w150\\\" i18n=\\\"@@description\\\">Description</th>\\r\\n        <th class=\\\"center middle w100\\\" i18n=\\\"@@type\\\">Type</th>\\r\\n        <th class=\\\"center middle w50\\\" i18n=\\\"@@status\\\">Status</th>\\r\\n        <th class=\\\"center middle w100\\\" i18n=\\\"@@actions\\\">Actions</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listAlbum; let i = index\\\">\\r\\n        <td class=\\\"center middle visible-lg\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle hidden-sm hidden-xs\\\">\\r\\n            <div class=\\\"media\\\">\\r\\n                <div class=\\\"media-left\\\">\\r\\n                    <a href=\\\"javascript://\\\">\\r\\n                        <img ghmImage class=\\\"media-object w50\\\" [src]=\\\"item.thumbnail\\\" alt=\\\"{{ item.title }}\\\">\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\\\"media-body\\\">\\r\\n                    <h4 class=\\\"media-heading cm-mgt-5 cursor\\\">{{ item.title }}</h4>\\r\\n                    <i>{{ item.description }}</i>\\r\\n                </div>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td>{{ item.description }}</td>\\r\\n        <td class=\\\"center middle\\\">\\r\\n            <span class=\\\"badge\\\"\\r\\n                  [class.badge-primary]=\\\"item.type === 0\\\"\\r\\n                  [class.badge-danger]=\\\"item.type === 1\\\">{item.type, select, 0 {Photo} 1 {Video}}</span>\\r\\n        </td>\\r\\n        <td class=\\\"center middle\\\">\\r\\n                  <span class=\\\"badge\\\"\\r\\n                        [class.badge-danger]=\\\"!item.isActive\\\"\\r\\n                        [class.badge-success]=\\\"item.isActive\\\">\\r\\n                    {item.isActive, select, 0 {InActive} 1 {Activated}}\\r\\n                </span>\\r\\n        </td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\">\\r\\n                    <li *ngIf=\\\"permission.edit\\\"\\r\\n                        (click)=\\\"edit(item.id)\\\">\\r\\n                        <a>\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@edit\\\">Edit</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.delete\\\"\\r\\n                        (click)=\\\"edit(item)\\\">\\r\\n                        <a href=\\\"javascript://\\\"\\r\\n                           *ngIf=\\\"permission.delete\\\"\\r\\n                           [swal]=\\\"confirmDelete\\\"\\r\\n                           (confirm)=\\\"delete(item.id)\\\">\\r\\n                            <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@delete\\\">Delete</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul><!-- END: nh-dropdown-menu -->\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n    <ghm-paging [totalRows]=\\\"totalRows\\\" [pageSize]=\\\"pageSize\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\"\\r\\n                (pageClick)=\\\"search($event)\\\"\\r\\n                [isDisabled]=\\\"isSearching\\\" i18n-pageName=\\\"@@video\\\" [pageName]=\\\"'video'\\\"></ghm-paging>\\r\\n</div>\\r\\n\\r\\n<app-event-album-form (saveSuccessful)=\\\"search(1)\\\"></app-event-album-form>\\r\\n\\r\\n<swal\\r\\n        #confirmDelete\\r\\n        i18n-title=\\\"@@confirmTitleDeleteAlbum\\\"\\r\\n        i18n-text=\\\"@@confirmTextDeleteAlbum\\\"\\r\\n        title=\\\"Are you sure for delete this album?\\\"\\r\\n        text=\\\"You can't recover this album after delete.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\"\\r\\n        [showCancelButton]=\\\"true\\\"\\r\\n        [focusCancel]=\\\"true\\\">\\r\\n</swal>\"","module.exports = \".list-photos {\\n  list-style: none;\\n  padding-left: 0;\\n  margin-bottom: 0;\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-top: 5px; }\\n  .list-photos li {\\n    flex: 1 33%;\\n    padding-right: 5px;\\n    padding-bottom: 5px;\\n    overflow: hidden; }\\n  .list-photos li:hover {\\n      cursor: pointer; }\\n  .list-photos li:hover div.photo-wrapper img {\\n        -webkit-transform: scale(1.1);\\n        transform: scale(1.1); }\\n  .list-photos li:hover div.photo-wrapper ul.actions {\\n        display: block; }\\n  .list-photos li div.photo-wrapper {\\n      border: 1px solid #ddd;\\n      position: relative;\\n      overflow: hidden; }\\n  .list-photos li div.photo-wrapper img {\\n        width: 100%;\\n        transition: all 500ms ease-in-out; }\\n  .list-photos li div.photo-wrapper ul.actions {\\n        display: none;\\n        list-style: none;\\n        padding-left: 0;\\n        margin-bottom: 0;\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        background: rgba(0, 0, 0, 0.3);\\n        text-align: center;\\n        padding-top: 35%; }\\n  .list-photos li div.photo-wrapper ul.actions li {\\n          display: inline-block;\\n          margin-right: 5px; }\\n\"","import {ChangeDetectorRef, Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseListComponent} from '../../../base-list.component';\r\nimport {EventAlbumViewmodel} from './viewmodel/event-album.viewmodel';\r\nimport {IPageId, PAGE_ID} from '../../../configs/page-id.config';\r\nimport {Location} from '@angular/common';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {APP_CONFIG, IAppConfig} from '../../../configs/app.config';\r\nimport {UtilService} from '../../../shareds/services/util.service';\r\nimport {ActionResultViewModel} from '../../../shareds/view-models/action-result.viewmodel';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {EventAlbumFormComponent} from './event-album-form/event-album-form.component';\r\nimport {EventService} from '../event.service';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {SearchResultViewModel} from '../../../shareds/view-models/search-result.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-event-album',\r\n    templateUrl: './event-album.component.html'\r\n})\r\n\r\nexport class EventAlbumComponent extends BaseListComponent<EventAlbumViewmodel> implements OnInit {\r\n    @ViewChild(EventAlbumFormComponent) eventAlbumForm: EventAlbumFormComponent;\r\n    listAlbum: EventAlbumViewmodel[];\r\n    eventId;\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                @Inject(PAGE_ID) public pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private utilService: UtilService,\r\n                private location: Location,\r\n                private toastr: ToastrService,\r\n                private cdr: ChangeDetectorRef,\r\n                private eventService: EventService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.EVENT, this.pageId.EVENT_LIST, 'Danh sách album',\r\n            'Quản lý sự kiện');\r\n        this.subscribers.routeParams = this.route.params.subscribe(params => {\r\n            if (params.id) {\r\n                this.eventId = params.id;\r\n                this.search(1);\r\n            }\r\n        });\r\n    }\r\n\r\n    addAlbum() {\r\n        this.eventAlbumForm.add(this.eventId);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n\r\n        this.eventService\r\n            .searchAlbum(this.eventId, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<EventAlbumViewmodel>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listAlbum = result.items;\r\n            });\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.eventAlbumForm.edit(this.eventId, id);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.eventService.deleteEventAlbum(this.eventId, id)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                this.search(this.currentPage);\r\n            });\r\n    }\r\n}\r\n","import {Album} from '../../gallery/photo/models/album.model';\r\n\r\nexport class EventAlbum {\r\n    eventId: string;\r\n    album: Album;\r\n}\r\n","module.exports = \"<nh-modal #eventDayDetailModal size=\\\"lg\\\">\\r\\n    <nh-modal-header>\\r\\n        <i class=\\\"fa fa-event\\\"></i>\\r\\n        <span class=\\\"uppercase\\\" i18n=\\\"@@eventDetail\\\">Event detail</span>\\r\\n    </nh-modal-header>\\r\\n    <nh-modal-content>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"portlet light bordered\\\">\\r\\n                    <div class=\\\"portlet-title\\\">\\r\\n                        <div class=\\\"caption\\\">\\r\\n                            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n                            <span i18n=\\\"@@eventDaysTitle\\\" class=\\\"caption-subject bold uppercase\\\"> Event day info </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"portlet-body\\\" style=\\\"display: block;\\\">\\r\\n                        <div class=\\\"form form-horizontal\\\">\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"languages.length > 1\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <nh-select [data]=\\\"languages\\\"\\r\\n                                               [(value)]=\\\"currentLanguage\\\"></nh-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let eventDayTranslation of eventDayDetail?.eventDayTranslations; index as i\\\"\\r\\n                                 [hidden]=\\\"eventDayTranslation.languageId !== currentLanguage\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@eventDayName\\\" ghmLabel=\\\"Event day name\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control\\\">\\r\\n                                        {{ eventDayDetail?.eventDayTranslations[i]?.name }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let eventDayTranslation of eventDayDetail?.eventDayTranslations; index as i\\\"\\r\\n                                 [hidden]=\\\"eventDayTranslation.languageId !== currentLanguage\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control height-auto\\\">\\r\\n                                        {{ eventDayDetail?.eventDayTranslations[i]?.description }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@date\\\" ghmLabel=\\\"Date\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control\\\">\\r\\n                                        {{ eventDayDetail?.eventDate | dateTimeFormat:'DD/MM/YYYY' }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@limitedUsers\\\" ghmLabel=\\\"Limited users\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control\\\">\\r\\n                                        {{ eventDayDetail?.limitedUsers }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@limitedAccompanyPersons\\\" ghmLabel=\\\"Limited accompany users\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control\\\">\\r\\n                                        {{ eventDayDetail?.limitedAccompanyPersons }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let eventDayTranslation of eventDayDetail?.eventDayTranslations; index as i\\\"\\r\\n                                 [hidden]=\\\"eventDayTranslation.languageId !== currentLanguage\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@address\\\" ghmLabel=\\\"Address\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control height-auto\\\">\\r\\n                                        {{ eventDayDetail?.eventDayTranslations[i]?.address }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@from\\\" ghmLabel=\\\"From\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-3\\\">\\r\\n                                    <div class=\\\"form-control\\\">\\r\\n                                        {{ eventDayDetail?.startHour }}:{{ eventDayDetail?.startMinute }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <label i18n-ghmLabel=\\\"@@from\\\" ghmLabel=\\\"To\\\"\\r\\n                                       class=\\\"col-sm-2 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-3\\\">\\r\\n                                    <div class=\\\"form-control\\\">\\r\\n                                        {{ eventDayDetail?.endHour }}:{{ eventDayDetail?.endMinute }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                    <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@IsAllowAccompanyPerson\\\"\\r\\n                                                      [disabled]=\\\"true\\\"\\r\\n                                                      [checked]=\\\"eventDayDetail?.isAllowAccompanyPerson\\\">\\r\\n                                        {eventDayDetail?.isAllowAccompanyPerson, select, 0 {Allow accompany person} 1\\r\\n                                        {Don't\\r\\n                                        allow\\r\\n                                        accompany\\r\\n                                        person}}\\r\\n                                    </mat-slide-toggle>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                    <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isActive\\\"\\r\\n                                                      [disabled]=\\\"true\\\"\\r\\n                                                      [checked]=\\\"eventDayDetail?.isActive\\\">\\r\\n                                        {eventDayDetail?.isActive, select, 0 {In active} 1 {Active}}\\r\\n                                    </mat-slide-toggle>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                    <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@staffOnly\\\"\\r\\n                                                      [disabled]=\\\"true\\\"\\r\\n                                                      [checked]=\\\"eventDayDetail?.staffOnly\\\">\\r\\n                                        Staff only\\r\\n                                    </mat-slide-toggle>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div><!-- END: Event day info -->\\r\\n                </div>\\r\\n            </div><!-- END: .col-sm-6 -->\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n\\r\\n            </div><!-- END: .col-sm-6 -->\\r\\n        </div>\\r\\n    </nh-modal-content>\\r\\n    <nh-modal-footer class=\\\"text-right\\\">\\r\\n        <button type=\\\"button\\\" nh-dismiss class=\\\"btn btn-default\\\" i18n=\\\"@@close\\\">\\r\\n            Close\\r\\n        </button>\\r\\n    </nh-modal-footer>\\r\\n</nh-modal>\\r\\n\"","import { Component, Input, OnInit, ViewChild, ViewChildren } from '@angular/core';\r\nimport { EventDay } from '../models/event-day.model';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { NhModalComponent } from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { EventService } from '../event.service';\r\n\r\n@Component({\r\n    selector: 'app-event-day-detail',\r\n    templateUrl: './event-day-detail.component.html'\r\n})\r\n\r\nexport class EventDayDetailComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('eventDayDetailModal') eventDayDetailModal: NhModalComponent;\r\n    @Input() eventId: string;\r\n\r\n    eventDayDetail: EventDay;\r\n\r\n    constructor(private eventService: EventService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    showDetail(id: string) {\r\n        this.eventDayDetailModal.open();\r\n        this.eventService.getEventDayDetail(this.eventId, id)\r\n            .subscribe(result => this.eventDayDetail = result);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<nh-modal #eventDayFormModal\\r\\n          size=\\\"md\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n        <i class=\\\"fa fa fa-calendar cm-mgr-5\\\"></i>\\r\\n        <span i18n=\\\"@@eventDayFormModalTitle\\\">{isUpdate, select, 0 {Add new event day} 1 {Update event day}}</span>\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"languages.length > 1\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <nh-select [data]=\\\"languages\\\"\\r\\n                               [(value)]=\\\"currentLanguage\\\"></nh-select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <span formArrayName=\\\"modelTranslations\\\">\\r\\n                <div class=\\\"form-group\\\" *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@eventDayName\\\" ghmLabel=\\\"Event day name\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter event day name\\\"\\r\\n                               i18n-placeholder=\\\"@@enterEventDayName\\\" formControlName=\\\"name\\\">\\r\\n                        <span *ngIf=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\"\\r\\n                              class=\\\"help-block\\\" i18n=\\\"@@eventDayNameErrorMessage\\\">\\r\\n                            {\\r\\n                            translationFormErrors[modelTranslation.value.languageId]?.name,\\r\\n                            select, required {Please enter event day name} maxlength {Event day name must not exceed 256 characters}\\r\\n                            }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <textarea rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Enter description\\\"\\r\\n                                  i18n-placeholder=\\\"@@enterDescription\\\"\\r\\n                                  formControlName=\\\"description\\\"></textarea>\\r\\n                        <span *ngIf=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\"\\r\\n                              class=\\\"help-block\\\" i18n=\\\"@@descriptionErrorMessage\\\">\\r\\n                            {\\r\\n                            translationFormErrors[modelTranslation.value.languageId]?.description,\\r\\n                            select, required {Please enter description}\\r\\n                            maxlength {Description must not exceed 1000 characters}\\r\\n                            }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </span><!-- END: wrapper info by language -->\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.eventDate\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@date\\\" ghmLabel=\\\"Date\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <nh-date\\r\\n                        [mask]=\\\"true\\\"\\r\\n                        formControlName=\\\"eventDate\\\"\\r\\n                    ></nh-date>\\r\\n                    <span *ngIf=\\\"formErrors?.eventDate\\\" class=\\\"help-block\\\" i18n=\\\"@@eventDateErrorMessage\\\">\\r\\n                        {\\r\\n                        formErrors?.eventDate,\\r\\n                        select, required {Please select event date}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.limitedUsers\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@limitedUsers\\\" ghmLabel=\\\"Limited users\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"limitedUsers\\\"\\r\\n                           i18n-placeholder=\\\"@@limitedUsersPlaceholder\\\"\\r\\n                           placeholder=\\\"Enter limited users\\\">\\r\\n                    <span *ngIf=\\\"formErrors?.limitedUsers\\\" class=\\\"help-block\\\"\\r\\n                          i18n=\\\"@@eventLimitedUsersErrorMessage\\\">\\r\\n                                        {\\r\\n                                        formErrors?.limitedUsers,\\r\\n                                        select, isValid {Limited users must be number}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.limitedAccompanyPersons\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@limitedAccompanyPersons\\\" ghmLabel=\\\"Limited accompany users\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"limitedAccompanyPersons\\\"\\r\\n                           i18n-placeholder=\\\"@@limitedAccompanyPersonsPlaceholder\\\"\\r\\n                           placeholder=\\\"Enter limited accompany persons\\\">\\r\\n                    <span *ngIf=\\\"formErrors?.limitedAccompanyPersons\\\" class=\\\"help-block\\\"\\r\\n                          i18n=\\\"@@eventLimitedAccompanyPersonsErrorMessage\\\">\\r\\n                                        {\\r\\n                                        formErrors?.limitedAccompanyPersons,\\r\\n                                        select, isValid {Limited accompany person must be number}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <span formArrayName=\\\"modelTranslations\\\">\\r\\n                 <div class=\\\"form-group\\\" *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                      [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                      [formGroupName]=\\\"i\\\"\\r\\n                      [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.address\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@address\\\" ghmLabel=\\\"Address\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <textarea rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Enter address\\\"\\r\\n                                  i18n-placeholder=\\\"@@enterAddress\\\" formControlName=\\\"address\\\"></textarea>\\r\\n                        <span *ngIf=\\\"translationFormErrors[modelTranslation.value.languageId]?.address\\\"\\r\\n                              class=\\\"help-block\\\" i18n=\\\"@@eventAddressErrorMessage\\\">\\r\\n                            {\\r\\n                            translationFormErrors[modelTranslation.value.languageId]?.address,\\r\\n                            select, maxlength {Address must not exceed 500 characters}\\r\\n                            }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </span>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@from\\\" ghmLabel=\\\"From\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n                    <nh-time\\r\\n                        [(hour)]=\\\"model?.value.startHour\\\"\\r\\n                        [(minute)]=\\\"model?.value.startMinute\\\"\\r\\n                    ></nh-time>\\r\\n                </div>\\r\\n                <label i18n-ghmLabel=\\\"@@from\\\" ghmLabel=\\\"To\\\"\\r\\n                       class=\\\"col-sm-2 control-label\\\"></label>\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n                    <nh-time\\r\\n                        [(hour)]=\\\"model?.value.endHour\\\"\\r\\n                        [(minute)]=\\\"model?.value.endMinute\\\"\\r\\n                    ></nh-time>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isAllowAccompanyPerson\\\"\\r\\n                                      formControlName=\\\"isAllowAccompanyPerson\\\">\\r\\n                        {model.value.isAllowAccompanyPerson, select, 0 {Allow accompany person} 1 {Don't allow accompany\\r\\n                        person}}\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isActive\\\" formControlName=\\\"isActive\\\">\\r\\n                        {model.value.isActive, select, 0 {In active} 1 {Active}}\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@staffOnly\\\" formControlName=\\\"staffOnly\\\">\\r\\n                        Staff only\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer class=\\\"text-right\\\">\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\" [loading]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                Save\\r\\n            </ghm-button>\\r\\n            <ghm-button type=\\\"button\\\" classes=\\\"btn btn-light\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [loading]=\\\"isSaving\\\"\\r\\n                        i18n=\\\"@@cancel\\\">\\r\\n                Cancel\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form><!-- END: form -->\\r\\n</nh-modal>\\r\\n\"","import {AfterViewInit, Component, Input, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../base-form.component';\r\nimport {NhModalComponent} from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {EventService} from '../event.service';\r\nimport {EventDay, EventDayTranslation} from '../models/event-day.model';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {SurveyTranslation} from '../../surveys/survey/survey-translation.model';\r\nimport * as _ from 'lodash';\r\nimport {NumberValidator} from '../../../validators/number.validator';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../shareds/view-models/action-result.viewmodel';\r\nimport {UtilService} from '../../../shareds/services/util.service';\r\nimport {TinymceComponent} from '../../../shareds/components/tinymce/tinymce.component';\r\n\r\n@Component({\r\n    selector: 'app-event-day-form',\r\n    templateUrl: './event-day-form.component.html',\r\n    styleUrls: ['./event-day-form.component.css'],\r\n    providers: [NumberValidator]\r\n})\r\nexport class EventDayFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('eventDayFormModal') eventDayFormModal: NhModalComponent;\r\n    @Input() eventId: string;\r\n    listEventDays: EventDay[] = [];\r\n    eventDay = new EventDay();\r\n    eventDayTranslation = new EventDayTranslation();\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private numberValidator: NumberValidator,\r\n                private utilService: UtilService,\r\n                private eventService: EventService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalHidden() {\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n        this.resetModel();\r\n    }\r\n\r\n    add(eventId: string) {\r\n        this.isUpdate = false;\r\n        this.eventId = eventId;\r\n        this.eventDayFormModal.open();\r\n    }\r\n\r\n    edit(eventId: string, id: string) {\r\n        this.id = id;\r\n        this.eventId = eventId;\r\n        this.isUpdate = true;\r\n        this.getDetail(id);\r\n        this.eventDayFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.validateModel(true);\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.isSaving = true;\r\n            this.eventDay = this.model.value;\r\n            this.eventDay.eventDayTranslations = this.modelTranslations.getRawValue();\r\n            if (this.isUpdate) {\r\n                this.eventService.updateEventDay(this.eventId, this.id, this.eventDay)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.saveSuccessful.emit(_.cloneDeep(this.eventDay));\r\n                        this.eventDayFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.eventService.insertEventDay(this.eventId, this.eventDay)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.isModified = true;\r\n                        this.eventDay.id = result.data;\r\n                        this.listEventDays.push(_.cloneDeep(this.eventDay));\r\n                        if (this.isCreateAnother) {\r\n                            this.resetModel();\r\n                        } else {\r\n                            this.eventDayFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDetail(id: string) {\r\n        this.eventService.getEventDayDetail(this.eventId, this.id)\r\n            .subscribe((eventDay: EventDay) => {\r\n                if (eventDay) {\r\n                    this.model.patchValue(eventDay);\r\n                    if (eventDay.eventDayTranslations && eventDay.eventDayTranslations.length > 0) {\r\n                        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n                            const detail = _.find(eventDay.eventDayTranslations, (translation: SurveyTranslation) => {\r\n                                return translation.languageId === model.value.languageId;\r\n                            });\r\n                            if (detail) {\r\n                                model.patchValue(detail);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.renderFormError(['limitedUsers', 'startHour', 'startMinute', 'endHour', 'endMinute'\r\n            , 'eventDate', 'limitedAccompanyPersons']);\r\n        this.validationMessages = this.renderFormErrorMessage([\r\n            {'limitedUsers': ['isValid']},\r\n            {'limitedAccompanyPersons': ['isValid']},\r\n            {'startHour': ['isValid']},\r\n            {'startMinute': ['isValid']},\r\n            {'endHour': ['isValid']},\r\n            {'endMinute': ['isValid']},\r\n            {'eventDate': ['required']},\r\n        ]);\r\n        this.model = this.fb.group({\r\n            isActive: [this.eventDay.isActive],\r\n            limitedUsers: [this.eventDay.limitedUsers, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n            limitedAccompanyPersons: [this.eventDay.limitedUsers, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n            concurrencyStamp: [this.eventDay.concurrencyStamp],\r\n            eventDate: [this.eventDay.eventDate, [\r\n                Validators.required\r\n            ]],\r\n            staffOnly: [this.eventDay.staffOnly],\r\n            startHour: [this.eventDay.startHour, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n            startMinute: [this.eventDay.startMinute, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n            endHour: [this.eventDay.endHour, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n            endMinute: [this.eventDay.endMinute, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n            isAllowAccompanyPerson: [this.eventDay.isAllowAccompanyPerson],\r\n            modelTranslations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe((data: any) => this.validateModel(false));\r\n    }\r\n\r\n    private resetModel() {\r\n        this.isUpdate = false;\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            isActive: true,\r\n            limitedUsers: '',\r\n            limitedAccompanyPersons: '',\r\n            concurrencyStamp: '',\r\n            eventDate: '',\r\n            staffOnly: false,\r\n            IsAllowAccompanyPerson: true,\r\n            startHour: '',\r\n            startMinute: '',\r\n            endHour: '',\r\n            endMinute: '',\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n                address: '',\r\n            });\r\n        });\r\n        this.listEventDays = [];\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.renderFormError(['name', 'description', 'address']);\r\n        this.translationValidationMessage[language] = this.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['required', 'maxlength']},\r\n            {'address': ['maxlength']}\r\n        ]);\r\n        const modelTranslation = this.fb.group({\r\n            languageId: [language],\r\n            name: [this.eventDayTranslation.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            description: [this.eventDayTranslation.description, [\r\n                Validators.required,\r\n                Validators.maxLength(1000)\r\n            ]],\r\n            address: [this.eventDayTranslation.address, [\r\n                Validators.maxLength(500)\r\n            ]]\r\n        });\r\n        modelTranslation.valueChanges.subscribe((data: any) => this.validateTranslationModel(false));\r\n        return modelTranslation;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"portlet light bordered\\\">\\r\\n    <div class=\\\"portlet-title\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n            <i class=\\\"fa fa-calendar\\\"></i>\\r\\n            <span i18n=\\\"@@eventDaysTitle\\\" class=\\\"caption-subject bold uppercase\\\"> Event days </span>\\r\\n        </div>\\r\\n        <div class=\\\"actions\\\" *ngIf=\\\"!readonly\\\">\\r\\n            <button class=\\\"btn blue btn btn-circle\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\">\\r\\n                Add\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\" style=\\\"display: block;\\\">\\r\\n        <table class=\\\"table table-hover table-stripped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th i18n=\\\"@@eventDayName\\\">Event day name</th>\\r\\n                <th i18n=\\\"@@eventDate\\\">Event date</th>\\r\\n                <th class=\\\"text-right\\\" i18n=\\\"@@from\\\">From</th>\\r\\n                <th class=\\\"text-right\\\" i18n=\\\"@@to\\\">To</th>\\r\\n                <th i18n=\\\"@@activate\\\">Activate</th>\\r\\n                <th class=\\\"text-right\\\" i18n=\\\"@@limitedUsers\\\">Limited users</th>\\r\\n                <th class=\\\"text-right\\\" i18n=\\\"@@actions\\\">Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listItems; let i = index\\\">\\r\\n                <td class=\\\"middle\\\">{{ (i + 1) }}</td>\\r\\n                <td class=\\\"middle\\\">{{ item.name }}</td>\\r\\n                <td class=\\\"middle\\\">{{ item.eventDate | dateTimeFormat:'DD/MM/YYYY' }}</td>\\r\\n                <td class=\\\"middle text-right\\\">{{ item.startHour }}:{{ item.startMinute }}</td>\\r\\n                <td class=\\\"middle text-right\\\">{{ item.endHour }}:{{ item.endMinute }}</td>\\r\\n                <td class=\\\"middle center\\\">\\r\\n                    <i class=\\\"fa fa-check color-green\\\"></i>\\r\\n                </td>\\r\\n                <td class=\\\"middle text-right\\\">{{ item.limitedUsers }}</td>\\r\\n                <td class=\\\"middle text-right\\\">\\r\\n                    <ng-container *ngIf=\\\"!readonly\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn blue btn-outline btn-sm cm-mgr-5\\\"\\r\\n                                (click)=\\\"edit(item.id)\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn red btn-outline btn-sm\\\"\\r\\n                                *ngIf=\\\"permission.delete\\\"\\r\\n                                [swal]=\\\"confirmDelelete\\\"\\r\\n                                (confirm)=\\\"delete(item.id)\\\">\\r\\n                            <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                        </button>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"readonly\\\">\\r\\n                        <button class=\\\"btn btn-default btn-sm btn-outline\\\" (click)=\\\"detail(item.id)\\\">\\r\\n                            <i class=\\\"fa fa-eye\\\"></i>\\r\\n                        </button>\\r\\n                    </ng-container>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-event-day-form [eventId]=\\\"eventId\\\" (saveSuccessful)=\\\"onSaveSuccessful($event)\\\"></app-event-day-form>\\r\\n<app-event-day-detail [eventId]=\\\"eventId\\\"></app-event-day-detail>\\r\\n\\r\\n\\r\\n<swal\\r\\n    #confirmDelelete\\r\\n    i18n-title=\\\"@@confirmDeleteEventDayTitle\\\"\\r\\n    i18n-text=\\\"@@confirmDeleteEventDayText\\\"\\r\\n    title=\\\"Are you sure for delete this event day?\\\"\\r\\n    text=\\\"You can't recover this event day after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Accept\\\"\\r\\n    cancelButtonText=\\\"Cancel\\\">\\r\\n</swal>\\r\\n\\r\\n\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { EventDayViewModel } from '../view-models/event-day.viewmodel';\r\nimport { EventDayFormComponent } from '../event-day-form/event-day-form.component';\r\nimport { EventService } from '../event.service';\r\nimport { EventDay } from '../models/event-day.model';\r\nimport * as _ from 'lodash';\r\nimport { ActionResultViewModel } from '../../../shareds/view-models/action-result.viewmodel';\r\nimport { EventDayDetailComponent } from '../event-day-detail/event-day-detail.component';\r\n\r\n@Component({\r\n    selector: 'app-event-day',\r\n    templateUrl: './event-day.component.html',\r\n    styleUrls: ['./event-day.component.css']\r\n})\r\nexport class EventDayComponent extends BaseListComponent<EventDayViewModel> implements OnInit {\r\n    @ViewChild(EventDayFormComponent) eventDayFormComponent: EventDayFormComponent;\r\n    @ViewChild(EventDayDetailComponent) eventDayDetailComponent: EventDayDetailComponent;\r\n    @Input() eventId: string;\r\n    @Input() readonly = false;\r\n    @Input() eventDays: EventDay[];\r\n\r\n    constructor(private eventService: EventService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.eventId) {\r\n            this.getEventDays();\r\n        }\r\n    }\r\n\r\n    onSaveSuccessful(eventDays: EventDay | EventDay[]) {\r\n        this.getEventDays();\r\n    }\r\n\r\n    add() {\r\n        this.eventDayFormComponent.add(this.eventId);\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.eventDayFormComponent.edit(this.eventId, id);\r\n    }\r\n\r\n    detail(id: string) {\r\n        this.eventDayDetailComponent.showDetail(id);\r\n    }\r\n\r\n    delete(id: string) {\r\n        if (!this.eventId) {\r\n            return;\r\n        }\r\n        this.eventService.deleteEventDay(this.eventId, id)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                _.remove(this.listItems, (eventDay: EventDay) => {\r\n                    return eventDay.id === id;\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n    private getEventDays() {\r\n        this.subscribers.eventDayRegisters = this.eventService.getEventDays(this.eventId)\r\n            .subscribe((result: EventDayViewModel[]) => this.listItems = result);\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@eventDetailTitle\\\">Event detail</span>\\r\\n    <small i18n=\\\"@@eventModuleTitle\\\">Events management</small>\\r\\n</h1>\\r\\n\\r\\n<div class=\\\"tabbable-custom \\\">\\r\\n    <ul class=\\\"nav nav-tabs \\\">\\r\\n        <li [class.active]=\\\"viewType === 0\\\">\\r\\n            <a href=\\\"javascript://\\\" i18n=\\\"@@eventInfo\\\" (click)=\\\"changeViewType(0)\\\"> Event info </a>\\r\\n        </li>\\r\\n        <li [class.active]=\\\"viewType === 1\\\">\\r\\n            <a href=\\\"javascript://\\\" i18n=\\\"@@eventDayInfo\\\" (click)=\\\"changeViewType(1)\\\"> Event day info </a>\\r\\n        </li>\\r\\n    </ul>\\r\\n    <div class=\\\"tab-content\\\">\\r\\n        <div class=\\\"tab-pane active\\\">\\r\\n            <ng-container *ngIf=\\\"viewType === 0; else eventDaysTemplate\\\">\\r\\n                <form>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"languages.length > 1\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                                       class=\\\"control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <nh-select [data]=\\\"languages\\\"\\r\\n                                           [(value)]=\\\"currentLanguage\\\"></nh-select>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let eventTranslation of eventDetail?.eventTranslations; index as i\\\"\\r\\n                                 [hidden]=\\\"eventTranslation?.languageId !== currentLanguage\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@eventName\\\" ghmLabel=\\\"Event name\\\"\\r\\n                                       class=\\\"control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div>\\r\\n                                    <div class=\\\"form-control height-auto\\\"\\r\\n                                         [innerHTML]=\\\"eventDetail?.eventTranslations[i]?.name \\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let eventTranslation of eventDetail?.eventTranslations; index as i\\\"\\r\\n                                 [hidden]=\\\"eventTranslation?.languageId !== currentLanguage\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\"\\r\\n                                       class=\\\"control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div>\\r\\n                                    <div class=\\\"form-control height-auto\\\"\\r\\n                                         [innerHTML]=\\\"eventDetail?.eventTranslations[i]?.description \\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let eventTranslation of eventDetail?.eventTranslations; index as i\\\"\\r\\n                                 [hidden]=\\\"eventTranslation?.languageId !== currentLanguage\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@content\\\" ghmLabel=\\\"Content\\\"\\r\\n                                       class=\\\"control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div>\\r\\n                                    <div class=\\\"form-control height-auto\\\"\\r\\n                                         [innerHTML]=\\\"eventDetail?.eventTranslations[i]?.content \\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div> <!-- END: left col -->\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let eventTranslation of eventDetail?.eventTranslations; index as i\\\"\\r\\n                                 [hidden]=\\\"eventTranslation?.languageId !== currentLanguage\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@metaTitle\\\" ghmLabel=\\\"Meta title\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <div>\\r\\n                                    <div\\r\\n                                        class=\\\"form-control\\\">{{ eventDetail?.eventTranslations[i]?.metaTitle }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let eventTranslation of eventDetail?.eventTranslations; index as i\\\"\\r\\n                                 [hidden]=\\\"eventTranslation?.languageId !== currentLanguage\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@metaDescription\\\" ghmLabel=\\\"Meta description\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <div>\\r\\n                                    <div class=\\\"form-control height-auto\\\">{{\\r\\n                                        eventDetail?.eventTranslations[i]?.metaDescription}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let eventTranslation of eventDetail?.eventTranslations; index as i\\\"\\r\\n                                 [hidden]=\\\"eventTranslation?.languageId !== currentLanguage\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@metaDescription\\\" ghmLabel=\\\"Tags\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@startDate\\\" ghmLabel=\\\"Start date\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <div class=\\\"form-control\\\">{{ eventDetail?.startDate | dateTimeFormat:'DD/MM/YYYY'}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@endDate\\\" ghmLabel=\\\"End date\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <div class=\\\"form-control\\\">{{ eventDetail?.endDate | dateTimeFormat:'DD/MM/YYYY' }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.limitedUsers\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@limitedUsers\\\" ghmLabel=\\\"Limited users\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <div>\\r\\n                                    <div class=\\\"form-control\\\">{{ eventDetail?.limitedUsers}}</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.limitedAccompanyPersons\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@limitedAccompanyUsers\\\" ghmLabel=\\\"Limited accompany person\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <div>\\r\\n                                    <div class=\\\"form-control\\\">{{ eventDetail?.limitedAccompanyPersons}}</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isAllowOverload\\\"\\r\\n                                                  [disabled]=\\\"true\\\"\\r\\n                                                  [checked]=\\\"eventDetail?.isAllowRegisterWhenOverload\\\">\\r\\n                                    {eventDetail?.isAllowRegisterWhenOverload, select, 0 {Not allow overload} 1\\r\\n                                    {Allow\\r\\n                                    overload}}\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isActive\\\"\\r\\n                                                  [disabled]=\\\"true\\\"\\r\\n                                                  [checked]=\\\"eventDetail?.isActive\\\">\\r\\n                                    {eventDetail?.isActive, select, 0 {In active} 1 {Active}}\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@staffOnly\\\"\\r\\n                                                  [disabled]=\\\"true\\\"\\r\\n                                                  [checked]=\\\"eventDetail?.staffOnly\\\">\\r\\n                                    Staff only\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isAllowRegister\\\"\\r\\n                                                  [disabled]=\\\"true\\\"\\r\\n                                                  [checked]=\\\"eventDetail?.isAllowRegister\\\">\\r\\n                                    Allow register\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isAllowAccompanyPerson\\\"\\r\\n                                                  [disabled]=\\\"true\\\"\\r\\n                                                  [checked]=\\\"eventDetail?.isAllowAccompanyPerson\\\">\\r\\n                                    Allow accompany person\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                        </div><!-- END: right col -->\\r\\n                    </div>\\r\\n                </form>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #eventDaysTemplate>\\r\\n    <app-event-day [eventId]=\\\"id\\\"\\r\\n                   [readonly]=\\\"true\\\"></app-event-day>\\r\\n</ng-template>\\r\\n\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { EventService } from '../event.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Event } from '../models/event.model';\r\nimport { EventDayViewModel } from '../view-models/event-day.viewmodel';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { EventTranslation } from '../models/event-translation.model';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\n\r\n@Component({\r\n    selector: 'app-event-detail',\r\n    templateUrl: './event-detail.component.html'\r\n})\r\n\r\nexport class EventDetailComponent extends BaseFormComponent implements OnInit {\r\n    eventDetail: Event;\r\n    eventDays: EventDayViewModel[] = [];\r\n    eventTranslations: EventTranslation[] = [];\r\n    viewType = 0;\r\n\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private eventService: EventService) {\r\n        super();\r\n        this.route.params.subscribe(params => {\r\n            if (params.id) {\r\n                this.id = params.id;\r\n                this.getEventDetail();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.EVENT, this.pageId.EVENT_LIST, 'Chi tiết sự kiện',\r\n            'Quản lý sự kiện');\r\n    }\r\n\r\n    changeViewType(viewType: number) {\r\n        if (this.viewType === viewType) {\r\n            return;\r\n        }\r\n        this.viewType = viewType;\r\n        if (this.viewType === 0 && !this.eventDetail) {\r\n            this.getEventDetail();\r\n        }\r\n    }\r\n\r\n    private getEventDetail() {\r\n        this.eventService.getDetail(this.id)\r\n            .subscribe((result: Event) => this.eventDetail = result);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span i18n=\\\"@@updateEventFormTitle\\\" class=\\\"cm-mgr-5\\\">{isUpdate, select, 0 {Add new event} 1 {Update event}}</span>\\r\\n    <small i18n=\\\"@@eventModuleTitle\\\">Events management</small>\\r\\n</h1>\\r\\n\\r\\n<nh-wizard [currentStep]=\\\"1\\\" #eventWizard>\\r\\n    <nh-step\\r\\n        i18n-title=\\\"@@step1\\\"\\r\\n        i18n-description=\\\"@@eventStep1Description\\\"\\r\\n        title=\\\"Step 1\\\"\\r\\n        description=\\\"Event info\\\"\\r\\n        [step]=\\\"1\\\"\\r\\n        (next)=\\\"save()\\\">\\r\\n        <div class=\\\"portlet light bordered\\\">\\r\\n            <div class=\\\"portlet-title\\\">\\r\\n                <div class=\\\"caption\\\">\\r\\n                    <i class=\\\"fa fa-gift font-blue-hoki\\\"></i>\\r\\n                    <span class=\\\"caption-subject bold font-blue-hoki uppercase\\\" i18n=\\\"@@eventInfo\\\">\\r\\n                        Event info\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"portlet-body\\\">\\r\\n                <form [formGroup]=\\\"model\\\"\\r\\n                      (ngSubmit)=\\\"save()\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"languages.length > 1\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                                       class=\\\"control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <nh-select [data]=\\\"languages\\\"\\r\\n                                           [(value)]=\\\"currentLanguage\\\"></nh-select>\\r\\n                            </div>\\r\\n                            <span formArrayName=\\\"modelTranslations\\\">\\r\\n                                <div class=\\\"form-group\\\"\\r\\n                                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                     [formGroupName]=\\\"i\\\"\\r\\n                                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@eventName\\\" ghmLabel=\\\"Event name\\\"\\r\\n                                           class=\\\"control-label\\\"\\r\\n                                           [required]=\\\"true\\\"></label>\\r\\n                                    <div>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter event name\\\"\\r\\n                                               i18n-placeholder=\\\"@@enterEventName\\\" formControlName=\\\"name\\\">\\r\\n                                        <span *ngIf=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\"\\r\\n                                              class=\\\"help-block\\\" i18n=\\\"@@eventNameErrorMessage\\\">\\r\\n                                            {\\r\\n                                            translationFormErrors[modelTranslation.value.languageId]?.name,\\r\\n                                            select, required {Please enter event name} maxlength {Event name must not exceed 256 characters}\\r\\n                                            }\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@thumbnail\\\" ghmLabel=\\\"Thumbnail\\\"\\r\\n                                           class=\\\"control-label\\\"></label>\\r\\n                                    <div>\\r\\n                                        <div class=\\\"cm-mgb-5\\\">\\r\\n                                            <ghm-file-explorer\\r\\n                                                i18n-buttonText=\\\"@@chooseImage\\\"\\r\\n                                                buttonText=\\\"Choose image\\\"\\r\\n                                                (itemSelected)=\\\"onSelectedImage($event)\\\"></ghm-file-explorer>\\r\\n                                            <button\\r\\n                                                *ngIf=\\\"model.value.thumbnail\\\"\\r\\n                                                class=\\\"btn red cm-mgl-5\\\"\\r\\n                                                i18n=\\\"@@removeThumbnail\\\" (click)=\\\"removeThumbnail()\\\">\\r\\n                                                Remove thumbnail\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"thumbnail-preview\\\">\\r\\n                                            <img ghmImage [src]=\\\"model.value.thumbnail\\\" alt=\\\"\\\">\\r\\n                                        </div><!-- END: .thumbnail-preview -->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\"\\r\\n                                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                     [formGroupName]=\\\"i\\\"\\r\\n                                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\"\\r\\n                                           class=\\\"control-label\\\"\\r\\n                                           [required]=\\\"true\\\"></label>\\r\\n                                    <div>\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Enter description\\\"\\r\\n                                                  i18n-placeholder=\\\"@@enterDescription\\\"\\r\\n                                                  formControlName=\\\"description\\\"></textarea>\\r\\n                                        <span\\r\\n                                            *ngIf=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\"\\r\\n                                            class=\\\"help-block\\\" i18n=\\\"@@eventDescriptionErrorMessage\\\">\\r\\n                                            {\\r\\n                                            translationFormErrors[modelTranslation.value.languageId]?.description,\\r\\n                                            select, requried {Please enter description}\\r\\n                                            maxlength {Description must not exceed 500 characters}\\r\\n                                            }\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\"\\r\\n                                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                     [formGroupName]=\\\"i\\\"\\r\\n                                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.content\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@content\\\" ghmLabel=\\\"Content\\\"\\r\\n                                           class=\\\"control-label\\\"\\r\\n                                           [required]=\\\"true\\\"></label>\\r\\n                                    <div>\\r\\n                                        <ghm-file-explorer i18n-buttonText=\\\"@@appendImageToContent\\\" buttonText=\\\"Append image to content\\\"\\r\\n                                                           [multiple]=\\\"true\\\"\\r\\n                                                           (itemSelected)=\\\"onAcceptContentImages($event)\\\"\\r\\n                                                           (acceptSelected)=\\\"onAcceptContentImages($event)\\\"></ghm-file-explorer>\\r\\n                                        <tinymce #eventContentEditor\\r\\n                                                 [height]=\\\"350\\\"\\r\\n                                                 elementId=\\\"eventContent{{ modelTranslation.value.languageId }}\\\"\\r\\n                                                 formControlName=\\\"content\\\"></tinymce>\\r\\n                                        <span *ngIf=\\\"translationFormErrors[modelTranslation.value.languageId]?.content\\\"\\r\\n                                              class=\\\"help-block\\\" i18n=\\\"@@eventDescriptionErrorMessage\\\">\\r\\n                                            {\\r\\n                                            translationFormErrors[modelTranslation.value.languageId]?.content,\\r\\n                                            select,\\r\\n                                            required {please enter content}\\r\\n                                            maxlength {Event description must not exceed 500 characters}\\r\\n                                            }\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\"\\r\\n                                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                     [formGroupName]=\\\"i\\\"\\r\\n                                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.address\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@address\\\" ghmLabel=\\\"Address\\\"\\r\\n                                           class=\\\"control-label\\\"></label>\\r\\n                                    <div>\\r\\n                                        <input rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Enter address\\\"\\r\\n                                                  i18n-placeholder=\\\"@@enterAddress\\\"\\r\\n                                                  formControlName=\\\"address\\\"/>\\r\\n                                        <span\\r\\n                                                *ngIf=\\\"translationFormErrors[modelTranslation.value.languageId]?.address\\\"\\r\\n                                                class=\\\"help-block\\\" i18n=\\\"@@eventAddressErrorMessage\\\">\\r\\n                                            {\\r\\n                                            translationFormErrors[modelTranslation.value.languageId]?.address,\\r\\n                                            select,\\r\\n                                            maxlength {Description must not exceed 500 characters}\\r\\n                                            }\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </span><!-- END: wrapper info by language -->\\r\\n                        </div> <!-- END: left col -->\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <span formArrayName=\\\"modelTranslations\\\">\\r\\n                                <div class=\\\"form-group\\\"\\r\\n                                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                     [formGroupName]=\\\"i\\\"\\r\\n                                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.metaTitle\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@metaTitle\\\" ghmLabel=\\\"Meta title\\\"\\r\\n                                           class=\\\"control-label\\\"></label>\\r\\n                                    <div>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter meta title\\\"\\r\\n                                               i18n-placeholder=\\\"@@enterMetaTitle\\\" formControlName=\\\"metaTitle\\\">\\r\\n                                        <span\\r\\n                                            *ngIf=\\\"translationFormErrors[modelTranslation.value.languageId]?.metaTitle\\\"\\r\\n                                            class=\\\"help-block\\\" i18n=\\\"@@eventMetaTitleErrorMessage\\\">\\r\\n                                            {\\r\\n                                            translationFormErrors[modelTranslation.value.languageId]?.metaTitle,\\r\\n                                            select, maxlength {Meta title must not exceed 256 characters}\\r\\n                                            }\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\"\\r\\n                                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                     [formGroupName]=\\\"i\\\"\\r\\n                                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.metaDescription\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@metaDescription\\\" ghmLabel=\\\"Meta description\\\"\\r\\n                                           class=\\\"control-label\\\"></label>\\r\\n                                    <div>\\r\\n                                        <textarea rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Enter meta description\\\"\\r\\n                                                  i18n-placeholder=\\\"@@enterMetaDescription\\\"\\r\\n                                                  formControlName=\\\"metaDescription\\\"></textarea>\\r\\n                                        <span\\r\\n                                            *ngIf=\\\"translationFormErrors[modelTranslation.value.languageId]?.metaDescription\\\"\\r\\n                                            class=\\\"help-block\\\" i18n=\\\"@@eventMetaDescriptionErrorMessage\\\">\\r\\n                                            {\\r\\n                                            translationFormErrors[modelTranslation.value.languageId]?.metaDescription,\\r\\n                                            select, maxlength {Meta description must not exceed 500 characters}\\r\\n                                            }\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\"\\r\\n                                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                     [formGroupName]=\\\"i\\\"\\r\\n                                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.tags\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@metaDescription\\\" ghmLabel=\\\"Tags\\\"\\r\\n                                           class=\\\"control-label\\\"></label>\\r\\n                                    <div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@startDate\\\" ghmLabel=\\\"Start date\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <nh-date\\r\\n                                    [format]=\\\"'DD/MM/YYYY'\\\"\\r\\n                                    [mask]=\\\"true\\\" formControlName=\\\"startDate\\\"></nh-date>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@endDate\\\" ghmLabel=\\\"End date\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <nh-date\\r\\n                                    [format]=\\\"'DD/MM/YYYY'\\\"\\r\\n                                    [mask]=\\\"true\\\" formControlName=\\\"endDate\\\"></nh-date>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.limitedUsers\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@limitedUsers\\\" ghmLabel=\\\"Limited users\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <div>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"limitedUsers\\\"\\r\\n                                           i18n-placeholder=\\\"@@limitedUsersPlaceholder\\\"\\r\\n                                           placeholder=\\\"Enter limited users\\\">\\r\\n                                    <span *ngIf=\\\"formErrors?.limitedUsers\\\" class=\\\"help-block\\\"\\r\\n                                          i18n=\\\"@@eventLimitedUsersErrorMessage\\\">\\r\\n                                        {\\r\\n                                        formErrors?.limitedUsers,\\r\\n                                        select, isValid {Limited users must be number}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.limitedAccompanyPersons\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@limitedAccompanyUsers\\\" ghmLabel=\\\"Limited accompany person\\\"\\r\\n                                       class=\\\"control-label\\\"></label>\\r\\n                                <div>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"limitedAccompanyPersons\\\"\\r\\n                                           i18n-placeholder=\\\"@@limitedAccompanyPersonsPlaceholder\\\"\\r\\n                                           placeholder=\\\"Enter limited accompany users\\\">\\r\\n                                    <span *ngIf=\\\"formErrors?.limitedUsers\\\" class=\\\"help-block\\\"\\r\\n                                          i18n=\\\"@@eventLimitedAccompanyPersonsErrorMessage\\\">\\r\\n                                        {\\r\\n                                        formErrors?.limitedAccompanyPersons,\\r\\n                                        select, isValid {Limited accompany person must be number}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isAllowOverload\\\"\\r\\n                                                  formControlName=\\\"isAllowRegisterWhenOverload\\\">\\r\\n                                    {model.value.isAllowRegisterWhenOverload, select, 0 {Not allow overload} 1\\r\\n                                    {Allow\\r\\n                                    overload}}\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isActive\\\" formControlName=\\\"isActive\\\">\\r\\n                                    {model.value.isActive, select, 0 {In active} 1 {Active}}\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@staffOnly\\\" formControlName=\\\"staffOnly\\\">\\r\\n                                    Staff only\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isAllowRegister\\\"\\r\\n                                                  formControlName=\\\"isAllowRegister\\\">\\r\\n                                    Allow register\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <mat-slide-toggle color=\\\"primary\\\" i18n=\\\"@@isAllowAccompanyPerson\\\"\\r\\n                                                  formControlName=\\\"isAllowAccompanyPerson\\\">\\r\\n                                    Allow accompany person\\r\\n                                </mat-slide-toggle>\\r\\n                            </div>\\r\\n                        </div><!-- END: right col -->\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div><!-- END: info portlet -->\\r\\n    </nh-step><!-- END: step 1 -->\\r\\n\\r\\n    <nh-step i18n-title=\\\"@@step2\\\"\\r\\n             i18n-description=\\\"@@eventStep2Description\\\"\\r\\n             title=\\\"Step 2\\\"\\r\\n             description=\\\"Event days info\\\"\\r\\n             [step]=\\\"2\\\"\\r\\n             (back)=\\\"onStepBack($event)\\\"\\r\\n             (finish)=\\\"onFinishCreateEvent($event)\\\">\\r\\n        <app-event-day [eventId]=\\\"id\\\"\\r\\n                       [eventDays]=\\\"eventDays\\\"></app-event-day>\\r\\n    </nh-step><!-- END: step 2 -->\\r\\n</nh-wizard>\\r\\n\"","import {AfterViewInit, Component, Inject, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../base-form.component';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Event} from '../models/event.model';\r\nimport {EventTranslation} from '../models/event-translation.model';\r\nimport {EventService} from '../event.service';\r\nimport {ActionResultViewModel} from '../../../shareds/view-models/action-result.viewmodel';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {NhModalComponent} from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {NumberValidator} from '../../../validators/number.validator';\r\nimport * as _ from 'lodash';\r\nimport {TinymceComponent} from '../../../shareds/components/tinymce/tinymce.component';\r\nimport {IPageId, PAGE_ID} from '../../../configs/page-id.config';\r\nimport {EventDayViewModel} from '../view-models/event-day.viewmodel';\r\nimport {EventStatus} from '../constants/event-status.const';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {NhWizardComponent} from '../../../shareds/components/nh-wizard/nh-wizard.component';\r\nimport {ExplorerItem} from '../../../shareds/components/ghm-file-explorer/explorer-item.model';\r\n\r\n@Component({\r\n    selector: 'app-event-form',\r\n    templateUrl: './event-form.component.html',\r\n    styleUrls: ['./event-form.component.css'],\r\n    providers: [NumberValidator]\r\n})\r\nexport class EventFormComponent extends BaseFormComponent implements OnInit, AfterViewInit {\r\n    @ViewChild('eventFormModal') eventFormModal: NhModalComponent;\r\n    @ViewChild('eventWizard') eventWizard: NhWizardComponent;\r\n    @ViewChildren(TinymceComponent) eventContentEditors: QueryList<TinymceComponent>;\r\n    event = new Event();\r\n    eventDays: EventDayViewModel[] = [];\r\n    eventTranslation = new EventTranslation();\r\n    isValueChange = false;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private fb: FormBuilder,\r\n                private eventService: EventService,\r\n                private numberValidator: NumberValidator) {\r\n        super();\r\n        this.subscribers.routeData = this.route.params.subscribe(params => {\r\n            const id = params.id;\r\n            if (id) {\r\n                this.isUpdate = true;\r\n                this.id = id;\r\n                this.getDetail(id);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.EVENT, this.pageId.EVENT_LIST, 'Danh sách sự kiện',\r\n            'Quản lý sự kiện');\r\n        this.renderForm();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initEditor();\r\n    }\r\n\r\n    onSelectedImage(file: ExplorerItem) {\r\n        if (file.isImage) {\r\n            this.model.patchValue({\r\n                thumbnail: file.url,\r\n            });\r\n        }\r\n    }\r\n\r\n    onStepBack(step: number) {\r\n        this.initEditor();\r\n    }\r\n\r\n    onFinishCreateEvent(event: any) {\r\n        this.subscribers.updateStatus = this.eventService.updateStatus(this.id, EventStatus.pending)\r\n            .subscribe();\r\n    }\r\n\r\n    onAcceptContentImages(explorereItems: ExplorerItem[] | ExplorerItem) {\r\n        this.eventContentEditors.forEach((contentEditor: TinymceComponent) => {\r\n            const editorId = `eventContent${this.currentLanguage}`;\r\n            if (contentEditor.elementId === editorId) {\r\n                if (explorereItems instanceof Array) {\r\n                    explorereItems.forEach((explorerItem: ExplorerItem) => {\r\n                        if (!explorerItem.isImage) {\r\n                            return;\r\n                        }\r\n                        contentEditor.append(`<img class=\"img-responsive\" style=\"margin-left: auto; margin-right: auto\" src=\"${explorerItem.absoluteUrl}\" data-url=\"${explorerItem.url}\" />`, editorId);\r\n                    });\r\n                } else {\r\n                    if (!explorereItems.isImage) {\r\n                        return;\r\n                    }\r\n                    contentEditor.append(`<img class=\"img-responsive\" style=\"margin-left: auto; margin-right: auto\" src=\"${explorereItems.absoluteUrl}\" data-url=\"${explorereItems.url}\" />`, editorId);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.eventFormModal.open();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.id = id;\r\n        this.isUpdate = true;\r\n        this.eventFormModal.open();\r\n        this.getDetail(id);\r\n    }\r\n\r\n    removeThumbnail() {\r\n        this.model.patchValue({\r\n            thumbnail: null\r\n        });\r\n    }\r\n\r\n    save() {\r\n        if (!this.isValueChange) {\r\n            this.eventWizard.next();\r\n            return;\r\n        }\r\n\r\n        const isValid = this.validateModel(true);\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.event = this.model.value;\r\n            this.event.eventTranslations = this.modelTranslations.getRawValue();\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.eventService.update(this.id, this.event)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.isModified = true;\r\n                        this.model.patchValue({\r\n                            concurrencyStamp: result.data\r\n                        });\r\n                        this.eventWizard.next();\r\n                    });\r\n            } else {\r\n                this.eventService.insert(this.event)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.id = result.data;\r\n                        this.eventWizard.next();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.renderFormError(['limitedUsers', 'limitedAccompanyPersons']);\r\n        this.validationMessages = this.renderFormErrorMessage([{'limitedUsers': ['isValid']}, {'limitedAccompanyPersons': ['isValid']}]);\r\n        this.model = this.fb.group({\r\n            isActive: [this.event.isActive],\r\n            limitedUsers: [this.event.limitedUsers, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n            limitedAccompanyPersons: [this.event.limitedAccompanyPersons, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n            concurrencyStamp: [this.event.concurrencyStamp],\r\n            isAllowRegisterWhenOverload: [this.event.isAllowRegisterWhenOverload],\r\n            startDate: [this.event.startDate],\r\n            endDate: [this.event.endDate],\r\n            staffOnly: [this.event.staffOnly],\r\n            isAllowRegister: [this.event.isAllowRegister],\r\n            thumbnail: [this.event.thumbnail],\r\n            isAllowAccompanyPerson: [this.event.isAllowAccompanyPerson],\r\n            modelTranslations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe((data: any) => {\r\n            this.validateModel(false);\r\n            this.isValueChange = true;\r\n        });\r\n    }\r\n\r\n    private resetModel() {\r\n        this.isUpdate = false;\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            isActive: true,\r\n            limitedUsers: '',\r\n            limitedAccompanyPersons: '',\r\n            concurrencyStamp: '',\r\n            isAllowRegisterWhenOverload: false,\r\n            startDate: '',\r\n            endDate: '',\r\n            staffOnly: false,\r\n            isShowPopup: false,\r\n            isAllowRegister: true,\r\n            isAllowAccompanyPerson: true\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n                metaTitle: '',\r\n                metaDescription: '',\r\n                seoLink: '',\r\n                content: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.renderFormError(['name', 'description', 'metaDescription', 'metaTitle',\r\n            'content', 'seoLink', 'address']);\r\n        this.translationValidationMessage[language] = this.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['required', 'maxlength']},\r\n            {'metaTitle': ['maxlength']},\r\n            {'metaDescription': ['maxlength']},\r\n            {'content': ['required', 'maxlength']},\r\n            {'seoLink': ['maxlength']},\r\n            {'address': ['maxlength']},\r\n        ]);\r\n        const modelTranslation = this.fb.group({\r\n            languageId: [language],\r\n            name: [this.eventTranslation.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            description: [this.eventTranslation.description, [\r\n                Validators.required,\r\n                Validators.maxLength(500)\r\n            ]],\r\n            metaTitle: [this.eventTranslation.metaTitle, [\r\n                Validators.maxLength(256)\r\n            ]],\r\n            metaDescription: [this.eventTranslation.metaDescription, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            content: [this.eventTranslation.content, [\r\n                Validators.required,\r\n                Validators.maxLength(4000)\r\n            ]],\r\n            address: [this.eventTranslation.address, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n        });\r\n        modelTranslation.valueChanges.subscribe((data: any) => {\r\n            this.validateTranslationModel(false);\r\n            this.isValueChange = true;\r\n        });\r\n        return modelTranslation;\r\n    };\r\n\r\n    private getDetail(id: string) {\r\n        this.subscribers.getDetail = this.eventService.getDetail(id)\r\n            .subscribe((eventDetail: Event) => {\r\n                if (eventDetail) {\r\n                    this.model.patchValue({\r\n                        limitedUsers: eventDetail.limitedUsers,\r\n                        limitedAccompanyPersons: eventDetail.limitedAccompanyPersons,\r\n                        staffOnly: eventDetail.staffOnly,\r\n                        startDate: eventDetail.startDate,\r\n                        endDate: eventDetail.endDate,\r\n                        isAllowRegister: eventDetail.isAllowRegister,\r\n                        isActive: eventDetail.isActive,\r\n                        isAllowRegisterWhenOverload: eventDetail.isAllowRegisterWhenOverload,\r\n                        isAllowAccompanyPerson: eventDetail.isAllowAccompanyPerson,\r\n                        concurrencyStamp: eventDetail.concurrencyStamp,\r\n                        thumbnail: eventDetail.thumbnail\r\n                    });\r\n                    if (eventDetail.eventTranslations && eventDetail.eventTranslations.length > 0) {\r\n                        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n                            const detail = _.find(eventDetail.eventTranslations, (translation: EventTranslation) => {\r\n                                return translation.languageId === model.value.languageId;\r\n                            });\r\n                            if (detail) {\r\n                                model.patchValue(detail);\r\n                            }\r\n                        });\r\n                    }\r\n                    this.isValueChange = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private initEditor() {\r\n        this.eventContentEditors.forEach((eventContentEditor: TinymceComponent) => {\r\n            eventContentEditor.initEditor();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listEventTitle\\\">List events</span>\\r\\n    <small i18n=\\\"@@eventModuleTitle\\\">Events management</small>\\r\\n</h1>\\r\\n\\r\\n<form class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@enterKeyword\\\" i18n-placeholder placeholder=\\\"Enter keyword.\\\"\\r\\n               name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-date\\r\\n                type=\\\"inputButton\\\"\\r\\n                [(ngModel)]=\\\"startDate\\\" name=\\\"startDate\\\"\\r\\n                name=\\\"startDate\\\"></nh-date>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-date\\r\\n                type=\\\"inputButton\\\"\\r\\n                [(ngModel)]=\\\"endDate\\\"\\r\\n                name=\\\"endDate\\\"></nh-date>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <ghm-user-suggestion\\r\\n                (userSelected)=\\\"onCreatorSelected($event)\\\"\\r\\n                (userRemoved)=\\\"onRemoveCreator()\\\"></ghm-user-suggestion>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button class=\\\"btn blue\\\" [disabled]=\\\"isSearching\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"refresh()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <a routerLink=\\\"/event/add\\\" class=\\\"btn blue\\\" i18n=\\\"@@add\\\"\\r\\n           *ngIf=\\\"permission.add\\\">\\r\\n            Add\\r\\n        </a>\\r\\n        <button type=\\\"button\\\" class=\\\"btn blue cm-mgl-5\\\" (click)=\\\"updateStatus(status.pending)\\\" i18n=\\\"@@sendAll\\\"\\r\\n                *ngIf=\\\"listSelectedEvents.length > 0\\\">\\r\\n            Send all\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn green cm-mgl-5\\\" (click)=\\\"updateStatus(status.approve)\\\" i18n=\\\"@@approveAll\\\"\\r\\n                *ngIf=\\\"permission.approve && listSelectedEvents.length > 0\\\">\\r\\n            Approve all\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn red cm-mgl-5\\\" (click)=\\\"updateStatus(status.decline)\\\" i18n=\\\"@@declineAll\\\"\\r\\n                *ngIf=\\\"permission.approve && listSelectedEvents.length > 0\\\">\\r\\n            Decline all\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn red cm-mgl-5\\\" i18n=\\\"@@deleteAll\\\"\\r\\n                *ngIf=\\\"permission.delete && listSelectedEvents.length > 0\\\"\\r\\n                [swal]=\\\"confirmDeleleteMultiple\\\"\\r\\n                (confirm)=\\\"deleteMultiple()\\\">\\r\\n            Delete all\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<table class=\\\"table table-hover table-stripped\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@eventName\\\">Event name</th>\\r\\n        <th class=\\\"middle w100\\\" i18n=\\\"@@startDate\\\">Start date</th>\\r\\n        <th class=\\\"middle w70 middle\\\" i18n=\\\"@@endDate\\\">End date</th>\\r\\n        <th class=\\\"middle w150\\\" i18n=\\\"@@creator\\\">Creator</th>\\r\\n        <th class=\\\"middle text-right\\\" i18n=\\\"@@status\\\">Status</th>\\r\\n        <th class=\\\"middle center\\\" i18n=\\\"@@activate\\\">Activate</th>\\r\\n        <th class=\\\"middle text-right w150\\\" i18n=\\\"@@actions\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Actions\\r\\n        </th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listItems; let i = index\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            <div class=\\\"media\\\">\\r\\n                <div class=\\\"media-left w50\\\">\\r\\n                    <a href=\\\"javascript://\\\" class=\\\"h50 overflow-h display-block\\\">\\r\\n                        <img ghmImage class=\\\"media-object img-responsive\\\" [src]=\\\"item.thumbnail\\\"\\r\\n                             alt=\\\"{{ item.name }}\\\">\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\\\"media-body\\\">\\r\\n                    <a routerLink=\\\"/event/detail/{{ item.id }}\\\"\\r\\n                       *ngIf=\\\"permission.view; else noEditTemplate\\\">{{ item.name }}</a>\\r\\n                    <ng-template #noEditTemplate>\\r\\n                        {{ item.name }}\\r\\n                    </ng-template>\\r\\n                </div>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td class=\\\"middle\\\">{{ item.startDate | dateTimeFormat:'DD/MM/YYYY' }}</td>\\r\\n        <td class=\\\"middle\\\">{{ item.endDate | dateTimeFormat:'DD/MM/YYYY' }}</td>\\r\\n        <td class=\\\"middle\\\">{{ item.creatorFullName }}</td>\\r\\n        <td class=\\\"middle text-right\\\">\\r\\n                <span class=\\\"badge\\\"\\r\\n                      [class.badge-default]=\\\"item.status === status.draft\\\"\\r\\n                      [class.badge-primary]=\\\"item.status === status.pending\\\"\\r\\n                      [class.badge-success]=\\\"item.status === status.approved\\\"\\r\\n                      [class.badge-danger]=\\\"item.status === status.declined\\\"\\r\\n                      i18n=\\\"@@eventStatus\\\"\\r\\n                >{item.status, select, 0 {Draft} 1 {Pending} 2 {Approved} 3 {Declined}}</span>\\r\\n        </td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n                <span class=\\\"badge\\\"\\r\\n                      [class.badge-primary]=\\\"item.isActive\\\"\\r\\n                      [class.badge-danger]=\\\"!item.isActive\\\">{item.isActive, select, 1 {Active} 0 {InActive}}</span>\\r\\n        </td>\\r\\n        <td class=\\\"middle text-right w150\\\"\\r\\n            *ngIf=\\\"permission.edit || permission.delete || permission.report || permission.view\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\">\\r\\n                    <li *ngIf=\\\"item.status === status.pending && permission.approve\\\">\\r\\n                        <a href=\\\"javascript://\\\" class=\\\"color-green\\\"\\r\\n                           (click)=\\\"changeStatus(item.id, status.approved)\\\">\\r\\n                            <i class=\\\"fa fa-check color-green\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@detail\\\">Approve</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"item.status === status.pending && permission.approve\\\">\\r\\n                        <a href=\\\"javascript://\\\" class=\\\"color-red\\\"\\r\\n                           [swal]=\\\"confirmDecline\\\"\\r\\n                           (confirm)=\\\"changeStatus(item.id, status.declined, $event)\\\">\\r\\n                            <i class=\\\"fa fa-times color-red\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@detail\\\">Decline</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.view\\\">\\r\\n                        <a routerLink=\\\"/event/register/{{ item.id }}\\\">\\r\\n                            <i class=\\\"fa fa-users\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@registerList\\\">Register list</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.add || permission.edit\\\">\\r\\n                        <a href=\\\"javascript://\\\" (click)=\\\"register(item.id)\\\">\\r\\n                            <i class=\\\"fa fa-registered\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@register\\\">Register</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.add || permission.edit\\\">\\r\\n                        <a routerLink=\\\"/event/album/{{ item.id }}\\\">\\r\\n                            <i class=\\\"fa fa-camera-retro\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@detail\\\">Album</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.view\\\">\\r\\n                        <a routerLink=\\\"/event/detail/{{ item.id }}\\\">\\r\\n                            <i class=\\\"fa fa-eye\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@detail\\\">Detail</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.edit\\\">\\r\\n                        <a routerLink=\\\"/event/edit/{{ item.id }}\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@edit\\\">Edit</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.delete\\\"\\r\\n                        [swal]=\\\"confirmDelelete\\\"\\r\\n                        (confirm)=\\\"delete(item.id)\\\">\\r\\n                        <a href=\\\"#\\\">\\r\\n                            <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@delete\\\">Delete</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.report\\\"\\r\\n                        (click)=\\\"report(item.id)\\\">\\r\\n                        <a href=\\\"#\\\">\\r\\n                            <i class=\\\"fa fa-file-text-o\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@report\\\">Report</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul><!-- END: nh-dropdown-menu -->\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            [pageShow]=\\\"6\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\"\\r\\n            [pageSize]=\\\"pageSize\\\"\\r\\n            (pageClick)=\\\"search($event)\\\"\\r\\n></ghm-paging>\\r\\n\\r\\n<swal\\r\\n        #confirmDelelete\\r\\n        i18n-title=\\\"@@confirmDeleteEventTitle\\\"\\r\\n        i18n-text=\\\"@@confirmDeleteEventText\\\"\\r\\n        title=\\\"Are you sure for delete this event?\\\"\\r\\n        text=\\\"You can't recover this event after delete.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\">\\r\\n</swal>\\r\\n\\r\\n<swal\\r\\n        #confirmDeleleteMultiple\\r\\n        i18n-title=\\\"@@confirmDeleteMultipleEventTitle\\\"\\r\\n        i18n-text=\\\"@@confirmDeleteMultipleEventText\\\"\\r\\n        title=\\\"Are you sure for delete selected event?\\\"\\r\\n        text=\\\"You can't recover events after delete.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        input=\\\"textarea\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\">\\r\\n</swal>\\r\\n\\r\\n<swal\\r\\n        #confirmDecline\\r\\n        i18n-title=\\\"@@confirmDeclineEventTitle\\\"\\r\\n        i18n-text=\\\"@@confirmDeclineEventText\\\"\\r\\n        title=\\\"Are you sure for decline selected event?\\\"\\r\\n        text=\\\"You can't recover events after decline.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        input=\\\"textarea\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\">\\r\\n</swal>\\r\\n\\r\\n<!--<ng-template #test>-->\\r\\n<!--<ul class=\\\"ghm-context-menu\\\">-->\\r\\n<!--<li>-->\\r\\n<!--Menu 1-->\\r\\n<!--<ul class=\\\"ghm-sub-context-menu\\\">-->\\r\\n<!--<li></li>-->\\r\\n<!--</ul>&lt;!&ndash; END: .ghm-sub-context-menu &ndash;&gt;-->\\r\\n<!--</li>-->\\r\\n<!--<li>Menu 2</li>-->\\r\\n<!--<li>Menu 3</li>-->\\r\\n<!--<li>Menu 4</li>-->\\r\\n<!--<li>Menu 5</li>-->\\r\\n<!--</ul>-->\\r\\n<!--</ng-template>-->\\r\\n\\r\\n<app-event-register></app-event-register>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { EventViewModel } from '../view-models/event.viewmodel';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { EventService } from '../event.service';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\nimport { ActionResultViewModel } from '../../../shareds/view-models/action-result.viewmodel';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\nimport { EventStatus } from '../constants/event-status.const';\r\nimport * as _ from 'lodash';\r\nimport { EventRegisterComponent } from '../event-register/event-register.component';\r\n\r\n@Component({\r\n    selector: 'app-event-list',\r\n    templateUrl: './event-list.component.html'\r\n})\r\n\r\nexport class EventListComponent extends BaseListComponent<EventViewModel> implements OnInit {\r\n    @ViewChild(EventRegisterComponent) eventRegisterComponent: EventRegisterComponent;\r\n    startDate: string;\r\n    endDate: string;\r\n    isActive: boolean;\r\n    errorMessage: string;\r\n    listSelectedEvents: string[] = [];\r\n    status = EventStatus;\r\n    searchStatus?: number;\r\n    creatorId: string;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private eventService: EventService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.EVENT, this.pageId.EVENT_LIST, 'Danh sách sự kiện', 'Quản lý sự kiện');\r\n        this.subscribers.getListItems = this.route.data\r\n            .subscribe((result: { data: SearchResultViewModel<EventViewModel> }) => {\r\n                const data = result.data;\r\n                if (data) {\r\n                    this.totalRows = data.totalRows;\r\n                    this.listItems = data.items;\r\n                }\r\n            });\r\n    }\r\n\r\n    onCreatorSelected(user: any) {\r\n        this.creatorId = user ? user.id : '';\r\n    }\r\n\r\n    onRemoveCreator() {\r\n        this.creatorId = null;\r\n    }\r\n\r\n    refresh() {\r\n        this.keyword = '';\r\n        this.startDate = null;\r\n        this.endDate = null;\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    changeStatus(id: string, status: number, declineReason?: any) {\r\n        this.eventService.updateStatus(id, status, declineReason)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                const eventInfo = _.find(this.listItems, (item: EventViewModel) => {\r\n                    return item.id === id;\r\n                });\r\n                if (eventInfo) {\r\n                    eventInfo.status = status;\r\n                    eventInfo.declineReason = _.cloneDeep(declineReason);\r\n                }\r\n            });\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.subscribers.getListItems = this.eventService\r\n            .search(this.keyword, this.startDate, this.endDate, this.creatorId, this.searchStatus,\r\n                this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(\r\n                finalize(() => this.isSearching = false)\r\n            ).subscribe((result: SearchResultViewModel<EventViewModel>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listItems = result.items;\r\n            });\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.subscribers.delete = this.eventService.delete(id)\r\n            .subscribe((result: ActionResultViewModel) => this.search(this.currentPage));\r\n    }\r\n\r\n    report(id: string) {\r\n\r\n    }\r\n\r\n    updateStatus(status: number) {\r\n        if (this.listSelectedEvents.length === 0) {\r\n            this.errorMessage = 'choose_event';\r\n            return;\r\n        }\r\n\r\n        this.subscribers.updateMultipleStatus = this.eventService.updateMultipleStatus(\r\n            this.listSelectedEvents.map((id: string) => {\r\n                return {\r\n                    id: id,\r\n                    status: status\r\n                };\r\n            })\r\n        ).subscribe((result: ActionResultViewModel) => {\r\n            this.search(this.currentPage);\r\n        });\r\n    }\r\n\r\n    deleteMultiple() {\r\n        if (this.listSelectedEvents.length === 0) {\r\n            this.errorMessage = 'choose_event';\r\n            return;\r\n        }\r\n\r\n        this.subscribers.updateMultipleStatus = this.eventService.deleteMultiple(\r\n            this.listSelectedEvents.map((id: string) => {\r\n                return id;\r\n            })\r\n        ).subscribe((result: ActionResultViewModel) => {\r\n            this.search(this.currentPage);\r\n        });\r\n    }\r\n\r\n    register(eventId: string) {\r\n        this.eventRegisterComponent.add(eventId);\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #registerModal size=\\\"full\\\">\\r\\n    <nh-modal-header [showCloseButton]=\\\"true\\\">\\r\\n        <h4 class=\\\"title uppercase bold\\\" i18n=\\\"@@register\\\">Register detail</h4>\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"portlet light bordered\\\">\\r\\n                        <div class=\\\"portlet-title\\\">\\r\\n                            <div class=\\\"caption font-green-sharp\\\">\\r\\n                                <i class=\\\"icon-share font-green-sharp\\\"></i>\\r\\n                                <span class=\\\"caption-subject bold uppercase\\\"\\r\\n                                      i18n=\\\"@@eventDayInfo\\\"> Event day info </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"portlet-body\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"Phone number\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@phoneNumber\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control\\\">\\r\\n                                        {{ eventRegisterDetail?.phoneNumber }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"FullName\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@fullName\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control\\\">\\r\\n                                        {{ eventRegisterDetail?.fullName }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"Email\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@email\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control\\\">\\r\\n                                        {{ eventRegisterDetail?.email }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"Address\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@address\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control height-auto\\\">\\r\\n                                        {{ eventRegisterDetail?.address }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"Note\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@note\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"form-control height-auto\\\">\\r\\n                                        {{ eventRegisterDetail?.note }}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div><!-- END: .col-sm-6 -->\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"portlet light bordered\\\">\\r\\n                        <div class=\\\"portlet-title\\\">\\r\\n                            <div class=\\\"caption font-green-sharp\\\">\\r\\n                                <i class=\\\"icon-share font-green-sharp\\\"></i>\\r\\n                                <span class=\\\"caption-subject bold uppercase\\\"\\r\\n                                      i18n=\\\"@@eventDayInfo\\\"> Event day info </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"portlet-body\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <ul class=\\\"ghm-list-item-container\\\">\\r\\n                                        <li *ngFor=\\\"let eventRegister of eventRegisterDetail?.eventDayRegisters\\\">\\r\\n                                            <mat-checkbox [disabled]=\\\"true\\\" [checked]=\\\"eventRegister.isSelected\\\">\\r\\n                                                <span class=\\\"bold cm-mgr-5\\\">{{ eventRegister?.eventDayName }}</span>\\r\\n                                                <span>({{ eventRegister?.eventDayDate | dateTimeFormat:'DD/MM/YYYY' }})</span>\\r\\n                                            </mat-checkbox>\\r\\n\\r\\n                                            <ul class=\\\"ghm-list-item-container\\\" *ngIf=\\\"eventRegister?.isSelected\\\">\\r\\n                                                <li>\\r\\n                                                    <table class=\\\"table table-stripped table-hover\\\">\\r\\n                                                        <thead>\\r\\n                                                        <tr>\\r\\n                                                            <th i18n=\\\"@@fullName\\\">FullName</th>\\r\\n                                                            <th class=\\\"text-right\\\" i18n=\\\"@@phoneNumber\\\">Phone number\\r\\n                                                            </th>\\r\\n                                                            <th class=\\\"text-right\\\" i18n=\\\"@@actions\\\">Actions</th>\\r\\n                                                        </tr>\\r\\n                                                        </thead>\\r\\n                                                        <tbody>\\r\\n                                                        <tr *ngFor=\\\"let accompanyPerson of eventRegister?.accompanyPersons\\\">\\r\\n                                                            <td>{{ accompanyPerson?.fullName }}</td>\\r\\n                                                            <td class=\\\"text-right\\\">{{ accompanyPerson?.phoneNumber }}\\r\\n                                                            </td>\\r\\n                                                        </tr>\\r\\n                                                        </tbody>\\r\\n                                                    </table>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div><!-- END: .col-sm-6 -->\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer class=\\\"text-right\\\">\\r\\n            <ghm-button type=\\\"button\\\" classes=\\\"btn btn-default\\\" nh-dismiss\\r\\n                        i18n=\\\"@@close\\\">\\r\\n                Close\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { NhModalComponent } from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { AccompanyPerson, EventRegister, EventDayRegister } from '../models/event-register.model';\r\nimport { EventService } from '../event.service';\r\nimport { CustomerService } from '../../customer/service/customer.service';\r\nimport {\r\n    EventRegisterDetailViewModel\r\n} from '../event-register/event-register-detail.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-event-register-detail',\r\n    templateUrl: './event-register-detail.component.html',\r\n    providers: [CustomerService]\r\n})\r\n\r\nexport class EventRegisterDetailComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('registerModal') registerModal: NhModalComponent;\r\n\r\n    eventRegisterDetail: EventRegisterDetailViewModel;\r\n    eventId: string;\r\n\r\n    constructor(private eventService: EventService,\r\n                private customerService: CustomerService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    show(eventId: string, id: string) {\r\n        this.id = id;\r\n        this.eventId = eventId;\r\n        this.getDetail();\r\n        this.registerModal.open();\r\n    }\r\n\r\n    private getDetail() {\r\n        this.subscribers.getEventRegisterDetail = this.eventService.getEventRegisterDetail(this.eventId, this.id)\r\n            .subscribe((eventRegisterDetail: EventRegisterDetailViewModel) => {\r\n                this.eventRegisterDetail = eventRegisterDetail;\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listEventRegisterTitle\\\">List event register</span>\\r\\n    <small i18n=\\\"@@eventModuleTitle\\\">Events management</small>\\r\\n</h1>\\r\\n\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@enterKeyword\\\" i18n-placeholder placeholder=\\\"Enter keyword.\\\"\\r\\n               name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button class=\\\"btn blue\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"refresh()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <a href=\\\"javascript://\\\" class=\\\"btn blue\\\" i18n=\\\"@@add\\\"\\r\\n           *ngIf=\\\"permission.add\\\"\\r\\n           (click)=\\\"register()\\\">\\r\\n            Add\\r\\n        </a>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<table class=\\\"table table-hover table-stripped\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@fullName\\\">Fullname</th>\\r\\n        <th class=\\\"middle w100\\\" i18n=\\\"@@phoneNumber\\\">Phone number</th>\\r\\n        <th class=\\\"middle w70 middle\\\" i18n=\\\"@@email\\\">Email</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@address\\\">Address</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@role\\\">Role</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@eventDays\\\">Event days</th>\\r\\n        <th class=\\\"middle w70\\\" i18n=\\\"@@joined\\\">Joined</th>\\r\\n        <th class=\\\"middle w70\\\" i18n=\\\"@@canceled\\\">Canceled</th>\\r\\n        <th class=\\\"middle w50\\\" i18n=\\\"@@actions\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Actions\\r\\n        </th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <ng-template ngFor let-item [ngForOf]=\\\"listItems\\\" let-currentIndex=\\\"index\\\">\\r\\n        <tr *ngFor=\\\"let eventDay of item.eventDayRegisters; let eventDayIndex = index\\\">\\r\\n            <td class=\\\"center middle\\\" *ngIf=\\\"eventDayIndex === 0\\\" [attr.rowspan]=\\\"item.eventDayRegisters.length\\\">\\r\\n                {{ (currentPage - 1) * pageSize + currentIndex + 1 }}\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\" *ngIf=\\\"eventDayIndex === 0\\\" [attr.rowspan]=\\\"item.eventDayRegisters.length\\\">{{\\r\\n                item.fullName }}\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\" *ngIf=\\\"eventDayIndex === 0\\\" [attr.rowspan]=\\\"item.eventDayRegisters.length\\\">{{\\r\\n                item.phoneNumber }}\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\" *ngIf=\\\"eventDayIndex === 0\\\" [attr.rowspan]=\\\"item.eventDayRegisters.length\\\">{{ item.email\\r\\n                }}\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\" *ngIf=\\\"eventDayIndex === 0\\\" [attr.rowspan]=\\\"item.eventDayRegisters.length\\\">{{\\r\\n                item.address }}\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\" *ngIf=\\\"eventDayIndex === 0\\\" [attr.rowspan]=\\\"item.eventDayRegisters.length\\\">\\r\\n                <span>\\r\\n                    {item.role, select, 0 {Walk In Guest} 1 {Customer} 2 {Invitation} 3 {Professional} 4 {Employee}}\\r\\n                </span>\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\">{{ eventDay.name }}</td>\\r\\n            <td class=\\\"center middle\\\">\\r\\n                <mat-slide-toggle\\r\\n                        color=\\\"primary\\\"\\r\\n                        [checked]=\\\"eventDay.status === status.joined\\\"\\r\\n                        (change)=\\\"changeStatus(eventDay, status.joined)\\\"></mat-slide-toggle>\\r\\n            </td>\\r\\n            <td class=\\\"center middle\\\">\\r\\n                <mat-slide-toggle\\r\\n                        color=\\\"primary\\\"\\r\\n                        [checked]=\\\"eventDay.status === status.canceled\\\"\\r\\n                        (change)=\\\"changeStatus(eventDay, status.canceled)\\\"></mat-slide-toggle>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"eventDayIndex === 0 && (permission.edit || permission.delete)\\\"\\r\\n                [attr.rowspan]=\\\"item.eventDayRegisters.length\\\"\\r\\n                class=\\\"center\\\">\\r\\n                <nh-dropdown>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                        <mat-icon>more_horiz</mat-icon>\\r\\n                    </button>\\r\\n                    <ul class=\\\"nh-dropdown-menu right\\\">\\r\\n                        <li *ngIf=\\\"permission.view\\\">\\r\\n                            <a href=\\\"javascript://\\\" (click)=\\\"showDetail(item.id)\\\">\\r\\n                                <i class=\\\"fa fa-eye\\\"></i>\\r\\n                                <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@detail\\\">Detail</span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li *ngIf=\\\"permission.edit\\\">\\r\\n                            <a href=\\\"javascript://\\\" (click)=\\\"edit(item.id)\\\">\\r\\n                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@edit\\\">Edit</span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li *ngIf=\\\"permission.edit\\\">\\r\\n                            <a href=\\\"javascript://\\\"\\r\\n                               [swal]=\\\"confirmDelete\\\"\\r\\n                               (confirm)=\\\"delete(item)\\\">\\r\\n                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@edit\\\">Delete</span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul><!-- END: nh-dropdown-menu -->\\r\\n                </nh-dropdown>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            [pageShow]=\\\"6\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\"\\r\\n            [pageSize]=\\\"pageSize\\\"\\r\\n            (pageClick)=\\\"search($event)\\\"\\r\\n></ghm-paging>\\r\\n\\r\\n<app-event-register (saveSuccessful)=\\\"onSaveSuccessful()\\\"></app-event-register>\\r\\n<app-event-register-detail></app-event-register-detail>\\r\\n\\r\\n<swal\\r\\n        #confirmDelete\\r\\n        i18n-title=\\\"@@confirmTitleDeleteRegister\\\"\\r\\n        i18n-text=\\\"@@confirmTextDeleteRegister\\\"\\r\\n        title=\\\"Are you sure for delete this register?\\\"\\r\\n        text=\\\"You can't recover this register after delete.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\"\\r\\n        [showCancelButton]=\\\"true\\\"\\r\\n        [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseListComponent} from '../../../base-list.component';\r\nimport {EventService} from '../event.service';\r\nimport {EventRegisterDayViewModel, EventRegisterListViewModel} from './event-register-list.viewmodel';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {IPageId, PAGE_ID} from '../../../configs/page-id.config';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {EventRegisterComponent} from '../event-register/event-register.component';\r\nimport {SearchResultViewModel} from '../../../shareds/view-models/search-result.viewmodel';\r\nimport {EventRegisterStatus} from '../constants/event-status.const';\r\nimport {ActionResultViewModel} from '../../../shareds/view-models/action-result.viewmodel';\r\nimport {EventRegisterDetailComponent} from '../event-register-detail/event-register-detail.component';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'app-event-register-list',\r\n    templateUrl: './event-register-list.component.html'\r\n})\r\n\r\nexport class EventRegisterListComponent extends BaseListComponent<EventRegisterListViewModel> implements OnInit {\r\n    @ViewChild(EventRegisterComponent) eventRegisterComponent: EventRegisterComponent;\r\n    @ViewChild(EventRegisterDetailComponent) eventRegisterDetailComponent: EventRegisterDetailComponent;\r\n    eventId: string;\r\n    statusSearch: number;\r\n    status = EventRegisterStatus;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private toastr: ToastrService,\r\n                private eventService: EventService) {\r\n        super();\r\n\r\n        this.subscribers.routeParams = this.route.params.subscribe(params => {\r\n            if (params.id) {\r\n                this.eventId = params.id;\r\n                this.search(1);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.EVENT, this.pageId.EVENT_LIST, 'Danh sách người tham gia',\r\n            'Quản lý sự kiện');\r\n    }\r\n\r\n    onSaveSuccessful() {\r\n        this.search(1);\r\n    }\r\n\r\n    changeStatus(eventDay: EventRegisterDayViewModel, status: number) {\r\n        eventDay.status = status;\r\n        this.eventService.updateEventRegisterStatus(this.eventId, eventDay.id, eventDay.registerId, status)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n            });\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.subscribers.search = this.eventService\r\n            .searchRegister(this.eventId, this.keyword, this.statusSearch, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<EventRegisterListViewModel>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listItems = result.items;\r\n                console.log(this.listItems);\r\n            });\r\n    }\r\n\r\n    refresh() {\r\n        this.keyword = '';\r\n        this.status = null;\r\n        this.search(1);\r\n    }\r\n\r\n    register() {\r\n        this.eventRegisterComponent.add(this.eventId);\r\n    }\r\n\r\n    showDetail(registerId: string) {\r\n        this.eventRegisterDetailComponent.show(this.eventId, registerId);\r\n    }\r\n\r\n    edit(registerId: string) {\r\n        this.eventRegisterComponent.edit(this.eventId, registerId);\r\n    }\r\n\r\n    delete(item: EventRegisterListViewModel) {\r\n        this.eventService.deleteEventRegister(item.eventId, item.id).subscribe(() => {\r\n            _.remove(this.listItems, (register: EventRegisterListViewModel) => {\r\n                return register.id === item.id;\r\n            });\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #registerFormModal size=\\\"full\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header [showCloseButton]=\\\"true\\\">\\r\\n        <h4 class=\\\"title uppercase bold\\\" i18n=\\\"@@register\\\">Register</h4>\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"portlet light bordered\\\">\\r\\n                        <div class=\\\"portlet-title\\\">\\r\\n                            <div class=\\\"caption font-green-sharp\\\">\\r\\n                                <i class=\\\"icon-share font-green-sharp\\\"></i>\\r\\n                                <span class=\\\"caption-subject bold uppercase\\\"\\r\\n                                      i18n=\\\"@@eventDayInfo\\\"> Event day info</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"portlet-body\\\">\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.role\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"Role\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@role\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <nh-select\\r\\n                                            i18n-title=\\\"@@selectRole\\\"\\r\\n                                            [title]=\\\"'-- Select role --'\\\"\\r\\n                                            [data]=\\\"registerRoles\\\"\\r\\n                                            formControlName=\\\"role\\\"\\r\\n                                    ></nh-select>\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                            formErrors?.role,\\r\\n                                            select,\\r\\n                                            required {Please select role}\\r\\n                                            isValid {Phone number invalid}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.phoneNumber\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"Phone number\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@phoneNumber\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <nh-suggestion\\r\\n                                            *ngIf=\\\"model.value.role === registerRole.customer; else formPhoneNumber\\\"\\r\\n                                            [sources]=\\\"customerSuggestion\\\"\\r\\n                                            (itemSelected)=\\\"onCustomerSelected($event)\\\"\\r\\n                                            (itemRemoved)=\\\"onCustomerRemoved()\\\"\\r\\n                                            (searched)=\\\"onSearchCustomer($event)\\\"></nh-suggestion>\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                            formErrors?.phoneNumber,\\r\\n                                            select,\\r\\n                                            required {Please enter phone number}\\r\\n                                            maxLength {Phone number not allowed over 50 characters}\\r\\n                                            pattern {Phone number invalid}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                    <ng-template #formPhoneNumber>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                               placeholder=\\\"Enter phone number\\\"\\r\\n                                               i18n=\\\"@@enterPhoneNumberPlaceholder\\\"\\r\\n                                               formControlName=\\\"phoneNumber\\\">\\r\\n                                    </ng-template>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.fullName\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"FullName\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@fullName\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                           placeholder=\\\"Enter fullname\\\"\\r\\n                                           i18n=\\\"@@enterFullNamePlaceholder\\\"\\r\\n                                           formControlName=\\\"fullName\\\">\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                            formErrors?.fullName,\\r\\n                                            select,\\r\\n                                            required {Please select fullname}\\r\\n                                            maxLength {FullName not allowed over 50 characters}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.email\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"Email\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@email\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                           placeholder=\\\"Enter email\\\"\\r\\n                                           i18n=\\\"@@enterEmailPlaceholder\\\"\\r\\n                                           formControlName=\\\"email\\\">\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                            formErrors?.email,\\r\\n                                            select,\\r\\n                                            maxLength {Email not allowed over 500 characters}\\r\\n                                            pattern {Invalid email}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.address\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"Address\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@address\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea type=\\\"text\\\" class=\\\"form-control height-auto\\\"\\r\\n                                              placeholder=\\\"Enter address\\\"\\r\\n                                              formControlName=\\\"address\\\"\\r\\n                                              i18n=\\\"@@enterAddressPlaceholder\\\"></textarea>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"model.value.role !== registerRole.customer\\\">\\r\\n                                <label i18n-ghmLabel=\\\"@@avatar\\\" ghmLabel=\\\"Avatar\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"cm-mgb-5\\\">\\r\\n                                        <ghm-file-explorer\\r\\n                                                i18n-buttonText=\\\"@@chooseImage\\\"\\r\\n                                                buttonText=\\\"Choose image\\\"\\r\\n                                                (itemSelected)=\\\"onSelectedImage($event)\\\"></ghm-file-explorer>\\r\\n                                        <button\\r\\n                                                *ngIf=\\\"model.value.thumbnail\\\"\\r\\n                                                class=\\\"btn red cm-mgl-5\\\"\\r\\n                                                i18n=\\\"@@removeThumbnail\\\" (click)=\\\"removeThumbnail()\\\">\\r\\n                                            Remove thumbnail\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"thumbnail-preview\\\">\\r\\n                                        <img ghmImage [src]=\\\"model.value.avatar\\\" alt=\\\"\\\" [isUrlAbsolute]=\\\"true\\\">\\r\\n                                    </div><!-- END: .thumbnail-preview -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.note\\\">\\r\\n                                <label class=\\\"col-sm-4 control-label\\\"\\r\\n                                       ghmLabel=\\\"Note\\\"\\r\\n                                       i18n-ghmLabel=\\\"@@note\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea type=\\\"text\\\" class=\\\"form-control height-auto\\\"\\r\\n                                              placeholder=\\\"Enter note\\\"\\r\\n                                              formControlName=\\\"note\\\"\\r\\n                                              i18n=\\\"@@enterNotePlaceholder\\\"></textarea>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div><!-- END: .col-sm-6 -->\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"portlet light bordered\\\">\\r\\n                        <div class=\\\"portlet-title\\\">\\r\\n                            <div class=\\\"caption font-green-sharp\\\">\\r\\n                                <i class=\\\"icon-share font-green-sharp\\\"></i>\\r\\n                                <span class=\\\"caption-subject bold uppercase\\\"\\r\\n                                      i18n=\\\"@@eventDayInfo\\\"> Event day info</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"portlet-body\\\">\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"formErrors?.eventDayRegisters\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <ul class=\\\"ghm-list-item-container\\\" formArrayName=\\\"eventDayRegisters\\\">\\r\\n                                        <li class=\\\"help-block\\\">\\r\\n                                            {formErrors?.eventDayRegisters, select, required {Please select at least\\r\\n                                            event\\r\\n                                            day.}}\\r\\n                                        </li>\\r\\n                                        <li *ngIf=\\\"eventDayRegisters?.length > 0\\\">\\r\\n                                            <mat-checkbox color=\\\"primary\\\" i18n=\\\"@@selectAll\\\"\\r\\n                                                          [checked]=\\\"isSelectAll\\\"\\r\\n                                                          (change)=\\\"changSelectAll()\\\"> Select all\\r\\n                                            </mat-checkbox>\\r\\n                                        </li>\\r\\n                                        <li *ngFor=\\\"let eventDay of eventDayRegisters.controls; let i = index\\\"\\r\\n                                            [formGroupName]=\\\"i\\\">\\r\\n                                            <mat-checkbox\\r\\n                                                    color=\\\"primary\\\"\\r\\n                                                    [checked]=\\\"eventDay?.value.isSelected\\\"\\r\\n                                                    (change)=\\\"changeSelectStatus(eventDay)\\\">\\r\\n                                                <span class=\\\"bold cm-mgr-5\\\">{{ eventDay?.value.eventDayName }}</span>\\r\\n                                                <span>({{ eventDay?.value.eventDayDate | dateTimeFormat:'DD/MM/YYYY' }})</span>\\r\\n                                            </mat-checkbox>\\r\\n\\r\\n                                            <ul class=\\\"ghm-list-item-container\\\" *ngIf=\\\"eventDay?.value.isSelected\\\">\\r\\n                                                <li>\\r\\n                                                    <table class=\\\"table table-stripped table-hover\\\">\\r\\n                                                        <thead>\\r\\n                                                        <tr>\\r\\n                                                            <th i18n=\\\"@@fullName\\\">FullName</th>\\r\\n                                                            <th class=\\\"text-right\\\" i18n=\\\"@@phoneNumber\\\">Phone number\\r\\n                                                            </th>\\r\\n                                                            <th class=\\\"text-right\\\" i18n=\\\"@@actions\\\">Actions</th>\\r\\n                                                        </tr>\\r\\n                                                        </thead>\\r\\n                                                        <tbody>\\r\\n                                                        <tr *ngFor=\\\"let item of eventDay.value.accompanyPersons\\\">\\r\\n                                                            <td>{{ item.fullName }}</td>\\r\\n                                                            <td class=\\\"text-right\\\">{{ item.phoneNumber }}</td>\\r\\n                                                            <td class=\\\"text-right\\\">\\r\\n                                                                <button type=\\\"button\\\"\\r\\n                                                                        class=\\\"btn blue btn-outline btn-sm cm-mgr-5\\\"\\r\\n                                                                        i18n-matTooltip=\\\"@@edit\\\"\\r\\n                                                                        matTooltip=\\\"Edit\\\"\\r\\n                                                                        (click)=\\\"editAccompanyPerson(eventDay, item)\\\">\\r\\n                                                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                                                </button>\\r\\n                                                                <button type=\\\"button\\\"\\r\\n                                                                        class=\\\"btn red btn-outline btn-sm cm-mgr-5\\\"\\r\\n                                                                        i18n-matTooltip=\\\"@@delete\\\"\\r\\n                                                                        matTooltip=\\\"Delete\\\"\\r\\n                                                                        (click)=\\\"removeAccompanyPerson(eventDay?.value, item)\\\">\\r\\n                                                                    <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                                                                </button>\\r\\n                                                                <button type=\\\"button\\\" type=\\\"button\\\"\\r\\n                                                                        class=\\\"btn blue btn-outline btn-sm\\\"\\r\\n                                                                        i18n-matTooltip=\\\"@@copy\\\"\\r\\n                                                                        matTooltip=\\\"Copy\\\"\\r\\n                                                                        (click)=\\\"copyAccompanyPerson(item)\\\">\\r\\n                                                                    <i class=\\\"fa fa-clipboard\\\"></i>\\r\\n                                                                </button>\\r\\n                                                            </td>\\r\\n                                                        </tr>\\r\\n                                                        <tr [formGroup]=\\\"getAccompanyPersonModel(eventDay)\\\">\\r\\n                                                            <td [class.has-error]=\\\"accompanyFormErrors[eventDay?.value.eventDayId]?.fullName\\\">\\r\\n                                                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                                       formControlName=\\\"fullName\\\"\\r\\n                                                                       [attr.id]=\\\"'fullName' + eventDay?.value.eventDayId\\\">\\r\\n                                                                <span class=\\\"help-block\\\">\\r\\n                                                                    {\\r\\n                                                                    accompanyFormErrors[eventDay?.value.eventDayId]?.fullName,\\r\\n                                                                    select,\\r\\n                                                                    required {Please enter fullname}\\r\\n                                                                    maxLength {Fullname not allowed over than 50 characters}\\r\\n                                                                    }\\r\\n                                                                </span>\\r\\n                                                            </td>\\r\\n                                                            <td [class.has-error]=\\\"accompanyFormErrors[eventDay?.value.eventDayId]?.phoneNumber\\\">\\r\\n                                                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                                       formControlName=\\\"phoneNumber\\\">\\r\\n                                                                <span class=\\\"help-block\\\">\\r\\n                                                                    {\\r\\n                                                                    accompanyFormErrors[eventDay?.value.eventDayId]?.phoneNumber,\\r\\n                                                                    select,\\r\\n                                                                    required {Please enter phone number}\\r\\n                                                                    maxLength {Phone number not allowed over 50 characters}\\r\\n                                                                    pattern {Phone number invalid}\\r\\n                                                                    }\\r\\n                                                                </span>\\r\\n                                                            </td>\\r\\n                                                            <td class=\\\"text-right\\\">\\r\\n                                                                <button type=\\\"button\\\" class=\\\"btn blue cm-mgr-5\\\"\\r\\n                                                                        i18n-matTooltip=\\\"@@add\\\"\\r\\n                                                                        matTooltip=\\\"Add\\\"\\r\\n                                                                        (click)=\\\"saveAccompanyPerson(eventDay)\\\">\\r\\n                                                                    <i class=\\\"fa fa-save\\\"></i>\\r\\n                                                                </button>\\r\\n                                                                <button type=\\\"button\\\" class=\\\"btn btn-light\\\"\\r\\n                                                                        i18n-matTooltip=\\\"@@paste\\\"\\r\\n                                                                        matTooltip=\\\"Paste\\\"\\r\\n                                                                        [class.disabled]=\\\"!accompanyPersonCopied\\\"\\r\\n                                                                        (click)=\\\"pasteAccompanyPerson(eventDay)\\\">\\r\\n                                                                    <i class=\\\"fa fa-clipboard\\\"></i>\\r\\n                                                                </button>\\r\\n                                                            </td>\\r\\n                                                        </tr>\\r\\n                                                        </tbody>\\r\\n                                                    </table>\\r\\n                                                </li>\\r\\n                                            </ul>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div><!-- END: .col-sm-6 -->\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer class=\\\"text-right\\\">\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn blue cm-mgr-5\\\" [loading]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                Save\\r\\n            </ghm-button>\\r\\n            <ghm-button type=\\\"button\\\" classes=\\\"btn btn-light\\\" nh-dismiss [loading]=\\\"isSaving\\\" i18n=\\\"@@cancel\\\">\\r\\n                Cancel\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../base-form.component';\r\nimport {NhModalComponent} from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AccompanyPerson, EventDayRegister, EventRegister} from '../models/event-register.model';\r\nimport {EventService} from '../event.service';\r\nimport {ActionResultViewModel} from '../../../shareds/view-models/action-result.viewmodel';\r\nimport {EventDayViewModel} from '../view-models/event-day.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport {Pattern} from '../../../shareds/constants/pattern.const';\r\nimport {UtilService} from '../../../shareds/services/util.service';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {CustomerService} from '../../customer/service/customer.service';\r\nimport {SuggestionViewModel} from '../../../shareds/view-models/SuggestionViewModel';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {EventDayRegisterViewModel, EventRegisterDetailViewModel} from './event-register-detail.viewmodel';\r\nimport {NumberValidator} from '../../../validators/number.validator';\r\nimport {RegisterRole} from '../../../shareds/constants/register-role.conts';\r\nimport {ExplorerItem} from '../../../shareds/components/ghm-file-explorer/explorer-item.model';\r\n\r\n@Component({\r\n    selector: 'app-event-register',\r\n    templateUrl: './event-register.component.html',\r\n    providers: [CustomerService, NumberValidator]\r\n})\r\n\r\nexport class EventRegisterComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('registerFormModal') registerFormModal: NhModalComponent;\r\n\r\n    eventRegister = new EventRegister();\r\n    eventRegisterDay = new EventDayRegister();\r\n    accompanyPerson = new AccompanyPerson();\r\n    eventRegisterDays: EventDayRegister[] = [];\r\n    eventId: string;\r\n    isSelectAll = false;\r\n    accompanyPersonCopied: AccompanyPerson;\r\n    isUpdateAccompanyPerson = false;\r\n    customerSuggestion: SuggestionViewModel<string>[];\r\n\r\n    accompanyFormErrors = [];\r\n    accompanyValidationMessages = [];\r\n\r\n    registerRole = RegisterRole;\r\n\r\n    registerRoles = [\r\n        {id: RegisterRole.customer, name: 'Customer'},\r\n        {id: RegisterRole.invitation, name: 'Invitation'},\r\n        {id: RegisterRole.walkInGuest, name: 'Walk In Guest'},\r\n        {id: RegisterRole.professional, name: 'Professional'},\r\n        {id: RegisterRole.sponsor, name: 'Sponsor'},\r\n    ];\r\n\r\n    constructor(private snackBar: MatSnackBar,\r\n                private fb: FormBuilder,\r\n                private utilService: UtilService,\r\n                private numberValidator: NumberValidator,\r\n                private toastr: ToastrService,\r\n                private eventService: EventService,\r\n                private customerService: CustomerService) {\r\n        super();\r\n    }\r\n\r\n    get eventDayRegisters(): FormArray {\r\n        return this.model.get('eventDayRegisters') as FormArray;\r\n    }\r\n\r\n    onCustomerSelected(event) {\r\n        this.model.patchValue({\r\n            userId: event.id,\r\n            phoneNumber: event.phoneNumber,\r\n            email: event.email,\r\n            fullName: event.name\r\n        });\r\n    }\r\n\r\n    onCustomerRemoved() {\r\n        this.model.patchValue({\r\n            userId: '',\r\n            phoneNumber: '',\r\n            email: '',\r\n            fullName: ''\r\n        });\r\n    }\r\n\r\n    onSearchCustomer(event) {\r\n        this.customerService.suggestions(event)\r\n            .subscribe((result: SuggestionViewModel<string>[]) => this.customerSuggestion = result);\r\n        this.model.patchValue({\r\n            phoneNumber: event\r\n        });\r\n    }\r\n\r\n    getAccompanyPersonModel(mode: FormGroup): FormGroup {\r\n        return mode.get('accompanyPerson') as FormGroup;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    add(eventId: string) {\r\n        this.eventId = eventId;\r\n        this.isUpdate = false;\r\n        this.clearEventDayFormArray();\r\n        this.subscribers.geteventDayRegisters = this.eventService.getAllActiveEventDays(this.eventId)\r\n            .subscribe((result: EventDayViewModel[]) => {\r\n                this.eventRegisterDays = [];\r\n                _.each(result, (eventDay: EventDayViewModel) => {\r\n                    this.eventDayRegisters.push(\r\n                        this.buildEventDayForm(eventDay.id, eventDay.name, eventDay.eventDate)\r\n                    );\r\n                });\r\n            });\r\n        this.registerFormModal.open();\r\n    }\r\n\r\n    edit(eventId: string, id: string) {\r\n        this.id = id;\r\n        this.eventId = eventId;\r\n        this.isUpdate = true;\r\n        this.getDetail();\r\n        this.registerFormModal.open();\r\n    }\r\n\r\n    changSelectAll() {\r\n        this.isSelectAll = !this.isSelectAll;\r\n        _.each(this.eventDayRegisters.controls, (eventDayModel: FormGroup) => {\r\n            eventDayModel.patchValue({\r\n                isSelected: !eventDayModel.value.isSelected\r\n            });\r\n        });\r\n    }\r\n\r\n    changeSelectStatus(eventDayModel: FormGroup) {\r\n        // eventRegisterDay.isSelected = !eventRegisterDay.isSelected;\r\n        const isSelected = !eventDayModel.get('isSelected').value;\r\n        eventDayModel.patchValue({\r\n            isSelected: isSelected\r\n        });\r\n        this.updateCheckAll();\r\n        if (isSelected) {\r\n            this.focusOnNameInput('fullName' + eventDayModel.value.eventDayId);\r\n        }\r\n    }\r\n\r\n    onSelectedImage(file: ExplorerItem) {\r\n        if (file.isImage) {\r\n            this.model.patchValue({\r\n                avatar: file.absoluteUrl,\r\n            });\r\n        }\r\n    }\r\n\r\n    removeThumbnail() {\r\n        this.model.patchValue({\r\n            avatar: null\r\n        });\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.validateModel(true);\r\n        const selectedCount = this.getSelectedEventDayCount();\r\n        if (!selectedCount) {\r\n            this.formErrors['eventDayRegisters'] = 'required';\r\n        }\r\n        if (isValid && selectedCount > 0) {\r\n            this.eventRegister = this.model.value;\r\n            if (this.isUpdate) {\r\n                this.eventService\r\n                    .updateRegister(this.eventId, this.id, this.eventRegister)\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.isModified = true;\r\n                        this.toastr.success(result.message);\r\n                        this.registerFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.eventService\r\n                    .register(this.eventId, this.eventRegister)\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.toastr.success(result.message);\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.resetForm();\r\n                            return;\r\n                        }\r\n                        this.registerFormModal.dismiss();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    saveAccompanyPerson(eventDay: FormGroup): boolean {\r\n        const eventDayId = eventDay.value.eventDayId;\r\n        const accompanyPersonModel = this.getAccompanyPersonModel(eventDay);\r\n        const accompanyPersonModelValue = accompanyPersonModel.value;\r\n        const isValid = this.validateFormGroup(accompanyPersonModel, this.accompanyFormErrors[eventDayId],\r\n            this.accompanyValidationMessages[eventDayId], true);\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n        const accompanyPersons = eventDay.get('accompanyPersons').value;\r\n        // Check phone number exists.\r\n        const existsByPhoneNumber = _.countBy(accompanyPersons, (accompanyPerson: AccompanyPerson) => {\r\n            return accompanyPerson.phoneNumber === accompanyPersonModelValue.phoneNumber\r\n                && accompanyPerson.id !== accompanyPersonModelValue.id;\r\n        }).true;\r\n        if (existsByPhoneNumber > 0) {\r\n            this.snackBar.open('Accompany person already exists.', '', {\r\n                duration: 2500\r\n            });\r\n            return false;\r\n        }\r\n        // Check email exists.\r\n        const existsByEmail = _.countBy(accompanyPersons, (accompanyPerson: AccompanyPerson) => {\r\n            return accompanyPerson.email === accompanyPersonModelValue.email\r\n                && accompanyPerson.id !== accompanyPersonModelValue.id;\r\n        }).true;\r\n        if (existsByEmail > 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.isUpdateAccompanyPerson) {\r\n            const currentAccompanyPerson = _.find(accompanyPersons, (accompanyPerson: AccompanyPerson) => {\r\n                return accompanyPerson.id === accompanyPersonModelValue.id;\r\n            });\r\n            if (currentAccompanyPerson) {\r\n                currentAccompanyPerson.fullName = accompanyPersonModelValue.fullName;\r\n                currentAccompanyPerson.phoneNumber = accompanyPersonModelValue.phoneNumber;\r\n            }\r\n        } else {\r\n            accompanyPersons.push(_.cloneDeep(accompanyPersonModelValue));\r\n            eventDay.patchValue({\r\n                accompanyPersons: accompanyPersons\r\n            });\r\n        }\r\n        accompanyPersonModel.patchValue(new AccompanyPerson());\r\n        this.clearFormError(this.accompanyFormErrors[eventDayId]);\r\n        this.isUpdateAccompanyPerson = false;\r\n        return true;\r\n    }\r\n\r\n    copyAccompanyPerson(accompanyPerson: AccompanyPerson) {\r\n        this.accompanyPersonCopied = accompanyPerson;\r\n        this.snackBar.open('Copied', '', {\r\n            duration: 2500\r\n        });\r\n    }\r\n\r\n    pasteAccompanyPerson(eventDayModel: FormGroup) {\r\n        const accompanyPersonModel = this.getAccompanyPersonModel(eventDayModel) as FormGroup;\r\n        accompanyPersonModel.patchValue(this.accompanyPersonCopied);\r\n        this.saveAccompanyPerson(eventDayModel);\r\n    }\r\n\r\n    accompanyModel(model: FormGroup) {\r\n        return model.get('accompanyPersons');\r\n    }\r\n\r\n    editAccompanyPerson(eventDayModel: FormGroup, accompanyPerson: AccompanyPerson) {\r\n        this.isUpdateAccompanyPerson = true;\r\n        const accompanyPersonModel = this.getAccompanyPersonModel(eventDayModel) as FormGroup;\r\n        accompanyPersonModel.patchValue(accompanyPerson);\r\n    }\r\n\r\n    removeAccompanyPerson(eventDay: EventDayRegister, accompanyPerson: AccompanyPerson) {\r\n        _.remove(eventDay.accompanyPersons, accompanyPerson);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.renderFormError(['phoneNumber', 'avatar', 'fullName', 'email', 'address', 'note', 'eventDayRegisters', 'role']);\r\n        this.validationMessages = this.renderFormErrorMessage([\r\n            {'phoneNumber': ['required', 'maxlength', 'pattern']},\r\n            {'fullName': ['required', 'maxlength']},\r\n            {'email': ['maxlength', 'pattern']},\r\n            {'address': ['maxlength']},\r\n            {'note': ['maxlength']},\r\n            {'eventDayRegisters': ['required']},\r\n            {'role': ['required', 'isValid']},\r\n            {\r\n                'avatar': ['maxlength',\r\n                ]\r\n            },\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            userId: [this.eventRegister.userId],\r\n            avatar: [this.eventRegister.avatar, [Validators.maxLength(500)]],\r\n            phoneNumber: [this.eventRegister.phoneNumber, [\r\n                Validators.required,\r\n                Validators.maxLength(50),\r\n                Validators.pattern(Pattern.phoneNumber)\r\n            ]],\r\n            fullName: [this.eventRegister.fullName, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            email: [this.eventRegister.email, [\r\n                Validators.maxLength(500),\r\n                Validators.pattern(Pattern.email)\r\n            ]],\r\n            address: [this.eventRegister.address, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            note: [this.eventRegister.note, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            role: [this.eventRegister.role, [Validators.required, this.numberValidator.isValid]],\r\n            concurrencyStamp: [this.eventRegister.concurrencyStamp],\r\n            eventDayRegisters: this.fb.array([], [\r\n                Validators.required\r\n            ])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.model.patchValue({\r\n            userId: '',\r\n            phoneNumber: '',\r\n            fullName: '',\r\n            email: '',\r\n            address: '',\r\n            note: '',\r\n            avatar: '',\r\n            role: RegisterRole.walkInGuest\r\n        });\r\n        // this.eventDayRegisters.controls.forEach((eventDayModel: FormGroup) => {\r\n        //     eventDayModel.patchValue({\r\n        //         isSelected: false,\r\n        //         accompanyPersons: [],\r\n        //         accompanyPerson: this.buildAccompanyPersonForm(eventDayModel.value.eventDayId)\r\n        //     });\r\n        // });\r\n        this.clearFormError(this.formErrors);\r\n    }\r\n\r\n    private updateCheckAll() {\r\n        const eventDayRegisters = this.eventDayRegisters.controls;\r\n        this.isSelectAll = _.countBy(eventDayRegisters, (eventDayModel: FormGroup) => {\r\n            return eventDayModel.value.isSelected;\r\n        }).true === eventDayRegisters.length;\r\n    }\r\n\r\n    private buildEventDayForm(id: string, name: string, date: string, isSelected: boolean = false,\r\n                              accompanyPersons: AccompanyPerson[] = []): FormGroup {\r\n        const eventDayForm = this.fb.group({\r\n            eventDayId: [id],\r\n            eventDayName: [name],\r\n            eventDayDate: [date],\r\n            isSelected: [isSelected],\r\n            accompanyPerson: this.buildAccompanyPersonForm(id),\r\n            accompanyPersons: [accompanyPersons]\r\n        });\r\n        eventDayForm.valueChanges.subscribe(() => this.validateModel(false));\r\n        return eventDayForm;\r\n    }\r\n\r\n    private buildAccompanyPersonForm(eventId: string): FormGroup {\r\n        const accompanyPersonId = this.utilService.generateRandomNumber().toString();\r\n        this.accompanyFormErrors[eventId] = this.renderFormError(['fullName', 'phoneNumber', 'email']);\r\n        this.accompanyValidationMessages[eventId] = this.renderFormErrorMessage([\r\n            {'fullName': ['required', 'maxlength', 'pattern']},\r\n            {'phoneNumber': ['required', 'maxlength', 'pattern']},\r\n            {'email': ['maxlength', 'pattern']}\r\n        ]);\r\n        const accompanyPersonModel = this.fb.group({\r\n            id: [accompanyPersonId],\r\n            fullName: [this.accompanyPerson.fullName, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            phoneNumber: [this.accompanyPerson.phoneNumber, [\r\n                Validators.required,\r\n                Validators.maxLength(50),\r\n                Validators.pattern(Pattern.phoneNumber)\r\n            ]],\r\n            email: [this.accompanyPerson.email, [\r\n                Validators.maxLength(50),\r\n                Validators.pattern(Pattern.email)\r\n            ]],\r\n        });\r\n        accompanyPersonModel.valueChanges.subscribe(\r\n            () => this.validateFormGroup(accompanyPersonModel,\r\n                this.accompanyFormErrors[eventId],\r\n                this.accompanyValidationMessages[eventId],\r\n                false));\r\n        return accompanyPersonModel;\r\n    }\r\n\r\n    private focusOnNameInput(id: string) {\r\n        this.utilService.focusElement(id);\r\n    }\r\n\r\n    private getSelectedEventDayCount() {\r\n        return _.countBy(this.eventDayRegisters.controls, (eventDayModel: FormGroup) => {\r\n            return eventDayModel.value.isSelected;\r\n        }).true;\r\n    }\r\n\r\n    private clearEventDayFormArray() {\r\n        while (this.eventDayRegisters.controls.length !== 0) {\r\n            this.eventDayRegisters.removeAt(0);\r\n        }\r\n    }\r\n\r\n    private getDetail() {\r\n        this.eventService.getEventRegisterDetail(this.eventId, this.id)\r\n            .subscribe((result: EventRegisterDetailViewModel) => {\r\n                this.model.patchValue({\r\n                    id: result.id,\r\n                    userId: result.userId,\r\n                    fullName: result.fullName,\r\n                    address: result.address,\r\n                    email: result.email,\r\n                    phoneNumber: result.phoneNumber,\r\n                    concurrencyStamp: result.concurrencyStamp,\r\n                    note: result.note,\r\n                    role: result.role,\r\n                    avatar: result.avatar\r\n                });\r\n                this.clearEventDayFormArray();\r\n                if (result.eventDayRegisters) {\r\n                    result.eventDayRegisters.forEach((eventDayRegister: EventDayRegisterViewModel) => {\r\n                        this.eventDayRegisters.push(\r\n                            this.buildEventDayForm(\r\n                                eventDayRegister.eventDayId,\r\n                                eventDayRegister.eventDayName,\r\n                                eventDayRegister.eventDayDate,\r\n                                eventDayRegister.isSelected,\r\n                                eventDayRegister.accompanyPersons)\r\n                        );\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EventListComponent } from './event-list/event-list.component';\r\nimport { EventService } from './event.service';\r\nimport { EventFormComponent } from './event-form/event-form.component';\r\nimport { EventDetailComponent } from './event-detail/event-detail.component';\r\nimport { EventRegisterListComponent } from './event-register-list/event-register-list.component';\r\nimport {EventAlbumComponent} from './event-album/event-album.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: EventListComponent,\r\n        resolve: {\r\n            data: EventService\r\n        }\r\n    },\r\n    {\r\n        path: 'add',\r\n        component: EventFormComponent\r\n    },\r\n    {\r\n        path: 'edit/:id',\r\n        component: EventFormComponent\r\n    },\r\n    {\r\n        path: 'detail/:id',\r\n        component: EventDetailComponent\r\n    },\r\n    {\r\n        path: 'register/:id',\r\n        component: EventRegisterListComponent\r\n    },\r\n    {\r\n        path: 'album/:id',\r\n        component: EventAlbumComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers: [EventService]\r\n})\r\nexport class EventRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {EventListComponent} from './event-list/event-list.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {CoreModule} from '../../core/core.module';\r\nimport {GhmPagingModule} from '../../shareds/components/ghm-paging/ghm-paging.module';\r\nimport {LayoutModule} from '../../shareds/layouts/layout.module';\r\nimport {NhSelectModule} from '../../shareds/components/nh-select/nh-select.module';\r\nimport {NhImageModule} from '../../shareds/components/nh-image/nh-image.module';\r\nimport {NhUserPickerModule} from '../../shareds/components/nh-user-picker/nh-user-picker.module';\r\nimport {\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatPaginatorModule,\r\n    MatRadioModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule\r\n} from '@angular/material';\r\nimport {NhModalModule} from '../../shareds/components/nh-modal/nh-modal.module';\r\nimport {NHTreeModule} from '../../shareds/components/nh-tree/nh-tree.module';\r\nimport {GhmSelectPickerModule} from '../../shareds/components/ghm-select-picker/ghm-select-picker.module';\r\nimport {SweetAlert2Module} from '@toverux/ngx-sweetalert2';\r\nimport {TinymceModule} from '../../shareds/components/tinymce/tinymce.module';\r\nimport {EventRoutingModule} from './event-routing.module';\r\nimport {NhDateModule} from '../../shareds/components/nh-datetime-picker/nh-date.module';\r\nimport {DatetimeFormatModule} from '../../shareds/pipe/datetime-format/datetime-format.module';\r\nimport {EventFormComponent} from './event-form/event-form.component';\r\nimport {EventDayComponent} from './event-day/event-day.component';\r\nimport {EventDayFormComponent} from './event-day-form/event-day-form.component';\r\nimport {AccordionModule} from 'primeng/primeng';\r\nimport {NhWizardModule} from '../../shareds/components/nh-wizard/nh-wizard.module';\r\nimport {GhmFileExplorerModule} from '../../shareds/components/ghm-file-explorer/ghm-file-explorer.module';\r\n// import { GhmContextMenuModule } from '../../shareds/directives/ghm-context-menu/ghm-context-menu.module';\r\nimport {GhmUserSuggestionModule} from '../../shareds/components/ghm-user-suggestion/ghm-user-suggestion.module';\r\nimport {EventDetailComponent} from './event-detail/event-detail.component';\r\nimport {EventDayDetailComponent} from './event-day-detail/event-day-detail.component';\r\nimport {EventRegisterComponent} from './event-register/event-register.component';\r\nimport {NhSuggestionModule} from '../../shareds/components/nh-suggestion/nh-suggestion.module';\r\nimport {EventRegisterListComponent} from './event-register-list/event-register-list.component';\r\nimport {EventRegisterDetailComponent} from './event-register-detail/event-register-detail.component';\r\nimport {NhDropdownModule} from '../../shareds/directives/nh-dropdown/nh-dropdown.module';\r\nimport {GalleryModule} from '../gallery/gallery.module';\r\nimport {EventAlbumComponent} from './event-album/event-album.component';\r\nimport {EventAlbumFormComponent} from './event-album/event-album-form/event-album-form.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, LayoutModule, EventRoutingModule, NhSelectModule, NhImageModule, NhUserPickerModule,\r\n        MatCheckboxModule, MatPaginatorModule, MatButtonModule, MatSlideToggleModule, TinymceModule, DatetimeFormatModule,\r\n        NhModalModule, ReactiveFormsModule, FormsModule, MatTooltipModule, NHTreeModule, NhDateModule, AccordionModule,\r\n        NhWizardModule, GhmFileExplorerModule, GhmUserSuggestionModule, MatSnackBarModule, NhSuggestionModule,\r\n        MatRadioModule, NhDropdownModule, MatIconModule, GalleryModule,\r\n        GhmSelectPickerModule, CoreModule, GhmPagingModule, SweetAlert2Module.forRoot({\r\n            buttonsStyling: false,\r\n            customClass: 'modal-content',\r\n            confirmButtonClass: 'btn btn-primary',\r\n            cancelButtonClass: 'btn',\r\n            confirmButtonText: 'Đồng ý',\r\n            showCancelButton: true,\r\n            cancelButtonText: 'Hủy bỏ'\r\n        })],\r\n    exports: [],\r\n    declarations: [EventListComponent, EventFormComponent, EventDayComponent, EventDayFormComponent, EventDetailComponent,\r\n        EventDayDetailComponent, EventRegisterComponent, EventRegisterListComponent, EventRegisterDetailComponent, EventAlbumComponent,\r\n        EventAlbumFormComponent],\r\n    providers: [],\r\n})\r\nexport class EventModule {\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {APP_CONFIG, IAppConfig} from '../../configs/app.config';\r\nimport {SpinnerService} from '../../core/spinner/spinner.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {SearchResultViewModel} from '../../shareds/view-models/search-result.viewmodel';\r\nimport {Observable} from 'rxjs';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {EventViewModel} from './view-models/event.viewmodel';\r\nimport {Event} from './models/event.model';\r\nimport {ActionResultViewModel} from '../../shareds/view-models/action-result.viewmodel';\r\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\r\nimport {SurveyViewModel} from '../surveys/survey/survey-list/survey.viewmodel';\r\nimport {EventDayViewModel} from './view-models/event-day.viewmodel';\r\nimport {EventRegisterViewModel} from './view-models/event-register.viewmodel';\r\nimport {EventDay} from './models/event-day.model';\r\nimport {EventDayRegister, EventRegister} from './models/event-register.model';\r\nimport {EventRegisterListViewModel} from './event-register-list/event-register-list.viewmodel';\r\nimport {EventRegisterDetailViewModel} from './event-register/event-register-detail.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport {EventAlbumViewmodel} from './event-album/viewmodel/event-album.viewmodel';\r\nimport {EventAlbum} from './event-album/event-album.model';\r\nimport {Album} from '../gallery/photo/models/album.model';\r\n\r\n@Injectable()\r\nexport class EventService implements Resolve<SurveyViewModel> {\r\n    url = 'api/v1/events/events';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.startDate,\r\n            queryParams.endDate,\r\n            queryParams.isActive,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string, startDate?: string, endDate?: string, creatorId?: string, status?: number,\r\n           isActive?: boolean, page: number = 1,\r\n           pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<EventViewModel>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('startDate', startDate ? startDate : '')\r\n                .set('endDate', endDate ? endDate : '')\r\n                .set('creatorId', creatorId ? creatorId : '')\r\n                .set('status', status ? status.toString() : '')\r\n                .set('isActive', isActive != null && isActive !== undefined ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '')\r\n        }) as Observable<SearchResultViewModel<EventViewModel>>;\r\n    }\r\n\r\n    insert(event: Event): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}`, event)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, event: Event): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/${id}`, event)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}/${id}`).pipe(\r\n            finalize(() => this.spinnerService.hide()),\r\n            map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    deleteMultiple(ids: string[]) {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}`, {\r\n            params: {\r\n                ids: ids\r\n            }\r\n        }).pipe(\r\n            finalize(() => this.spinnerService.hide()),\r\n            map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateStatus(id: string, status: number, declineReason?: string): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .post(`${this.url}/${id}/status/${status}`, declineReason)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateMultipleStatus(updateObjects: { id: string, status: number }[]): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/status`, updateObjects).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<Event> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${id}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel<Event>) => result.data)\r\n            ) as Observable<Event>;\r\n    }\r\n\r\n    getEventDays(eventId: string): Observable<EventDayViewModel[]> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${eventId}/days`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: SearchResultViewModel<EventDayViewModel>) => {\r\n                    return result.items;\r\n                })\r\n            ) as Observable<EventDayViewModel[]>;\r\n    }\r\n\r\n    getAllActiveEventDays(eventId: string): Observable<EventDayViewModel[]> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${eventId}/all-days`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: SearchResultViewModel<EventDayViewModel>) => {\r\n                    return result.items;\r\n                })\r\n            ) as Observable<EventDayViewModel[]>;\r\n    }\r\n\r\n    getEventRegisters(eventId: string, dayId: string): Observable<SearchResultViewModel<EventRegisterViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .get(`${this.url}/${eventId}/days/${dayId}`)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<SearchResultViewModel<EventRegisterViewModel>>;\r\n\r\n    }\r\n\r\n    getEventDayDetail(eventId: string, dayId: string): Observable<EventDay> {\r\n        return this.http.get(`${this.url}/${eventId}/days/${dayId}`)\r\n            .pipe(map((result: ActionResultViewModel<EventDay>) => result.data))as Observable<EventDay>;\r\n    }\r\n\r\n    insertEventDay(eventId: string, eventDay: EventDay) {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/${eventId}/days`, eventDay)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateEventDay(eventId: string, id: string, eventDay: EventDay) {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/${eventId}/days/${id}`, eventDay)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    deleteEventDay(eventId: string, id: string) {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}/${eventId}/days/${id}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    searchRegister(eventId: string, keyword: string, status?: number, page: number = 1,\r\n                   pageSize: number = 10): Observable<SearchResultViewModel<EventRegisterListViewModel>> {\r\n        return this.http\r\n            .get(`${this.url}/${eventId}/registers`, {\r\n                params: new HttpParams()\r\n                    .set('keyword', keyword ? keyword : '')\r\n                    .set('status', status ? status.toString() : '')\r\n                    .set('page', page ? page.toString() : '')\r\n                    .set('pageSize', pageSize ? pageSize.toString() : '')\r\n            }) as Observable<SearchResultViewModel<EventRegisterListViewModel>>;\r\n    }\r\n\r\n    getEventRegisterDetail(eventId: string, registerId: string): Observable<EventRegisterDetailViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${eventId}/registers/${registerId}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel<EventRegisterDetailViewModel>) => {\r\n                    return result.data;\r\n                })\r\n            ) as Observable<EventRegisterDetailViewModel>;\r\n    }\r\n\r\n    register(eventId: string, eventRegister: EventRegister): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/${eventId}/registers`,\r\n            {\r\n                userId: eventRegister.userId,\r\n                fullName: eventRegister.fullName,\r\n                phoneNumber: eventRegister.phoneNumber,\r\n                email: eventRegister.email,\r\n                address: eventRegister.address,\r\n                note: eventRegister.note,\r\n                avatar: eventRegister.avatar,\r\n                role: eventRegister.role,\r\n                eventDayRegisters: _.filter(eventRegister.eventDayRegisters, (eventDayRegister: EventDayRegister) => {\r\n                    return eventDayRegister.isSelected;\r\n                })\r\n            })\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateRegister(eventId: string, id: string,\r\n                   eventRegister: EventRegister): Observable<ActionResultViewModel<EventRegisterDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .post(`${this.url}/${eventId}/registers/${id}`, {\r\n                userId: eventRegister.userId,\r\n                fullName: eventRegister.fullName,\r\n                phoneNumber: eventRegister.phoneNumber,\r\n                email: eventRegister.email,\r\n                address: eventRegister.address,\r\n                note: eventRegister.note,\r\n                avatar: eventRegister.avatar,\r\n                role: eventRegister.role,\r\n                concurrencyStamp: eventRegister.concurrencyStamp,\r\n                eventDayRegisters: _.filter(eventRegister.eventDayRegisters, (eventDayRegister: EventDayRegister) => {\r\n                    return eventDayRegister.isSelected;\r\n                })\r\n            })\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel<EventRegisterDetailViewModel>>;\r\n    }\r\n\r\n    updateEventRegisterStatus(eventId: string, eventDayId: string, eventRegisterId: string,\r\n                              status: number): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .post(`${this.url}/${eventId}/registers/status/${eventDayId}/${eventRegisterId}/${status}`, '')\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    deleteEventRegister(eventId: string, registerId: string): Observable<ActionResultViewModel> {\r\n        return this.http\r\n            .delete(`${this.url}/${eventId}/registers/${registerId}`).pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result.data;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    // album\r\n    searchAlbum(eventId: string, page: number = 1, pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<EventAlbumViewmodel>> {\r\n        return this.http\r\n            .get(`${this.url}/${eventId}/albums`, {\r\n                params: new HttpParams()\r\n                    .set('page', page ? page.toString() : '')\r\n                    .set('pageSize', pageSize ? pageSize.toString() : '')\r\n            }) as Observable<SearchResultViewModel<EventAlbumViewmodel>>;\r\n    }\r\n\r\n    getEventAlbumDetail(eventId: string, albumId: string): Observable<Album> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${eventId}/albums/${albumId}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel<Album>) => {\r\n                    return result.data;\r\n                })\r\n            ) as Observable<Album>;\r\n    }\r\n\r\n    insertAlbum(eventId: string, eventAlbum: EventAlbum): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/${eventId}/albums`, eventAlbum)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateAlbum(eventId: string, albumId: string, eventAlbum: EventAlbum): Observable<ActionResultViewModel<EventRegisterDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .post(`${this.url}/${eventId}/albums/${albumId}`, eventAlbum)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel<EventRegisterDetailViewModel>>;\r\n    }\r\n\r\n    deleteEventAlbum(eventId: string, id: string) {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}/${eventId}/albums/${id}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n\r\n","export class EventDay {\r\n    id: string;\r\n    isActive: boolean;\r\n    concurrencyStamp: string;\r\n    startHour: number;\r\n    startMinute: number;\r\n    endHour: number;\r\n    endMinute: number;\r\n    limitedUsers?: number;\r\n    limitedAccompanyPersons: number;\r\n    staffOnly: boolean;\r\n    eventDate: string;\r\n    isAllowAccompanyPerson: boolean;\r\n    eventDayTranslations: EventDayTranslation[];\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n        this.isAllowAccompanyPerson = true;\r\n        this.staffOnly = false;\r\n        this.startHour = 0;\r\n        this.startMinute = 0;\r\n        this.endHour = 0;\r\n        this.endMinute = 0;\r\n    }\r\n}\r\n\r\nexport class EventDayTranslation {\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n    address: string;\r\n    seoLink: string;\r\n    metaDescription: string;\r\n}\r\n","import {RegisterRole} from '../../../shareds/constants/register-role.conts';\r\n\r\nexport class EventRegister {\r\n    id: string;\r\n    userId: string;\r\n    phoneNumber: string;\r\n    fullName: string;\r\n    email: string;\r\n    address: string;\r\n    note: string;\r\n    avatar: string;\r\n    role: number;\r\n    concurrencyStamp: string;\r\n    eventDayRegisters: EventDayRegister[];\r\n\r\n    constructor() {\r\n        this.role = RegisterRole.walkInGuest;\r\n    }\r\n}\r\n\r\nexport class EventDayRegister {\r\n    eventDayId: string;\r\n    eventDayName: string;\r\n    eventDayDate: string;\r\n    isSelected: boolean;\r\n    accompanyPersons: AccompanyPerson[];\r\n\r\n    constructor() {\r\n        this.isSelected = false;\r\n    }\r\n}\r\n\r\nexport class AccompanyPerson {\r\n    id: string;\r\n    fullName: string;\r\n    phoneNumber: string;\r\n    email: string;\r\n\r\n    constructor() {\r\n        this.id = '';\r\n        this.fullName = '';\r\n        this.phoneNumber = '';\r\n        this.email = '';\r\n    }\r\n}\r\n","export class EventTranslation {\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n    content: string;\r\n    seoLink: string;\r\n    metaTitle?: string;\r\n    metaDescription?: string;\r\n    address?: string;\r\n    limitedUsers?: number;\r\n    staffOnly?: boolean;\r\n}\r\n","import { EventTranslation } from './event-translation.model';\r\n\r\nexport class Event {\r\n    isActive: boolean;\r\n    startDate: string;\r\n    endDate: string;\r\n    concurrencyStamp: string;\r\n    limitedUsers?: number;\r\n    limitedAccompanyPersons: number;\r\n    isAllowRegisterWhenOverload: boolean;\r\n    staffOnly?: boolean;\r\n    isShowPopup?: boolean;\r\n    thumbnail: string;\r\n    isAllowRegister: boolean;\r\n    isAllowAccompanyPerson: boolean;\r\n    tags: any[];\r\n    eventTranslations: EventTranslation[];\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n        this.isAllowRegisterWhenOverload = false;\r\n        this.staffOnly = false;\r\n        this.isAllowAccompanyPerson = true;\r\n        this.isAllowRegister = true;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NhSuggestionService } from './nh-suggestion.service';\r\nimport { NhSuggestionComponent } from './nh-suggestion.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule],\r\n    declarations: [NhSuggestionComponent],\r\n    exports: [NhSuggestionComponent],\r\n    providers: [NhSuggestionService],\r\n})\r\nexport class NhSuggestionModule {\r\n}\r\n","export const Pattern = {\r\n    phoneNumber: '^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$',\r\n    email: '^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$',\r\n    whiteSpace: '.*\\\\S.*',\r\n    url: '(http(s)?://)?([\\\\w-]+\\\\.)+[\\\\w-]+(/[\\\\w- ;,./?%&=]*)?'\r\n}\r\n","export const RegisterRole = {\r\n    walkInGuest: 0, // khách vẵng lai\r\n    customer: 1, // Khách hàng\r\n    invitation: 2, // Khách mời của công ty\r\n    professional: 3, // Chuyên gia\r\n    employee: 4, // Khân viên\r\n    sponsor: 5, // Nhà tài trợ\r\n};"],"sourceRoot":""}