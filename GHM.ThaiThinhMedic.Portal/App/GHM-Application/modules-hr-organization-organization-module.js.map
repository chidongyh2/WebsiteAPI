{"version":3,"sources":["webpack:///./src/app/base-form.component.ts","webpack:///./src/app/base-list.component.ts","webpack:///./src/app/base.component.ts","webpack:///./src/app/modules/hr/organization/office/models/office-contact.model.ts","webpack:///./src/app/modules/hr/organization/office/models/office-translation.model.ts","webpack:///./src/app/modules/hr/organization/office/models/office.model.ts","webpack:///./src/app/modules/hr/organization/office/office-contact/office-contact-form.component.html","webpack:///./src/app/modules/hr/organization/office/office-contact/office-contact-form.component.ts","webpack:///./src/app/modules/hr/organization/office/office-contact/office-contact.component.html","webpack:///./src/app/modules/hr/organization/office/office-contact/office-contact.component.ts","webpack:///./src/app/modules/hr/organization/office/office-detail/office-detail.component.html","webpack:///./src/app/modules/hr/organization/office/office-detail/office-detail.component.ts","webpack:///./src/app/modules/hr/organization/office/office-form/office-form.component.html","webpack:///./src/app/modules/hr/organization/office/office-form/office-form.component.ts","webpack:///./src/app/modules/hr/organization/office/office-title/office-title.component.html","webpack:///./src/app/modules/hr/organization/office/office-title/office-title.component.ts","webpack:///./src/app/modules/hr/organization/office/office.component.html","webpack:///./src/app/modules/hr/organization/office/office.component.ts","webpack:///./src/app/modules/hr/organization/organization-routing.module.ts","webpack:///./src/app/modules/hr/organization/organization.module.ts","webpack:///./src/app/modules/hr/organization/position/models/position-translation.model.ts","webpack:///./src/app/modules/hr/organization/position/position-form/position-form.component.html","webpack:///./src/app/modules/hr/organization/position/position-form/position-form.component.ts","webpack:///./src/app/modules/hr/organization/position/position.component.html","webpack:///./src/app/modules/hr/organization/position/position.component.ts","webpack:///./src/app/modules/hr/organization/position/position.model.ts","webpack:///./src/app/modules/hr/organization/title/models/title-translation.model.ts","webpack:///./src/app/modules/hr/organization/title/title-form/title-form.component.html","webpack:///./src/app/modules/hr/organization/title/title-form/title-form.component.ts","webpack:///./src/app/modules/hr/organization/title/title.component.html","webpack:///./src/app/modules/hr/organization/title/title.component.ts","webpack:///./src/app/modules/hr/organization/title/title.model.ts","webpack:///./src/app/shareds/components/nh-tree/nh-dropdown-tree.component.html","webpack:///./src/app/shareds/components/nh-tree/nh-dropdown-tree.component.ts","webpack:///./src/app/shareds/components/nh-tree/nh-tree.component.html","webpack:///./src/app/shareds/components/nh-tree/nh-tree.component.ts","webpack:///./src/app/shareds/components/nh-tree/nh-tree.module.ts","webpack:///./src/app/shareds/components/nh-tree/nh-tree.scss","webpack:///./src/app/shareds/decorator/check-permission.decorator.ts"],"names":[],"mappings":"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","file":"modules-hr-organization-organization-module.js","sourcesContent":["import { FormArray, FormGroup } from '@angular/forms';\r\nimport { EventEmitter, Output } from '@angular/core';\r\nimport { LanguageViewModel, LanguageSearchViewModel } from './shareds/models/language.viewmodel';\r\nimport { Observable } from 'rxjs';\r\nimport { AppService } from './shareds/services/app.service';\r\nimport { PageTranslation } from './modules/configs/page/models/page-translation.model';\r\n\r\nexport class BaseFormComponent {\r\n    @Output() saveSuccessful = new EventEmitter();\r\n    private _message: { type: string, content: string } = {\r\n        type: '',\r\n        content: ''\r\n    };\r\n    id: any;\r\n    model: FormGroup;\r\n    modelTranslationArray: FormArray;\r\n    isSubmitted = false;\r\n    isSaving = false;\r\n    isUpdate = false;\r\n    currentLanguage: string;\r\n    formErrors: any = {};\r\n    validationMessages: any = {};\r\n    translationFormErrors = {};\r\n    translationValidationMessage = [];\r\n    subscribers: any = {};\r\n    isModified = false;\r\n    isCreateAnother = false;\r\n    languages: LanguageViewModel[] = [];\r\n    languages$: Observable<LanguageSearchViewModel[]>;\r\n\r\n    // Permission.\r\n    permission = {\r\n        view: false,\r\n        insert: false,\r\n        update: false,\r\n        delete: false,\r\n        export: false,\r\n        print: false,\r\n        approve: false,\r\n        report: false\r\n    };\r\n\r\n    constructor() {\r\n    }\r\n\r\n    get message() {\r\n        return this._message;\r\n    }\r\n\r\n    get modelTranslations(): FormArray {\r\n        return this.model.get('modelTranslations') as FormArray;\r\n    }\r\n\r\n    setMessage(type: string, content: string) {\r\n        this._message.type = type;\r\n        this._message.content = content;\r\n    }\r\n\r\n    resetMessage() {\r\n        this._message.type = '';\r\n        this._message.content = '';\r\n    }\r\n\r\n    renderLanguageData(appService: AppService) {\r\n        this.languages = appService.languages.map((language: LanguageSearchViewModel) => {\r\n            if (language.isDefault) {\r\n                this.currentLanguage = language.languageId;\r\n            }\r\n            return {id: language.languageId, name: language.name, isSelected: language.isDefault};\r\n        });\r\n    }\r\n\r\n    renderTranslationFormArray(buildFormFunction: Function) {\r\n        this.modelTranslationArray = this.model.get('modelTranslations') as FormArray;\r\n        this.languages.forEach((language: LanguageViewModel) => {\r\n            const formGroup = buildFormFunction(language.id);\r\n            this.modelTranslationArray.push(formGroup);\r\n        });\r\n    }\r\n\r\n    renderFormError(args: (string | Object)[]): any {\r\n        const object = {};\r\n        args.forEach((item: string | Object) => {\r\n            if (item instanceof Object) {\r\n                object[Object.keys(item)[0]] = this.renderFormError(\r\n                    Object.values(item)[0]\r\n                );\r\n            } else {\r\n                object[item as string] = '';\r\n            }\r\n        });\r\n        return object;\r\n    }\r\n\r\n    renderFormErrorMessage(args: (string | Object)[]): any {\r\n        const object = {};\r\n        args.forEach((item: string | Object) => {\r\n            if (item instanceof Object) {\r\n                object[Object.keys(item)[0]] = this.renderFormErrorMessage(\r\n                    Object.values(item)[0]\r\n                );\r\n            } else {\r\n                object[item as string] = item;\r\n            }\r\n        });\r\n        return object;\r\n    }\r\n\r\n    validateModel<T>(isSubmit: boolean = true) {\r\n        return this.validateFormGroup(this.model, this.formErrors, this.validationMessages, isSubmit);\r\n    }\r\n\r\n    validateTranslationModel(isSubmit: boolean = true) {\r\n        return this.modelTranslations.controls.map((translationModel: FormGroup) => {\r\n            const languageId = translationModel.value.languageId;\r\n            const isValid = this.validateFormGroup(translationModel, this.translationFormErrors[languageId],\r\n                this.translationValidationMessage[languageId], isSubmit);\r\n            return {\r\n                languageId: languageId,\r\n                isValid: isValid,\r\n            };\r\n        });\r\n    }\r\n\r\n    validateFormGroup<T>(formGroup: T, formErrors: any, validationMessages: any, isSubmit?: boolean,\r\n                         elements?: any, data?: any): boolean {\r\n        if (!formGroup) {\r\n            return;\r\n        }\r\n        const form = <any>formGroup as FormGroup;\r\n        return this.checkFormValid(form, formErrors, validationMessages, isSubmit);\r\n    }\r\n\r\n    checkLanguageValid() {\r\n        const languageValidCheck = this.validateTranslationModel();\r\n        const languageValid = languageValidCheck.map((languageCheck: any) => {\r\n            if (!languageCheck.isValid) {\r\n                this.currentLanguage = languageCheck.languageId;\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        });\r\n        return !(languageValid.indexOf(false) > -1);\r\n    }\r\n\r\n    private checkFormValid(form: FormGroup, formErrors: any, validationMessages: any, isSubmit?: boolean): boolean {\r\n        let inValidCount = 0;\r\n        let isValid = true;\r\n        for (const field in formErrors) {\r\n            if (typeof (formErrors[field]) === 'object' && field != null && form != null) {\r\n                const newFormGroup = <any>form.get(field) as FormGroup;\r\n                if (newFormGroup instanceof FormArray) {\r\n                    newFormGroup.controls.forEach((control: FormGroup, index: number) => {\r\n                        isValid = this.checkFormValid(control, formErrors[field], validationMessages[field], isSubmit);\r\n                    });\r\n                } else {\r\n                    isValid = this.checkFormValid(newFormGroup, formErrors[field], validationMessages[field], isSubmit);\r\n                }\r\n            } else {\r\n                if (field != null && form != null) {\r\n                    formErrors[field] = '';\r\n                    const control = form.get(field);\r\n                    if (control && isSubmit) {\r\n                        control.markAsDirty();\r\n                    }\r\n                    if (control && control.dirty && !control.valid) {\r\n                        const messages = validationMessages[field];\r\n                        for (const key in control.errors) {\r\n                            if (control.errors.hasOwnProperty(key)) {\r\n                                formErrors[field] += messages[key];\r\n                                inValidCount++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return inValidCount === 0 && isValid;\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\nexport class BaseListComponent<TEntity> {\r\n    keyword: string;\r\n    currentPage = 1;\r\n    pageSize = 20;\r\n    totalRows = 0;\r\n    totalRows$: Observable<number>;\r\n    isSearching = false;\r\n    listItems: TEntity[] = [];\r\n    listItems$: Observable<TEntity[]>;\r\n    subscribers: any = {};\r\n    // Permission.\r\n    permission = {\r\n        view: false,\r\n        add: false,\r\n        edit: false,\r\n        delete: false,\r\n        export: false,\r\n        print: false,\r\n        approve: false,\r\n        report: false\r\n    };\r\n\r\n    // getPermission(appService: AppService, pageId: number) {\r\n    //     this.permission.view = appService.checkPermission(pageId, Permission.view);\r\n    //     this.permission.add = appService.checkPermission(pageId, Permission.insert);\r\n    //     this.permission.edit = appService.checkPermission(pageId, Permission.update);\r\n    //     this.permission.delete = appService.checkPermission(pageId, Permission.delete);\r\n    //     this.permission.export = appService.checkPermission(pageId, Permission.export);\r\n    //     this.permission.print = appService.checkPermission(pageId, Permission.print);\r\n    //     this.permission.approve = appService.checkPermission(pageId, Permission.approve);\r\n    //     this.permission.report = appService.checkPermission(pageId, Permission.report);\r\n    // }\r\n}\r\n","﻿﻿import { IMessage } from './interfaces/imessage';\r\nimport { BriefUser } from './view-model/brief-user';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport module String {\r\n    export let format: any;\r\n}\r\n\r\nexport class BaseComponent {\r\n    isSaving = false;\r\n    isUpdate = false;\r\n    isShowForm = false;\r\n    isLoading = false;\r\n    isSearching = false;\r\n    message: IMessage;\r\n    totalRows = 0;\r\n    currentPage = 1;\r\n    pageSize = 20;\r\n    isSubmitted = false;\r\n    keyword = '';\r\n    isActiveSearch = null;\r\n    pageTitle = '';\r\n    errorMessage: string;\r\n    formErrors: any = {};\r\n    validationMessages: any = {};\r\n    isHasInsertPermission = false;\r\n    isHasUpdatePermission = false;\r\n    isHasDeletePermission = false;\r\n    isHasPrintPermission = false;\r\n    isHasApprovePermission = false;\r\n    isHasExportPermission = false;\r\n    isHasViewPermission = false;\r\n    isHasReportPermission = false;\r\n    currentUser: BriefUser;\r\n    subscribers: any = {};\r\n    downloading = false;\r\n    totalRows$: Observable<number>;\r\n    dateTimeValidFormat = [\r\n        'DD/MM/YYYY',\r\n        'DD/MM/YYYY HH:mm',\r\n        'DD/MM/YYYY HH:mm:ss',\r\n        'DD/MM/YYYY HH:mm Z',\r\n        'DD-MM-YYYY',\r\n        'DD-MM-YYYY HH:mm',\r\n        'DD-MM-YYYY HH:mm:ss',\r\n        'DD-MM-YYYY HH:mm Z',\r\n        // --------------------\r\n        'MM/DD/YYYY',\r\n        'MM/DD/YYYY HH:mm',\r\n        'MM/DD/YYYY HH:mm:ss',\r\n        'MM/DD/YYYY HH:mm Z',\r\n        'MM-DD-YYYY',\r\n        'MM-DD-YYYY HH:mm',\r\n        'MM-DD-YYYY HH:mm:ss',\r\n        'MM-DD-YYYY HH:mm Z',\r\n        // --------------------\r\n        'YYYY/MM/DD',\r\n        'YYYY/MM/DD HH:mm',\r\n        'YYYY/MM/DD HH:mm:ss',\r\n        'YYYY/MM/DD HH:mm Z',\r\n        'YYYY-MM-DD',\r\n        'YYYY-MM-DD HH:mm',\r\n        'YYYY-MM-DD HH:mm:ss',\r\n        'YYYY-MM-DD HH:mm Z',\r\n        // --------------------\r\n        'YYYY/DD/MM',\r\n        'YYYY/DD/MM HH:mm',\r\n        'YYYY/DD/MM HH:mm:ss',\r\n        'YYYY/DD/MM HH:mm Z',\r\n        'YYYY-DD-MM',\r\n        'YYYY-DD-MM HH:mm',\r\n        'YYYY-DD-MM HH:mm:ss',\r\n        'YYYY-DD-MM HH:mm Z',\r\n    ];\r\n\r\n    constructor() {\r\n    }\r\n\r\n    resetAfterSave() {\r\n        this.isSaving = false;\r\n        this.isSubmitted = false;\r\n    }\r\n\r\n    formatString(message: string, ...args: string[]) {\r\n        args.forEach((value, index) => {\r\n            const pattern = new RegExp(`\\\\{${index}\\\\}`, 'g');\r\n            message = message.replace(pattern, value);\r\n        });\r\n        return message;\r\n    }\r\n\r\n    // showWarningBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'warning');\r\n    // }\r\n    //\r\n    // showSuccessBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'success');\r\n    // }\r\n    //\r\n    // showDangerBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'error');\r\n    // }\r\n    //\r\n    // showInfoBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'info');\r\n    // }\r\n\r\n    // showAlertBox(title: string, message: string, type: any = 'success') {\r\n    //     setTimeout(() => {\r\n    //         swal({\r\n    //             title: title,\r\n    //             text: message,\r\n    //             type: type,\r\n    //             timer: 1500,\r\n    //             showConfirmButton: false\r\n    //         }).then(() => {\r\n    //         }, () => {\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    getListOrderNumber(currentPage, pageSize, index): number {\r\n        return (currentPage - 1) * pageSize + index + 1;\r\n    }\r\n\r\n    // getPermission(appService: AppService) {\r\n    //     // setTimeout(() => {\r\n    //     //     this.isHasViewPermission = appService.checkPermission(PERMISSION_VALUE_DI.view);\r\n    //     //     this.isHasInsertPermission = appService.checkPermission(PERMISSION_VALUE_DI.insert);\r\n    //     //     this.isHasUpdatePermission = appService.checkPermission(PERMISSION_VALUE_DI.update);\r\n    //     //     this.isHasDeletePermission = appService.checkPermission(PERMISSION_VALUE_DI.delete);\r\n    //     //     this.isHasExportPermission = appService.checkPermission(PERMISSION_VALUE_DI.export);\r\n    //     //     this.isHasPrintPermission = appService.checkPermission(PERMISSION_VALUE_DI.print);\r\n    //     //     this.isHasApprovePermission = appService.checkPermission(PERMISSION_VALUE_DI.approve);\r\n    //     //     this.isHasReportPermission = appService.checkPermission(PERMISSION_VALUE_DI.report);\r\n    //     // });\r\n    // }\r\n\r\n    // renderFormError(args: string[]) {\r\n    //     let object = {};\r\n    //     args.forEach((item) => {\r\n    //         object[item] = \"\";\r\n    //     });\r\n    //     return object;\r\n    // }\r\n    // private getFormErrors(form: FormGroup, formErrors: any, validationMessages: any): boolean {\r\n    //     let isValid = true;\r\n    //     debugger;\r\n    //     for (const field in formErrors) {\r\n    //         if (typeof(formErrors[field]) === \"object\" && field != null && form != null) {\r\n    //             let newFormGroup = <any>form.get(field) as FormGroup;\r\n    //             isValid = this.getFormErrors(newFormGroup, formErrors[field], validationMessages[field]);\r\n    //         } else {\r\n    //             if (field != null && form != null) {\r\n    //                 formErrors[field] = \"\";\r\n    //                 const control = form.get(field);\r\n    //                 if (control && (control.dirty || (this.isSubmitted && control.pristine)) && !control.valid) {\r\n    //                     const messages = validationMessages[field];\r\n    //                     for (const key in control.errors) {\r\n    //                         formErrors[field] += messages[key] + \" \";\r\n    //                         isValid = false;\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //\r\n    //     return isValid;\r\n    // }\r\n}\r\n","export class OfficeContact {\r\n    id: string;\r\n    userId: string;\r\n    fullName: string;\r\n    avatar: string;\r\n    officeName: string;\r\n    positionName: string;\r\n    titlePrefixing: number;\r\n    email: string;\r\n    phoneNumber: string;\r\n    fax: string;\r\n}\r\n","export class OfficeTranslation {\r\n    languageId: string;\r\n    name: string;\r\n    shortName: string;\r\n    description: string;\r\n    address: string;\r\n}\r\n","﻿import { OfficeTranslation } from './office-translation.model';\r\nimport { OfficeContact } from './office-contact.model';\r\n\r\nexport class Office {\r\n    officeType: number;\r\n    order: number;\r\n    status: number;\r\n    parentId?: string;\r\n    isActive: boolean;\r\n    description: string;\r\n    code: string;\r\n    modelTranslations: OfficeTranslation[];\r\n    officeContacts: OfficeContact[];\r\n\r\n    constructor(officeType?: number, order?: number, status?: number, parentId?: string, isActive?: boolean) {\r\n        this.officeType = officeType ? officeType : 0;\r\n        this.order = order ? order : 0;\r\n        this.status = status;\r\n        this.parentId = parentId;\r\n        this.isActive = isActive ? isActive : false;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #officeContactFormModal\\r\\n          size=\\\"sm\\\"\\r\\n          (onHidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n\\r\\n    </nh-modal-header>\\r\\n    <form action=\\\"\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors.userId\\\">\\r\\n                <label i18n=\\\"@@fullName\\\" i18n-ghmLabel ghmLabel=\\\"Full name\\\"\\r\\n                       class=\\\"col-sm-12\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <ghm-user-suggestion\\r\\n                        [selectedUser]=\\\"selectedUser\\\"\\r\\n                        (userSelected)=\\\"onUserSelected($event)\\\"\\r\\n                    ></ghm-user-suggestion>\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors.userId,\\r\\n                        select, required {Title name is required}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors.phoneNumber\\\">\\r\\n                <label i18n=\\\"@@phoneNumber\\\" i18n-ghmLabel ghmLabel=\\\"PhoneNumber\\\"\\r\\n                       class=\\\"col-sm-12\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phoneNumber\\\"\\r\\n                           i18n-placeholder=\\\"@@enterPhoneNumber\\\"\\r\\n                           placeholder=\\\"Enter phone number.\\\">\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors.phoneNumber,\\r\\n                        select, required {Phone number is required} maxlength {Phone number not allowed over 50 characters}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors.email\\\">\\r\\n                <label i18n=\\\"@@email\\\" i18n-ghmLabel ghmLabel=\\\"Email\\\"\\r\\n                       class=\\\"col-sm-12\\\"></label>\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"\\r\\n                           i18n-placeholder=\\\"@@enterEmail\\\"\\r\\n                           placeholder=\\\"Enter email address.\\\">\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors.email,\\r\\n                        select, maxlength {Email not allowed over 500 characters}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors.fax\\\">\\r\\n                <label i18n=\\\"@@fax\\\" i18n-ghmLabel ghmLabel=\\\"Fax\\\"\\r\\n                       class=\\\"col-sm-12\\\"\\r\\n                ></label>\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fax\\\"\\r\\n                           i18n-placeholder=\\\"@@enterFax\\\"\\r\\n                           placeholder=\\\"Enter fax.\\\">\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors.fax,\\r\\n                        select, maxlength {Fax not allowed over 50 characters}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\" [loading]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                Save\\r\\n            </ghm-button>\\r\\n            <ghm-button type=\\\"button\\\" classes=\\\"btn btn-default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [loading]=\\\"isSaving\\\"\\r\\n                        i18n=\\\"@@cancel\\\">\\r\\n                Cancel\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../../../base-form.component';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { OfficeService } from '../services/office.service';\r\nimport { OfficeContact } from '../models/office-contact.model';\r\nimport { UserSuggestion } from '../../../../../shareds/components/ghm-user-suggestion/ghm-user-suggestion.component';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { UtilService } from '../../../../../shareds/services/util.service';\r\nimport { IActionResultResponse } from '../../../../../interfaces/iaction-result-response.result';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-office-contact-form',\r\n    templateUrl: './office-contact-form.component.html'\r\n})\r\n\r\nexport class OfficeContactFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('officeContactFormModal') officeContactFormModal: NhModalComponent;\r\n    @Input() officeId: number;\r\n    contact = new OfficeContact();\r\n    selectedUser: UserSuggestion;\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private utilService: UtilService,\r\n                private officeService: OfficeService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.model.reset();\r\n        this.selectedUser = null;\r\n    }\r\n\r\n    onUserSelected(user: UserSuggestion) {\r\n        if (user) {\r\n            this.model.patchValue({\r\n                userId: user.id,\r\n                fullName: user.fullName,\r\n                avatar: user.avatar,\r\n                officeName: user.officeName,\r\n                positionName: user.positionName\r\n            });\r\n        } else {\r\n            this.model.patchValue({\r\n                userId: null,\r\n                fullName: null,\r\n                avatar: null,\r\n                officeName: null,\r\n                positionName: null\r\n            });\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.model.reset();\r\n        this.officeContactFormModal.show();\r\n    }\r\n\r\n    edit(officeContact: OfficeContact) {\r\n        this.isUpdate = true;\r\n        this.selectedUser = new UserSuggestion(officeContact.userId, officeContact.fullName, officeContact.officeName,\r\n            officeContact.positionName, officeContact.avatar);\r\n        this.model.patchValue(officeContact);\r\n        this.officeContactFormModal.show();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.validateModel(true);\r\n        if (isValid) {\r\n            if (this.isUpdate) {\r\n                this.updateContact();\r\n            } else {\r\n                this.addContact();\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateContact() {\r\n        this.contact = this.model.value;\r\n        if (this.officeId) {\r\n            this.isSaving = true;\r\n            this.officeService\r\n                .updateContact(this.officeId, this.contact.id, this.contact)\r\n                .pipe(finalize(() => this.isSaving = false))\r\n                .subscribe(() => {\r\n                    this.saveSuccessful.emit(this.contact);\r\n                    this.officeContactFormModal.dismiss();\r\n                });\r\n        } else {\r\n            this.saveSuccessful.emit(this.contact);\r\n            this.officeContactFormModal.dismiss();\r\n        }\r\n    }\r\n\r\n    private addContact() {\r\n        this.contact = this.model.value;\r\n        if (this.officeId) {\r\n            this.isSaving = true;\r\n            this.officeService\r\n                .addContact(this.officeId, this.contact)\r\n                .pipe(finalize(() => this.isSaving = false))\r\n                .subscribe((result: IActionResultResponse) => {\r\n                    this.contact.id = result.data;\r\n                    this.saveSuccessful.emit(this.contact);\r\n                    this.afterSave();\r\n                });\r\n        } else {\r\n            this.contact.id = this.utilService\r\n                .generateRandomNumber()\r\n                .toString();\r\n            this.saveSuccessful.emit(this.contact);\r\n            this.afterSave();\r\n        }\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.renderFormError(['userId', 'phoneNumber', 'email', 'fax']);\r\n        this.validationMessages = this.renderFormErrorMessage([\r\n            {'userId': ['required', 'maxlength']},\r\n            {'phoneNumber': ['required', 'maxlength']},\r\n            {'email': ['maxlength']},\r\n            {'fax': ['maxlength']},\r\n        ]);\r\n        this.model = this.fb.group({\r\n            id: [this.contact.id],\r\n            userId: [this.contact.userId, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            fullName: [this.contact.fullName],\r\n            avatar: [this.contact.avatar],\r\n            officeName: [this.contact.officeName],\r\n            positionName: [this.contact.positionName],\r\n            phoneNumber: [this.contact.phoneNumber, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            email: [this.contact.email, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            fax: [this.contact.fax, [\r\n                Validators.maxLength(50)\r\n            ]]\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.validateModel(false));\r\n    }\r\n\r\n    private afterSave() {\r\n        if (this.isCreateAnother) {\r\n            this.model.reset();\r\n            this.selectedUser = null;\r\n        } else {\r\n            this.officeContactFormModal.dismiss();\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<h4 class=\\\"title caption-subject font-blue-madison bold uppercase\\\" i18n=\\\"@@contactInfo\\\"> Contact info </h4>\\r\\n<hr>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 text-right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\">\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <table class=\\\"table table-stripped table-hover\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th i18n=\\\"@@Contact\\\">Contact</th>\\r\\n                <th i18n=\\\"@@phoneNumber\\\">Phone number</th>\\r\\n                <th i18n=\\\"@@email\\\">Email</th>\\r\\n                <th i18n=\\\"@@fax\\\">Fax</th>\\r\\n                <th i18n=\\\"@@actions\\\">Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let contact of officeContacts; index as i\\\">\\r\\n                <td class=\\\"center middle\\\">{{ i + 1 }}</td>\\r\\n                <td class=\\\"middle\\\">\\r\\n                    <div class=\\\"media\\\">\\r\\n                        <div class=\\\"media-left\\\">\\r\\n                            <a href=\\\"javascript://\\\">\\r\\n                                <img ghm-image class=\\\"media-object avatar-md\\\"\\r\\n                                     src=\\\"{{ contact.avatar }}\\\"\\r\\n                                     alt=\\\"{{ contact.fullName }}\\\">\\r\\n                            </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"media-body\\\">\\r\\n                            <h4 class=\\\"media-heading\\\">{{ contact.fullName }}</h4>\\r\\n                            <div class=\\\"description\\\">{{ contact.officeName }} - {{ contact.positionName }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"middle\\\">{{ contact.phoneNumber }}</td>\\r\\n                <td class=\\\"middle\\\">{{ contact.email }}</td>\\r\\n                <td class=\\\"middle\\\">{{ contact.fax }}</td>\\r\\n                <td class=\\\"text-right middle w100\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"edit(contact)\\\">\\r\\n                        <i class=\\\"fa fa-edit\\\"></i>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (delete)=\\\"delete(delete)\\\">\\r\\n                        <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-office-contact-form\\r\\n    [officeId]=\\\"officeId\\\"\\r\\n    (saveSuccessful)=\\\"onSaveSuccess($event)\\\"\\r\\n></app-office-contact-form>\\r\\n\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../../../base-list.component';\r\nimport { OfficeContact } from '../models/office-contact.model';\r\nimport { OfficeContactFormComponent } from './office-contact-form.component';\r\nimport { OfficeService } from '../services/office.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'app-office-contact',\r\n    templateUrl: './office-contact.component.html'\r\n})\r\n\r\nexport class OfficeContactComponent extends BaseListComponent<OfficeContact> implements OnInit {\r\n    @ViewChild(OfficeContactFormComponent) officeContactFormComponent: OfficeContactFormComponent;\r\n    @Input() officeId: number;\r\n    @Input() officeContacts: OfficeContact[] = [];\r\n\r\n    constructor(private officeService: OfficeService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onSaveSuccess(officeContact: OfficeContact) {\r\n        const officeContactInfo = _.find(this.officeContacts, (contact: OfficeContact) => {\r\n            return contact.id === officeContact.id;\r\n        });\r\n        if (officeContactInfo) {\r\n            officeContactInfo.userId = officeContact.userId;\r\n            officeContactInfo.fullName = officeContact.fullName;\r\n            officeContactInfo.avatar = officeContact.avatar;\r\n            officeContactInfo.phoneNumber = officeContact.phoneNumber;\r\n            officeContactInfo.email = officeContact.email;\r\n            officeContactInfo.fax = officeContact.fax;\r\n        } else {\r\n            this.officeContacts.push(officeContact);\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.officeContactFormComponent.add();\r\n    }\r\n\r\n    edit(officeContact: OfficeContact) {\r\n        this.officeContactFormComponent.edit(officeContact);\r\n    }\r\n\r\n    delete(contactId: string) {\r\n        if (this.officeId) {\r\n            this.subscribers.deleteContact = this.officeService.deleteContact(this.officeId, contactId)\r\n                .subscribe(() => {\r\n                    this.removeContact(contactId);\r\n                });\r\n        } else {\r\n            this.removeContact(contactId);\r\n        }\r\n    }\r\n\r\n    private removeContact(contactId: string) {\r\n        _.remove(this.officeContacts, (contact: OfficeContact) => {\r\n            return contact.id === contactId;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #officeDetailModal size=\\\"lg\\\">\\r\\n    <nh-modal-header>\\r\\n        <span i18n=\\\"@@officeDetailTitle\\\">Office detail: </span>\\r\\n    </nh-modal-header>\\r\\n    <nh-modal-content>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"portlet light bordered\\\">\\r\\n                    <div class=\\\"portlet-title\\\">\\r\\n                        <div class=\\\"caption font-green-sharp\\\">\\r\\n                            <i class=\\\"icon-speech font-green-sharp\\\"></i>\\r\\n                            <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@officeOrganizationTitle\\\">Office organization</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"portlet-body\\\">\\r\\n                        <nh-tree\\r\\n                            [data]=\\\"officeTree\\\"\\r\\n                            (nodeSelected)=\\\"onNodeSelected($event)\\\">\\r\\n                        </nh-tree>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- END: .col-sm-4 -->\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n                <div class=\\\"portlet light bordered\\\">\\r\\n                    <div class=\\\"portlet-title\\\">\\r\\n                        <div class=\\\"caption font-green-sharp\\\">\\r\\n                            <i class=\\\"icon-speech font-green-sharp\\\"></i>\\r\\n                            <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@officeOrganizationFormTitle\\\">\\r\\n                                    {isUpdate, select, 0 {Add new office} 1 {Update office} other {}}\\r\\n                                </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"portlet-body\\\">\\r\\n                        <div class=\\\"form-horizontal\\\">\\r\\n                            <div class=\\\"tabbable-custom\\\">\\r\\n                                <ul class=\\\"nav nav-tabs \\\">\\r\\n                                    <li [class.active]=\\\"item.id === currentLanguage\\\"\\r\\n                                        *ngFor=\\\"let item of languages\\\">\\r\\n                                        <a href=\\\"javascript://\\\" (click)=\\\"currentLanguage = item.id\\\">\\r\\n                                            {{ item.name }}\\r\\n                                        </a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n\\r\\n                                <div class=\\\"tab-content\\\">\\r\\n                                    <div class=\\\"tab-pane active\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label i18n-ghmLabel=\\\"@@parentOffice\\\" ghmLabel=\\\"Parent office\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-group\\\">{{ officeDetail?.parentName }}</div>\\r\\n                                            </div>\\r\\n                                            <label i18n-ghmLabel=\\\"@@officeCode\\\" ghmLabel=\\\"Office code\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-group\\\">{{ officeDetail?.code }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\"\\r\\n                                             *ngFor=\\\"let translation of officeDetail?.officeTranslations\\\"\\r\\n                                             [hidden]=\\\"translation.languageId != currentLanguage\\\">\\r\\n                                            <label i18n-ghmLabel=\\\"@@officeName\\\" ghmLabel=\\\"Office name\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-control\\\">{{ translation.name }}</div>\\r\\n                                            </div>\\r\\n                                            <label i18n-ghmLabel=\\\"@@shortName\\\" ghmLabel=\\\"Short name\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-control\\\">{{ translation.shortName }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label i18n-ghmLabel=\\\"@@officeType\\\" ghmLabel=\\\"Office type\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-control\\\" i18n=\\\"@@officeType\\\">\\r\\n\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <label i18n-ghmLabel=\\\"@@status\\\" ghmLabel=\\\"Status\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"officeDetail?.isActive\\\"></i>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\"\\r\\n                                             *ngFor=\\\"let translation of officeDetail?.officeTranslations\\\"\\r\\n                                             [hidden]=\\\"translation.languageId !== currentLanguage\\\">\\r\\n                                            <label i18n=\\\"@@description\\\" i18n-ghmLabel ghmLabel=\\\"Description\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\"></label>\\r\\n                                            <div class=\\\"col-sm-9\\\">\\r\\n                                                <div class=\\\"form-control\\\">{{ translation.description }}\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\"\\r\\n                                             *ngFor=\\\"let translation of officeDetail?.officeTranslations\\\"\\r\\n                                             [hidden]=\\\"translation.languageId !== currentLanguage\\\">\\r\\n                                            <label i18n=\\\"@@address\\\" i18n-ghmLabel ghmLabel=\\\"Address\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\"></label>\\r\\n                                            <div class=\\\"col-sm-9\\\">\\r\\n                                                <div class=\\\"form-control\\\">{{ translation.address }}</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"col-sm-12\\\">\\r\\n                                                <h4 class=\\\"title\\\" i18n=\\\"@@contactInfo\\\"> Contact info </h4>\\r\\n                                                <hr>\\r\\n                                                <table class=\\\"table table-stripped table-hover\\\">\\r\\n                                                    <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th class=\\\"center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                                                        <th i18n=\\\"@@Contact\\\">Contact</th>\\r\\n                                                        <th i18n=\\\"@@phoneNumber\\\">Phone number</th>\\r\\n                                                        <th i18n=\\\"@@email\\\">Email</th>\\r\\n                                                        <th i18n=\\\"@@fax\\\">Fax</th>\\r\\n                                                        <th i18n=\\\"@@actions\\\">Actions</th>\\r\\n                                                    </tr>\\r\\n                                                    </thead>\\r\\n                                                    <tbody>\\r\\n                                                    <tr *ngFor=\\\"let contact of officeDetail?.officeContacts; index as i\\\">\\r\\n                                                        <td class=\\\"center middle\\\">{{ i + 1 }}</td>\\r\\n                                                        <td class=\\\"middle\\\">\\r\\n\\r\\n                                                        </td>\\r\\n                                                        <td class=\\\"middle\\\">{{ contact.phoneNumber }}</td>\\r\\n                                                        <td class=\\\"middle\\\">{{ contact.email }}</td>\\r\\n                                                        <td class=\\\"middle\\\">{{ contact.fax }}</td>\\r\\n                                                        <td class=\\\"text-right middle\\\">\\r\\n                                                            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                                            </button>\\r\\n                                                            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\">\\r\\n                                                                <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                                                            </button>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                    </tbody>\\r\\n                                                </table>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- END: .tab-pane -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- END: .col-sm-8 -->\\r\\n        </div>\\r\\n    </nh-modal-content>\\r\\n    <nh-modal-footer>\\r\\n        <ghm-button classes=\\\"btn btn-default\\\"\\r\\n                    nh-dismiss=\\\"true\\\"\\r\\n                    type=\\\"button\\\">\\r\\n            <span i18n=\\\"@@close\\\">Close</span>\\r\\n        </ghm-button>\\r\\n    </nh-modal-footer>\\r\\n</nh-modal>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { OfficeService } from '../services/office.service';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { OfficeDetailViewModel } from '../models/office-detail.viewmodel';\r\nimport { DestroySubscribers } from '../../../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport { IActionResultResponse } from '../../../../../interfaces/iaction-result-response.result';\r\nimport { SpinnerService } from '../../../../../core/spinner/spinner.service';\r\nimport { TreeData } from '../../../../../view-model/tree-data';\r\nimport { AppService } from '../../../../../shareds/services/app.service';\r\nimport { LanguageSearchViewModel } from '../../../../../shareds/models/language.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-office-detail',\r\n    templateUrl: './office-detail.component.html'\r\n})\r\n\r\n@DestroySubscribers()\r\nexport class OfficeDetailComponent implements OnInit {\r\n    @ViewChild('officeDetailModal') officeDetailModal: NhModalComponent;\r\n    officeDetail: OfficeDetailViewModel;\r\n    officeTree: TreeData[] = [];\r\n    subscribers: any = {};\r\n    languages = [];\r\n    currentLanguage = '';\r\n\r\n    constructor(private appService: AppService,\r\n                private spinnerService: SpinnerService,\r\n                private officeService: OfficeService) {\r\n        this.languages = this.appService.languages.map((language: LanguageSearchViewModel) => {\r\n            if (language.isDefault) {\r\n                this.currentLanguage = language.languageId;\r\n            }\r\n            return {id: language.languageId, name: language.name, isSelected: language.isDefault};\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onNodeSelected(node: TreeData) {\r\n        this.getDetail(node.id);\r\n    }\r\n\r\n    getDetail(officeId: number) {\r\n        this.spinnerService.show();\r\n        this.subscribers.getTree = this.officeService.getTree()\r\n            .subscribe((result: TreeData[]) => this.officeTree = result);\r\n        this.subscribers.getDetail = this.officeService.getDetail(officeId)\r\n            .subscribe((result: IActionResultResponse<OfficeDetailViewModel>) => {\r\n                this.officeDetail = result.data;\r\n                this.officeDetailModal.show();\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #officeFormModal size=\\\"full\\\"\\r\\n          (onShown)=\\\"onModalShow()\\\"\\r\\n          (onHidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n        {isUpdate, select, 0 {Add new office} 1 {Update office} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4\\\">\\r\\n                    <div class=\\\"portlet light bordered\\\">\\r\\n                        <div class=\\\"portlet-title\\\">\\r\\n                            <div class=\\\"caption font-green-sharp\\\">\\r\\n                                <i class=\\\"icon-speech font-green-sharp\\\"></i>\\r\\n                                <span class=\\\"caption-subject font-blue-madison bold uppercase\\\"\\r\\n                                      i18n=\\\"@@officeOrganizationTitle\\\">Office organization</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"portlet-body\\\">\\r\\n                            <nh-tree [data]=\\\"officeTree\\\">\\r\\n                            </nh-tree>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- END: .col-sm-4 -->\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <div class=\\\"portlet light bordered\\\">\\r\\n                        <div class=\\\"portlet-title\\\">\\r\\n                            <div class=\\\"caption font-green-sharp\\\">\\r\\n                                <i class=\\\"icon-speech font-green-sharp\\\"></i>\\r\\n                                <span class=\\\"caption-subject font-blue-madison bold uppercase\\\"\\r\\n                                      i18n=\\\"@@officeOrganizationFormTitle\\\">\\r\\n                                    {isUpdate, select, 0 {Add new office} 1 {Update office} other {}}\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"portlet-body\\\">\\r\\n                            <div class=\\\"tabbable-custom\\\">\\r\\n                                <ul class=\\\"nav nav-tabs \\\">\\r\\n                                    <li [class.active]=\\\"item.id === currentLanguage\\\"\\r\\n                                        *ngFor=\\\"let item of languages; let i = index\\\">\\r\\n                                        <a href=\\\"javascript://\\\" (click)=\\\"currentLanguage = item.id\\\">\\r\\n                                            {{ item.name }}\\r\\n                                        </a>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                                <div class=\\\"tab-content\\\" formArrayName=\\\"modelTranslations\\\">\\r\\n                                    <div class=\\\"tab-pane active\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label i18n-ghmLabel=\\\"@@parentOffice\\\" ghmLabel=\\\"Parent office\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\" [formGroup]=\\\"model\\\">\\r\\n                                                <nh-dropdown-tree\\r\\n                                                    [data]=\\\"officeTree\\\" i18n-title=\\\"@@selectParentOffice\\\"\\r\\n                                                    title=\\\"-- Select parent office --\\\"\\r\\n                                                    formControlName=\\\"parentId\\\">\\r\\n                                                </nh-dropdown-tree>\\r\\n                                            </div>\\r\\n                                            <label i18n-ghmLabel=\\\"@@officeCode\\\" ghmLabel=\\\"Office code\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\" [formGroup]=\\\"model\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                       i18n-placeholder=\\\"@@enterOfficeCodePlaceHolder\\\"\\r\\n                                                       placeholder=\\\"Enter office code please.\\\"\\r\\n                                                       formControlName=\\\"code\\\">\\r\\n                                                <span class=\\\"help-block\\\">\\r\\n                                                    { formErrors?.code, select, required {Office code is required} maxlength {Office code not allowed over 50 characters} }\\r\\n                                                </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\"\\r\\n                                             *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                             [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                             [formGroupName]=\\\"i\\\"\\r\\n                                             [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                                            <label i18n-ghmLabel=\\\"@@officeName\\\" ghmLabel=\\\"Office name\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                       i18n-placeholder=\\\"@@enterOfficeNamePlaceHolder\\\"\\r\\n                                                       placeholder=\\\"Enter office name.\\\"\\r\\n                                                       formControlName=\\\"name\\\">\\r\\n                                                <span class=\\\"help-block\\\">\\r\\n                                                    { translationFormErrors[modelTranslation.value.languageId]?.name, select, required {Office name is required} maxlength {Office\\r\\n                                                    name not allowed over 256 characters} }\\r\\n                                                </span>\\r\\n                                            </div>\\r\\n                                            <label i18n-ghmLabel=\\\"@@shortName\\\" ghmLabel=\\\"Short name\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                       i18n-placeholder=\\\"@@enterShortNamePlaceHolder\\\"\\r\\n                                                       placeholder=\\\"Enter short name please.\\\"\\r\\n                                                       formControlName=\\\"shortName\\\">\\r\\n                                                <span class=\\\"help-block\\\">\\r\\n                                                    { translationFormErrors[modelTranslation.value.languageId]?.shortName, select, required {Short name is required} maxlength\\r\\n                                                    {Short name not allowed over 50 characters} }\\r\\n                                                </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                                            <label i18n-ghmLabel=\\\"@@officeType\\\" ghmLabel=\\\"Office type\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <nh-select [data]=\\\"officeTypes\\\" i18n-title=\\\"@@selectOfficeType\\\"\\r\\n                                                           title=\\\"-- Select office type --\\\"\\r\\n                                                           formControlName=\\\"officeType\\\"></nh-select>\\r\\n                                                <span class=\\\"help-block\\\">\\r\\n                                                    { formErrors?.officeType, select, required {Please select office type} }\\r\\n                                                </span>\\r\\n                                            </div>\\r\\n                                            <label i18n-ghmLabel=\\\"@@status\\\" ghmLabel=\\\"Status\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"isActive\\\"\\r\\n                                                                  i18n=\\\"@@isActive\\\">\\r\\n                                                    {model.value.isActive, select, 0 {Inactive} 1 {Active}}\\r\\n                                                </mat-slide-toggle>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\"\\r\\n                                             [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                             *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                             [formGroupName]=\\\"i\\\"\\r\\n                                             [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                                            <label i18n=\\\"@@description\\\" i18n-ghmLabel ghmLabel=\\\"Description\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\"></label>\\r\\n                                            <div class=\\\"col-sm-9\\\">\\r\\n                                                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"description\\\"\\r\\n                                                          i18n=\\\"@@enterDescriptionPlaceholder\\\" i18n-placeholder\\r\\n                                                          placeholder=\\\"Enter description.\\\"></textarea>\\r\\n                                                <span class=\\\"help-block\\\">\\r\\n                                                    { translationFormErrors[modelTranslation.value.languageId]?.description, select, maxlength {Title description not allowed\\r\\n                                                    over 500 characters} }\\r\\n                                                </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\"\\r\\n                                             [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                             *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                             [formGroupName]=\\\"i\\\"\\r\\n                                             [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.address\\\">\\r\\n                                            <label i18n=\\\"@@address\\\" i18n-ghmLabel ghmLabel=\\\"Address\\\"\\r\\n                                                   class=\\\"col-sm-3 control-label\\\"></label>\\r\\n                                            <div class=\\\"col-sm-9\\\">\\r\\n                                                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"address\\\"\\r\\n                                                          i18n=\\\"@@enterAddressPlaceholder\\\" i18n-placeholder\\r\\n                                                          placeholder=\\\"Enter address.\\\"></textarea>\\r\\n                                                <span class=\\\"help-block\\\">\\r\\n                                                    { translationFormErrors[modelTranslation.value.languageId]?.description, select, maxlength {Title description not allowed\\r\\n                                                    over 500 characters} }\\r\\n                                                </span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"col-sm-12\\\">\\r\\n                                                <app-office-contact\\r\\n                                                    [officeId]=\\\"id\\\"\\r\\n                                                    [officeContacts]=\\\"contacts\\\">\\r\\n                                                </app-office-contact>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- END: .tab-pane -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- END: .col-sm-8 -->\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@Save\\\">Save</span>\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn btn-default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Close</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","﻿import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Inject,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OfficeTitleComponent } from '../office-title/office-title.component';\r\nimport { OfficeService } from '../services/office.service';\r\nimport { Office } from '../models/office.model';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { BaseFormComponent } from '../../../../../base-form.component';\r\nimport { TreeData } from '../../../../../view-model/tree-data';\r\nimport { IPageId, PAGE_ID } from '../../../../../configs/page-id.config';\r\nimport { SpinnerService } from '../../../../../core/spinner/spinner.service';\r\nimport { UtilService } from '../../../../../shareds/services/util.service';\r\nimport { IActionResultResponse } from '../../../../../interfaces/iaction-result-response.result';\r\nimport { AppService } from '../../../../../shareds/services/app.service';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { OfficeTranslation } from '../models/office-translation.model';\r\nimport { ISearchResult } from '../../../../../interfaces/isearch.result';\r\nimport { OfficeContact } from '../models/office-contact.model';\r\nimport * as _ from 'lodash';\r\nimport { OfficeDetailViewModel } from '../models/office-detail.viewmodel';\r\nimport { UserSuggestion } from '../../../../../shareds/components/ghm-user-suggestion/ghm-user-suggestion.component';\r\n\r\n@Component({\r\n    selector: 'app-office-form',\r\n    templateUrl: './office-form.component.html',\r\n    providers: [OfficeService]\r\n})\r\nexport class OfficeFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('officeFormModal') officeFormModal: NhModalComponent;\r\n    @ViewChild(OfficeTitleComponent) officeTitleComponent: OfficeTitleComponent;\r\n    @Input() elementId: string;\r\n    @Output() onEditorKeyup = new EventEmitter<any>();\r\n    @Output() onCloseForm = new EventEmitter<any>();\r\n\r\n    office = new Office();\r\n    contact = new OfficeContact();\r\n    contactModel: FormGroup;\r\n    officeTree: TreeData[] = [];\r\n    modelTranslation = new OfficeTranslation();\r\n    contactFormErrors = {};\r\n    contactValidationMessages = {};\r\n\r\n    pageTitle = 'Thêm mới phòng ban';\r\n    isGettingTree = false;\r\n    officeTypes = [];\r\n    contacts: OfficeContact[] = [];\r\n\r\n    constructor(@Inject(PAGE_ID) pageId: IPageId,\r\n                private fb: FormBuilder,\r\n                private officeService: OfficeService,\r\n                private toastr: ToastrService,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService,\r\n                private utilService: UtilService) {\r\n        super();\r\n        this.renderLanguageData(appService);\r\n        this.renderOfficeType();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.office = new Office();\r\n        this.renderForm();\r\n        this.getOfficeTree();\r\n    }\r\n\r\n    onModalShow() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.getOfficeTree();\r\n        this.officeFormModal.show();\r\n    }\r\n\r\n    edit(id: number) {\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n        this.officeFormModal.show();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.office = this.model.value;\r\n            this.office.officeContacts = this.contacts;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.officeService\r\n                    .update(this.id, this.office)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified;\r\n                        this.officeFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.officeService\r\n                    .insert(this.office)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.getOfficeTree();\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.officeFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    // saveContact() {\r\n    //     const isValid = this.validateFormGroup(\r\n    //         this.contactModel,\r\n    //         this.contactFormErrors,\r\n    //         this.contactValidationMessages,\r\n    //         true\r\n    //     );\r\n    //     if (isValid) {\r\n    //         this.contact = this.contactModel.value;\r\n    //         const existsByUserId = _.countBy(\r\n    //             this.contacts,\r\n    //             (contact: OfficeContact) => {\r\n    //                 return contact.userId === this.contact.userId;\r\n    //             }\r\n    //         ).true;\r\n    //         if (existsByUserId && existsByUserId > 0) {\r\n    //             return;\r\n    //         }\r\n    //         if (this.isUpdateContact) {\r\n    //             this.updateContact();\r\n    //         } else {\r\n    //             this.addContact();\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    closeForm() {\r\n        this.onCloseForm.emit();\r\n    }\r\n\r\n    reloadTree() {\r\n        this.isGettingTree = true;\r\n        this.officeService.getTree().subscribe((result: any) => {\r\n            this.isGettingTree = false;\r\n            this.officeTree = result;\r\n        });\r\n    }\r\n\r\n    onParentSelect(office: TreeData) {\r\n        this.model.patchValue({parentId: office ? office.id : null});\r\n    }\r\n\r\n    showListTitleTab() {\r\n        this.officeTitleComponent.search(1);\r\n    }\r\n\r\n    private getDetail(id: number) {\r\n        this.subscribers.officeDetail = this.officeService\r\n            .getDetail(id)\r\n            .subscribe(\r\n                (result: IActionResultResponse<OfficeDetailViewModel>) => {\r\n                    const officeDetail = result.data;\r\n                    if (officeDetail) {\r\n                        this.model.patchValue({\r\n                            code: officeDetail.code,\r\n                            isActive: officeDetail.isActive,\r\n                            order: officeDetail.order,\r\n                            officeType: officeDetail.officeType,\r\n                            parentId: officeDetail.parentId\r\n                        });\r\n                        if (officeDetail.officeTranslations && officeDetail.officeTranslations.length > 0) {\r\n                            this.modelTranslations.controls.forEach(\r\n                                (model: FormGroup) => {\r\n                                    const detail = _.find(\r\n                                        officeDetail.officeTranslations,\r\n                                        (officeTranslation: OfficeTranslation) => {\r\n                                            return (\r\n                                                officeTranslation.languageId ===\r\n                                                model.value.languageId\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    if (detail) {\r\n                                        model.patchValue(detail);\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                        if (\r\n                            officeDetail.officeContacts &&\r\n                            officeDetail.officeContacts.length > 0\r\n                        ) {\r\n                            this.contacts = officeDetail.officeContacts;\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    private getOfficeTree() {\r\n        this.subscribers.getTree = this.officeService\r\n            .getTree()\r\n            .subscribe((result: TreeData[]) => {\r\n                this.officeTree = result;\r\n            });\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.buildContactForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError([\r\n            'name',\r\n            'description',\r\n            'code'\r\n        ]);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {officeType: ['required']}\r\n        ]);\r\n        this.model = this.fb.group({\r\n            officeType: [this.office.officeType],\r\n            // 'email': [this.office.email, [\r\n            //     Validators.maxLength(150),\r\n            //     Validators.pattern(\r\n            //         '(([^<>()\\[\\]\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\]\\.,;:\\s@\"]+\\.)+[^<>()[\\]\\.,;:\\s@\"]{2,})'\r\n            //     )\r\n            // ]],\r\n            code: [this.office.code],\r\n            order: [this.office.order],\r\n            parentId: [this.office.parentId],\r\n            isActive: [this.office.isActive],\r\n            modelTranslations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            officeType: 0,\r\n            order: 0,\r\n            code: 0,\r\n            parentId: null,\r\n            isActive: true\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                shortName: '',\r\n                description: '',\r\n                address: ''\r\n            });\r\n        });\r\n        this.contacts = [];\r\n    }\r\n\r\n    private renderOfficeType() {\r\n        this.officeTypes = [\r\n            {id: 0, name: 'Normal'},\r\n            {id: 1, name: 'Hr'},\r\n            {id: 2, name: 'Directors'},\r\n            {id: 3, name: 'Stand alone company'}\r\n        ];\r\n    }\r\n\r\n    private buildContactForm() {\r\n        this.contactFormErrors = this.utilService.renderFormError(['userId']);\r\n        this.contactValidationMessages = this.utilService.renderFormErrorMessage(\r\n            [\r\n                {userId: ['required']},\r\n                {phoneNumber: ['maxlength']},\r\n                {email: ['maxlength']},\r\n                {fax: ['maxlength']}\r\n            ]\r\n        );\r\n        this.contactModel = this.fb.group({\r\n            userId: [this.contact.userId],\r\n            fullName: [this.contact.fullName],\r\n            avatar: [this.contact.avatar],\r\n            phoneNumber: [this.contact.phoneNumber, [Validators.maxLength(50)]],\r\n            email: [this.contact.email, [Validators.maxLength(50)]],\r\n            fax: [this.contact.fax, [Validators.maxLength(50)]]\r\n        });\r\n        this.contactModel.valueChanges.subscribe(() =>\r\n            this.validateFormGroup(\r\n                this.contactModel,\r\n                this.contactFormErrors,\r\n                this.contactValidationMessages,\r\n                false\r\n            )\r\n        );\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name', 'shortName', 'address', 'description']\r\n        );\r\n        this.translationValidationMessage[\r\n            language\r\n            ] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxlength']},\r\n            {description: ['maxlength']},\r\n            {address: ['maxlength']},\r\n            {shortName: ['required', 'maxlength']}\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256)]\r\n            ],\r\n            shortName: [\r\n                this.modelTranslation.shortName,\r\n                [Validators.required, Validators.maxLength(50)]\r\n            ],\r\n            address: [\r\n                this.modelTranslation.address,\r\n                [Validators.maxLength(500)]\r\n            ],\r\n            description: [\r\n                this.modelTranslation.description,\r\n                [Validators.maxLength(500)]\r\n            ]\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslationModel(false)\r\n        );\r\n        return translationModel;\r\n    };\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 cm-mgb-10\\\">\\r\\n        <form class=\\\"form-inline\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <!-- TODO: Check this -->\\r\\n                <!--<nh-suggestion-->\\r\\n                    <!--[url]=\\\"'office-title/search'\\\"-->\\r\\n                    <!--[clearAfterSelect]=\\\"true\\\"-->\\r\\n                    <!--[material]=\\\"false\\\"-->\\r\\n                    <!--[placeholder]=\\\"'Nhập tên chức danh cần tìm'\\\"-->\\r\\n                    <!--(onSelectItem)=\\\"onSelectTitle($event)\\\"-->\\r\\n                <!--&gt;</nh-suggestion>-->\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <table class=\\\"table table-bordered table-hover\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"middle center w50\\\">STT</th>\\r\\n                <th class=\\\"middle center\\\">Tên chức danh</th>\\r\\n                <th class=\\\"middle center w100\\\">Là trưởng đơn vị</th>\\r\\n                <th class=\\\"middle center w100\\\">Cho phép chọn nhiều</th>\\r\\n                <th class=\\\"middle center w50\\\">Xóa</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listTitle; let i = index\\\">\\r\\n                <td class=\\\"center\\\">{{i + 1}}</td>\\r\\n                <td>{{item.titleName}}</td>\\r\\n                <td class=\\\"center\\\">\\r\\n                    <i class=\\\"fa fa-check color-green size-18\\\" *ngIf=\\\"item.isLeader\\\"></i>\\r\\n                </td>\\r\\n                <td class=\\\"center\\\">\\r\\n                    <i class=\\\"fa fa-check color-green size-18\\\" *ngIf=\\\"item.isMultiple\\\"></i>\\r\\n                </td>\\r\\n                <td class=\\\"center\\\">\\r\\n                    <button mat-mini-fab color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"delete(item)\\\">\\r\\n                        <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n                [isDisabled]=\\\"isSearching\\\" [pageName]=\\\"'chức danh'\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OfficePositionService } from '../services/office-position.service';\r\nimport { BaseComponent } from '../../../../../base.component';\r\n\r\n@Component({\r\n    selector: 'app-office-title-list',\r\n    templateUrl: './office-title.component.html',\r\n    providers: [OfficePositionService]\r\n})\r\nexport class OfficeTitleComponent extends BaseComponent implements OnInit {\r\n    @Input() officeId: number;\r\n    listTitle = [];\r\n    private searchTerm = new Subject<string>();\r\n\r\n    constructor(private toastr: ToastrService,\r\n                private officeTitleService: OfficePositionService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        // this.searchTerm.subscribe(term => {\r\n        //     this.isSearching = true;\r\n        //     this.keyword = term;\r\n        //     this.officeTitleService.searchTitleByOfficeId(this.keyword, this.officeId, this.currentPage, this.pageSize)\r\n        //         .subscribe((result: any) => {\r\n        //             if (result) {\r\n        //                 this.isSearching = false;\r\n        //                 this.listTitle = result.items;\r\n        //                 this.totalRows = result.totalRows;\r\n        //             }\r\n        //         });\r\n        // });\r\n    }\r\n\r\n    onSelectTitle(title) {\r\n        this.isSaving = true;\r\n        this.officeTitleService.insert(title.id, this.officeId).subscribe(result => {\r\n            this.isSaving = false;\r\n\r\n            if (result === -1) {\r\n                this.toastr.error(`Chức danh ${title.name} đã tồn tại trong phòng ban này. Vui lòng kiểm tra lại`);\r\n                return;\r\n            }\r\n\r\n            if (result === -2) {\r\n                this.toastr.error('Chức danh không tồn tại hoặc đã bị xóa. Vui lòng kiểm tra lại hoặc liên hệ với quản trị viên.');\r\n                return;\r\n            }\r\n\r\n            if (result === -3) {\r\n                this.toastr.error('Thông tin phòng ban không tồn tại hoặc đã bị xóa. Vui lòng kiểm tra lại hoặc liên hệ với quản trị viên');\r\n                return;\r\n            }\r\n\r\n            if (result > 0) {\r\n                this.search(1);\r\n                this.toastr.success('Thêm chức danh vào phòng ban thành công.');\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.searchTerm.next(this.keyword);\r\n    }\r\n\r\n    delete(officeTitle) {\r\n        // swal({\r\n        //     title: `Bạn có chắc chắn muốn xóa chức danh: \"${officeTitle.titleName}\" ra khỏi phòng ban này không?`,\r\n        //     text: this.message.deleteWarning,\r\n        //     type: 'warning',\r\n        //     showCancelButton: true,\r\n        //     confirmButtonColor: '#DD6B55',\r\n        //     confirmButtonText: 'Đồng ý',\r\n        //     cancelButtonText: 'Hủy bỏ'\r\n        // }).then((isConfirm: boolean) => {\r\n        //     if (isConfirm) {\r\n        //         this.officeTitleService.delete(officeTitle.titleId, officeTitle.officeId).subscribe(result => {\r\n        //             if (result === -1) {\r\n        //                 this.toastr.error(`Chức danh: \"${officeTitle.titleName}\" không tồn tại trong phòng ban này.`);\r\n        //                 return;\r\n        //             }\r\n        //\r\n        //             if (result === -2) {\r\n        //                 this.toastr.error('Chức danh của phòng ban này đang được người dùng sử dụng. Vui lòng xóa chức danh của người dùng trước khi xóa chức danh trong phòng ban.');\r\n        //                 return;\r\n        //             }\r\n        //\r\n        //             if (result > 0) {\r\n        //                 // this.toastr.success(\"Xóa chức danh khỏi phòng ban thành công.\");\r\n        //                 setTimeout(() => {\r\n        //                     swal({\r\n        //                         title: 'Đã xóa',\r\n        //                         text: 'Xóa chức vụ thành công.',\r\n        //                         type: 'success',\r\n        //                         timer: 1500,\r\n        //                         showConfirmButton: false\r\n        //                     });\r\n        //                 }, 200);\r\n        //                 this.search(this.currentPage);\r\n        //                 return;\r\n        //             }\r\n        //         });\r\n        //     }\r\n        // }, () => {\r\n        // });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n            <div class=\\\"form-group cm-mgr-5\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@enterKeyword\\\" i18n-placeholder\\r\\n                       placeholder=\\\"Enter keyword.\\\" name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mgr-5\\\">\\r\\n                <nh-select [data]=\\\"[{id: true, name: 'Kích hoạt'}, {id: false, name: 'Chưa kích hoạt'}]\\\"\\r\\n                           [title]=\\\"'-- Lọc theo trạng thái --'\\\"\\r\\n                           [(value)]=\\\"isActive\\\"></nh-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mgr-5\\\">\\r\\n                <ghm-button icon=\\\"fa search\\\" classes=\\\"btn btn-primary\\\" [loading]=\\\"isSearching\\\">\\r\\n                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                </ghm-button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mgr-5\\\">\\r\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"refresh()\\\">\\r\\n                    <i class=\\\"fa fa-refresh\\\"></i>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group pull-right\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"add()\\\"\\r\\n                        i18n=\\\"@@add\\\" *ngIf=\\\"permission.add\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                    Add\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <table class=\\\"table table-hover table-stripped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@officeName\\\">Office name</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@parentOffice\\\">Parent office</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@officeCode\\\">Office code</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@officeCode\\\">Office type</th>\\r\\n                <th class=\\\"middle w50\\\" i18n=\\\"@@activeStatus\\\">Active status</th>\\r\\n                <th class=\\\"text-right middle w150\\\" i18n=\\\"@@actions\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n                    Actions\\r\\n                </th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let office of listItems$ | async; let i = index\\\">\\r\\n                <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n                <td class=\\\"middle\\\">\\r\\n                    <!--<i *ngFor=\\\"let item of createRange(office.level)\\\"-->\\r\\n                    <!--class=\\\"fa fa-long-arrow-right cm-mgr-5 color-blue\\\"></i>-->\\r\\n                    <a href=\\\"javasript://\\\" (click)=\\\"edit(office.id)\\\"\\r\\n                       *ngIf=\\\"permission.edit; else officeNameWithoutEdit\\\">\\r\\n                        <span [innerHTML]=\\\"office.nameLevel\\\"></span>\\r\\n                        {{office.name}}\\r\\n                    </a>\\r\\n                    <ng-template #officeNameWithoutEdit>\\r\\n                        {{ office.name }}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n                <td class=\\\"middle\\\">\\r\\n                    {{ office.parentName }}\\r\\n                </td>\\r\\n                <td class=\\\"middle\\\">{{ office.code }}</td>\\r\\n                <td class=\\\"middle\\\">\\r\\n                        <span i18n=\\\"@@officeType\\\" class=\\\"badge\\\"\\r\\n                              [class.badge-info]=\\\"office.officeType == 0\\\"\\r\\n                              [class.badge-success]=\\\"office.officeType == 1\\\"\\r\\n                              [class.badge-danger]=\\\"office.officeType == 2\\\"\\r\\n                              [class.badge-warning]=\\\"office.officeType == 3\\\"\\r\\n                        >\\r\\n                            {office.officeType, plural, =0 {Normal} =1 {Hr} =2 {Director} =3 {Stand alone company} other {N/A}}\\r\\n                        </span>\\r\\n                </td>\\r\\n                <td class=\\\"middle\\\">\\r\\n                        <span class=\\\"badge\\\" [class.badge-danger]=\\\"!office.isActive\\\"\\r\\n                              [class.badge-success]=\\\"office.isActive\\\">{office.activeStatus, select, active {Activated} inActive {In active}}</span>\\r\\n                </td>\\r\\n                <td class=\\\"text-right middle\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n                    <ghm-button *ngIf=\\\"permission.edit\\\" icon=\\\"fa fa-eye\\\" classes=\\\"btn btn-default btn-sm\\\"\\r\\n                                (clicked)=\\\"detail(office.id)\\\"></ghm-button>\\r\\n                    <ghm-button *ngIf=\\\"permission.edit\\\" icon=\\\"fa fa-edit\\\" classes=\\\"btn btn-primary btn-sm\\\"\\r\\n                                (clicked)=\\\"edit(office.id)\\\"></ghm-button>\\r\\n                    <ghm-button *ngIf=\\\"permission.delete\\\" icon=\\\"fa fa-trash-o\\\" classes=\\\"btn btn-danger btn-sm\\\"\\r\\n                                [swal]=\\\"confirmDeleteOffice\\\" (confirm)=\\\"delete(office.id)\\\"></ghm-button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n                    [isDisabled]=\\\"isSearching\\\"\\r\\n                    i18n=\\\"@@title\\\" i18n-pageName pageName=\\\"Office name\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-office-form (saveSuccessful)=\\\"search(1)\\\"></app-office-form>\\r\\n<app-office-detail></app-office-detail>\\r\\n<swal #confirmDeleteOffice\\r\\n      i18n-title=\\\"@@confirmDeleteOfficeTitle\\\"\\r\\n      i18n-text=\\\"@@confirmDeleteOfficeText\\\"\\r\\n      title=\\\"Are you sure for delete this office?\\\"\\r\\n      text=\\\"You can't recover this office after delete.\\\"\\r\\n      type=\\\"question\\\" [showCancelButton]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","﻿import {\r\n    Component,\r\n    OnInit,\r\n    Inject,\r\n    ViewChild,\r\n    AfterContentInit\r\n} from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, finalize, switchMap, map } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OfficeService } from './services/office.service';\r\nimport { Office } from './models/office.model';\r\nimport { NhTabComponent } from '../../../../shareds/components/nh-tab/nh-tab.component';\r\nimport { BaseListComponent } from '../../../../base-list.component';\r\nimport { IPageId, PAGE_ID } from '../../../../configs/page-id.config';\r\nimport { SpinnerService } from '../../../../core/spinner/spinner.service';\r\nimport { UtilService } from '../../../../shareds/services/util.service';\r\nimport { AppService } from '../../../../shareds/services/app.service';\r\nimport { OfficeSearchViewModel } from './models/office-search.viewmodel';\r\nimport { ISearchResult } from '../../../../interfaces/isearch.result';\r\nimport { OfficeFormComponent } from './office-form/office-form.component';\r\nimport { DestroySubscribers } from '../../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport { CheckPermission } from '../../../../shareds/decorator/check-permission.decorator';\r\nimport { OfficeDetailComponent } from './office-detail/office-detail.component';\r\nimport { NhSuggestion } from '../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\n\r\n@Component({\r\n    selector: 'app-office',\r\n    templateUrl: './office.component.html',\r\n    providers: [OfficeService]\r\n})\r\n@DestroySubscribers()\r\n@CheckPermission()\r\nexport class OfficeComponent extends BaseListComponent<OfficeSearchViewModel> implements OnInit {\r\n    @ViewChild(NhTabComponent) tabComponent: NhTabComponent;\r\n    @ViewChild(OfficeFormComponent) officeFormComponent: OfficeFormComponent;\r\n    @ViewChild(OfficeDetailComponent) officeDetailComponent: OfficeDetailComponent;\r\n    status?: number = null;\r\n    isActive: boolean;\r\n\r\n    // Test.\r\n    data = [];\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private title: Title,\r\n                private spinnerService: SpinnerService,\r\n                private utilService: UtilService,\r\n                private officeService: OfficeService,\r\n                private appService: AppService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(\r\n            this.pageId.HR,\r\n            this.pageId.OFFICE,\r\n            'Quản lý phòng ban',\r\n            'Danh sách phòng ban'\r\n        );\r\n        this.listItems$ = this.route.data.pipe(\r\n            map((result: { data: ISearchResult<OfficeSearchViewModel> }) => {\r\n                const data = result.data;\r\n                this.totalRows = data.totalRows;\r\n                return data.items;\r\n            })\r\n        );\r\n        this.officeService.searchForSuggestion('')\r\n            .subscribe((result: NhSuggestion[]) => this.data = result);\r\n    }\r\n\r\n    onSuggestionSearched(keyword: string) {\r\n        console.log(keyword);\r\n        this.officeService.searchForSuggestion(keyword)\r\n            .subscribe((result: NhSuggestion[]) => this.data = result);\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.listItems$ = this.officeService\r\n            .search(\r\n                this.keyword,\r\n                this.isActive,\r\n                this.currentPage,\r\n                this.pageSize\r\n            )\r\n            .pipe(\r\n                finalize(() => (this.isSearching = false)),\r\n                map((result: ISearchResult<OfficeSearchViewModel>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                })\r\n            );\r\n    }\r\n\r\n    refresh() {\r\n        this.keyword = '';\r\n    }\r\n\r\n    add() {\r\n        this.officeFormComponent.add();\r\n    }\r\n\r\n    edit(officeId: number) {\r\n        this.officeFormComponent.edit(officeId);\r\n    }\r\n\r\n    detail(officeId: number) {\r\n        this.officeDetailComponent.getDetail(officeId);\r\n    }\r\n\r\n    delete(officeId: number) {\r\n        this.subscribers.deleteOffice = this.officeService.delete(officeId).subscribe(() => this.search(1));\r\n    }\r\n\r\n    onChangeActiveStatus(office: Office) {\r\n        office.isActive = !office.isActive;\r\n\r\n        // this.officeService.updateIsActive(office).subscribe((result: IActionResultResponse) => {\r\n        //     // if (result === -1) {\r\n        //     //     this.toastr.error(this.formatString(this.message.notExists, 'Phòng ban'));\r\n        //     //     return;\r\n        //     // }\r\n        //     //\r\n        //     // if (result > 0) {\r\n        //     //     this.toastr.success(`${office.isActive ? 'Kích hoạt' : 'Bỏ kích hoạt'} phòng ban \"${office.name}\" thành công.`);\r\n        //     //     return;\r\n        //     // }\r\n        //     //\r\n        //     // if (result === 0) {\r\n        //     //     this.toastr.warning('Vui lòng thay đổi trạng thái của phòng ban');\r\n        //     //     return;\r\n        //     // }\r\n        //\r\n        //     this.toastr.warning(result.message, result.title);\r\n        //     return;\r\n        // });\r\n    }\r\n\r\n    onTabClosed(data: { id: string; active: boolean }) {\r\n        if (data.active) {\r\n            this.search(this.currentPage);\r\n            this.tabComponent.setTabActiveById('tabListOffice');\r\n        }\r\n    }\r\n\r\n    createRange(number) {\r\n        const items = [];\r\n        for (let i = 1; i <= number; i++) {\r\n            items.push(i);\r\n        }\r\n        return items;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OfficeComponent } from './office/office.component';\r\nimport { OfficeService } from './office/services/office.service';\r\nimport { TitleComponent } from './title/title.component';\r\nimport { TitleService } from './title/title.service';\r\nimport { PositionComponent } from './position/position.component';\r\nimport { PositionService } from './position/position.service';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '', component: OfficeComponent,\r\n        resolve: {\r\n            data: OfficeService\r\n        }\r\n    },\r\n    {\r\n        path: 'offices', component: OfficeComponent,\r\n        resolve: {\r\n            data: OfficeService\r\n        }\r\n    },\r\n    {\r\n        path: 'titles', component: TitleComponent,\r\n        resolve: {\r\n            data: TitleService\r\n        }\r\n    },\r\n    {\r\n        path: 'positions', component: PositionComponent,\r\n        resolve: {\r\n            data: PositionService\r\n        }\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers: [TitleService, PositionService, OfficeService]\r\n})\r\n\r\nexport class OrganizationRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrganizationRoutingModule } from './organization-routing.module';\r\nimport { TitleComponent } from './title/title.component';\r\nimport { TitleFormComponent } from './title/title-form/title-form.component';\r\nimport { PositionComponent } from './position/position.component';\r\nimport { PositionFormComponent } from './position/position-form/position-form.component';\r\nimport { OfficeComponent } from './office/office.component';\r\nimport { OfficeFormComponent } from './office/office-form/office-form.component';\r\nimport { OfficeDetailComponent } from './office/office-detail/office-detail.component';\r\nimport { NhModalModule } from '../../../shareds/components/nh-modal/nh-modal.module';\r\nimport { GhmPagingModule } from '../../../shareds/components/ghm-paging/ghm-paging.module';\r\nimport { NhSelectModule } from '../../../shareds/components/nh-select/nh-select.module';\r\nimport { CoreModule } from '../../../core/core.module';\r\nimport { OfficeTitleComponent } from './office/office-title/office-title.component';\r\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\r\nimport { MatCheckboxModule, MatSlideToggleModule, MatTooltipModule } from '@angular/material';\r\nimport { TinymceModule } from '../../../shareds/components/tinymce/tinymce.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NHTreeModule } from '../../../shareds/components/nh-tree/nh-tree.module';\r\nimport { NhSuggestionModule } from '../../../shareds/components/nh-suggestion/nh-suggestion.module';\r\nimport { GhmUserSuggestionModule } from '../../../shareds/components/ghm-user-suggestion/ghm-user-suggestion.module';\r\nimport { OfficeContactComponent } from './office/office-contact/office-contact.component';\r\nimport { OfficeContactFormComponent } from './office/office-contact/office-contact-form.component';\r\n\r\n@NgModule({\r\n    imports: [OrganizationRoutingModule, CommonModule, NhModalModule, GhmPagingModule, NhSelectModule, CoreModule,\r\n        MatCheckboxModule, TinymceModule, ReactiveFormsModule, FormsModule, MatTooltipModule, NHTreeModule, MatSlideToggleModule,\r\n        NhSuggestionModule, GhmUserSuggestionModule,\r\n        SweetAlert2Module.forRoot({\r\n            buttonsStyling: false,\r\n            customClass: 'modal-content',\r\n            confirmButtonClass: 'btn btn-primary',\r\n            cancelButtonClass: 'btn',\r\n            confirmButtonText: 'Đồng ý',\r\n            showCancelButton: true,\r\n            cancelButtonText: 'Hủy bỏ'\r\n        })],\r\n    exports: [],\r\n    declarations: [\r\n        // Titles.\r\n        TitleComponent, TitleFormComponent,\r\n        // Positions.\r\n        PositionComponent, PositionFormComponent,\r\n        // Offices.\r\n        OfficeComponent, OfficeFormComponent, OfficeDetailComponent, OfficeTitleComponent, OfficeContactComponent,\r\n        OfficeContactFormComponent\r\n    ],\r\n    providers: [],\r\n})\r\nexport class OrganizationModule {\r\n}\r\n","export class PositionTranslation {\r\n    languageId: string;\r\n    name: string;\r\n    shortName: string;\r\n    description: string;\r\n    purpose: string;\r\n    otherRequire: string;\r\n    responsibility: string;\r\n}\r\n","module.exports = \"<nh-modal #positionFormModal\\r\\n          size=\\\"md\\\"\\r\\n          (onShown)=\\\"onModalShown()\\\"\\r\\n          (onHidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n        <i class=\\\"fa fa-graduation-cap\\\"></i>\\r\\n        <span i18n=\\\"@@positionFormTitle\\\">{isUpdate, select, 1 {Update position} 0 {Add new position}}</span>\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"tabbable-custom\\\">\\r\\n                <ul class=\\\"nav nav-tabs \\\" *ngIf=\\\"languages.length > 1\\\">\\r\\n                    <li [class.active]=\\\"item.id === currentLanguage\\\"\\r\\n                        *ngFor=\\\"let item of languages; let i = index\\\">\\r\\n                        <a href=\\\"javascript://\\\" (click)=\\\"currentLanguage = item.id\\\"> {{ item.name }} </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                    <div class=\\\"tab-pane active\\\">\\r\\n                        <div class=\\\"form-group\\\"\\r\\n                             [class.has-error]=\\\"formErrors.titleId\\\">\\r\\n                            <label i18n=\\\"@@selectTitle\\\" i18n-ghmLabel ghmLabel=\\\"Select title\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"\\r\\n                                   [required]=\\\"true\\\"\\r\\n                            ></label>\\r\\n                            <div class=\\\"col-sm-2\\\">\\r\\n                                <nh-select\\r\\n                                    i18n=\\\"@@selectTitlePlaceholder\\\"\\r\\n                                    i18n-title\\r\\n                                    [data]=\\\"titles\\\"\\r\\n                                    title=\\\"-- Select title --\\\"\\r\\n                                    formControlName=\\\"titleId\\\"></nh-select>\\r\\n                                <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                        formErrors.titleId,\\r\\n                                        select, required {Please select title} other {}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                            </div>\\r\\n                            <span formArrayName=\\\"modelTranslations\\\">\\r\\n                                <span\\r\\n                                    *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                    [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                    [formGroupName]=\\\"i\\\"\\r\\n                                    [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                                    <label i18n=\\\"@@shortName\\\" i18n-ghmLabel ghmLabel=\\\"Short name\\\"\\r\\n                                           class=\\\"col-sm-2 control-label\\\"\\r\\n                                           [required]=\\\"true\\\"\\r\\n                                    ></label>\\r\\n                                    <div class=\\\"col-sm-4\\\">\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                               i18n=\\\"@@enterTitleShortNamePlaceHolder\\\" i18n-placeholder\\r\\n                                               placeholder=\\\"Enter title short name.\\\"\\r\\n                                               formControlName=\\\"shortName\\\">\\r\\n                                        <span class=\\\"help-block\\\">\\r\\n                                            {\\r\\n                                            translationFormErrors[modelTranslation.value.languageId]?.shortName,\\r\\n                                            select, required {Position short name is required} maxlength {Position short name not allowed over 20 characters}\\r\\n                                            }\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div formArrayName=\\\"modelTranslations\\\">\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                 [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                 [formGroupName]=\\\"i\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                                <label i18n=\\\"@@positionName\\\" i18n-ghmLabel\\r\\n                                       ghmLabel=\\\"Position name\\\" for=\\\"\\\" class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" i18n=\\\"@@enterPositionName\\\" i18n-placeholder\\r\\n                                           placeholder=\\\"Enter position name\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\r\\n                                           formControlName=\\\"name\\\" #name>\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                        translationFormErrors[modelTranslation.value.languageId]?.name,\\r\\n                                        select, required {Position name is required} maxlength {Position name not allowed over 256 characters}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                                    {model.value.isActive, select, 0 {Inactive} 1 {Active}}\\r\\n                                </mat-checkbox>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isManager\\\" i18n=\\\"@@isManager\\\">\\r\\n                                    Is manager\\r\\n                                </mat-checkbox>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isMultiple\\\" i18n=\\\"@@isMultiple\\\">\\r\\n                                    Is multiple\\r\\n                                </mat-checkbox>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Use for office\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"\\r\\n                            ></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <nh-suggestion\\r\\n                                    i18n-placeholder=\\\"@@officeSuggestionPlaceholder\\\"\\r\\n                                    placeholder=\\\"Type office name for suggestion\\\"\\r\\n                                    [multiple]=\\\"true\\\"\\r\\n                                    [sources]=\\\"offices\\\"\\r\\n                                    [loading]=\\\"isSearchingOffice\\\"\\r\\n                                    [selectedItems]=\\\"selectedOffices\\\"\\r\\n                                    (searched)=\\\"onSearched($event)\\\"\\r\\n                                    (itemSelected)=\\\"onSelectedOffice($event)\\\"\\r\\n                                ></nh-suggestion>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div formArrayName=\\\"modelTranslations\\\">\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                 [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                 [formGroupName]=\\\"i\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                                <label i18n=\\\"@@description\\\" i18n-ghmLabel ghmLabel=\\\"Description\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                ></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"2\\\" formControlName=\\\"description\\\"\\r\\n                                              i18n=\\\"@@enterDescriptionPlaceholder\\\" i18n-placeholder\\r\\n                                              placeholder=\\\"Enter description.\\\"></textarea>\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                        translationFormErrors[modelTranslation.value.languageId]?.description,\\r\\n                                        select, maxlength {Title description not allowed over 500 characters}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                 [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                 [formGroupName]=\\\"i\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.purpose\\\">\\r\\n                                <label i18n=\\\"@@purposse\\\" i18n-ghmLabel ghmLabel=\\\"Purpose\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                ></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"2\\\" formControlName=\\\"purpose\\\"\\r\\n                                              i18n=\\\"@@enterPurposePlaceholder\\\" i18n-placeholder\\r\\n                                              placeholder=\\\"Enter purpose.\\\"></textarea>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                 [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                 [formGroupName]=\\\"i\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.otherRequire\\\">\\r\\n                                <label i18n=\\\"@@otherRequire\\\" i18n-ghmLabel ghmLabel=\\\"Other require\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                ></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"2\\\" formControlName=\\\"otherRequire\\\"\\r\\n                                              i18n=\\\"@@enterOtherRequirePlaceholder\\\" i18n-placeholder\\r\\n                                              placeholder=\\\"Enter other require.\\\"></textarea>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                 [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                 [formGroupName]=\\\"i\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.responsibility\\\">\\r\\n                                <label i18n=\\\"@@responsibility\\\" i18n-ghmLabel ghmLabel=\\\"Responsibility\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                ></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"2\\\" formControlName=\\\"responsibility\\\"\\r\\n                                              i18n=\\\"@@enterResponsibilityPlaceholder\\\" i18n-placeholder\\r\\n                                              placeholder=\\\"Enter responsibility.\\\"></textarea>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\" [loading]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                Save\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn btn-default\\\" i18n=\\\"@@cancel\\\"\\r\\n                        type=\\\"button\\\" nh-dismiss=\\\"true\\\">\\r\\n                Cancel\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","﻿import { Component, Inject, OnInit, Output, EventEmitter, Renderer2, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PositionService } from '../position.service';\r\nimport { Position } from '../position.model';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { BaseFormComponent } from '../../../../../base-form.component';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { IPageId, PAGE_ID } from '../../../../../configs/page-id.config';\r\nimport { UtilService } from '../../../../../shareds/services/util.service';\r\nimport { AppService } from '../../../../../shareds/services/app.service';\r\nimport { SpinnerService } from '../../../../../core/spinner/spinner.service';\r\nimport { IActionResultResponse } from '../../../../../interfaces/iaction-result-response.result';\r\nimport { PositionTranslation } from '../models/position-translation.model';\r\nimport { PositionDetailViewModel } from '../models/position-detail.model';\r\nimport * as _ from 'lodash';\r\nimport { TitleService } from '../../title/title.service';\r\nimport { TitleSearchForSelectViewModel } from '../../title/title-search-for-select.viewmodel';\r\nimport { NhSuggestion } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { OfficeService } from '../../office/services/office.service';\r\n\r\n@Component({\r\n    selector: 'app-position-form',\r\n    templateUrl: './position-form.component.html'\r\n})\r\n\r\nexport class PositionFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('positionFormModal') positionFormModal: NhModalComponent;\r\n    @Output() onSaveSuccess = new EventEmitter();\r\n    position = new Position();\r\n    titleTranslation = new PositionTranslation();\r\n    titles: TitleSearchForSelectViewModel[] = [];\r\n    selectedOffices: NhSuggestion[] = [];\r\n    offices: NhSuggestion[] = [];\r\n    isSearchingOffice = false;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private fb: FormBuilder,\r\n                private renderer: Renderer2,\r\n                private positionService: PositionService,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private appService: AppService,\r\n                private officeService: OfficeService,\r\n                private titleService: TitleService,\r\n                private spinnerService: SpinnerService) {\r\n        super();\r\n        this.renderLanguageData(appService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.titles.length === 0) {\r\n            this.subscribers.getTitles = this.titleService.getAllActivated()\r\n                .subscribe((result: TitleSearchForSelectViewModel[]) => {\r\n                    this.titles = result;\r\n                });\r\n        }\r\n        this.renderForm();\r\n        this.utilService.focusElement('name');\r\n    }\r\n\r\n    onModalShown() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.resetModel();\r\n        this.isUpdate = false;\r\n        this.selectedOffices = [];\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    onSelectedOffice(items: NhSuggestion[]) {\r\n        this.selectedOffices = items;\r\n    }\r\n\r\n    onSearched(keyword: string) {\r\n        this.isSearchingOffice = true;\r\n        this.subscribers.searchSuggestionOffice = this.officeService\r\n            .searchForSuggestion(keyword)\r\n            .pipe(\r\n                finalize(() => this.isSearchingOffice = false)\r\n            )\r\n            .subscribe((result: NhSuggestion[]) => this.offices = result);\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.isSaving = true;\r\n            this.position = this.model.value;\r\n            const selectedOfficeIds = this.selectedOffices.map((item: NhSuggestion) => {\r\n                return item.id as number;\r\n            });\r\n            if (this.isUpdate) {\r\n                this.positionService\r\n                    .update(\r\n                        this.position,\r\n                        selectedOfficeIds\r\n                    )\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.positionFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.positionService\r\n                    .insert(\r\n                        this.position,\r\n                        selectedOfficeIds\r\n                    )\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (!this.isCreateAnother) {\r\n                            this.positionFormModal.dismiss();\r\n                        } else {\r\n                            this.resetModel();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.positionFormModal.show();\r\n    }\r\n\r\n    edit(position: Position) {\r\n        this.isUpdate = true;\r\n        this.position = position;\r\n        this.getDetail(position.id);\r\n        this.positionFormModal.show();\r\n    }\r\n\r\n    private resetModel() {\r\n        this.isUpdate = false;\r\n        this.model.patchValue({\r\n            id: '',\r\n            titleId: '',\r\n            isActive: true,\r\n            isManager: false,\r\n            isMultiple: false,\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                shortName: '',\r\n                description: '',\r\n                purpose: '',\r\n                otherRequire: '',\r\n                responsibility: ''\r\n            });\r\n        });\r\n    }\r\n\r\n    private getDetail(id: string) {\r\n        this.spinnerService.show();\r\n        this.subscribers.getPositionDetail = this.positionService.getDetail(id)\r\n            .subscribe((result: IActionResultResponse<PositionDetailViewModel>) => {\r\n                const positionDetail = result.data;\r\n                if (positionDetail) {\r\n                    this.model.patchValue({\r\n                        id: positionDetail.id,\r\n                        isActive: positionDetail.isActive,\r\n                        isMultiple: positionDetail.isMultiple,\r\n                        isManager: positionDetail.isManager,\r\n                        order: positionDetail.order,\r\n                        titleId: positionDetail.titleId,\r\n                        concurrencyStamp: positionDetail.concurrencyStamp,\r\n                    });\r\n                    if (positionDetail.positionTranslations && positionDetail.positionTranslations.length > 0) {\r\n                        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n                            const detail = _.find(positionDetail.positionTranslations, (positionTranslation: PositionTranslation) => {\r\n                                return positionTranslation.languageId === model.value.languageId;\r\n                            });\r\n                            if (detail) {\r\n                                model.patchValue(detail);\r\n                            }\r\n                        });\r\n                    }\r\n                    if (positionDetail.officesPositions && positionDetail.officesPositions.length > 0) {\r\n                        this.selectedOffices = positionDetail.officesPositions;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'shortName', 'description', 'titleId']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'shortName': ['required', 'maxlength']},\r\n            {'description': ['maxlength']},\r\n            {'titleId': ['required']},\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            id: [this.position.id],\r\n            titleId: [this.position.titleId, [\r\n                Validators.required\r\n            ]],\r\n            isManager: [this.position.isManager],\r\n            isMultiple: [this.position.isMultiple],\r\n            isActive: [this.position.isActive],\r\n            concurrencyStamp: [this.position.concurrencyStamp],\r\n            modelTranslations: this.fb.array([])\r\n        });\r\n\r\n        this.model.valueChanges.subscribe(data =>\r\n            this.validateFormGroup(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(['name', 'shortName', 'description']);\r\n        this.translationValidationMessage[language] = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['maxlength']},\r\n            {'shortName': ['required', 'maxlength']}\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [this.titleTranslation.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            shortName: [this.titleTranslation.shortName, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            description: [this.titleTranslation.description, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            otherRequire: [this.titleTranslation.otherRequire],\r\n            responsibility: [this.titleTranslation.responsibility],\r\n            purpose: [this.titleTranslation.purpose],\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) => this.validateTranslationModel(false));\r\n        return translationModel;\r\n    };\r\n}\r\n","module.exports = \"<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\" #positionSearchForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n               i18n=\\\"@@enterSearchKeyWord\\\"\\r\\n               i18n-placeholder\\r\\n               placeholder=\\\"Enter search keyword\\\" #searchBox\\r\\n               (keyup)=\\\"keyword = searchBox.value\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"refresh()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"add()\\\" i18n=\\\"@@add\\\">\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n</form><!-- END: search-form -->\\r\\n\\r\\n<div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-hover table-stripped\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">STT</th>\\r\\n            <th class=\\\"middle w250\\\" i18n=\\\"@@positionName\\\">Position name</th>\\r\\n            <th class=\\\"middle w100\\\" i18n=\\\"@@shortName\\\">Short name</th>\\r\\n            <th class=\\\"middle\\\" i18n=\\\"@@description\\\">Description</th>\\r\\n            <th class=\\\"middle text-right w100\\\" i18n=\\\"@@action\\\">Action</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let position of listItems$ | async; let i = index\\\">\\r\\n            <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n            <td class=\\\"middle\\\">\\r\\n                <a href=\\\"javascript://\\\" (click)=\\\"edit(position.id)\\\"\\r\\n                   *ngIf=\\\"permission.edit; else positionNameWithoutEdit\\\">{{position.name}}</a>\\r\\n                <ng-template #positionNameWithoutEdit>\\r\\n                    {{ position.name }}\\r\\n                </ng-template>\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\">{{ position.shortName }}</td>\\r\\n            <td class=\\\"middle\\\">{{ position.description }}</td>\\r\\n            <td class=\\\"text-right middle\\\">\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary btn-sm\\\"\\r\\n                    i18n=\\\"@@edit\\\"\\r\\n                    i18n-matTooltip\\r\\n                    matTooltip=\\\"Edit\\\"\\r\\n                        [matTooltipPosition]=\\\"'above'\\\"\\r\\n                        (click)=\\\"edit(position)\\\">\\r\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                </button>\\r\\n                <ghm-button\\r\\n                    *ngIf=\\\"permission.delete\\\"\\r\\n                    icon=\\\"fa fa-trash-o\\\" classes=\\\"btn btn-danger btn-sm\\\"\\r\\n                    [swal]=\\\"confirmDeletePosition\\\"\\r\\n                    (confirm)=\\\"delete(position.id)\\\"></ghm-button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div><!-- END: table-responsive -->\\r\\n\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\"\\r\\n            i18n=\\\"@@position\\\"\\r\\n            i18n-pageName\\r\\n            pageName=\\\"Position\\\"></ghm-paging>\\r\\n\\r\\n<app-position-form (saveSuccessful)=\\\"search(currentPage)\\\"></app-position-form>\\r\\n\\r\\n<swal\\r\\n    #confirmDeletePosition\\r\\n    i18n-title=\\\"@@confirmDeletePositionTitle\\\"\\r\\n    i18n-text=\\\"@@confirmDeletePositionText\\\"\\r\\n    title=\\\"Are you sure for delete this position?\\\"\\r\\n    text=\\\"You can't recover this position after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","﻿import { Component, OnInit, Inject, ViewChild, AfterContentInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, finalize } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PositionFormComponent } from './position-form/position-form.component';\r\nimport { Position } from './position.model';\r\nimport { PositionService } from './position.service';\r\nimport { BaseListComponent } from '../../../../base-list.component';\r\nimport { IPageId, PAGE_ID } from '../../../../configs/page-id.config';\r\nimport { SpinnerService } from '../../../../core/spinner/spinner.service';\r\nimport { UtilService } from '../../../../shareds/services/util.service';\r\nimport { AppService } from '../../../../shareds/services/app.service';\r\nimport { ISearchResult } from '../../../../interfaces/isearch.result';\r\nimport { FilterLink } from '../../../../shareds/models/filter-link.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { PositionSearchViewModel } from './models/postion-search.viewmodel';\r\nimport { CheckPermission } from '../../../../shareds/decorator/check-permission.decorator';\r\nimport { DestroySubscribers } from '../../../../shareds/decorator/destroy-subscribes.decorator';\r\n\r\n@Component({\r\n    selector: 'app-position-component',\r\n    templateUrl: './position.component.html',\r\n    providers: [Location, {provide: LocationStrategy, useClass: PathLocationStrategy}]\r\n})\r\n\r\n@DestroySubscribers()\r\n@CheckPermission()\r\nexport class PositionComponent extends BaseListComponent<PositionSearchViewModel> implements OnInit, AfterContentInit {\r\n    @ViewChild(PositionFormComponent) positionFormComponent: PositionFormComponent;\r\n    isActive?: boolean;\r\n    isManager?: boolean;\r\n    isMultiple?: boolean;\r\n    private searchTerm = new Subject<string>();\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private location: Location,\r\n                private positionService: PositionService,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private router: Router,\r\n                private route: ActivatedRoute,\r\n                private utilService: UtilService,\r\n                private appService: AppService) {\r\n        super();\r\n        // this.getPermission(this.appService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.HR, this.pageId.POSITION, 'Quản lý chức vụ', 'Danh sách chức vụ');\r\n        this.searchTerm\r\n            .pipe(debounceTime(500))\r\n            .subscribe(term => {\r\n\r\n            });\r\n\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: ISearchResult<PositionSearchViewModel> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            return data.items;\r\n        }));\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.renderFilterLink();\r\n        this.isSearching = true;\r\n        this.listItems$ = this.positionService.search(this.keyword, this.isManager, this.isMultiple,\r\n            this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false)\r\n                , map((result: ISearchResult<PositionSearchViewModel>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                }));\r\n    }\r\n\r\n    refresh() {\r\n        this.isActive = null;\r\n        this.isManager = null;\r\n        this.isMultiple = null;\r\n        this.keyword = '';\r\n        this.search(1);\r\n    }\r\n\r\n    add() {\r\n        this.positionFormComponent.add();\r\n    }\r\n\r\n    edit(position: Position) {\r\n        this.positionFormComponent.edit(position);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.positionService.delete(id)\r\n            .subscribe(() => this.search(this.currentPage));\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = '/organization/positions';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('pageId', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","﻿import { PositionTranslation } from './models/position-translation.model';\r\n\r\nexport class Position {\r\n    id: string;\r\n    titleId: string;\r\n    order: number;\r\n    isManager: boolean;\r\n    isMultiple: boolean;\r\n    isActive: boolean;\r\n    concurrencyStamp: string;\r\n    modelTranslations: PositionTranslation[];\r\n\r\n    constructor(id?: string, order?: number) {\r\n        this.id = id;\r\n        this.order = order;\r\n        this.isManager = false;\r\n        this.isMultiple = false;\r\n        this.isActive = true;\r\n    }\r\n}\r\n\r\n","export class TitleTranslation {\r\n    name: string;\r\n    shortName: string;\r\n    description: string;\r\n}\r\n","module.exports = \"<nh-modal #titleFormModal\\r\\n          size=\\\"md\\\"\\r\\n          (onShown)=\\\"onTitleFormModalShown()\\\"\\r\\n          (onHidden)=\\\"onTitleFormModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n        <i class=\\\"fa fa-user-secret\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        <!--<span *ngIf=\\\"isUpdate; else addNewTitleTemplate\\\" i18n=\\\"@@updateTitle\\\">Update title</span>-->\\r\\n        <!--<ng-template #addNewTitleTemplate i18N=\\\"@@addNewTitle\\\">-->\\r\\n        <!--Add new title-->\\r\\n        <!--</ng-template>-->\\r\\n        <span i18n=\\\"@@titleFormTitle\\\">{isUpdate, select, 1 {Update title} 0 {Add new title}}</span>\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"tabbable-custom\\\">\\r\\n                <ul class=\\\"nav nav-tabs \\\">\\r\\n                    <li [class.active]=\\\"item.id === currentLanguage\\\"\\r\\n                        *ngFor=\\\"let item of languages; let i = index\\\">\\r\\n                        <a href=\\\"javascript://\\\" (click)=\\\"currentLanguage = item.id\\\"> {{ item.name }} </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n                <div class=\\\"tab-content\\\" formArrayName=\\\"modelTranslations\\\">\\r\\n                    <div class=\\\"tab-pane\\\"\\r\\n                         [class.active]=\\\"modelTranslation.value.languageId === currentLanguage\\\"\\r\\n                         *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\" [formGroupName]=\\\"i\\\">\\r\\n                        <div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                                <label i18n=\\\"@@titleName\\\" i18n-ghmLabel ghmLabel=\\\"Title name\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@enterTitleNamePlaceHolder\\\"\\r\\n                                           i18n-placeholder\\r\\n                                           placeholder=\\\"Enter page name.\\\"\\r\\n                                           formControlName=\\\"name\\\">\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                        translationFormErrors[modelTranslation.value.languageId]?.name,\\r\\n                                        select, required {Title name is required} maxlength {Title name not allowed over 256 characters}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.shortName\\\">\\r\\n                                <label i18n=\\\"@@shortName\\\" i18n-ghmLabel ghmLabel=\\\"Short name\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                       [required]=\\\"true\\\"></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                           i18n=\\\"@@enterTitleShortNamePlaceHolder\\\" i18n-placeholder\\r\\n                                           placeholder=\\\"Enter title short name.\\\"\\r\\n                                           formControlName=\\\"shortName\\\">\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                        translationFormErrors[modelTranslation.value.languageId]?.shortName,\\r\\n                                        select, required {Title short name is required} maxlength {Title short name not allowed over 50 characters}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\"\\r\\n                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                                <label i18n=\\\"@@description\\\" i18n-ghmLabel ghmLabel=\\\"Description\\\"\\r\\n                                       class=\\\"col-sm-4 control-label\\\"\\r\\n                                ></label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"description\\\"\\r\\n                                              i18n=\\\"@@enterDescriptionPlaceholder\\\" i18n-placeholder\\r\\n                                              placeholder=\\\"Enter description.\\\"></textarea>\\r\\n                                    <span class=\\\"help-block\\\">\\r\\n                                        {\\r\\n                                        translationFormErrors[modelTranslation.value.languageId]?.description,\\r\\n                                        select, maxlength {Title description not allowed over 500 characters}\\r\\n                                        }\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                    <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                                        {model.value.isActive, select, 0 {Inactive} 1 {Active}}\\r\\n                                    </mat-checkbox>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\" [loading]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                Save\\r\\n            </ghm-button>\\r\\n            <ghm-button type=\\\"button\\\" classes=\\\"btn btn-default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [loading]=\\\"isSaving\\\"\\r\\n                        i18n=\\\"@@cancel\\\">\\r\\n                Cancel\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","﻿import {Component, Inject, OnInit, OnDestroy, Input, Output, EventEmitter, ViewChild} from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators, FormArray, Form} from '@angular/forms';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {Title} from '../title.model';\r\nimport {TitleService} from '../title.service';\r\nimport {IPageId, PAGE_ID} from '../../../../../configs/page-id.config';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {TitleDetailViewModel, TitleTranslationViewModel} from '../models/title-detail.viewmodel';\r\nimport {TitleTranslation} from '../models/title-translation.model';\r\nimport {AppService} from '../../../../../shareds/services/app.service';\r\nimport * as _ from 'lodash';\r\nimport {IActionResultResponse} from '../../../../../interfaces/iaction-result-response.result';\r\nimport {SpinnerService} from '../../../../../core/spinner/spinner.service';\r\n\r\n@Component({\r\n    selector: 'app-title-form',\r\n    templateUrl: './title-form.component.html'\r\n})\r\n\r\nexport class TitleFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('titleFormModal') titleFormModal: NhModalComponent;\r\n    title = new Title();\r\n    modelTranslation = new TitleTranslation();\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private fb: FormBuilder,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private titleService: TitleService,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService,\r\n                private utilService: UtilService) {\r\n        super();\r\n        this.renderLanguageData(appService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderForm();\r\n    }\r\n\r\n    onTitleFormModalShown() {\r\n        this.utilService.focusElement('name');\r\n    }\r\n\r\n    onTitleFormModalHidden() {\r\n        this.resetModels();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.titleFormModal.show();\r\n    }\r\n\r\n    edit(title: Title) {\r\n        this.isUpdate = true;\r\n        this.title = title;\r\n        this.getDetail(title.id);\r\n        this.titleFormModal.show();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.validateModel();\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.isSaving = true;\r\n            this.title = this.model.value;\r\n            if (this.isUpdate) {\r\n                this.titleService.update(this.title.id, this.title)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.titleFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.titleService.insert(this.title)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.utilService.focusElement('name');\r\n                        if (this.isCreateAnother) {\r\n                            this.resetModels();\r\n                        } else {\r\n                            this.isModified = true;\r\n                            this.titleFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDetail(id: string) {\r\n        this.spinnerService.show();\r\n        this.subscribers.getTitleDetail = this.titleService.getDetail(id)\r\n            .subscribe((result: IActionResultResponse<TitleDetailViewModel>) => {\r\n                const titleDetail = result.data;\r\n                if (titleDetail) {\r\n                    this.model.patchValue({\r\n                        id: titleDetail.id,\r\n                        isActive: titleDetail.isActive,\r\n                        order: titleDetail.order,\r\n                        concurrencyStamp: titleDetail.concurrencyStamp,\r\n                    });\r\n\r\n                    if (titleDetail.titleTranslations && titleDetail.titleTranslations.length > 0) {\r\n                        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n                            const detail = _.find(titleDetail.titleTranslations, (titleTranslation: TitleTranslationViewModel) => {\r\n                                return titleTranslation.languageId === model.value.languageId;\r\n                            });\r\n                            if (detail) {\r\n                                model.patchValue(detail);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'shortName', 'description', 'positionId']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'shortName': ['required', 'maxlength']},\r\n            {'positionId': ['required']},\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            'id': [this.title.id],\r\n            'concurrencyStamp': [this.title.concurrencyStamp],\r\n            'isActive': [this.title.isActive],\r\n            'modelTranslations': this.fb.array([])\r\n        });\r\n\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetModels() {\r\n        this.isUpdate = false;\r\n        this.model.patchValue({\r\n            isActive: true,\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                shortName: '',\r\n                description: ''\r\n            });\r\n        });\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(['name', 'shortName', 'description']);\r\n        this.translationValidationMessage[language] = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['maxlength']},\r\n            {'shortName': ['required', 'maxlength']}\r\n        ]);\r\n        const pageTranslationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [this.modelTranslation.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            shortName: [this.modelTranslation.shortName, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            description: [this.modelTranslation.description, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n        });\r\n        pageTranslationModel.valueChanges.subscribe((data: any) => this.validateTranslationModel(false));\r\n        return pageTranslationModel;\r\n    };\r\n}\r\n","module.exports = \"<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@enterKeyword\\\" i18n-placeholder placeholder=\\\"Enter keyword.\\\"\\r\\n               name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'Chưa kích hoạt'},{id: true, name: 'Đã kích hoạt'}]\\\"\\r\\n            [title]=\\\"'-- Tất cả trạng thái --'\\\"\\r\\n            [(value)]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"search(1)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"isSearching\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"refresh()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"add()\\\" i18n=\\\"@@add\\\"\\r\\n                *ngIf=\\\"permission.add\\\">\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n<div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-hover table-stripped\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n            <th class=\\\"middle\\\" i18n=\\\"@@titleName\\\">Title name</th>\\r\\n            <th class=\\\"middle w100\\\" i18n=\\\"@@shortName\\\">Short name</th>\\r\\n            <th class=\\\"middle w70 middle\\\" i18n=\\\"@@status\\\">Status</th>\\r\\n            <th class=\\\"middle\\\" i18n=\\\"@@description\\\">Description</th>\\r\\n            <th class=\\\"middle center w150\\\" i18n=\\\"@@action\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Action</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let title of listItems$ | async; let i = index\\\">\\r\\n            <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n            <td class=\\\"middle\\\">\\r\\n                <a href=\\\"javascript://\\\"\\r\\n                   (click)=\\\"edit(title)\\\"\\r\\n                   *ngIf=\\\"permission.edit; else noEditTemplate\\\">{{ title.name }}</a>\\r\\n                <ng-template #noEditTemplate>\\r\\n                    {{ title.name }}\\r\\n                </ng-template>\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\">{{ title.shortName }}</td>\\r\\n            <td class=\\\"middle\\\">\\r\\n                <span class=\\\"badge\\\"\\r\\n                      [class.badge-success]=\\\"title.isActive\\\"\\r\\n                      [class.badge-danger]=\\\"!title.isActive\\\">{title.activeStatus, select, active {Active} inActive {Inactive}}</span>\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\">{{ title.description }}</td>\\r\\n            <td class=\\\"center middle w150\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n                <ghm-button\\r\\n                    *ngIf=\\\"permission.edit\\\"\\r\\n                    icon=\\\"fa fa-edit\\\" classes=\\\"btn btn-primary btn-sm\\\"\\r\\n                    (clicked)=\\\"edit(title)\\\"></ghm-button>\\r\\n                <ghm-button\\r\\n                    *ngIf=\\\"permission.delete\\\"\\r\\n                    icon=\\\"fa fa-trash-o\\\" classes=\\\"btn btn-danger btn-sm\\\"\\r\\n                    [swal]=\\\"confirmDeleteTitle\\\"\\r\\n                    (confirm)=\\\"delete(title.id)\\\"></ghm-button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\"\\r\\n            (pageClick)=\\\"search($event)\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\"\\r\\n            i18n=\\\"@@title\\\" i18n-pageName pageName=\\\"Title\\\"></ghm-paging>\\r\\n\\r\\n<app-title-form (saveSuccessful)=\\\"search(currentPage)\\\"></app-title-form>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteTitle\\r\\n    i18n-title=\\\"@@confirmDeleteTitle\\\"\\r\\n    i18n-text=\\\"@@confirmDeleteText\\\"\\r\\n    title=\\\"Are you sure for delete this title?\\\"\\r\\n    text=\\\"You can't recover this title after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","﻿import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { Title } from './title.model';\r\nimport { TitleService } from './title.service';\r\nimport { TitleFormComponent } from './title-form/title-form.component';\r\nimport { TitleSearchViewModel } from './models/title-search.viewmodel';\r\nimport { DestroySubscribers } from '../../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport { CheckPermission } from '../../../../shareds/decorator/check-permission.decorator';\r\nimport { BaseListComponent } from '../../../../base-list.component';\r\nimport { IPageId, PAGE_ID } from '../../../../configs/page-id.config';\r\nimport { AppService } from '../../../../shareds/services/app.service';\r\nimport { SpinnerService } from '../../../../core/spinner/spinner.service';\r\nimport { UtilService } from '../../../../shareds/services/util.service';\r\nimport { ISearchResult } from '../../../../interfaces/isearch.result';\r\nimport { FilterLink } from '../../../../shareds/models/filter-link.model';\r\n\r\n@Component({\r\n    selector: 'app-title-component',\r\n    templateUrl: './title.component.html',\r\n    providers: [Location, {provide: LocationStrategy, useClass: PathLocationStrategy}]\r\n})\r\n\r\n@DestroySubscribers()\r\n@CheckPermission()\r\n\r\nexport class TitleComponent extends BaseListComponent<TitleSearchViewModel> implements OnInit {\r\n    @ViewChild(TitleFormComponent) titleFormComponent: TitleFormComponent;\r\n    isActive?: boolean;\r\n    isManager?: boolean;\r\n    isMultiple?: boolean;\r\n    positionId?: number;\r\n    title = new Title();\r\n    titles: Title[];\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private location: Location,\r\n                private appService: AppService,\r\n                private spinnerService: SpinnerService,\r\n                private titleService: TitleService,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private router: Router,\r\n                private route: ActivatedRoute) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.HR, this.pageId.TITLE, 'Quản lý chức danh', 'Danh sách chức danh');\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: ISearchResult<TitleSearchViewModel> }) => {\r\n                const data = result.data;\r\n                this.totalRows = data.totalRows;\r\n                return data.items;\r\n            })\r\n        );\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(queryParam => {\r\n                if (queryParam.isActive) {\r\n                    this.isActive = !!queryParam.isActive;\r\n                }\r\n                if (queryParam.page) {\r\n                    this.currentPage = parseInt(queryParam.page);\r\n                }\r\n                if (queryParam.pageSize) {\r\n                    this.pageSize = parseInt(queryParam.pageSize);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.renderFilterLink();\r\n        this.isSearching = true;\r\n        this.listItems$ = this.titleService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((data: ISearchResult<TitleSearchViewModel>) => {\r\n                    this.totalRows = data.totalRows;\r\n                    return data.items;\r\n                }));\r\n    }\r\n\r\n    refresh() {\r\n        this.keyword = '';\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    add() {\r\n        this.titleFormComponent.add();\r\n    }\r\n\r\n    edit(title: Title) {\r\n        this.titleFormComponent.edit(title);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.titleService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(this.currentPage);\r\n                return;\r\n            });\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = '/organization/titles';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('pageId', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","﻿import { TitleTranslation } from './models/title-translation.model';\r\n\r\nexport class Title {\r\n    id: string;\r\n    name: string;\r\n    shortName: string;\r\n    description: string;\r\n    isActive: boolean;\r\n    concurrencyStamp: string;\r\n    modelTranslations: TitleTranslation[];\r\n\r\n    constructor(name?: string, shortName?: string, description?: string, isActive?: boolean) {\r\n        this.name = name;\r\n        this.shortName = shortName;\r\n        this.description = description;\r\n        this.isActive = isActive ? isActive : true;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"nh-tree-dropdown\\\">\\r\\n    <button class=\\\"nh-tree-label btn btn-default text-ellipsis\\\" type=\\\"button\\\" (click)=\\\"dropdownButtonClick()\\\">\\r\\n        {{ selectTitle }}\\r\\n        <span class=\\\"caret\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"nh-content-wrapper\\\" [hidden]=\\\"!isShow\\\"\\r\\n         [style.width]=\\\"width + 'px'\\\">\\r\\n        <ul class=\\\"nh-tree-default-value\\\">\\r\\n            <li class=\\\"center\\\"><a href=\\\"javascript://\\\" (click)=\\\"selectDefaultNode()\\\">{{ title }}</a></li>\\r\\n        </ul>\\r\\n        <div class=\\\"nh-tree-content\\\">\\r\\n            <nh-tree\\r\\n                [data]=\\\"data\\\"\\r\\n                [isMultiple]=\\\"isMultiple\\\"\\r\\n                [selectedIds]=\\\"value\\\"\\r\\n                (nodeSelected)=\\\"onNodeSelected($event)\\\"\\r\\n                (nodeExpanded)=\\\"onNodeExpanded($event)\\\"\\r\\n            ></nh-tree>\\r\\n        </div>\\r\\n        <div class=\\\"nh-tree-footer\\\" *ngIf=\\\"isMultiple\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"acceptButtonClick()\\\">\\r\\n                {{ acceptText }}\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"cancelButtonClick()\\\">\\r\\n                {{ cancelText }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","﻿import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    ElementRef,\r\n    OnInit,\r\n    EventEmitter,\r\n    forwardRef,\r\n    ViewEncapsulation,\r\n    HostListener\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport * as _ from 'lodash';\r\nimport { TreeData } from '../../../view-model/tree-data';\r\n\r\n@Component({\r\n    selector: 'nh-dropdown-tree',\r\n    templateUrl: './nh-dropdown-tree.component.html',\r\n    styleUrls: ['./nh-tree.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => NHDropdownTreeComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class NHDropdownTreeComponent implements OnInit, ControlValueAccessor {\r\n    @Input() isMultiple = false;\r\n    @Input() title = '-- Nhập nội dung --';\r\n    @Input() selectedText = '';\r\n    @Input() width = 250;\r\n    @Input() acceptText = 'Đồng ý';\r\n    @Input() cancelText = 'Hủy bỏ';\r\n\r\n    @Output() accepted = new EventEmitter();\r\n    @Output() canceled = new EventEmitter();\r\n    @Output() buttonClicked = new EventEmitter();\r\n    @Output() nodeExpanded = new EventEmitter();\r\n    @Output() nodeSelected = new EventEmitter();\r\n\r\n    isShow = false;\r\n    selectedTexts: string[] = [];\r\n    selectTitle = '-- Nhập nội dung --';\r\n    listSelected: TreeData[] = [];\r\n\r\n    private _value: string | number;\r\n    private _data: TreeData[];\r\n\r\n    constructor(private el: ElementRef) {\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    @Input()\r\n    set value(value: string | number) {\r\n        this._value = value;\r\n        this.setTitle();\r\n    }\r\n\r\n    @Input()\r\n    set data(value: TreeData[]) {\r\n        this._data = value;\r\n        this.setTitle();\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    propagateChange: any = () => {\r\n    };\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    writeValue(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    onClick(event) {\r\n        if (!this.el.nativeElement.contains(event.target)) {\r\n            // or some similar check\r\n            this.isShow = false;\r\n        }\r\n    }\r\n\r\n    acceptButtonClick() {\r\n        this.isShow = false;\r\n        this.accepted.emit(this.listSelected);\r\n        const selectedNodeName = _(this.listSelected)\r\n            .map('text')\r\n            .value()\r\n            .toString();\r\n        this.selectTitle = selectedNodeName ? selectedNodeName : this.title;\r\n    }\r\n\r\n    cancelButtonClick() {\r\n        this.canceled.emit();\r\n        this.isShow = false;\r\n    }\r\n\r\n    expandButtonClick() {\r\n    }\r\n\r\n    dropdownButtonClick() {\r\n        setTimeout(() => {\r\n            this.isShow = !this.isShow;\r\n            if (!this.isMultiple) {\r\n                this.buttonClicked.emit(this.isShow);\r\n            }\r\n        });\r\n    }\r\n\r\n    onNodeSelected(node: TreeData) {\r\n        if (!this.isMultiple) {\r\n            this.isShow = false;\r\n            this.selectTitle = node.text;\r\n            this.propagateChange(node.id);\r\n            this.nodeSelected.emit(node);\r\n        } else {\r\n            if (node.isSelected) {\r\n                const isExists = _.find(this.listSelected, item => {\r\n                    return item.id === node.id;\r\n                });\r\n                if (!isExists) {\r\n                    this.listSelected.push(node);\r\n                }\r\n            } else {\r\n                _.remove(this.listSelected, node);\r\n            }\r\n        }\r\n    }\r\n\r\n    onNodeExpanded(node: TreeData) {\r\n        this.nodeExpanded.emit(node);\r\n    }\r\n\r\n    selectDefaultNode() {\r\n        this.isShow = false;\r\n        this.selectTitle = this.title;\r\n        this.nodeSelected.emit(null);\r\n        this.propagateChange(null);\r\n        if (this.isMultiple) {\r\n            this.accepted.emit(null);\r\n        }\r\n    }\r\n\r\n    private getNodesSelected(data: TreeData[], parentId?: any) {\r\n        const listNodes = _.filter(data, (node: TreeData) => {\r\n            return node.parentId === parentId;\r\n        });\r\n        if (listNodes) {\r\n            _.each(listNodes, (node: TreeData) => {\r\n                if (this.value === node.id) {\r\n                    this.selectedTexts.push(node.text);\r\n                } else {\r\n                    this.getNodesSelected(node.children, node.id);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private getSelectedNode(data: TreeData[]) {\r\n        _.each(data, (node: TreeData) => {\r\n            if (node.id === this.value) {\r\n                this.selectTitle = node.text;\r\n                return false;\r\n            } else {\r\n                this.selectTitle = this.title;\r\n                this.getSelectedNode(node.children);\r\n            }\r\n        });\r\n    }\r\n\r\n    private setTitle() {\r\n        if (this.isMultiple) {\r\n            this.getNodesSelected(this.data, null);\r\n            this.selectTitle = this.selectedTexts && this.selectedTexts.length > 0\r\n                ? this.selectedTexts.join()\r\n                : this.title;\r\n        } else {\r\n            this.getSelectedNode(this.data);\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<ul class=\\\"nh-tree nh-root-tree\\\">\\r\\n    <ng-template #recursiveTree let-data>\\r\\n        <li *ngFor=\\\"let node of data\\\"\\r\\n            [class.selected]=\\\"node.isSelected\\\">\\r\\n            <i class=\\\"nh-tree-icon\\\"\\r\\n               (click)=\\\"expand(node)\\\"\\r\\n               [class.nh-tree-loading]=\\\"node.isLoading && node.childCount && node.childCount > 0\\\"\\r\\n               [class.nh-tree-node-close]=\\\"!node.state.opened && ((node.childCount && node.childCount > 0)\\r\\n                   || (node.children && node.children.length > 0))\\\"\\r\\n               [class.nh-tree-node-open]=\\\"node.state.opened && ((node.childCount && node.childCount > 0)\\r\\n                   || (node.children && node.children.length > 0))\\\"\\r\\n            ></i>\\r\\n            <a href=\\\"javascript://\\\" (click)=\\\"selectNode(node)\\\" [attr.title]=\\\"node.text\\\">\\r\\n                <i class=\\\"nh-tree-icon\\\"\\r\\n                   [ngClass]=\\\"node.icon ? node.icon + ' nh-custom-icon' : 'nh-tree-icon-folder'\\\"></i>\\r\\n                {{ node.text }}\\r\\n            </a>\\r\\n            <ul *ngIf=\\\"node.children.length > 0\\\" class=\\\"sub-tree\\\"\\r\\n                [@toogleTreeSubmenu]=\\\"node.state.opened ? 'sub-tree-open' : 'sub-tree-close'\\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"recursiveTree; context:{ $implicit: node.children }\\\"></ng-container>\\r\\n            </ul>\\r\\n        </li>\\r\\n    </ng-template>\\r\\n    <ng-container *ngTemplateOutlet=\\\"recursiveTree; context:{ $implicit: data }\\\"></ng-container>\\r\\n</ul>\\r\\n\"","﻿import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewEncapsulation,\r\n    OnChanges,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport {\r\n    trigger,\r\n    state,\r\n    style,\r\n    transition,\r\n    animate\r\n} from '@angular/animations';\r\nimport * as _ from 'lodash';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TreeData } from '../../../view-model/tree-data';\r\n\r\n@Component({\r\n    selector: 'nh-tree',\r\n    // template: `\r\n    //     <!-- nh tree -->\r\n    //     <ul [ngClass]=\"!isChildren ? 'nh-tree nh-root-tree' : 'sub-tree'\"\r\n    //         [@toogleTreeSubmenu]=\"isOpen ? 'sub-tree-open' : 'sub-tree-close'\">\r\n    //         <li class=\"nh-tree-node\" *ngFor=\"let node of data\"\r\n    //             [class.selected]=\"node.isSelected\">\r\n    //             <i class=\"nh-tree-icon\"\r\n    //                (click)=\"expand(node)\"\r\n    //                [class.nh-tree-loading]=\"node.isLoading && node.childCount && node.childCount > 0\"\r\n    //                [class.nh-tree-node-close]=\"!node.state.opened && ((node.childCount && node.childCount > 0)\r\n    //                || (node.children && node.children.length > 0))\"\r\n    //                [class.nh-tree-node-open]=\"node.state.opened && ((node.childCount && node.childCount > 0)\r\n    //                || (node.children && node.children.length > 0))\"\r\n    //             ></i>\r\n    //             <!--<i class=\"nh-tree-icon nh-icon-checkbox nh-icon-child-check\" *ngIf=\"isMultiple\"></i>-->\r\n    //             <!-- display when has child -->\r\n    //             <a href=\"javascript://\" (click)=\"selectNode(node)\" [attr.title]=\"node.text\">\r\n    //                 <i class=\"nh-tree-icon\"\r\n    //                    [ngClass]=\"node.icon ? node.icon + ' nh-custom-icon' : 'nh-tree-icon-folder'\"></i> {{ node.text\r\n    //                 }}\r\n    //             </a>\r\n    //             <nh-tree [data]=\"node.children\" [isChildren]=\"true\" [isOpen]=\"node.state.opened\"\r\n    //                      [isMultiple]=\"isMultiple\"\r\n    //                      [lazyLoadURL]=\"lazyLoadURL\"\r\n    //                      [selectedIds]=\"selectedIds\"\r\n    //                      (onSelectNode)=\"onSelectNode.emit($event)\"></nh-tree>\r\n    //         </li>\r\n    //     </ul>\r\n    // `,\r\n    templateUrl: './nh-tree.component.html',\r\n    styleUrls: ['./nh-tree.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [\r\n        trigger('toogleTreeSubmenu', [\r\n            state(\r\n                'sub-tree-open',\r\n                style({\r\n                    height: '*',\r\n                    opacity: '1',\r\n                    display: 'block'\r\n                })\r\n            ),\r\n            state(\r\n                'sub-tree-close',\r\n                style({\r\n                    height: '0',\r\n                    opacity: '0',\r\n                    display: 'none'\r\n                })\r\n            ),\r\n            transition('sub-tree-open => sub-tree-close', [\r\n                animate(\r\n                    150,\r\n                    style({\r\n                        height: '0'\r\n                    })\r\n                )\r\n            ]),\r\n            transition('sub-tree-close => sub-tree-open', [\r\n                animate(\r\n                    150,\r\n                    style({\r\n                        height: '*'\r\n                    })\r\n                )\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class NHTreeComponent implements OnInit, OnChanges {\r\n    // @Input() data: TreeData[];\r\n    @Input() isMultiple = false;\r\n    @Input() isChildren = false;\r\n    @Input() isOpen = true;\r\n    @Input() lazyLoadURL;\r\n    // @Input() selectedIds = [];\r\n\r\n    @Output() nodeSelected = new EventEmitter();\r\n    @Output() nodeExpanded = new EventEmitter();\r\n\r\n    private _data: TreeData[] = [];\r\n    private _selectedIds: string[] | number[] = [];\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    @Input()\r\n    set data(value: TreeData[]) {\r\n        this._data = _.cloneDeep(value);\r\n        setTimeout(() => {\r\n            this.updateSelectedStatus(this.data);\r\n        });\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    @Input()\r\n    set selectedIds(value: string[] | number[]) {\r\n        this._selectedIds = _.cloneDeep(value);\r\n        setTimeout(() => {\r\n            this.updateSelectedStatus(this.data);\r\n        });\r\n    }\r\n\r\n    get selectedIds() {\r\n        return this._selectedIds;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    selectNode(node: TreeData) {\r\n        if (!this.isMultiple) {\r\n            this.resetSelectedNote(this.data, null);\r\n            node.isSelected = true;\r\n        } else {\r\n            node.isSelected = !node.isSelected;\r\n        }\r\n        this.nodeSelected.emit(node);\r\n    }\r\n\r\n    expand(node: TreeData) {\r\n        if (this.lazyLoadURL && node.children.length === 0) {\r\n            node.isLoading = true;\r\n            const childrens = this.http.get(`${this.lazyLoadURL}${node.id}`);\r\n            childrens.subscribe((result: any) => {\r\n                node.isLoading = false;\r\n                node.children = result;\r\n            });\r\n        }\r\n        node.state.opened = !node.state.opened;\r\n        this.nodeExpanded.emit(node);\r\n    }\r\n\r\n    private resetSelectedNote(treeNodes: TreeData[], parentId?: number) {\r\n        if (!treeNodes || treeNodes.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        _.each(treeNodes, (node: TreeData) => {\r\n            node.isSelected = false;\r\n\r\n            if (node.parentId === parentId) {\r\n                _.each(node.children, (item: TreeData) => {\r\n                    item.isSelected = false;\r\n                    this.resetSelectedNote(item.children, item.id);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateSelectedStatus(nodes: TreeData[], parentId: string | number = null) {\r\n        const parentNodes = _.filter(nodes, (node: TreeData) => {\r\n            return node.parentId === parentId;\r\n        });\r\n        if (parentNodes && parentNodes.length > 0) {\r\n            _.each(parentNodes, (nodeItem: TreeData) => {\r\n                nodeItem.isSelected =\r\n                    this.selectedIds &&\r\n                    this.selectedIds.length > 0 &&\r\n                    this.selectedIds\r\n                        .toString()\r\n                        .indexOf(nodeItem.id.toString()) > -1;\r\n\r\n                this.updateSelectedStatus(nodeItem.children, nodeItem.id);\r\n            });\r\n        }\r\n    }\r\n}\r\n","﻿import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n// Component\r\nimport { NHTreeComponent } from \"./nh-tree.component\";\r\nimport { NHDropdownTreeComponent } from \"./nh-dropdown-tree.component\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        NHTreeComponent, NHDropdownTreeComponent\r\n    ],\r\n    exports: [NHTreeComponent, NHDropdownTreeComponent]\r\n})\r\n\r\nexport class NHTreeModule { }\r\n","module.exports = \"ul.nh-tree-default-value {\\n  list-style: none;\\n  border-bottom: 1px solid #ddd;\\n  padding: 6px 0;\\n  margin-bottom: 0; }\\n\\nul.nh-tree {\\n  padding-left: 0;\\n  margin: 0;\\n  list-style-type: none;\\n  list-style-image: none;\\n  width: 100%;\\n  overflow: auto; }\\n\\nul.nh-tree * {\\n    padding: 0;\\n    margin: 0; }\\n\\nul.nh-tree.nh-root-tree > li {\\n    margin-right: 0; }\\n\\nul.nh-tree .nh-tree-icon, ul.nh-tree .nh-tree-node {\\n    background-image: url(\\\"/assets/images/32px.png\\\");\\n    background-repeat: no-repeat; }\\n\\nul.nh-tree li {\\n    display: block;\\n    min-height: 24px;\\n    line-height: 24px;\\n    margin-left: 24px;\\n    min-width: 24px;\\n    white-space: nowrap; }\\n\\nul.nh-tree li.nh-tree-node {\\n      background-position: -292px -4px;\\n      background-repeat: repeat-y; }\\n\\nul.nh-tree li.selected > a {\\n      background-color: #007455;\\n      color: white;\\n      cursor: auto; }\\n\\nul.nh-tree li.selected > a i.nh-custom-icon {\\n        background: #007455;\\n        color: #fff; }\\n\\nul.nh-tree li:last-child {\\n      background: none !important; }\\n\\nul.nh-tree li .nh-tree-icon {\\n      width: 24px;\\n      height: 24px;\\n      line-height: 24px;\\n      display: inline-block;\\n      background-position: -68px -4px;\\n      vertical-align: top; }\\n\\nul.nh-tree li .nh-tree-icon:hover {\\n        cursor: pointer; }\\n\\nul.nh-tree li .nh-tree-icon.nh-tree-loading {\\n        background-image: url(\\\"/assets/images/loading.gif\\\");\\n        background-repeat: no-repeat;\\n        background-position: 3px 5px !important; }\\n\\nul.nh-tree li .nh-tree-node-open {\\n      background-position: -132px -4px !important; }\\n\\nul.nh-tree li .nh-tree-node-close {\\n      background-position: -100px -4px; }\\n\\nul.nh-tree li .nh-tree-icon-folder {\\n      background-position: -260px -4px; }\\n\\nul.nh-tree li .nh-tree-icon-folder-open {\\n      background-position: -260px -4px; }\\n\\nul.nh-tree li .nh-icon-checkbox {\\n      background-position: -166px -4px; }\\n\\nul.nh-tree li .hh-icon-checkbox-checked {\\n      background-position: -230px -4px; }\\n\\nul.nh-tree li .nh-icon-child-check {\\n      background-position: -196px -4px; }\\n\\nul.nh-tree li .nh-custom-icon {\\n      background: #fff; }\\n\\nul.nh-tree li a {\\n      line-height: 24px;\\n      height: 24px;\\n      display: inline-block;\\n      color: #000;\\n      white-space: nowrap;\\n      text-overflow: ellipsis;\\n      padding: 0 4px 0 1px;\\n      margin: 0;\\n      vertical-align: top; }\\n\\nul.nh-tree li a:hover {\\n        background-color: #007455;\\n        color: white;\\n        cursor: auto;\\n        text-decoration: none; }\\n\\nul.nh-tree li a:hover i.nh-custom-icon {\\n          background: #007455;\\n          color: #fff; }\\n\\nul.nh-tree li a:active, ul.nh-tree li a:focus, ul.nh-tree li a:visited {\\n        outline: none;\\n        text-decoration: none; }\\n\\n.nh-tree-dropdown {\\n  position: relative; }\\n\\n.nh-tree-dropdown button {\\n    border-radius: 0; }\\n\\n.nh-tree-dropdown .nh-content-wrapper {\\n    position: absolute;\\n    top: 100%;\\n    left: 0;\\n    border: 1px solid #ddd;\\n    min-width: 250px;\\n    box-shadow: 5px 5px rgba(102, 102, 102, 0.1);\\n    margin-bottom: 10px;\\n    background: white;\\n    z-index: 9999;\\n    overflow-x: auto; }\\n\\n.nh-tree-dropdown .nh-content-wrapper .nh-tree-content {\\n      padding: 10px; }\\n\\n.nh-tree-dropdown .nh-content-wrapper .nh-tree-footer {\\n      border-top: 1px solid #ddd;\\n      padding: 10px; }\\n\"","// creating check permission decorator\r\nimport { Router } from '@angular/router';\r\nimport { IPageId } from '../../configs/page-id.config';\r\nimport { AppService } from '../services/app.service';\r\n\r\nexport function CheckPermission() {\r\n    return function (target: any) {\r\n        target.prototype.ngAfterViewInit = function ngOnInitDecorator(this: {\r\n            router: Router,\r\n            pageId: IPageId,\r\n            appService: AppService,\r\n            permission: any\r\n        }) {\r\n            setTimeout(() => {\r\n                this.permission = this.appService.getPermissionByPageId();\r\n                if (!this.permission.view) {\r\n                    this.router.navigateByUrl('/error/permission');\r\n                }\r\n            });\r\n        };\r\n\r\n        // returning the decorated class\r\n        return target;\r\n    };\r\n}\r\n"],"sourceRoot":""}