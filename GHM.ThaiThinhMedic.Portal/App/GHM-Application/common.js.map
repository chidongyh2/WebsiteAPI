{"version":3,"sources":["webpack:///./src/app/modules/hr/organization/office/services/office-position.service.ts","webpack:///./src/app/modules/hr/organization/position/position.service.ts","webpack:///./src/app/modules/hr/organization/title/title.service.ts","webpack:///./src/app/shareds/components/tinymce/tinymce.component.scss","webpack:///./src/app/shareds/components/tinymce/tinymce.component.ts","webpack:///./src/app/shareds/components/tinymce/tinymce.module.ts","webpack:///./src/app/shareds/models/time-object.model.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["﻿import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport {ISearchResult} from '../../../../../interfaces/isearch.result';\r\n\r\n@Injectable()\r\nexport class OfficePositionService {\r\n    url = 'office-position/';\r\n\r\n    constructor( @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n        private http: HttpClient) {\r\n        this.url = `${this.appConfig.HR_API_URL}${this.url}`;\r\n    }\r\n\r\n    insert(titleId: number, officeId: number): Observable<number> {\r\n        return this.http.post(`${this.url}insert`, '', {\r\n            params: new HttpParams()\r\n                .set('titleId', titleId.toString())\r\n                .set('officeId', officeId.toString())\r\n        }) as Observable<number>;\r\n    }\r\n\r\n    delete(titleId: number, officeId: number): Observable<number> {\r\n        return this.http.post(`${this.url}delete`, '', {\r\n            params: new HttpParams()\r\n                .set('titleId', titleId.toString())\r\n                .set('officeId', officeId.toString())\r\n        }) as Observable<number>;\r\n    }\r\n\r\n    searchPositionByOfficeId(keyword: string, officeId: number, page: number, pageSize: number) {\r\n        return this.http.get(`${this.url}office`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('officeId', officeId.toString())\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        });\r\n    }\r\n\r\n    searchOfficeByTitleId(keyword: string, titleId: number, page: number, pageSize: number) {\r\n        return this.http.get(`${this.url}search-by-title-id`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('officeId', titleId.toString())\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        });\r\n    }\r\n    getOfficeTitleTree() {\r\n        return this.http.get(`${this.url}get-office-title-tree`);\r\n    }\r\n}\r\n","﻿import {Inject, Injectable} from '@angular/core';\r\nimport {Resolve, ActivatedRouteSnapshot} from '@angular/router';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Position} from './position.model';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {ISearchResult} from '../../../../interfaces/isearch.result';\r\nimport {IActionResultResponse} from '../../../../interfaces/iaction-result-response.result';\r\nimport {PositionSearchViewModel} from './models/postion-search.viewmodel';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {PositionDetailViewModel} from './models/position-detail.model';\r\nimport {TitleSearchForSelectViewModel} from '../title/title-search-for-select.viewmodel';\r\nimport {PositionSearchForSelectViewModel} from './models/posititonSearchForSelectViewModel';\r\n\r\n@Injectable()\r\nexport class PositionService implements Resolve<any> {\r\n    url = 'positions/';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n        this.url = `${this.appConfig.HR_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.queryParams;\r\n        return this.search(queryParams.keyword, queryParams.isManager, queryParams.isMultiple, queryParams.isActive,\r\n            queryParams.page, queryParams.pageSize);\r\n    }\r\n\r\n    search(keyword: string, isManager?: boolean, isMultiple?: boolean, isActive?: boolean, page: number = 1,\r\n           pageSize: number = 20): Observable<ISearchResult<PositionSearchViewModel>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isManager', isManager !== undefined && isManager != null ? isManager.toString() : '')\r\n                .set('isMultiple', isMultiple !== undefined && isMultiple != null ? isMultiple.toString() : '')\r\n                .set('isActive', isActive !== undefined && isActive != null ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<ISearchResult<PositionSearchViewModel>>;\r\n    }\r\n\r\n    getAll(): Observable<any> {\r\n        return this.http.get(`${this.url}`);\r\n    }\r\n\r\n    getDetail(id: string): Observable<IActionResultResponse<PositionDetailViewModel>> {\r\n        return this.http.get(`${this.url}${id}`) as Observable<IActionResultResponse<PositionDetailViewModel>>;\r\n    }\r\n\r\n    insert(position: Position, officeIds: number[]): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}`, {\r\n            isManager: position.isManager,\r\n            isMultiple: position.isMultiple,\r\n            isActive: position.isActive,\r\n            titleId: position.titleId,\r\n            positionTranslations: position.modelTranslations,\r\n            officeIds: officeIds\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    update(position: Position, officeIds: number[]): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}${position.id}`, {\r\n            isManager: position.isManager,\r\n            isMultiple: position.isMultiple,\r\n            isActive: position.isActive,\r\n            titleId: position.titleId,\r\n            concurrencyStamp: position.concurrencyStamp,\r\n            positionTranslations: position.modelTranslations,\r\n            officeIds: officeIds\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    delete(id: string): Observable<IActionResultResponse> {\r\n        return this.http.delete(`${this.url}${id}`).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    getTitleByPositionId(id: string): Observable<IActionResultResponse<TitleSearchForSelectViewModel>> {\r\n        return this.http.get(`${this.url}title/${id}`) as Observable<IActionResultResponse<TitleSearchForSelectViewModel>>;\r\n    }\r\n\r\n    getAllActivated(): Observable<PositionSearchForSelectViewModel[]> {\r\n        return this.http.get(`${this.url}activated`) as Observable<PositionSearchForSelectViewModel[]>;\r\n    }\r\n}\r\n","﻿import { Inject, Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Title } from './title.model';\r\nimport { TitleSearchViewModel } from './models/title-search.viewmodel';\r\nimport { map } from 'rxjs/operators';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../configs/app.config';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ISearchResult } from '../../../../interfaces/isearch.result';\r\nimport { IActionResultResponse } from '../../../../interfaces/iaction-result-response.result';\r\nimport { TitleDetailViewModel } from './models/title-detail.viewmodel';\r\nimport { TitleSearchForSelectViewModel } from './title-search-for-select.viewmodel';\r\n\r\n@Injectable()\r\nexport class TitleService implements Resolve<any> {\r\n    url = 'titles/';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n        this.url = `${this.appConfig.HR_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.queryParams;\r\n        return this.search(queryParams.keyword, queryParams.isActive, queryParams.page, queryParams.pageSize);\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page: number = 1,\r\n           pageSize: number = 20): Observable<ISearchResult<TitleSearchViewModel>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }).pipe(map((result: ISearchResult<TitleSearchViewModel>) => {\r\n            result.items.forEach((item: TitleSearchViewModel) => {\r\n                item.activeStatus = item.isActive ? 'active' : 'inActive';\r\n            });\r\n            return result;\r\n        })) as Observable<ISearchResult<TitleSearchViewModel>>;\r\n    }\r\n\r\n    getAllActivated(): Observable<TitleSearchForSelectViewModel[]> {\r\n        return this.http.get(`${this.url}activated`) as Observable<TitleSearchForSelectViewModel[]>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<IActionResultResponse<TitleDetailViewModel>> {\r\n        return this.http.get(`${this.url}${id}`) as Observable<IActionResultResponse<TitleDetailViewModel>>;\r\n    }\r\n\r\n    insert(title: Title): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}`, {\r\n            isActive: title.isActive,\r\n            titleTranslations: title.modelTranslations\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    update(id: string, title: Title): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}${id}`, {\r\n            concurrencyStamp: title.concurrencyStamp,\r\n            isActive: title.isActive,\r\n            titleTranslations: title.modelTranslations\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    delete(id: string): Observable<IActionResultResponse> {\r\n        return this.http.delete(`${this.url}${id}`, {\r\n            params: new HttpParams()\r\n                .set('id', id.toString())\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n}\r\n","module.exports = \"div.tinymce-editor {\\n  height: auto !important; }\\n  div.tinymce-editor p {\\n    margin: 0 0 !important; }\\n  .mce-fullscreen {\\n  margin-top: 50px !important;\\n  border: 0;\\n  padding: 0;\\n  margin: 0;\\n  overflow: hidden;\\n  height: 100%; }\\n\"","import {\r\n    Component,\r\n    OnDestroy,\r\n    AfterViewInit,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    forwardRef,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\ndeclare var tinymce: any;\r\n\r\n@Component({\r\n    encapsulation: ViewEncapsulation.None,\r\n    selector: 'tinymce',\r\n    template: `\r\n        <div class=\"form-control tinymce-editor\" id=\"{{elementId}}\" *ngIf=\"inline\"\r\n             [ngStyle]=\"{'height': height + 'px'}\">\r\n            <span [innerHTML]=\"content\"></span>\r\n        </div>\r\n        <textarea *ngIf=\"!inline\" id=\"{{elementId}}\" [ngStyle]=\"{'height': height + 'px'}\"\r\n                  value=\"{{content}}\"></textarea>\r\n    `,\r\n    styleUrls: ['./tinymce.component.scss'],\r\n    providers: [\r\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TinymceComponent), multi: true }\r\n    ]\r\n})\r\nexport class TinymceComponent implements AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    @Input() elementId: string;\r\n    @Input() height: number;\r\n    @Input() inline = false;\r\n    @Input() menu = {\r\n        file: { title: 'File', items: 'newdocument | print' },\r\n        edit: { title: 'Edit', items: 'undo redo | cut copy paste pastetext | selectall' },\r\n        // insert: {title: 'Insert', items: 'link media | template hr '},\r\n        view: { title: 'View', items: 'visualaid | preview | fullscreen ' },\r\n        format: {\r\n            title: 'Format',\r\n            items: 'bold italic underline strikethrough superscript subscript | formats | removeformat '\r\n        },\r\n        table: { title: 'Table', items: 'inserttable tableprops deletetable | cell row column' },\r\n        tools: { title: 'Tools', items: 'code ' }\r\n    };\r\n    @Output() onEditorKeyup = new EventEmitter<any>();\r\n    @Output() onChange = new EventEmitter<any>();\r\n    editor;\r\n    private _content;\r\n    get content() {\r\n        return this._content;\r\n    }\r\n\r\n    @Input()\r\n    set content(val) {\r\n        this._content = val;\r\n    }\r\n\r\n    propagateChange: any = () => {\r\n    };\r\n\r\n    constructor() {\r\n        this.elementId = Date.now().toString();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initEditor();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        tinymce.remove(`${this.elementId}`);\r\n    }\r\n\r\n    initEditor() {\r\n        setTimeout(() => {\r\n            tinymce.remove(`#${this.elementId}`);\r\n            tinymce.init({\r\n                selector: `#${this.elementId}`,\r\n                plugins: ['link', 'autolink', 'paste', 'table', 'textcolor', 'print', 'preview', 'spellchecker',\r\n                    'colorpicker', 'fullscreen', 'code', 'lists', 'emoticons'],\r\n                toolbar: `bold italic | fontselect fontsizeselect | hr alignleft aligncenter alignright alignjustify\r\n                        | bullist numlist outdent indent | link image | insertfile undo redo | forecolor backcolor`,\r\n                fontsize_formats: '8pt 9pt 10pt 11pt 12pt 13pt 14pt 18pt 24pt 36pt',\r\n                // skin_url: 'assets/skins/lightgray',\r\n                menu: this.menu,\r\n                inline: this.inline,\r\n                setup: editor => {\r\n                    this.editor = editor;\r\n                    editor.on('keyup', (event) => {\r\n                        const content = editor.getContent();\r\n                        this.content = content;\r\n                        this.propagateChange(content);\r\n                        this.onEditorKeyup.emit({\r\n                            text: editor.getContent({ format: 'text' }),\r\n                            content: this.content\r\n                        });\r\n                    });\r\n                    editor.on('change', (event) => {\r\n                        const contentChange = editor.getContent();\r\n                        this.content = contentChange;\r\n                        this.propagateChange(this.content);\r\n                        this.onChange.emit({\r\n                            text: editor.getContent({ format: 'text' }),\r\n                            content: this.content\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    setContent(content: string) {\r\n        this.content = content;\r\n        const editor = tinymce.get(this.elementId);\r\n        if (editor != null) {\r\n            editor.setContent(this.content != null ? this.content : '');\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    destroy() {\r\n        tinymce.remove(`#${this.elementId}`);\r\n    }\r\n\r\n    writeValue(value) {\r\n        // console.log(value);\r\n        this.content = value;\r\n        // const editor = tinymce.get(this.elementId);\r\n        // if (editor != null) {\r\n        //     editor.setContent(this.content != null ? this.content : '');\r\n        // }\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TinymceComponent } from './tinymce.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [TinymceComponent],\r\n    declarations: [TinymceComponent],\r\n    providers: [],\r\n})\r\n\r\nexport class TinymceModule {\r\n}\r\n","export class TimeObject {\r\n    hour: number;\r\n    minute: number;\r\n    second: number;\r\n\r\n    constructor(hour?: number, minute?: number, second?: number) {\r\n        this.hour = hour;\r\n        this.minute = minute;\r\n        this.second = second;\r\n    }\r\n}\r\n"],"sourceRoot":""}