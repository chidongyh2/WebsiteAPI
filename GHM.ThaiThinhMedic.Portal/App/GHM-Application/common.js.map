{"version":3,"sources":["webpack:///./src/app/modules/banners/models/banner.model.ts","webpack:///./src/app/modules/customer/service/customer.service.ts","webpack:///./src/app/shareds/constants/position.const.ts","webpack:///./src/app/shareds/models/time-object.model.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import {BannerItem} from './banner-items.model';\r\nimport {Positions} from '../../../shareds/constants/position.const';\r\n\r\nexport const BannerType = {\r\n    normal: 0,\r\n    advertising: 1\r\n};\r\n\r\nexport const DisplayType = {\r\n    static: 0,\r\n    slide: 1,\r\n};\r\n\r\nexport const EffectType = {\r\n    fade: 0,\r\n    slideRight: 1,\r\n    slideLeft: 2,\r\n    slideDown: 3,\r\n    slideUp: 4\r\n};\r\n\r\nexport class Banner {\r\n    name: string;\r\n    type: number;\r\n    description: string;\r\n    displayType: number;\r\n    effectType: number;\r\n    isActive: boolean;\r\n    isPopup: boolean;\r\n    position: number;\r\n    concurrencyStamp: string;\r\n    bannerItems: BannerItem[];\r\n\r\n    constructor() {\r\n        this.name = '';\r\n        this.description = '';\r\n        this.isActive = true;\r\n        this.isPopup = false;\r\n        this.displayType = DisplayType.slide;\r\n        this.effectType = EffectType.fade;\r\n        this.type = BannerType.normal;\r\n        this.position = Positions.top;\r\n    }\r\n}\r\n","import { UserContact } from '../../hr/user/models/user-contact.model';\r\n\r\nexport const Gender = {\r\n    // Nam\r\n    male: 1,\r\n    // Nữ.\r\n    female: 0,\r\n    // Khác.\r\n    other: 2\r\n};\r\n\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Customer } from '../model/customer.model';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { CustomerSearchViewModel } from '../model/customer-search.viewmodel';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { CustomerDetailViewModel } from '../model/customer-detail.viewmodel';\r\nimport { PatientContact } from '../model/patient-contact.model';\r\nimport { ContactPerson } from '../model/contact-person.model';\r\nimport { ActionResultViewModel } from '../../../shareds/view-models/action-result.viewmodel';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { finalize } from 'rxjs/internal/operators';\r\nimport { SuggestionViewModel } from '../../../shareds/view-models/SuggestionViewModel';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\n\r\n@Injectable()\r\nexport class CustomerService implements Resolve<Customer> {\r\n    url = 'customers/';\r\n\r\n    constructor(@Inject(APP_CONFIG) appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.PATIENT_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.createDate,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string, createDate?: Date, page: number = 1,\r\n           pageSize: number = 20): Observable<ISearchResult<CustomerSearchViewModel>> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword ? keyword : '')\r\n            .set('createDate', createDate ? createDate.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : '20');\r\n\r\n        return this.http.get(`${this.url}`, {\r\n            params: params\r\n        }).pipe(map((result: ISearchResult<CustomerSearchViewModel>) => {\r\n            result.items.forEach((item: CustomerSearchViewModel) => {\r\n                item.genderStatus = item.gender === Gender.female ? 'female' :\r\n                    item.gender === Gender.male ? 'male'\r\n                        : 'other';\r\n            });\r\n            return result;\r\n        })) as Observable<ISearchResult<CustomerSearchViewModel>>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<CustomerDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}${id}`, {})\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel<CustomerDetailViewModel>>;\r\n    }\r\n\r\n    insert(customer: Customer): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, {\r\n            fullName: customer.fullName,\r\n            birthday: customer.birthday,\r\n            gender: customer.gender,\r\n            patientResourceId: customer.patientResourceId,\r\n            idCardNumber: customer.idCardNumber,\r\n            jobId: customer.jobId,\r\n            nationalId: customer.nationalId,\r\n            ethnicId: customer.ethnicId,\r\n            religionId: customer.religionId,\r\n            provinceId: customer.provinceId,\r\n            districtId: customer.districtId,\r\n            concurrencyStamp: customer.concurrencyStamp,\r\n            patientRelativesContacts: customer.contactPersons,\r\n            patientContacts: customer.patientContact,\r\n            address: customer.address,\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, customer: Customer): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${id}`, {\r\n            fullName: customer.fullName,\r\n            birthday: customer.birthday,\r\n            gender: customer.gender,\r\n            patientResourceId: customer.patientResourceId,\r\n            idCardNumber: customer.idCardNumber,\r\n            jobId: customer.jobId,\r\n            nationalId: customer.nationalId,\r\n            ethnicId: customer.ethnicId,\r\n            religionId: customer.religionId,\r\n            provinceId: customer.provinceId,\r\n            districtId: customer.districtId,\r\n            concurrencyStamp: customer.concurrencyStamp,\r\n            address: customer.address,\r\n            patientRelativesContacts: customer.contactPersons,\r\n            patientContacts: customer.patientContact,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}${id}`, {\r\n            params: new HttpParams()\r\n                .set('id', id)\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    insertPatientContact(patientId: string, patientContact: PatientContact): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${patientId}/patientContacts`, patientContact).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updatePatientContact(patientId: string, id: string, patientContact: PatientContact): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${patientId}/patientContacts/${id}`, patientContact, {})\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    deletePatientContact(patientId: string, id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}${patientId}/patientContacts/${id}`, {\r\n            params: new HttpParams()\r\n                .set('id', id)\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    insertContactPerson(patientId: string, contactPerson: ContactPerson): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${patientId}/contactPatients`, {\r\n            patientId: contactPerson.patientId,\r\n            concurrencyStamp: contactPerson.concurrencyStamp,\r\n            fullName: contactPerson.fullName,\r\n            phoneNumber: contactPerson.phoneNumber,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateContactPerson(patientId: string, id: string, contactPerson: ContactPerson): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${patientId}/contactPatients/${id}`, {\r\n            patientId: contactPerson.patientId,\r\n            concurrencyStamp: contactPerson.concurrencyStamp,\r\n            fullName: contactPerson.fullName,\r\n            phoneNumber: contactPerson.phoneNumber\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    deleteContactPerson(patientId: string, id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}${patientId}/contactPatients/${id}`, {\r\n            params: new HttpParams()\r\n                .set('id', id)\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    suggestions(keyword: string): Observable<SuggestionViewModel<string>[]> {\r\n        return this.http\r\n            .get(`${this.url}suggestions`, {\r\n                params: new HttpParams()\r\n                    .set('keyword', keyword ? keyword : '')\r\n            })\r\n            .pipe(map((result: SearchResultViewModel<SuggestionViewModel<string>>) => {\r\n                return result.items;\r\n            })) as Observable<SuggestionViewModel<string>[]>;\r\n    }\r\n}\r\n\r\n","export const Positions = {\r\n    top: 0,\r\n    right: 1,\r\n    bottom: 2,\r\n    left: 3,\r\n    middle: 4\r\n}","export class TimeObject {\r\n    hour: number;\r\n    minute: number;\r\n    second: number;\r\n\r\n    constructor(hour?: number, minute?: number, second?: number) {\r\n        this.hour = hour;\r\n        this.minute = minute;\r\n        this.second = second;\r\n    }\r\n}\r\n"],"sourceRoot":""}