{"version":3,"sources":["webpack:///./src/app/modules/warehouse/product/brand/brand-form/brand-form.component.html","webpack:///./src/app/modules/warehouse/product/brand/brand-form/brand-form.component.ts","webpack:///./src/app/modules/warehouse/product/brand/brand.component.html","webpack:///./src/app/modules/warehouse/product/brand/brand.component.ts","webpack:///./src/app/modules/warehouse/product/brand/model/brand.model.ts","webpack:///./src/app/modules/warehouse/product/brand/services/brand.service.ts","webpack:///./src/app/modules/warehouse/product/contact/contact-form/contact-form.component.html","webpack:///./src/app/modules/warehouse/product/contact/contact-form/contact-form.component.ts","webpack:///./src/app/modules/warehouse/product/contact/contact.component.html","webpack:///./src/app/modules/warehouse/product/contact/contact.component.ts","webpack:///./src/app/modules/warehouse/product/contact/model/contact.model.ts","webpack:///./src/app/modules/warehouse/product/contact/service/contact.service.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-detail/product-attribute-detail.component.html","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-detail/product-attribute-detail.component.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-form/models/product-attribute.model.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-form/product-attribute-form.component.html","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-form/product-attribute-form.component.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-suggestion/product-attribute-suggestion.component.html","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-suggestion/product-attribute-suggestion.component.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-value-suggestion/product-attribute-value-suggestion.component.html","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-value-suggestion/product-attribute-value-suggestion.component.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-value/models/product-attribute-value.model.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-value/product-attribute-value-form/product-attribute-value-form.component.html","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-value/product-attribute-value-form/product-attribute-value-form.component.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-value/product-attribute-value.component.html","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute-value/product-attribute-value.component.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute.component.html","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute.component.ts","webpack:///./src/app/modules/warehouse/product/product-attribute/product-attribute.service.ts","webpack:///./src/app/modules/warehouse/product/product-category/model/product-category-translation.model.ts","webpack:///./src/app/modules/warehouse/product/product-category/model/product-category.model.ts","webpack:///./src/app/modules/warehouse/product/product-category/product-category-attribute/product-category-attribute.model.ts","webpack:///./src/app/modules/warehouse/product/product-category/product-category-attribute/product-category-attribute.viewmodel.ts","webpack:///./src/app/modules/warehouse/product/product-category/product-category-form/product-category-form.component.html","webpack:///./src/app/modules/warehouse/product/product-category/product-category-form/product-category-form.component.ts","webpack:///./src/app/modules/warehouse/product/product-category/product-category-select/product-category-select.component.html","webpack:///./src/app/modules/warehouse/product/product-category/product-category-select/product-category-select.component.scss","webpack:///./src/app/modules/warehouse/product/product-category/product-category-select/product-category-select.component.ts","webpack:///./src/app/modules/warehouse/product/product-category/product-category.component.html","webpack:///./src/app/modules/warehouse/product/product-category/product-category.component.ts","webpack:///./src/app/modules/warehouse/product/product-category/service/product-category-service.ts","webpack:///./src/app/modules/warehouse/product/product-routing.module.ts","webpack:///./src/app/modules/warehouse/product/product-select/product-select.component.html","webpack:///./src/app/modules/warehouse/product/product-select/product-select.component.scss","webpack:///./src/app/modules/warehouse/product/product-select/product-select.component.ts","webpack:///./src/app/modules/warehouse/product/product.module.ts","webpack:///./src/app/modules/warehouse/product/product/contants/product-status.const.ts","webpack:///./src/app/modules/warehouse/product/product/model/product-image.model.ts","webpack:///./src/app/modules/warehouse/product/product/model/product-translation.model.ts","webpack:///./src/app/modules/warehouse/product/product/model/product.model.ts","webpack:///./src/app/modules/warehouse/product/product/product-detail/product-detail.component.html","webpack:///./src/app/modules/warehouse/product/product/product-detail/product-detail.component.ts","webpack:///./src/app/modules/warehouse/product/product/product-form/product-attribute/model/product-value.model.ts","webpack:///./src/app/modules/warehouse/product/product/product-form/product-attribute/product-form-attribute.component.html","webpack:///./src/app/modules/warehouse/product/product/product-form/product-attribute/product-form-attribute.component.ts","webpack:///./src/app/modules/warehouse/product/product/product-form/product-form.component.html","webpack:///./src/app/modules/warehouse/product/product/product-form/product-form.component.ts","webpack:///./src/app/modules/warehouse/product/product/product-form/product-unit/model/product-conversion-unit.model.ts","webpack:///./src/app/modules/warehouse/product/product/product-form/product-unit/model/product-list-unit.model.ts","webpack:///./src/app/modules/warehouse/product/product/product-form/product-unit/model/product-unit.model.ts","webpack:///./src/app/modules/warehouse/product/product/product-form/product-unit/product-unit.component.html","webpack:///./src/app/modules/warehouse/product/product/product-form/product-unit/product-unit.component.ts","webpack:///./src/app/modules/warehouse/product/product/product-suggestion/product-suggestion.component.html","webpack:///./src/app/modules/warehouse/product/product/product-suggestion/product-suggestion.component.ts","webpack:///./src/app/modules/warehouse/product/product/product.component.html","webpack:///./src/app/modules/warehouse/product/product/product.component.ts","webpack:///./src/app/modules/warehouse/product/product/product.scss","webpack:///./src/app/modules/warehouse/product/product/service/product.service.ts","webpack:///./src/app/modules/warehouse/product/product/viewmodel/product-result.viewmodel.ts","webpack:///./src/app/modules/warehouse/product/supplier/model/supplier.model.ts","webpack:///./src/app/modules/warehouse/product/supplier/service/supplier.service.ts","webpack:///./src/app/modules/warehouse/product/supplier/supplier-detail/supplier-detail.component.html","webpack:///./src/app/modules/warehouse/product/supplier/supplier-detail/supplier-detail.component.ts","webpack:///./src/app/modules/warehouse/product/supplier/supplier-form/supplier-form.component.html","webpack:///./src/app/modules/warehouse/product/supplier/supplier-form/supplier-form.component.ts","webpack:///./src/app/modules/warehouse/product/supplier/supplier-suggestion/supplier-suggestion.component.html","webpack:///./src/app/modules/warehouse/product/supplier/supplier-suggestion/supplier-suggestion.component.scss","webpack:///./src/app/modules/warehouse/product/supplier/supplier-suggestion/supplier-suggestion.component.ts","webpack:///./src/app/modules/warehouse/product/supplier/supplier.component.html","webpack:///./src/app/modules/warehouse/product/supplier/supplier.component.ts","webpack:///./src/app/modules/warehouse/product/unit/form/unit-form.component.html","webpack:///./src/app/modules/warehouse/product/unit/form/unit-form.component.ts","webpack:///./src/app/modules/warehouse/product/unit/model/unit-translations.model.ts","webpack:///./src/app/modules/warehouse/product/unit/model/unit.model.ts","webpack:///./src/app/modules/warehouse/product/unit/service/unit.service.ts","webpack:///./src/app/modules/warehouse/product/unit/unit-component.ts","webpack:///./src/app/modules/warehouse/product/unit/unit-suggestion/unit-suggestion.component.html","webpack:///./src/app/modules/warehouse/product/unit/unit-suggestion/unit-suggestion.component.ts","webpack:///./src/app/modules/warehouse/product/unit/unit.component.html","webpack:///./src/app/modules/warehouse/warehouse/service/warehouse.service.ts","webpack:///./src/app/shareds/components/ghm-mask/ghm-currency.pipe.ts","webpack:///./src/app/shareds/components/ghm-mask/ghm-mask.directive.ts","webpack:///./src/app/shareds/components/ghm-mask/ghm-mask.module.ts","webpack:///./src/app/shareds/components/nh-dropdown/nh-dropdown.module.ts","webpack:///./src/app/shareds/components/nh-dropdown/nh-dropdown/nh-dropdown.component.html","webpack:///./src/app/shareds/components/nh-dropdown/nh-dropdown/nh-dropdown.component.scss","webpack:///./src/app/shareds/components/nh-dropdown/nh-dropdown/nh-dropdown.component.ts","webpack:///./src/app/shareds/components/nh-tab/nh-tab.module.ts","webpack:///./src/app/shareds/constants/contact-type.const.ts","webpack:///./src/app/shareds/constants/pattern.const.ts","webpack:///./src/app/shareds/constants/work-status.const.ts","webpack:///./src/app/shareds/pipe/format-number/format-number.module.ts","webpack:///./src/app/shareds/pipe/format-number/format-number.pipe.ts"],"names":[],"mappings":"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","file":"modules-configs-config-module~modules-warehouse-product-product-module~modules-warehouse-warehouse-m~1a8e386e.js","sourcesContent":["module.exports = \"<nh-modal #brandFormModal size=\\\"lg\\\"\\r\\n          (show)=\\\"onModalShow()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header class=\\\"uppercase bold\\\">\\r\\n        {isUpdate, select, 0 {Thêm mới thương hiệu} 1 {Cập nhật thương hiệu} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"form\\\">\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.name\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@brandName\\\" ghmLabel=\\\"Tên thương hiệu\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\"\\r\\n                                       i18n-placeholder=\\\"@@enterBrandPlaceHolder\\\"\\r\\n                                       placeholder=\\\"Nhập thương hiệu\\\">\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.name, select,\\r\\n                                                            required {Tên thương hiệu không được để trống}\\r\\n                                                            maxLength {Tên thương hiệu không được vượt quá 256 ký tự}\\r\\n                                                            pattern {Tên thương hiệu phải là chữ}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.email\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@email\\\" ghmLabel=\\\"Email\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"email\\\"\\r\\n                                       i18n-placeholder=\\\"@@enterEmailPlaceHolder\\\"\\r\\n                                       placeholder=\\\"Enter email\\\">\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.email, select,\\r\\n                                    maxLength {Email không được vượt quá 50 ký tự}\\r\\n                                    pattern {Email không đúng định dạng}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.phoneNumber\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@phoneNumber\\\" ghmLabel=\\\"Số Điện Thoại\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"phoneNumber\\\"\\r\\n                                       i18n-placeholder=\\\"@@enterPhoneNumberPlaceHolder\\\"\\r\\n                                       placeholder=\\\"Nhập số điện thoại\\\">\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.phoneNumber, select,\\r\\n                                    maxLength {Số điện thoại không được vượt quá 50 ký tự}\\r\\n                                    pattern {Định dạng số điện thoại không đúng}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.website\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@website\\\" ghmLabel=\\\"Website\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\" >\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"website\\\"\\r\\n                                       i18n-placeholder=\\\"@@enterWebsitePlaceHolder\\\"\\r\\n                                       placeholder=\\\"Enter website\\\">\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.website, select,\\r\\n                                    maxLength {Địa chỉ website không được vượt quá 50 ký tự}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.address\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@address\\\" ghmLabel=\\\"Địa Chỉ\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <textarea type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                          i18n-placeholder=\\\"@@enterAddressPlaceHolder\\\"\\r\\n                                          placeholder=\\\"Nhập địa chỉ\\\"\\r\\n                                          formControlName=\\\"address\\\"></textarea>\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.address, select, maxLength {Địa chỉ không được vượt quá 500 ký tự}}\\r\\n                            </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.description\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Mô tả\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <textarea type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                          i18n-placeholder=\\\"@@enterDescriptionPlaceHolder\\\"\\r\\n                                          placeholder=\\\"Enter description\\\"\\r\\n                                          formControlName=\\\"description\\\"></textarea>\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.description, select,\\r\\n                                    maxLength {Mô tả không được vượt quá 500 ký tự}}\\r\\n                            </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                                    {model.value.isActive, select, 0 {Chưa kich hoạt} 1 {Kích hoạt}}\\r\\n                                </mat-checkbox>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n               Tiếp tục thêm\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn blue cm-mgr-5\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@Save\\\">Lưu</span>\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Đóng</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {Brand} from '../model/brand.model';\r\nimport {BrandService} from '../services/brand.service';\r\nimport {BrandDetailViewModel} from '../viewmodel/brand-detail.viewmodel';\r\nimport {Pattern} from '../../../../../shareds/constants/pattern.const';\r\n\r\n@Component({\r\n    selector: 'app-product-brand-form',\r\n    templateUrl: './brand-form.component.html'\r\n})\r\n\r\nexport class BrandFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('brandFormModal') brandFormModal: NhModalComponent;\r\n    brand = new Brand();\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private brandService: BrandService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalShow() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.utilService.focusElement('name');\r\n        this.renderForm();\r\n        this.resetForm();\r\n        this.brandFormModal.open();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.utilService.focusElement('name');\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n        this.brandFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        if (isValid) {\r\n            this.brand = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.brandService\r\n                    .update(this.id, this.brand)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.brandFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.brandService\r\n                    .insert(this.brand)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.utilService.focusElement('name');\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.brandFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDetail(id: string) {\r\n        this.subscribers.brandService = this.brandService\r\n            .getDetail(id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<BrandDetailViewModel>) => {\r\n                    const detail = result.data;\r\n                    if (detail) {\r\n                        this.model.patchValue({\r\n                            isActive: detail.isActive,\r\n                            name: detail.name,\r\n                            phoneNumber: detail.phoneNumber,\r\n                            email: detail.email,\r\n                            address: detail.address,\r\n                            website: detail.website,\r\n                            description: detail.description,\r\n                            concurrencyStamp: detail.concurrencyStamp,\r\n                        });\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'phoneNumber', 'email', 'website', 'address', 'description']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxLength', 'pattern']},\r\n            {'phoneNumber': ['pattern', 'maxLength']},\r\n            {'email': ['pattern', 'maxLength']},\r\n            {'address': ['maxLength']},\r\n            {'website': ['maxLength']},\r\n            {'description': ['maxLength']},\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            name: [this.brand.name, [Validators.required, Validators.maxLength(256), Validators.pattern(Pattern.whiteSpace)]],\r\n            phoneNumber: [this.brand.phoneNumber, [Validators.pattern(Pattern.phoneNumber), Validators.maxLength(50)]],\r\n            email: [this.brand.email, [Validators.pattern(Pattern.email), Validators.maxLength(50)]],\r\n            description: [this.brand.description, [Validators.maxLength(500)]],\r\n            address: [this.brand.address, [Validators.maxLength(500)]],\r\n            website: [this.brand.website, [Validators.maxLength(50)]],\r\n            isActive: [this.brand.isActive],\r\n            concurrencyStamp: [this.brand.concurrencyStamp],\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            name: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            website: '',\r\n            isActive: true,\r\n            address: '',\r\n            description: ''\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listBrandPageTitle\\\">Danh sách thương hiệu</span>\\r\\n    <small i18n=\\\"@@productModuleTitle\\\">Quản lý sản phẩm</small>\\r\\n</h1>\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@keywordSearch\\\" i18n-placeholder\\r\\n               placeholder=\\\"Nhập từ khóa tìm kiếm\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'inActive'},{id: true, name: 'Active'}]\\\"\\r\\n            i18n-title=\\\"@@selectStatus\\\"\\r\\n            [title]=\\\"'-- Chọn trạng thái --'\\\"\\r\\n            [value]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"selectIsActive($event)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button class=\\\"btn blue cm-mgr-5\\\" *ngIf=\\\"permission.add\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\"\\r\\n                type=\\\"button\\\">\\r\\n            Thêm\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n<table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">STT</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@brand\\\">Tên Thương Hiệu</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@email\\\">Email</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@address\\\">Số Điện Thoại</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@address\\\">Địa Chỉ</th>\\r\\n        <th class=\\\"middle center\\\" i18n=\\\"@@status\\\">Trạng Thái</th>\\r\\n        <th class=\\\"middle text-right w150\\\" i18n=\\\"@@action\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Thao Tác</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listBrand; let i = index\\\"\\r\\n        nhContextMenuTrigger\\r\\n        [nhContextMenuTriggerFor]=\\\"nhMenu\\\"\\r\\n        [nhContextMenuData]=\\\"item\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">{{ item.name }}</td>\\r\\n        <td class=\\\"middle\\\">{{item.email}}</td>\\r\\n        <td class=\\\"middle\\\">{{item.phoneNumber}}</td>\\r\\n        <td class=\\\"middle\\\">{{item.address}}</td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            <mat-checkbox color=\\\"primary\\\" [checked]=\\\"item.isActive\\\" (change)=\\\"updateStatus(item)\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"text-right middle\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.edit\\\"\\r\\n                           (click)=\\\"edit(item)\\\"\\r\\n                           i18n=\\\"@@edit\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                            Sửa\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a [swal]=\\\"confirmDeleteBrand\\\"\\r\\n                           (confirm)=\\\"delete(item.id)\\\" i18n=\\\"@@delete\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                            Xóa\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ghm-paging\\r\\n    class=\\\"pull-right\\\"\\r\\n    [totalRows]=\\\"totalRows\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    [pageShow]=\\\"6\\\"\\r\\n    [pageSize]=\\\"pageSize\\\"\\r\\n    (pageClick)=\\\"search($event)\\\"\\r\\n    i18n=\\\"@@productCategory\\\" i18n-pageName\\r\\n    [pageName]=\\\"'Thương Hiệu'\\\">\\r\\n</ghm-paging>\\r\\n\\r\\n<app-product-brand-form (saveSuccessful)=\\\"search(1)\\\"></app-product-brand-form>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteBrand\\r\\n    i18n=\\\"@@confirmDeleteBrand\\\"\\r\\n    i18n-title=\\\"@@confirmTitleDeleteBrand\\\"\\r\\n    i18n-text=\\\"@@confirmTextDeleteBrand\\\"\\r\\n    title=\\\"Bạn có chắc chắn muốn xóa thương hiệu này?\\\"\\r\\n    text=\\\"Bạn không thể khôi phục thương hiệu này sau khi xóa.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Đồng Ý\\\"\\r\\n    cancelButtonText=\\\"Hủy\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n<nh-menu #nhMenu>\\r\\n    <nh-menu-item (clicked)=\\\"edit($event)\\\">\\r\\n        <i class=\\\"fa fa-edit\\\"></i>\\r\\n        <span i18n=\\\"@@edit\\\">Sửa</span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item *ngIf=\\\"permission.delete\\\"\\r\\n                  (clicked)=\\\"confirm($event)\\\">\\r\\n        <i class=\\\"fa fa-edit\\\"></i>\\r\\n        <span i18n=\\\"@@edit\\\">Xóa</span>\\r\\n    </nh-menu-item>\\r\\n</nh-menu>\\r\\n\"","import {BaseListComponent} from '../../../../base-list.component';\r\nimport {BrandSearchViewModel} from './viewmodel/brand-search.viewmodel';\r\nimport {AfterViewInit, Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {IPageId, PAGE_ID} from '../../../../configs/page-id.config';\r\nimport {Location} from '@angular/common';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {FilterLink} from '../../../../shareds/models/filter-link.model';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {HelperService} from '../../../../shareds/services/helper.service';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {BrandService} from './services/brand.service';\r\nimport {BrandFormComponent} from './brand-form/brand-form.component';\r\nimport {SwalComponent} from '@toverux/ngx-sweetalert2';\r\n\r\n@Component({\r\n    selector: 'app-product-brand',\r\n    templateUrl: './brand.component.html',\r\n    providers: [HelperService]\r\n})\r\nexport class BrandComponent extends BaseListComponent<BrandSearchViewModel> implements OnInit, AfterViewInit {\r\n    @ViewChild(BrandFormComponent) brandFormComponent: BrandFormComponent;\r\n    @ViewChild('confirmDeleteBrand') swalConfirmDelete: SwalComponent;\r\n    isActive;\r\n    listBrand: BrandSearchViewModel[];\r\n    brandId;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private location: Location,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private brandService: BrandService,\r\n                private helperService: HelperService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.PRODUCT, this.pageId.BRAND, 'Quản lý thương hiệu', 'Quản lý sản phẩm');\r\n        this.subscribers.data = this.route.data.subscribe((result: { data: SearchResultViewModel<BrandSearchViewModel> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            this.listBrand = data.items;\r\n        });\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.isActive = params.isActive !== null && params.isActive !== '' && params.isActive !== undefined\r\n                ? Boolean(params.isActive) : null;\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.swalConfirmDelete.confirm.subscribe(result => {\r\n            this.delete(this.brandId);\r\n        });\r\n    }\r\n\r\n    searchKeyUp(keyword) {\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderFilterLink();\r\n        this.brandService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((data: SearchResultViewModel<BrandSearchViewModel>) => {\r\n                this.totalRows = data.totalRows;\r\n                this.listBrand = data.items;\r\n            });\r\n    }\r\n\r\n    selectIsActive(value) {\r\n        if (value) {\r\n            this.isActive = value.id;\r\n        } else {\r\n            this.isActive = null;\r\n        }\r\n\r\n        this.search(1);\r\n    }\r\n\r\n    onPageClick(page: number) {\r\n        this.currentPage = page;\r\n        this.search(1);\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    add() {\r\n        this.brandFormComponent.add();\r\n    }\r\n\r\n    edit(brand: BrandSearchViewModel) {\r\n        this.brandFormComponent.edit(brand.id);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.brandService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(1);\r\n            });\r\n    }\r\n\r\n    updateStatus(item: BrandSearchViewModel) {\r\n        this.brandService.updateStatus(item.id, !item.isActive).subscribe((result: ActionResultViewModel) => {\r\n            item.isActive = !item.isActive;\r\n        });\r\n    }\r\n\r\n    confirm(value: BrandSearchViewModel) {\r\n        this.brandId = value.id;\r\n        this.swalConfirmDelete.show();\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = 'products/brands';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","export class Brand {\r\n    name: string;\r\n    isActive: boolean;\r\n    description: string;\r\n    concurrencyStamp: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    website: string;\r\n    address: string;\r\n}\r\n","import {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {Observable} from 'rxjs';\r\nimport {SearchResultViewModel} from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport {SupplierDetailViewModel} from '../../supplier/viewmodel/supplier-detail.viewmodel';\r\nimport {finalize} from 'rxjs/internal/operators';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\nimport {SpinnerService} from '../../../../../core/spinner/spinner.service';\r\nimport {ActivatedRouteSnapshot} from '@angular/router';\r\nimport {Inject} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {BrandSearchViewModel} from '../viewmodel/brand-search.viewmodel';\r\nimport {Brand} from '../model/brand.model';\r\nimport {BrandSuggestionsViewModel} from '../viewmodel/brand-suggestions.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport {BrandDetailViewModel} from '../viewmodel/brand-detail.viewmodel';\r\nimport {NhSuggestion} from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\n\r\nexport class BrandService {\r\n    url = 'api/v1/warehouse/brands';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinceService: SpinnerService,\r\n                private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.isActive,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page: number = 1,\r\n           pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<BrandSearchViewModel>> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword ? keyword : '')\r\n            .set('isActive', isActive !== null && isActive !== undefined ? isActive.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString());\r\n\r\n        return this.http.get(`${this.url}`, {\r\n            params: params\r\n        }) as Observable<SearchResultViewModel<BrandSearchViewModel>>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<BrandDetailViewModel>> {\r\n        this.spinceService.show();\r\n        return this.http.get(`${this.url}/${id}`, {})\r\n            .pipe(finalize(() => {\r\n                this.spinceService.hide();\r\n            }))as Observable<ActionResultViewModel<BrandDetailViewModel>>;\r\n    }\r\n\r\n    insert(brand: Brand): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, brand).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, brand: Brand): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}`, brand).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${id}`, ).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    suggestions(keyword, string, page: number, pageSize: number): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/suggestions`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }).pipe(map((result: SearchResultViewModel<NhSuggestion>) => {\r\n            _.each(result.items, (item: NhSuggestion) => {\r\n                item.isSelected = false;\r\n            });\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    updateStatus(id: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/status/${isActive}`, {}).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #contactFormModal size=\\\"md\\\"\\r\\n          (show)=\\\"onModalShow()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header class=\\\"uppercase bold\\\">\\r\\n        {isUpdate, select, 0 {Thêm mới người liên hệ} 1 {Cập nhật người liên hệ} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"form\\\">\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.fullName\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@contactPersonName\\\" ghmLabel=\\\"Tên Người Liên Hệ\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"  [required]=\\\"true\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\" [formGroup]=\\\"model\\\">\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"fullName\\\" id=\\\"fullName\\\"\\r\\n                                       i18n-placeholder=\\\"@@enterContactFullNamePlaceHolder\\\"\\r\\n                                       placeholder=\\\"Enter contact name\\\">\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.fullName, select,\\r\\n                                                            required {Tên người liên hệ không được để trống}\\r\\n                                                            maxLength {Tên người liên hệ không được vượt quá 256 ký tụ}\\r\\n                                                            pattern {Tên người liên hệ phải là chữ}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.phoneNumber\\\" >\\r\\n                            <label i18n-ghmLabel=\\\"@@phoneNumber\\\" ghmLabel=\\\"Số Điện Thoại\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"  [required]=\\\"true\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                          i18n-placeholder=\\\"@@enterPhoneNumberPlaceHolder\\\"\\r\\n                                          placeholder=\\\"Enter phone number\\\"\\r\\n                                          formControlName=\\\"phoneNumber\\\">\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.phoneNumber, select, required {Số điện thoại không được đê trống}\\r\\n                                    maxLength {Số điện thoại không được vượt quá 50 ký tự}\\r\\n                                                           pattern {Sô điện thoại không đúng định dạng}}\\r\\n                            </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.email\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@email\\\" ghmLabel=\\\"Email\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                          i18n-placeholder=\\\"@@enterEmailPlaceHolder\\\"\\r\\n                                          placeholder=\\\"Enter emal\\\"\\r\\n                                          formControlName=\\\"email\\\">\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.email, select,\\r\\n                                                    maxLength {Email không được vượt quá 50 ký tự}\\r\\n                                                    pattern {Email không đúng định dạng}}\\r\\n                            </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.positionName\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@email\\\" ghmLabel=\\\"Vị Trí\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                          i18n-placeholder=\\\"@@enterPositionPlaceHolder\\\"\\r\\n                                          placeholder=\\\"Nhập vị trí làm việc\\\"\\r\\n                                          formControlName=\\\"positionName\\\">\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.position, select,\\r\\n                                                    maxLength {Vị trí làm việc không được vượt quá 500 ký tự}}\\r\\n                            </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\" *ngIf=\\\"id\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@status\\\" ghmLabel=\\\"Trạng thái\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\" [formGroup]=\\\"model\\\">\\r\\n                                <nh-select\\r\\n                                    [width]=\\\"500\\\"\\r\\n                                    [data]=\\\"listStatus\\\" i18n-title=\\\"@@selectStatus\\\"\\r\\n                                    title=\\\"-- Select status user contact --\\\"\\r\\n                                    formControlName=\\\"status\\\">\\r\\n                                </nh-select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.description\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Mô tả\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <textarea type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                          i18n-placeholder=\\\"@@enterDescriptionPlaceHolder\\\"\\r\\n                                          placeholder=\\\"Nhập mô tả\\\"\\r\\n                                          formControlName=\\\"description\\\"></textarea>\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.description, select,\\r\\n                                                    maxLength {Mô tả không được vượt quá 500 ký tự}}\\r\\n                            </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Tiêp tục thêm\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn blue cm-mgr-5\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@Save\\\">Lưu</span>\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Đóng</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {Contact} from '../model/contact.model';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {WorkStatus} from '../../../../../shareds/constants/work-status.const';\r\nimport {ContactService} from '../service/contact.service';\r\nimport {Pattern} from '../../../../../shareds/constants/pattern.const';\r\nimport * as _ from 'lodash';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-product-contact-form',\r\n    templateUrl: 'contact-form.component.html',\r\n    providers: [ContactService]\r\n})\r\n\r\nexport class ContactFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('contactFormModal') contactFormModal: NhModalComponent;\r\n    @Input() type: number;\r\n    @Input() subjectId: string;\r\n    @Input() listContact: Contact[];\r\n\r\n    @Output() insertSuccess = new EventEmitter();\r\n    @Output() saveSuccess = new EventEmitter();\r\n\r\n    contact = new Contact();\r\n    listStatus = [{\r\n        id: WorkStatus.official,\r\n        name: 'Official'\r\n    }, {\r\n        id: WorkStatus.quit,\r\n        name: 'Quit'\r\n    }, {\r\n        id: WorkStatus.transfer,\r\n        name: 'Transfer'\r\n    }];\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private contactService: ContactService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalShow() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.utilService.focusElement('fullName');\r\n        this.renderForm();\r\n        this.resetForm();\r\n        this.contactFormModal.open();\r\n    }\r\n\r\n    edit(contact: Contact) {\r\n        this.utilService.focusElement('fullName');\r\n        this.isUpdate = true;\r\n        this.id = contact.id;\r\n        this.getDetail(contact);\r\n        this.contactFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        if (isValid) {\r\n            this.contact = this.model.value;\r\n            this.contact.subjectId = this.subjectId;\r\n\r\n            const countContact = _.countBy(this.listContact, (item: Contact) => {\r\n                return item.phoneNumber === this.model.value.phoneNumber && item.fullName === this.model.value.fullName\r\n                    && (!this.id || item.id !== this.id);\r\n            }).true;\r\n\r\n            if (countContact && countContact > 0) {\r\n                this.toastr.error('User already exists');\r\n                return;\r\n            }\r\n\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                if (this.subjectId) {\r\n                    this.contactService\r\n                        .update(this.id, this.type, this.contact)\r\n                        .pipe(finalize(() => (this.isSaving = false)))\r\n                        .subscribe((result: ActionResultViewModel) => {\r\n                            this.isModified = true;\r\n                            this.contact.concurrencyStamp = result.data;\r\n                            this.saveSuccess.emit(this.contact);\r\n                            this.contactFormModal.dismiss();\r\n                        });\r\n                } else {\r\n                    this.isSaving = false;\r\n                    this.saveSuccess.emit(this.contact);\r\n                    this.contactFormModal.dismiss();\r\n                }\r\n            } else {\r\n                if (this.subjectId) {\r\n                    this.contactService\r\n                        .insert(this.contact)\r\n                        .pipe(finalize(() => (this.isSaving = false)))\r\n                        .subscribe((result: ActionResultViewModel<{ contactId: string, concurrencyStamp: string }>) => {\r\n                            const data = result.data;\r\n                            if (data) {\r\n                                this.isModified = true;\r\n                                this.contact.id = data.contactId;\r\n                                this.contact.concurrencyStamp = data.concurrencyStamp;\r\n                                this.insertSuccess.emit(this.contact);\r\n                                if (this.isCreateAnother) {\r\n                                    this.utilService.focusElement('fullName');\r\n                                    this.resetForm();\r\n                                } else {\r\n                                    this.contactFormModal.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                } else {\r\n                    this.isSaving = false;\r\n                    this.insertSuccess.emit(this.contact);\r\n                    if (this.isCreateAnother) {\r\n                        this.utilService.focusElement('fullName');\r\n                        this.resetForm();\r\n                    } else {\r\n                        this.contactFormModal.dismiss();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDetail(contact: Contact) {\r\n        if (contact) {\r\n            this.model.patchValue(contact);\r\n        }\r\n        // this.subscribers.supplierService = this.contactService\r\n        //     .getDetail(contact.id)\r\n        //     .subscribe(\r\n        //         (result: ActionResultViewModel<Contact>) => {\r\n        //             const detail = result.data;\r\n        //             if (detail) {\r\n        //                 this.model.patchValue(detail);\r\n        //             }\r\n        //         }\r\n        //     );\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['fullName', 'phoneNumber', 'email', 'positionName', 'description']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'fullName': ['required', 'maxLength', 'pattern']},\r\n            {'email': ['pattern', 'maxLenght']},\r\n            {'phoneNumber': ['required', 'pattern', 'maxLength']},\r\n            {'positionName': ['maxLength']},\r\n            {'description': ['maxLength']}\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            id: [this.contact.id],\r\n            fullName: [this.contact.fullName, [Validators.required, Validators.maxLength(50), Validators.pattern(Pattern.whiteSpace)]],\r\n            email: [this.contact.email, [Validators.maxLength(50), Validators.pattern(Pattern.email)]],\r\n            phoneNumber: [this.contact.phoneNumber, [Validators.required, Validators.maxLength(50),\r\n                Validators.pattern(Pattern.phoneNumber)]],\r\n            positionName: [this.contact.positionName, [Validators.maxLength(500)]],\r\n            description: [this.contact.description],\r\n            status: [this.contact.status],\r\n            subjectId: [this.subjectId],\r\n            concurrencyStamp: [this.contact.concurrencyStamp]\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            id: null,\r\n            fullName: '',\r\n            phoneNumber: '',\r\n            positionName: '',\r\n            description: '',\r\n            email: '',\r\n            status: WorkStatus.official\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n    }\r\n}\r\n","module.exports = \"<table class=\\\"table table-bordered table-stripped table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">STT</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@contactPerson\\\">Ngươi Liên Hệ</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@phoneNumber\\\">Số Điện Thoại</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@emain\\\">Email</th>\\r\\n        <th class=\\\"middle center\\\" i18n=\\\"@@workStatus\\\">Trạng Thái Làm Việc</th>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@action\\\"\\r\\n            *ngIf=\\\"(permission.edit || permission.delete || permission.add) && !isReadOnly\\\">\\r\\n            <button class=\\\"btn btn-sm blue\\\" *ngIf=\\\"permission.add\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\"\\r\\n                    type=\\\"button\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i>\\r\\n            </button>\\r\\n        </th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listContact; let i = index\\\"\\r\\n        nhContextMenuTrigger\\r\\n        [nhContextMenuTriggerFor]=\\\"nhMenu\\\"\\r\\n        [nhContextMenuData]=\\\"item\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">{{ item.fullName }}</td>\\r\\n        <td class=\\\"middle\\\">{{item.phoneNumber}}</td>\\r\\n        <td class=\\\"middle\\\">{{item.email}}</td>\\r\\n        <td class=\\\"middle center\\\"> <span class=\\\"badge\\\" [class.badge-danger]=\\\"item.status === workStatus.quit\\\"\\r\\n                                         [class.badge-success]=\\\"item.status === workStatus.official\\\"\\r\\n                                         [class.badge-warning]=\\\"item.status === workStatus.transfer\\\">\\r\\n                                 {item.status, select, 0 {Nghỉ Việc} 1 {Chinh Thức} 2 {Chuyển Công Tác} other {}}\\r\\n                            </span>\\r\\n        </td>\\r\\n        <td class=\\\"middle text-right\\\" *ngIf=\\\"(permission.edit || permission.delete) && !isReadOnly\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border pull-right\\\"\\r\\n                        matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.edit\\\"\\r\\n                           (click)=\\\"edit(item)\\\"\\r\\n                           i18n=\\\"@@edit\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                            Sửa\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a\\r\\n                            (click)=\\\"delete(item.id)\\\" i18n=\\\"@@delete\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                            Xóa\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<app-product-contact-form\\r\\n    [subjectId]=\\\"subjectId\\\"\\r\\n    [type]=\\\"type\\\"\\r\\n    [listContact]=\\\"listContact\\\"\\r\\n    (saveSuccess)=\\\"updateSuccess($event)\\\"\\r\\n    (insertSuccess)=\\\"addSuccess($event)\\\"></app-product-contact-form>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteContact\\r\\n    i18n=\\\"@@confirmDeleteContact\\\"\\r\\n    i18n-title=\\\"@@confirmTitleDeleteContact\\\"\\r\\n    i18n-text=\\\"@@confirmTextDeleteContact\\\"\\r\\n    title=\\\"Bạn có muốn xóa người liên hệ này?\\\"\\r\\n    text=\\\"Bạn không thể khôi phục người liên hệ này sau khi xóa.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Đồng ý\\\"\\r\\n    cancelButtonText=\\\"Hủy\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n<nh-menu #nhMenu>\\r\\n    <nh-menu-item (clicked)=\\\"edit($event)\\\">\\r\\n        <i class=\\\"fa fa-edit\\\"></i>\\r\\n        <span i18n=\\\"@@edit\\\">Sửa</span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item *ngIf=\\\"permission.delete\\\"\\r\\n                  (clicked)=\\\"confirm($event)\\\">\\r\\n        <i class=\\\"fa fa-trash\\\"></i>\\r\\n        <span i18n=\\\"@@edit\\\">Xóa</span>\\r\\n    </nh-menu-item>\\r\\n</nh-menu>\\r\\n\"","import {BaseListComponent} from '../../../../base-list.component';\r\nimport {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\r\nimport {ContactType} from '../../../../shareds/constants/contact-type.const';\r\nimport {WorkStatus} from '../../../../shareds/constants/work-status.const';\r\nimport {ContactService} from './service/contact.service';\r\nimport * as _ from 'lodash';\r\nimport {ContactFormComponent} from './contact-form/contact-form.component';\r\nimport {Contact} from './model/contact.model';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-product-contact',\r\n    templateUrl: './contact.component.html',\r\n    providers: [ContactService]\r\n})\r\n\r\nexport class ContactComponent extends BaseListComponent<Contact> {\r\n    @ViewChild(ContactFormComponent) contactForm: ContactFormComponent;\r\n    @Input() type = ContactType.supplier;\r\n    @Input() listContact: Contact[];\r\n    @Input() isUpdate: boolean;\r\n    @Input() subjectId: string;\r\n    @Input() isReadOnly = false;\r\n\r\n    @Output() saveSuccess = new EventEmitter();\r\n\r\n    workStatus = WorkStatus;\r\n\r\n    constructor(private contactService: ContactService,\r\n                private toastr: ToastrService) {\r\n        super();\r\n    }\r\n\r\n    add() {\r\n        this.contactForm.add();\r\n    }\r\n\r\n    delete(id: string) {\r\n        if (this.isUpdate) {\r\n            this.contactService.delete(id, this.type).subscribe(() => {\r\n                _.remove(this.listContact, (item: Contact) => {\r\n                    return item.id === id;\r\n                });\r\n            });\r\n        } else {\r\n            _.remove(this.listContact, (item: Contact) => {\r\n                return item.id === id;\r\n            });\r\n        }\r\n    }\r\n\r\n    edit(contact: Contact) {\r\n        this.contactForm.edit(contact);\r\n    }\r\n\r\n    updateSuccess(value: Contact) {\r\n        if (value) {\r\n            const listContactById = _.filter(this.listContact, (item: Contact) => {\r\n                return item.id === value.id;\r\n            });\r\n\r\n            if (listContactById && listContactById.length > 0) {\r\n                const contactById: Contact = _.head(listContactById);\r\n                contactById.email = value.email;\r\n                contactById.status = value.status;\r\n                contactById.description = value.description;\r\n                contactById.positionName = value.positionName;\r\n                contactById.phoneNumber = value.phoneNumber;\r\n                contactById.fullName = value.fullName;\r\n                contactById.concurrencyStamp = value.concurrencyStamp;\r\n            }\r\n\r\n            this.saveSuccess.emit(this.listContact);\r\n        }\r\n    }\r\n\r\n    addSuccess(value: Contact) {\r\n        if (value) {\r\n            const countContact = _.countBy(this.listContact, (item: Contact) => {\r\n                return item.phoneNumber === value.phoneNumber && item.fullName === value.fullName;\r\n            }).true;\r\n\r\n            if (!countContact || countContact === 0) {\r\n                if (!this.subjectId) {\r\n                    value.id = (this.listContact.length + 1).toString();\r\n                }\r\n                this.listContact.push(value);\r\n                this.saveSuccess.emit(this.listContact);\r\n            } else {\r\n                this.toastr.error('User already exists');\r\n            }\r\n        }\r\n    }\r\n\r\n    confirm(value: Contact) {\r\n        this.delete(value.id);\r\n    }\r\n}\r\n","import {WorkStatus} from '../../../../../shareds/constants/work-status.const';\r\n\r\nexport class Contact {\r\n    id: string;\r\n    subjectId: string;\r\n    fullName: string;\r\n    positionName: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    description: string;\r\n    concurrencyStamp: string;\r\n    status: number;\r\n    type: number;\r\n\r\n    constructor() {\r\n        this.status = WorkStatus.official;\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport { ActionResultViewModel } from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport { SpinnerService } from '../../../../../core/spinner/spinner.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { finalize } from 'rxjs/internal/operators';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Inject } from '@angular/core';\r\nimport { Contact } from '../model/contact.model';\r\nimport { environment } from '../../../../../../environments/environment';\r\n\r\nexport class ContactService {\r\n    url = 'api/v1/warehouse/contacts';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinceService: SpinnerService,\r\n                private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<Contact>> {\r\n        this.spinceService.show();\r\n        return this.http.get(`${this.url}/${id}`, {})\r\n            .pipe(finalize(() => {\r\n                this.spinceService.hide();\r\n            }))as Observable<ActionResultViewModel<Contact>>;\r\n    }\r\n\r\n    insert(contact: Contact): Observable<ActionResultViewModel<{ contactId: string, concurrencyStamp: string }>> {\r\n        return this.http.post(`${this.url}`, contact) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, type: number, contact: Contact): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/${type}`, contact).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string, type: number): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${id}/${type}`,).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@attributeDetailPageTitle\\\">Attribute detail</span>\\r\\n    <small i18n=\\\"@@productModuleTitle\\\">Product management</small>\\r\\n</h1>\\r\\n\\r\\n<nh-tab>\\r\\n    <nh-tab-pane [active]=\\\"true\\\"\\r\\n                 title=\\\"Attribute info\\\"\\r\\n                 i18n-title=\\\"@@attributeInfo\\\"\\r\\n                 id=\\\"attributeInfo\\\">\\r\\n        <form action=\\\"\\\" class=\\\"form-horizontal\\\">\\r\\n            <ng-container *ngFor=\\\"let translation of productAttribute?.translations\\\">\\r\\n                <ng-container *ngIf=\\\"translation.languageId === currentLanguage\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"col-sm-4 control-label\\\" ghmLabel=\\\"Attribute name\\\"\\r\\n                               i18n-ghmLabel=\\\"@@attributeName\\\"\\r\\n                               [required]=\\\"true\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <div class=\\\"form-control height-auto\\\">{{ translation?.name }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"col-sm-4 control-label\\\" ghmLabel=\\\"Description\\\"\\r\\n                               i18n-ghmLabel=\\\"@@description\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <div class=\\\"form-control height-auto\\\">{{ translation?.description }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </ng-container>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox [checked]=\\\"productAttribute?.isMultiple\\\" color=\\\"primary\\\"\\r\\n                                  [disabled]=\\\"true\\\"><span i18n=\\\"@@allowMultiple\\\"></span>\\r\\n                        Allow multiple\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox [checked]=\\\"productAttribute?.isRequire\\\" color=\\\"primary\\\"\\r\\n                                  [disabled]=\\\"true\\\"><span i18n=\\\"@@isRequire\\\"></span> Require?\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox [checked]=\\\"productAttribute?.isActive\\\" color=\\\"primary\\\"\\r\\n                                  [disabled]=\\\"true\\\"><span i18n=\\\"@@isActive\\\"></span> Active\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox [checked]=\\\"productAttribute?.isSelfContent\\\" color=\\\"primary\\\"\\r\\n                                  [disabled]=\\\"true\\\"><span i18n=\\\"@@selfResponding\\\"></span>\\r\\n                        Self responding\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <button routerLink=\\\"/products/attributes\\\" class=\\\"btn btn-light\\\" i18n=\\\"@@close\\\">\\r\\n                        Close\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </nh-tab-pane><!-- END: Attribute info -->\\r\\n    <nh-tab-pane id=\\\"attributeValue\\\"\\r\\n                 title=\\\"Attribute values\\\"\\r\\n                 i18n-title=\\\"@@attributeValues\\\"\\r\\n                 (tabSelected)=\\\"onAttributeValueTabSelected()\\\"\\r\\n                 [show]=\\\"!isSelfContent\\\">\\r\\n        <app-product-attribute-value\\r\\n            [readOnly]=\\\"true\\\"\\r\\n            [attributeId]=\\\"id\\\"></app-product-attribute-value>\\r\\n    </nh-tab-pane><!-- END: Attribute value info -->\\r\\n</nh-tab>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../../../base-form.component';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { ProductAttributeService } from '../product-attribute.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NhWizardComponent } from '../../../../../shareds/components/nh-wizard/nh-wizard.component';\r\nimport { ProductAttributeValueComponent } from '../product-attribute-value/product-attribute-value.component';\r\nimport { NhTabComponent } from '../../../../../shareds/components/nh-tab/nh-tab.component';\r\nimport { ProductAttribute, ProductAttributeTranslation } from '../product-attribute-form/models/product-attribute.model';\r\n\r\n@Component({\r\n    selector: 'app-product-attribute-detail',\r\n    templateUrl: './product-attribute-detail.component.html'\r\n})\r\n\r\nexport class ProductAttributeDetailComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('productAttributeFormModal') productAttributeFormModal: NhModalComponent;\r\n    @ViewChild(ProductAttributeValueComponent) productAttributeValueComponent: ProductAttributeValueComponent;\r\n    @ViewChild('attributeFormWizard') attributeFormWizard: NhWizardComponent;\r\n    @ViewChild(NhTabComponent) nhTabComponent: NhTabComponent;\r\n    productAttribute = new ProductAttribute();\r\n    productAttributeTranslation = new ProductAttributeTranslation();\r\n    isSelfContent = false;\r\n\r\n    constructor(\r\n        private toastr: ToastrService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private productAttributeService: ProductAttributeService) {\r\n        super();\r\n        this.subscribers.routeParams = this.route.params.subscribe(params => {\r\n            if (params.id) {\r\n                this.id = params.id;\r\n                this.getDetail();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onWizardStepClick(step: any) {\r\n        if (!this.isUpdate) {\r\n            return;\r\n        }\r\n        this.attributeFormWizard.goTo(step.id);\r\n        if (step.id === 2) {\r\n            this.productAttributeValueComponent.search(1);\r\n        }\r\n    }\r\n\r\n    onAttributeValueTabSelected() {\r\n        this.productAttributeValueComponent.search(1);\r\n    }\r\n\r\n    private getDetail() {\r\n        this.productAttributeService.getDetail(this.id)\r\n            .subscribe((productAttributeDetail: ProductAttribute) => {\r\n                if (productAttributeDetail) {\r\n                    this.productAttribute = productAttributeDetail;\r\n                }\r\n            });\r\n    }\r\n\r\n    private searchProductAttributeValue() {\r\n        this.productAttributeValueComponent.search(1);\r\n    }\r\n\r\n    private goToAttributeValueTab() {\r\n        this.nhTabComponent.setTabActiveById('attributeValue');\r\n    }\r\n}\r\n","export class ProductAttributeTranslation {\r\n    name: string;\r\n    languageId: string;\r\n    description: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class ProductAttribute {\r\n    isActive: boolean;\r\n    isSelfContent: boolean;\r\n    isMultiple: boolean;\r\n    isRequire: boolean;\r\n    concurrencyStamp: string;\r\n    translations: ProductAttributeTranslation[];\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n        this.isSelfContent = true;\r\n        this.isMultiple = true;\r\n        this.isRequire = true;\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@attributeFormPageTitle\\\">\\r\\n        {isUpdate, select, 0 {Add new attribute} 1 {Update attribute}}\\r\\n    </span>\\r\\n    <small i18n=\\\"@@productModuleTitle\\\">Product management</small>\\r\\n</h1>\\r\\n\\r\\n<nh-tab>\\r\\n    <nh-tab-pane [active]=\\\"true\\\"\\r\\n                 title=\\\"Attribute info\\\"\\r\\n                 i18n-title=\\\"@@attributeInfo\\\"\\r\\n                 id=\\\"attributeInfo\\\">\\r\\n        <form action=\\\"\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n            <ng-container formArrayName=\\\"translations\\\">\\r\\n                <ng-container *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <div class=\\\"form-group\\\"\\r\\n                         [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                         [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                        <label class=\\\"col-sm-4 control-label\\\" ghmLabel=\\\"Attribute name\\\" i18n-ghmLabel=\\\"@@attributeName\\\"\\r\\n                               [required]=\\\"true\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                   formControlName=\\\"name\\\"\\r\\n                                   id=\\\"attributeName{{ currentLanguage }}\\\"\\r\\n                                   placeholder=\\\"Enter attribute name\\\"\\r\\n                                   i18n-placeholder=\\\"@@enterAttributeName\\\">\\r\\n                            <span class=\\\"help-block\\\" i18n=\\\"@@productAttributeNameValidateMessage\\\">\\r\\n                                {\\r\\n                                translationFormErrors[modelTranslation.value.languageId]?.name,\\r\\n                                select, required {Please enter attribute name} maxlength {Attribute name can not exceed 256 characters}\\r\\n                                }\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"\\r\\n                         [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                         [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                        <label class=\\\"col-sm-4 control-label\\\" ghmLabel=\\\"Description\\\"\\r\\n                               i18n-ghmLabel=\\\"@@description\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <textarea name=\\\"\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                      formControlName=\\\"description\\\"\\r\\n                                      placeholder=\\\"Enter description\\\"\\r\\n                                      i18n-placeholder=\\\"@@enterDescription\\\"></textarea>\\r\\n                            <span class=\\\"help-block\\\" i18n=\\\"@@productAttributeDescriptionValidateMessage\\\">\\r\\n                                {\\r\\n                                translationFormErrors[modelTranslation.value.languageId]?.name,\\r\\n                                select, maxlength {Attribute description can not exceed 500 characters}\\r\\n                                }\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </ng-container>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox formControlName=\\\"isMultiple\\\" color=\\\"primary\\\"><span i18n=\\\"@@allowMultiple\\\"></span>\\r\\n                        Allow multiple\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox formControlName=\\\"isRequire\\\" color=\\\"primary\\\"><span i18n=\\\"@@isRequire\\\"></span> Require?\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox formControlName=\\\"isActive\\\" color=\\\"primary\\\"><span i18n=\\\"@@isActive\\\"></span> Active\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox formControlName=\\\"isSelfContent\\\" color=\\\"primary\\\"><span i18n=\\\"@@selfResponding\\\"></span>\\r\\n                        Self responding\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox\\r\\n                        class=\\\"cm-mgr-5\\\"\\r\\n                        color=\\\"primary\\\"\\r\\n                        name=\\\"isCreateAnother\\\"\\r\\n                        i18n=\\\"@@isCreateAnother\\\"\\r\\n                        *ngIf=\\\"!isUpdate\\\"\\r\\n                        [(checked)]=\\\"isCreateAnother\\\"\\r\\n                        (change)=\\\"isCreateAnother = !isCreateAnother\\\"> Create another\\r\\n                    </mat-checkbox>\\r\\n                    <button class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\">\\r\\n                        Save\\r\\n                    </button>\\r\\n                    <a routerLink=\\\"/products/attributes\\\" class=\\\"btn btn-light\\\" i18n=\\\"@@cancel\\\">\\r\\n                        Cancel\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </nh-tab-pane><!-- END: Attribute info -->\\r\\n    <nh-tab-pane id=\\\"attributeValue\\\"\\r\\n                 title=\\\"Attribute values\\\"\\r\\n                 i18n-title=\\\"@@attributeValues\\\"\\r\\n                 (tabSelected)=\\\"onAttributeValueTabSelected($event)\\\"\\r\\n                 [show]=\\\"!isSelfContent\\\">\\r\\n        <app-product-attribute-value [attributeId]=\\\"id\\\"></app-product-attribute-value>\\r\\n    </nh-tab-pane><!-- END: Attribute value info -->\\r\\n</nh-tab>\\r\\n\\r\\n<nh-modal #productAttributeFormModal size=\\\"md\\\"\\r\\n          (shown)=\\\"onModalShown()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <form action=\\\"\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-header class=\\\"bold uppercase\\\">\\r\\n            <span i18n=\\\"@@productAttributeFormModalTitle\\\">\\r\\n                {isUpdate, select, 0 {Add new attribute} 1 {Update attribute}}\\r\\n            </span>\\r\\n        </nh-modal-header>\\r\\n        <nh-modal-content>\\r\\n\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox\\r\\n                class=\\\"cm-mgr-5\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"isCreateAnother\\\"\\r\\n                *ngIf=\\\"!isUpdate\\\"\\r\\n                [(checked)]=\\\"isCreateAnother\\\"\\r\\n                (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                i18n=\\\"isCreateAnother\\\"> Create another\\r\\n            </mat-checkbox>\\r\\n            <button class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" nh-dismiss i18n=\\\"@@cancel\\\">\\r\\n                Cancel\\r\\n            </button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../../../base-form.component';\r\nimport { ProductAttribute, ProductAttributeTranslation } from './models/product-attribute.model';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { ProductAttributeService } from '../product-attribute.service';\r\nimport { ActionResultViewModel } from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NhWizardComponent } from '../../../../../shareds/components/nh-wizard/nh-wizard.component';\r\nimport { SurveyTranslation } from '../../../../surveys/survey/survey-translation.model';\r\nimport * as _ from 'lodash';\r\nimport { ProductAttributeValueComponent } from '../product-attribute-value/product-attribute-value.component';\r\nimport { NhTabComponent } from '../../../../../shareds/components/nh-tab/nh-tab.component';\r\nimport { UtilService } from '../../../../../shareds/services/util.service';\r\n\r\n@Component({\r\n    selector: 'app-product-attribute-form',\r\n    templateUrl: './product-attribute-form.component.html'\r\n})\r\nexport class ProductAttributeFormComponent extends BaseFormComponent implements OnInit, AfterViewInit {\r\n    @ViewChild('productAttributeFormModal') productAttributeFormModal: NhModalComponent;\r\n    @ViewChild(ProductAttributeValueComponent) productAttributeValueComponent: ProductAttributeValueComponent;\r\n    @ViewChild('attributeFormWizard') attributeFormWizard: NhWizardComponent;\r\n    @ViewChild(NhTabComponent) nhTabComponent: NhTabComponent;\r\n    productAttribute = new ProductAttribute();\r\n    productAttributeTranslation = new ProductAttributeTranslation();\r\n\r\n    constructor(\r\n        private toastr: ToastrService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private utilService: UtilService,\r\n        private productAttributeService: ProductAttributeService) {\r\n        super();\r\n        this.subscribers.routeParams = this.route.params.subscribe(params => {\r\n            if (params.id) {\r\n                this.isUpdate = true;\r\n                this.id = params.id;\r\n                this.getDetail();\r\n            } else {\r\n                this.isUpdate = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    get isSelfContent() {\r\n        return this.model.value.isSelfContent;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.utilService.focusElement(`attributeName${this.currentLanguage}`);\r\n    }\r\n\r\n    onModalShown() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.resetModel();\r\n    }\r\n\r\n    onWizardStepClick(step: any) {\r\n        if (!this.isUpdate) {\r\n            return;\r\n        }\r\n        this.attributeFormWizard.goTo(step.id);\r\n        if (step.id === 2) {\r\n            this.productAttributeValueComponent.search(1);\r\n        }\r\n    }\r\n\r\n    onAttributeValueTabSelected(value) {\r\n        this.productAttributeValueComponent.search(1);\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.productAttributeFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.validateModel();\r\n        const isLanguageValid = this.validateLanguage();\r\n        if (isValid && isLanguageValid) {\r\n            this.productAttribute = this.model.value;\r\n            if (this.isUpdate) {\r\n                this.productAttributeService.update(this.id, this.productAttribute)\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        // this.attributeFormWizard.next();\r\n                        this.toastr.success(result.message);\r\n                        if (this.isSelfContent) {\r\n                            this.router.navigateByUrl('/products/attributes');\r\n                        } else {\r\n                            this.goToAttributeValueTab();\r\n                            // this.toastr.success(result.message);\r\n                            this.searchProductAttributeValue();\r\n                            this.isModified = true;\r\n                            this.model.patchValue({\r\n                                concurrencyStamp: result.data\r\n                            });\r\n                            this.nhTabComponent.setTabActiveById('attributeValue');\r\n                            this.goToAttributeValueTab();\r\n                        }\r\n\r\n                    });\r\n            } else {\r\n                this.productAttributeService.insert(this.productAttribute)\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.toastr.success(result.message);\r\n                        if (!this.isSelfContent) {\r\n                            this.goToAttributeValueTab();\r\n                            this.id = result.data;\r\n                            this.model.patchValue({\r\n                                id: result.data\r\n                            });\r\n                            if (!this.isCreateAnother) {\r\n                                this.productAttributeFormModal.dismiss();\r\n                            } else {\r\n                                this.resetModel();\r\n                            }\r\n                        } else {\r\n                            this.resetModel();\r\n                            if (!this.isCreateAnother) {\r\n                                this.router.navigateByUrl('/products/attributes');\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private resetModel() {\r\n        this.id = null;\r\n        this.isUpdate = false;\r\n        this.model.patchValue(new ProductAttribute());\r\n        this.translations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.renderFormError(['name', 'description']);\r\n        this.translationValidationMessage[language] = this.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['maxlength']},\r\n        ]);\r\n        const translationModel = this.formBuilder.group({\r\n            languageId: [language],\r\n            name: [this.productAttributeTranslation.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            description: [this.productAttributeTranslation.description, [\r\n                Validators.maxLength(4000)\r\n            ]],\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) => this.validateTranslation(false));\r\n        return translationModel;\r\n    };\r\n\r\n    private buildForm() {\r\n        this.model = this.formBuilder.group({\r\n            isActive: [this.productAttribute.isActive],\r\n            isRequire: [this.productAttribute.isRequire],\r\n            isMultiple: [this.productAttribute.isMultiple],\r\n            isSelfContent: [this.productAttribute.isSelfContent],\r\n            concurrencyStamp: [this.productAttribute.concurrencyStamp],\r\n            translations: this.formBuilder.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.validateModel(false));\r\n    }\r\n\r\n    private getDetail() {\r\n        this.productAttributeService.getDetail(this.id)\r\n            .subscribe((productAttributeDetail: ProductAttribute) => {\r\n                if (productAttributeDetail) {\r\n                    this.model.patchValue({\r\n                        isActive: productAttributeDetail.isActive,\r\n                        isMultiple: productAttributeDetail.isMultiple,\r\n                        isSelfContent: productAttributeDetail.isSelfContent,\r\n                        isRequire: productAttributeDetail.isRequire,\r\n                        concurrencyStamp: productAttributeDetail.concurrencyStamp,\r\n                    });\r\n                    if (productAttributeDetail.translations && productAttributeDetail.translations.length > 0) {\r\n                        this.translations.controls.forEach((model: FormGroup) => {\r\n                            const detail = _.find(productAttributeDetail.translations, (translation: SurveyTranslation) => {\r\n                                return translation.languageId === model.value.languageId;\r\n                            });\r\n                            if (detail) {\r\n                                model.patchValue(detail);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    private searchProductAttributeValue() {\r\n        this.productAttributeValueComponent.search(1);\r\n    }\r\n\r\n    private goToAttributeValueTab() {\r\n        this.nhTabComponent.setTabActiveById('attributeValue');\r\n    }\r\n}\r\n","module.exports = \"<nh-suggestion\\r\\n    [placeholder]=\\\"'Nhập tên thuộc tính.'\\\"\\r\\n    [sources]=\\\"listItems\\\"\\r\\n    [loading]=\\\"isSearching\\\"\\r\\n    [selectedItem]=\\\"selectedItem\\\"\\r\\n    (searched)=\\\"onSearchKeyPress($event)\\\"\\r\\n    (itemRemoved)=\\\"itemRemoved.emit($event)\\\"\\r\\n    (itemSelected)=\\\"onItemSelected($event)\\\"></nh-suggestion>\\r\\n\"","import {Component, EventEmitter, Inject, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { NhSuggestion, NhSuggestionComponent } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { BaseListComponent } from '../../../../../base-list.component';\r\nimport { UnitService } from '../../unit/service/unit.service';\r\nimport { ProductAttributeService } from '../product-attribute.service';\r\nimport {IPageId, PAGE_ID} from '../../../../../configs/page-id.config';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\n\r\n@Component({\r\n  selector: 'app-product-attribute-suggestion',\r\n  templateUrl: './product-attribute-suggestion.component.html'\r\n})\r\nexport class ProductAttributeSuggestionComponent  extends BaseListComponent<NhSuggestion> implements OnInit {\r\n    @ViewChild(NhSuggestionComponent) nhSuggestionComponent: NhSuggestionComponent;\r\n    @Input() multiple = false;\r\n    @Input() selectedItem;\r\n\r\n    @Output() keyPressed = new EventEmitter();\r\n    @Output() itemSelected = new EventEmitter();\r\n    @Output() itemRemoved = new EventEmitter();\r\n\r\n    constructor(private productAttributeService: ProductAttributeService, @Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig) {\r\n        super();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onItemSelected(item: any) {\r\n        this.itemSelected.emit(item);\r\n    }\r\n\r\n    onSearchKeyPress(keyword: string) {\r\n        this.keyPressed.emit(keyword);\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.isSearching = true;\r\n        this.currentPage = currentPage;\r\n        this.productAttributeService.suggestions(this.keyword, this.currentPage, this.appConfig.PAGE_SIZE)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<NhSuggestion>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listItems = result.items;\r\n            });\r\n    }\r\n\r\n    clear() {\r\n        this.nhSuggestionComponent.clear();\r\n    }\r\n\r\n}\r\n","module.exports = \"<nh-suggestion\\r\\n    [multiple]=\\\"multiple\\\"\\r\\n    [placeholder]=\\\"'Nhập tên giá trị.'\\\"\\r\\n    [sources]=\\\"listItems\\\"\\r\\n    [loading]=\\\"isSearching\\\"\\r\\n    [selectedItem]=\\\"selectedItem\\\"\\r\\n    (searched)=\\\"onSearchKeyPress($event)\\\"\\r\\n    (itemRemoved)=\\\"itemRemoved.emit($event)\\\"\\r\\n    (itemSelected)=\\\"onItemSelected($event)\\\"></nh-suggestion>\\r\\n\"","import {Component, EventEmitter, Inject, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport { BaseListComponent } from '../../../../../base-list.component';\r\nimport { NhSuggestion, NhSuggestionComponent } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ProductAttributeService } from '../product-attribute.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {IPageId, PAGE_ID} from '../../../../../configs/page-id.config';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\n\r\n@Component({\r\n    selector: 'app-product-attribute-value-suggestion',\r\n    templateUrl: './product-attribute-value-suggestion.component.html'\r\n})\r\nexport class ProductAttributeValueSuggestionComponent extends BaseListComponent<NhSuggestion> implements OnInit {\r\n    @ViewChild(NhSuggestionComponent) nhSuggestionComponent: NhSuggestionComponent;\r\n    @Input() multiple = false;\r\n    @Input() selectedItem;\r\n    @Input() attributeId;\r\n\r\n    @Output() keyPressed = new EventEmitter();\r\n    @Output() itemSelected = new EventEmitter();\r\n    @Output() itemRemoved = new EventEmitter();\r\n\r\n    constructor(\r\n        private toastr: ToastrService,\r\n        private productAttributeService: ProductAttributeService, @Inject(PAGE_ID) public pageId: IPageId,\r\n        @Inject(APP_CONFIG) public appConfig: IAppConfig) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onItemSelected(item: any) {\r\n        this.itemSelected.emit(item);\r\n    }\r\n\r\n    onSearchKeyPress(keyword: string) {\r\n        this.keyPressed.emit(keyword);\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        if (!this.attributeId) {\r\n            this.toastr.warning('Vui lòng chọn thuộc tính');\r\n            return;\r\n        }\r\n        this.isSearching = true;\r\n        this.currentPage = currentPage;\r\n        this.productAttributeService.suggestionValue(this.attributeId, this.keyword, this.currentPage, this.appConfig.PAGE_SIZE)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<NhSuggestion>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listItems = result.items;\r\n            });\r\n        // this.productAttributeService.suggestions(this.keyword, this.currentPage, this.appConfig.PAGE_SIZE)\r\n        //     .pipe(finalize(() => this.isSearching = false))\r\n        //     .subscribe((result: SearchResultViewModel<NhSuggestion>) => {\r\n        //         this.totalRows = result.totalRows;\r\n        //         this.listItems = result.items;\r\n        //     });\r\n    }\r\n\r\n    clear() {\r\n        this.nhSuggestionComponent.clear();\r\n    }\r\n}\r\n","export class ProductAttributeValueTranslation {\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport class ProductAttributeValue {\r\n    isActive: boolean;\r\n    concurrencyStamp: string;\r\n    translations: ProductAttributeValueTranslation[];\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #productAttributeValueFormModal\\r\\n          (shown)=\\\"onModalShown()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header class=\\\"uppercase bold\\\">\\r\\n        <span i18n=\\\"@@updateProductAttributeTitle\\\">\\r\\n            {isUpdate, select, 0 {Add new attribute value} 1 {Update attribute value}}\\r\\n        </span>\\r\\n    </nh-modal-header>\\r\\n    <form (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\" class=\\\"form\\\" *ngIf=\\\"model\\\">\\r\\n        <nh-modal-content class=\\\"form-body\\\">\\r\\n            <ng-container formArrayName=\\\"translations\\\">\\r\\n                <ng-container *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <div class=\\\"form-group\\\"\\r\\n                         [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                         [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                        <label class=\\\"control-label\\\" ghmLabel=\\\"Attribute value name\\\"\\r\\n                               i18n-ghmLabel=\\\"@@attributeValueName\\\"\\r\\n                               [required]=\\\"true\\\"></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\"\\r\\n                               placeholder=\\\"Enter attribute name\\\"\\r\\n                               i18n-placeholder=\\\"@@enterAttributeName\\\"\\r\\n                               id=\\\"name-{{currentLanguage}}\\\">\\r\\n                        <span class=\\\"help-block\\\" i18n=\\\"@@productAttributeNameValidateMessage\\\">\\r\\n                            {\\r\\n                            translationFormErrors[modelTranslation.value.languageId]?.name,\\r\\n                            select, required {Please enter attribute value name} maxlength {Attribute value name can not exceed 256 characters}\\r\\n                            }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"\\r\\n                         [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                         [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                        <label class=\\\"control-label\\\" ghmLabel=\\\"Description\\\"\\r\\n                               i18n-ghmLabel=\\\"@@description\\\"></label>\\r\\n                        <textarea name=\\\"\\\" id=\\\"\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                  formControlName=\\\"description\\\"\\r\\n                                  placeholder=\\\"Enter description\\\"\\r\\n                                  i18n-placeholder=\\\"@@enterDescription\\\"></textarea>\\r\\n                        <span class=\\\"help-block\\\" i18n=\\\"@@productAttributeDescriptionValidateMessage\\\">\\r\\n                            {\\r\\n                            translationFormErrors[modelTranslation.value.languageId]?.name,\\r\\n                            select, maxlength {Attribute description can not exceed 500 characters}\\r\\n                            }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </ng-container>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@active\\\">Active</mat-checkbox>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox\\r\\n                class=\\\"cm-mgr-5\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"isCreateAnother\\\"\\r\\n                i18n=\\\"@@isCreateAnother\\\"\\r\\n                *ngIf=\\\"!isUpdate\\\"\\r\\n                [(checked)]=\\\"isCreateAnother\\\"\\r\\n                (change)=\\\"isCreateAnother = !isCreateAnother\\\"> Create another\\r\\n            </mat-checkbox>\\r\\n            <button class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\">\\r\\n                Save\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" i18n=\\\"@@cancel\\\" nh-dismiss>\\r\\n                Cancel\\r\\n            </button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../../../../base-form.component';\r\nimport { ProductAttributeService } from '../../product-attribute.service';\r\nimport { ProductAttribute } from '../../product-attribute-form/models/product-attribute.model';\r\nimport { FormGroup, Validators } from '@angular/forms';\r\nimport { ProductAttributeValue, ProductAttributeValueTranslation } from '../models/product-attribute-value.model';\r\nimport { NhModalComponent } from '../../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { ActionResultViewModel } from '../../../../../../shareds/view-models/action-result.viewmodel';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilService } from '../../../../../../shareds/services/util.service';\r\nimport { SurveyTranslation } from '../../../../../surveys/survey/survey-translation.model';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'app-product-attribute-value-form',\r\n    templateUrl: './product-attribute-value-form.component.html'\r\n})\r\nexport class ProductAttributeValueFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('productAttributeValueFormModal') productAttributeValueFormModal: NhModalComponent;\r\n    @Input() attributeId: string;\r\n    productAttributeValue = new ProductAttributeValue();\r\n    productAttributeValueTranslation = new ProductAttributeValueTranslation();\r\n\r\n    constructor(\r\n        private toastr: ToastrService,\r\n        private utilService: UtilService,\r\n        private productAttributeService: ProductAttributeService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalShown() {\r\n        this.isModified = false;\r\n        this.focusValueName();\r\n    }\r\n\r\n    onModalHidden() {\r\n        // console.log(this.isModified);\r\n        this.resetModel();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    save() {\r\n        const isLanguageValid = this.validateLanguage();\r\n        if (isLanguageValid) {\r\n            this.productAttributeValue = this.model.value;\r\n            if (this.isUpdate) {\r\n                this.model.markAsUntouched();\r\n                this.productAttributeService.updateValue(this.attributeId, this.id, this.productAttributeValue)\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.toastr.success(result.message);\r\n                        this.isModified = true;\r\n                        this.productAttributeValueFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.productAttributeService.insertValue(this.attributeId, this.productAttributeValue)\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.toastr.success(result.message);\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.resetModel();\r\n                            this.focusValueName();\r\n                        } else {\r\n                            this.productAttributeValueFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.productAttributeValueFormModal.open();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.id = id;\r\n        this.isUpdate = true;\r\n        this.productAttributeValueFormModal.open();\r\n        this.getDetail();\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private resetModel() {\r\n        this.id = null;\r\n        this.isUpdate = false;\r\n        this.model.patchValue(new ProductAttribute());\r\n        this.translations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.renderFormError(['name', 'description']);\r\n        this.translationValidationMessage[language] = this.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['maxlength']},\r\n        ]);\r\n        const translationModel = this.formBuilder.group({\r\n            languageId: [language],\r\n            name: [this.productAttributeValueTranslation.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            description: [this.productAttributeValueTranslation.description, [\r\n                Validators.maxLength(4000)\r\n            ]],\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) => this.validateTranslation(false));\r\n        return translationModel;\r\n    };\r\n\r\n    private buildForm() {\r\n        this.model = this.formBuilder.group({\r\n            isActive: [this.productAttributeValue.isActive],\r\n            concurrencyStamp: [this.productAttributeValue.concurrencyStamp],\r\n            translations: this.formBuilder.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.validateModel(false));\r\n    }\r\n\r\n    private getDetail() {\r\n        return this.productAttributeService.getValueDetail(this.attributeId, this.id)\r\n            .subscribe((attributeValueDetail: ProductAttributeValue) => {\r\n                if (attributeValueDetail) {\r\n                    this.model.patchValue({\r\n                        isActive: attributeValueDetail.isActive,\r\n                        concurrencyStamp: attributeValueDetail.concurrencyStamp\r\n                    });\r\n                    if (attributeValueDetail.translations && attributeValueDetail.translations.length > 0) {\r\n                        this.translations.controls.forEach((model: FormGroup) => {\r\n                            const detail = _.find(attributeValueDetail.translations, (translation: SurveyTranslation) => {\r\n                                return translation.languageId === model.value.languageId;\r\n                            });\r\n                            if (detail) {\r\n                                model.patchValue(detail);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    private focusValueName() {\r\n        this.utilService.focusElement(`name-${this.currentLanguage}`);\r\n    }\r\n}\r\n","module.exports = \"<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@enterKeyword\\\" i18n-placeholder placeholder=\\\"Enter keyword.\\\"\\r\\n               name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select [data]=\\\"[{id: false, name: 'InActive'},{id: true, name: 'Activated'}]\\\"\\r\\n                   title=\\\"-- All active status --\\\"\\r\\n                   i18n-title=\\\"@@allActiveStatus\\\"\\r\\n                   (itemSelected)=\\\"onActiveStatusSelected($event)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button class=\\\"btn blue\\\" [disabled]=\\\"isSearching\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"refresh()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <a href=\\\"javascript://\\\" type=\\\"button\\\" class=\\\"btn blue\\\" i18n=\\\"@@add\\\"\\r\\n           *ngIf=\\\"permission.add && !readOnly\\\"\\r\\n           (click)=\\\"productAttributeValueFormComponent.add()\\\">\\r\\n            Add\\r\\n        </a>\\r\\n    </div>\\r\\n</form><!-- END: search form -->\\r\\n<table class=\\\"table table-hover table-stripped\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@name\\\">Name</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@note\\\">Note</th>\\r\\n        <th class=\\\"middle w100 center\\\" i18n=\\\"@@active\\\">Active</th>\\r\\n        <th class=\\\"middle text-right w150\\\" i18n=\\\"@@actions\\\" *ngIf=\\\"(permission.edit || permission.delete) && !readOnly\\\">\\r\\n            Actions\\r\\n        </th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listItems; let i = index\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            <a href=\\\"javascript://\\\"\\r\\n               (click)=\\\"productAttributeValueFormComponent.edit(item.id)\\\"\\r\\n               *ngIf=\\\"permission.edit; else noEditTemplate\\\">{{ item.name }}</a>\\r\\n            <ng-template #noEditTemplate>\\r\\n                {{ item.name }}\\r\\n            </ng-template>\\r\\n        </td>\\r\\n        <td>{{ item.description }}</td>\\r\\n        <td class=\\\"center\\\">\\r\\n            <mat-checkbox [checked]=\\\"item.isActive\\\" color=\\\"primary\\\"\\r\\n                          [disabled]=\\\"!permission.edit\\\"\\r\\n                          (change)=\\\"onChangeActiveStatus(item)\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"middle text-right w150\\\"\\r\\n            *ngIf=\\\"(permission.edit || permission.delete || permission.view) && !readOnly\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\">\\r\\n                    <li *ngIf=\\\"permission.edit\\\"\\r\\n                        (click)=\\\"productAttributeValueFormComponent.edit(item.id)\\\">\\r\\n                        <a href=\\\"javascript://\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@edit\\\">Edit</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.delete\\\"\\r\\n                        [swal]=\\\"confirmDelete\\\"\\r\\n                        (confirm)=\\\"delete(item.id)\\\">\\r\\n                        <a href=\\\"#\\\">\\r\\n                            <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@delete\\\">Delete</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul><!-- END: nh-dropdown-menu -->\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            [pageShow]=\\\"6\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\"\\r\\n            [pageSize]=\\\"pageSize\\\"\\r\\n            (pageClick)=\\\"search($event)\\\"\\r\\n></ghm-paging>\\r\\n\\r\\n<swal\\r\\n    #confirmDelete\\r\\n    i18n-title=\\\"@@confirmDeleteTitle\\\"\\r\\n    i18n-text=\\\"@@confirmDeleteText\\\"\\r\\n    title=\\\"Are you sure for delete this attribute?\\\"\\r\\n    text=\\\"You can't recover this attribute after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Accept\\\"\\r\\n    cancelButtonText=\\\"Cancel\\\">\\r\\n</swal>\\r\\n\\r\\n<app-product-attribute-value-form\\r\\n    [attributeId]=\\\"attributeId\\\"\\r\\n    (saveSuccessful)=\\\"search(1)\\\">\\r\\n</app-product-attribute-value-form>\\r\\n\"","import { Component, Inject, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../../../base-list.component';\r\nimport { AttributeValueViewModel } from './product-attribute-value.viewmodel';\r\nimport { ProductAttributeService } from '../product-attribute.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { ProductAttributeValueFormComponent } from './product-attribute-value-form/product-attribute-value-form.component';\r\nimport { ActionResultViewModel } from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IPageId, PAGE_ID } from '../../../../../configs/page-id.config';\r\nimport { NhSelect } from '../../../../../shareds/components/nh-select/nh-select.component';\r\nimport { ProductAttributeValue } from './models/product-attribute-value.model';\r\n\r\n@Component({\r\n    selector: 'app-product-attribute-value',\r\n    templateUrl: './product-attribute-value.component.html'\r\n})\r\nexport class ProductAttributeValueComponent extends BaseListComponent<AttributeValueViewModel> implements OnInit {\r\n    @ViewChild(ProductAttributeValueFormComponent) productAttributeValueFormComponent: ProductAttributeValueFormComponent;\r\n    @Input() readOnly = false;\r\n    @Input() attributeId: string;\r\n    isActive?: boolean;\r\n\r\n    constructor(\r\n        @Inject(PAGE_ID) public pageId: IPageId,\r\n        private toastr: ToastrService,\r\n        private productAttributeService: ProductAttributeService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.WAREHOUSE, this.pageId.PRODUCT_ATTRIBUTE, 'Quản lý sản phẩm', 'Thuộc tính sản phẩm');\r\n    }\r\n\r\n    onActiveStatusSelected(event: NhSelect) {\r\n        if (event) {\r\n            this.isActive = event.id;\r\n        } else {\r\n            this.isActive = null;\r\n        }\r\n        this.search(1);\r\n    }\r\n\r\n    onChangeActiveStatus(attributeValue: AttributeValueViewModel) {\r\n        attributeValue.isActive = !attributeValue.isActive;\r\n        this.productAttributeService.updateValueActiveStatus(this.attributeId, attributeValue.id, attributeValue.isActive)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n            });\r\n    }\r\n\r\n    refresh() {\r\n        this.keyword = '';\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.subscribers.searchValues = this.productAttributeService.searchValues(this.attributeId, this.keyword, this.isActive,\r\n            this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<AttributeValueViewModel>) => {\r\n                if (result) {\r\n                    this.totalRows = result.totalRows;\r\n                    this.listItems = result.items;\r\n                }\r\n            });\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.subscribers.deleteValue = this.productAttributeService.deleteValue(this.attributeId, id)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                this.search(1);\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listAttributePageTitle\\\">Attributes</span>\\r\\n    <small i18n=\\\"@@productModuleTitle\\\">Product management</small>\\r\\n</h1>\\r\\n\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@enterKeyword\\\" i18n-placeholder placeholder=\\\"Enter keyword.\\\"\\r\\n               name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select [data]=\\\"[{id: false, name: 'InActive'},{id: true, name: 'Activated'}]\\\"\\r\\n                   title=\\\"-- All active status --\\\"\\r\\n                   i18n-title=\\\"@@allActiveStatus\\\"\\r\\n                   (itemSelected)=\\\"onActiveStatusSelected($event)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button class=\\\"btn blue\\\" [disabled]=\\\"isSearching\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"refresh()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <a routerLink=\\\"/products/attributes/add\\\" type=\\\"button\\\" class=\\\"btn blue\\\" i18n=\\\"@@add\\\"\\r\\n           *ngIf=\\\"permission.add\\\">\\r\\n            Add\\r\\n        </a>\\r\\n    </div>\\r\\n</form>\\r\\n<table class=\\\"table table-hover table-stripped\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@name\\\">Name</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@note\\\">Note</th>\\r\\n        <th class=\\\"center w100 middle\\\" i18n=\\\"@@selfResponding\\\">Self responding</th>\\r\\n        <th class=\\\"center w100\\\" i18n=\\\"@@multiple\\\">Multiple</th>\\r\\n        <th class=\\\"center w100 text-right\\\" i18n=\\\"@@require\\\">Require</th>\\r\\n        <th class=\\\"center w100 text-right\\\" i18n=\\\"@@active\\\">Active</th>\\r\\n        <th class=\\\"text-right w150\\\" i18n=\\\"@@actions\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Actions\\r\\n        </th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listItems; let i = index\\\"\\r\\n        nhContextMenuTrigger\\r\\n        [nhContextMenuTriggerFor]=\\\"nhMenu\\\"\\r\\n        [nhContextMenuData]=\\\"item\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            <a routerLink=\\\"/products/attributes/edit/{{ item.id }}\\\"\\r\\n               *ngIf=\\\"permission.edit; else noEditTemplate\\\">{{ item.name }}</a>\\r\\n            <ng-template #noEditTemplate>\\r\\n                {{ item.name }}\\r\\n            </ng-template>\\r\\n        </td>\\r\\n        <td>{{ item.note }}</td>\\r\\n        <td class=\\\"center\\\">\\r\\n            <mat-checkbox\\r\\n                [checked]=\\\"item.isSelfContent\\\"\\r\\n                [disabled]=\\\"!permission.edit\\\"\\r\\n                (change)=\\\"changeSelfContent(item)\\\"\\r\\n                color=\\\"primary\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"center\\\">\\r\\n            <mat-checkbox [checked]=\\\"item.isMultiple\\\"\\r\\n                          [disabled]=\\\"!permission.edit\\\"\\r\\n                          (change)=\\\"changeMultiple(item)\\\"\\r\\n                          color=\\\"primary\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"center\\\">\\r\\n            <mat-checkbox [checked]=\\\"item.isRequire\\\"\\r\\n                          [disabled]=\\\"!permission.edit\\\"\\r\\n                          (change)=\\\"changeRequire(item)\\\"\\r\\n                          color=\\\"primary\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"center\\\">\\r\\n            <mat-checkbox [checked]=\\\"item.isActive\\\"\\r\\n                          [disabled]=\\\"!permission.edit\\\"\\r\\n                          (change)=\\\"changeActive(item)\\\"\\r\\n                          color=\\\"primary\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"middle text-right w150\\\"\\r\\n            *ngIf=\\\"permission.edit || permission.delete || permission.view\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\">\\r\\n                    <li *ngIf=\\\"permission.view\\\">\\r\\n                        <a routerLink=\\\"/products/attributes/{{ item.id }}\\\">\\r\\n                            <i class=\\\"fa fa-eye\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@detail\\\">Detail</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.edit\\\">\\r\\n                        <a routerLink=\\\"/products/attributes/edit/{{ item.id }}\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@edit\\\">Edit</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"permission.delete\\\"\\r\\n                        [swal]=\\\"confirmDelete\\\"\\r\\n                        (click)=\\\"confirm(item)\\\">\\r\\n                        <a href=\\\"#\\\">\\r\\n                            <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                            <span class=\\\"cm-mgl-5\\\" i18n=\\\"@@delete\\\">Delete</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul><!-- END: nh-dropdown-menu -->\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            [pageShow]=\\\"6\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\"\\r\\n            [pageSize]=\\\"pageSize\\\"\\r\\n            (pageClick)=\\\"search($event)\\\"\\r\\n></ghm-paging>\\r\\n\\r\\n<swal\\r\\n    #confirmDelete\\r\\n    i18n-title=\\\"@@confirmDeleteTitle\\\"\\r\\n    i18n-text=\\\"@@confirmDeleteText\\\"\\r\\n    title=\\\"Are you sure for delete this attribute?\\\"\\r\\n    text=\\\"You can't recover this attribute after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Accept\\\"\\r\\n    cancelButtonText=\\\"Cancel\\\">\\r\\n</swal>\\r\\n\\r\\n<nh-menu #nhMenu>\\r\\n    <nh-menu-item (clicked)=\\\"detail($event)\\\">\\r\\n        <mat-icon class=\\\"menu-icon\\\">visibility</mat-icon>\\r\\n        <span i18n=\\\"@@detail\\\">Detail</span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item (clicked)=\\\"edit($event)\\\">\\r\\n        <mat-icon class=\\\"menu-icon\\\">edit</mat-icon>\\r\\n        <span i18n=\\\"@@edit\\\">Edit</span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item *ngIf=\\\"permission.delete\\\"\\r\\n                  (clicked)=\\\"confirm($event)\\\">\\r\\n        <mat-icon class=\\\"menu-icon\\\">delete</mat-icon>\\r\\n        <span i18n=\\\"@@edit\\\">Delete</span>\\r\\n    </nh-menu-item>\\r\\n</nh-menu>\\r\\n\"","import { AfterViewInit, Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../../base-list.component';\r\nimport { ProductAttributeViewModel } from './product-attribute.viewmodel';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SearchResultViewModel } from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { ProductAttributeService } from './product-attribute.service';\r\nimport { IPageId, PAGE_ID } from '../../../../configs/page-id.config';\r\nimport { NhSelect } from '../../../../shareds/components/nh-select/nh-select.component';\r\nimport { ActionResultViewModel } from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SwalComponent } from '@toverux/ngx-sweetalert2';\r\n\r\n@Component({\r\n    selector: 'app-product-attribute',\r\n    templateUrl: './product-attribute.component.html'\r\n})\r\nexport class ProductAttributeComponent extends BaseListComponent<ProductAttributeViewModel> implements OnInit, AfterViewInit {\r\n    @ViewChild('confirmDelete') swalConfirmDelete: SwalComponent;\r\n    isSelfContent: boolean;\r\n    isRequire: boolean;\r\n    isActive: boolean;\r\n    productAttributeValue: string;\r\n\r\n    constructor(\r\n        @Inject(PAGE_ID) public pageId: IPageId,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private toastr: ToastrService,\r\n        private productAttributeService: ProductAttributeService) {\r\n        super();\r\n\r\n        this.subscribers.routeData = this.route.data.subscribe((result: { data: SearchResultViewModel<ProductAttributeViewModel> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            this.listItems = data.items;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.WAREHOUSE, this.pageId.PRODUCT_ATTRIBUTE, 'Quản lý sản phẩm', 'Thuộc tính sản phẩm');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.swalConfirmDelete.confirm.subscribe(result => {\r\n            this.delete(this.productAttributeValue);\r\n        });\r\n    }\r\n\r\n    onActiveStatusSelected(event: NhSelect) {\r\n        if (event) {\r\n            this.isActive = event.id;\r\n        } else {\r\n            this.isActive = null;\r\n        }\r\n        this.search(1);\r\n    }\r\n\r\n    refresh() {\r\n        this.keyword = '';\r\n        this.isSelfContent = null;\r\n        this.isActive = null;\r\n        this.isRequire = null;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.subscribers.searchProductAttributes = this.productAttributeService\r\n            .search(this.keyword, this.isSelfContent, this.isRequire, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<ProductAttributeViewModel>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listItems = result.items;\r\n            });\r\n    }\r\n\r\n    detail(productAttribute: ProductAttributeViewModel) {\r\n        this.router.navigateByUrl(`/products/attributes/${productAttribute.id}`);\r\n    }\r\n\r\n    edit(productAttribute: ProductAttributeViewModel) {\r\n        this.router.navigateByUrl(`/products/attributes/edit/${productAttribute.id}`);\r\n    }\r\n\r\n    confirm(productAttribute: ProductAttributeViewModel) {\r\n        this.productAttributeValue = productAttribute.id;\r\n        this.swalConfirmDelete.show();\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.subscribers.delete = this.productAttributeService.delete(id)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                this.search(this.currentPage);\r\n            });\r\n    }\r\n\r\n    changeSelfContent(attribute: ProductAttributeViewModel) {\r\n        this.subscribers.changeSelfContent = this.productAttributeService.updateSelfContent(attribute.id, !attribute.isSelfContent)\r\n            .subscribe((result: ActionResultViewModel) => this.toastr.success(result.message));\r\n    }\r\n\r\n\r\n    changeMultiple(attribute: ProductAttributeViewModel) {\r\n        this.subscribers.changeMultiple = this.productAttributeService.updateMultiple(attribute.id, !attribute.isMultiple)\r\n            .subscribe((result: ActionResultViewModel) => this.toastr.success(result.message));\r\n    }\r\n\r\n    changeRequire(attribute: ProductAttributeViewModel) {\r\n        this.subscribers.changeRequire = this.productAttributeService.updateRequire(attribute.id, !attribute.isRequire)\r\n            .subscribe((result: ActionResultViewModel) => this.toastr.success(result.message));\r\n    }\r\n\r\n    changeActive(attribute: ProductAttributeViewModel) {\r\n        this.subscribers.changeActive = this.productAttributeService.updateActive(attribute.id, !attribute.isActive)\r\n            .subscribe((result: ActionResultViewModel) => this.toastr.success(result.message));\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../configs/app.config';\r\nimport { SpinnerService } from '../../../../core/spinner/spinner.service';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { SearchResultViewModel } from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport { ProductAttributeViewModel } from './product-attribute.viewmodel';\r\nimport { Observable } from 'rxjs';\r\nimport { ActionResultViewModel } from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport { ProductAttributeValue } from './product-attribute-value/models/product-attribute-value.model';\r\nimport { ProductAttribute } from './product-attribute-form/models/product-attribute.model';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { ProductAttributeDetailViewModel } from './product-attribute-detail/product-attribute-detail.viewmodel';\r\nimport { NhSuggestion } from '../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { AttributeValueViewModel } from './product-attribute-value/product-attribute-value.viewmodel';\r\n\r\n@Injectable()\r\nexport class ProductAttributeService implements Resolve<any> {\r\n    url = 'api/v1/warehouse/attributes';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(queryParams.keyword, queryParams.isSelfContent, queryParams.isRequire, queryParams.isActive,\r\n            queryParams.page, queryParams.pageSize);\r\n    }\r\n\r\n    insert(attribute: ProductAttribute): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(this.url, attribute)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, attribute: ProductAttribute): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/${id}`, attribute)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateActive(id: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/active/${isActive}`, {}) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateMultiple(id: string, isMultiple: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.get(`${this.url}/${id}/multiple/${isMultiple}`) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateRequire(id: string, isRequire: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.get(`${this.url}/${id}/require/${isRequire}`) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateSelfContent(id: string, isSelfContent: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.get(`${this.url}/${id}/self-content/${isSelfContent}`) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ProductAttribute> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${id}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel<ProductAttribute>) => result.data)\r\n            ) as Observable<ProductAttribute>;\r\n    }\r\n\r\n    getDetailWithValues(id: string): Observable<ProductAttributeDetailViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${id}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel<ProductAttributeDetailViewModel>) => {\r\n                    return result.data;\r\n                })\r\n            ) as Observable<ProductAttributeDetailViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${id}`) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    search(keyword: string, isSelfContent?: boolean, isRequire?: boolean, isActive?: boolean, page?: number,\r\n           pageSize?: number): Observable<SearchResultViewModel<ProductAttributeViewModel>> {\r\n        return this.http.get(this.url, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isSelfContent', isSelfContent != null && isSelfContent !== undefined ? isSelfContent.toString() : '')\r\n                .set('isRequire', isRequire != null && isRequire !== undefined ? isRequire.toString() : '')\r\n                .set('isActive', isActive != null && isActive !== undefined ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<SearchResultViewModel<ProductAttributeViewModel>>;\r\n    }\r\n\r\n    searchValues(attributeId: string, keyword: string, isActive?: boolean, page?: number,\r\n                 pageSize?: number): Observable<SearchResultViewModel<AttributeValueViewModel>> {\r\n        return this.http.get(`${this.url}/${attributeId}/values`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null && isActive !== undefined ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<SearchResultViewModel<AttributeValueViewModel>>;\r\n    }\r\n\r\n    insertValue(attributeId: string, attributeValue: ProductAttributeValue): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${attributeId}/values`, attributeValue) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateValue(attributeId: string, attributeValueId: string, attributeValue: ProductAttributeValue): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${attributeId}/values/${attributeValueId}`, attributeValue) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateValueActiveStatus(attributeId: string, attributeValueId: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/${attributeId}/values/${attributeValueId}/active/${isActive}`,\r\n            {})\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    deleteValue(attributeId: string, valueId: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${attributeId}/values/${valueId}`) as  Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getValueDetail(attributeId: string, attributeValueId: string): Observable<ProductAttributeValue> {\r\n        return this.http.get(`${this.url}/${attributeId}/values/${attributeValueId}`)\r\n            .pipe(map((result: ActionResultViewModel<ProductAttributeValue>) => result.data))as Observable<ProductAttributeValue>;\r\n    }\r\n\r\n    suggestions(keyword: string, page: number, pageSize: number): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/suggestion`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    suggestionValue(productAttributeId: string, keyword: string, page: number,\r\n                    pageSize: number): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/${productAttributeId}/suggestion`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n}\r\n","export class ProductCategoryTranslation {\r\n    productCategoryId: number;\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n","import {ProductCategoryTranslation} from './product-category-translation.model';\r\nimport {ProductCategoryAttribute} from '../product-category-attribute/product-category-attribute.model';\r\n\r\nexport class ProductCategory {\r\n    id: number;\r\n    parentId: number;\r\n    idPath: string;\r\n    isActive: boolean;\r\n    order: number;\r\n    concurrencyStamp: string;\r\n    productCategoryAttributes: ProductCategoryAttribute[]\r\n    translations: ProductCategoryTranslation[];\r\n\r\n    constructor(id?: number, parentId?: number, idPath?: string, isActive?: boolean, order?: number,\r\n                childCount?: number, concurrencyStamp?: string) {\r\n        this.id = id ? id : -1;\r\n        this.parentId = parentId;\r\n        this.idPath = idPath;\r\n        this.isActive = isActive !== undefined ? isActive : true;\r\n        this.order = order ? order : 0;\r\n        this.concurrencyStamp = concurrencyStamp;\r\n        this.translations = [];\r\n        this.productCategoryAttributes = [];\r\n    }\r\n}\r\n","export class ProductCategoryAttribute {\r\n    categoryId: number;\r\n    attributeId: string;\r\n\r\n    constructor(categoryId?: number, attributeId?: string) {\r\n        this.categoryId = categoryId ? categoryId : -1;\r\n        this.attributeId = attributeId;\r\n    }\r\n}\r\n","export class ProductCategoryAttributeViewModel {\r\n    categoryId: number;\r\n    attributeId: string;\r\n    attributeName: string;\r\n\r\n    constructor(categoryId?: number, attributeId?: string, attributeName?: string) {\r\n        this.categoryId = categoryId ? categoryId : -1;\r\n        this.attributeId = attributeId;\r\n        this.attributeName = attributeName;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #productCategoryFormModal size=\\\"lg\\\"\\r\\n          (shown)=\\\"onModalShow()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header class=\\\"uppercase bold\\\">\\r\\n        {isUpdate, select, 0 {Thêm mới nhóm sản phẩm} 1 {Cập nhật nhóm sản phẩm} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <nh-tab>\\r\\n                        <nh-tab-pane [active]=\\\"true\\\"\\r\\n                                     title=\\\"Nhóm Sản Phẩm\\\"\\r\\n                                     i18n-title=\\\"@@productCategoryInfo\\\"\\r\\n                                     id=\\\"productCategoryInfo\\\">\\r\\n                            <div formArrayName=\\\"translations\\\">\\r\\n                                <div class=\\\"form-group\\\" *ngIf=\\\"languages && languages.length > 0\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Ngôn Ngữ\\\"\\r\\n                                           class=\\\"col-sm-4 control-label\\\"\\r\\n                                           [required]=\\\"true\\\"></label>\\r\\n                                    <div class=\\\"col-sm-8\\\">\\r\\n                                        <nh-select [data]=\\\"languages\\\"\\r\\n                                                   i18n-title=\\\"@@pleaseSelectLanguage\\\"\\r\\n                                                   title=\\\"-- Chọn ngôn ngữ --\\\"\\r\\n                                                   name=\\\"language\\\"\\r\\n                                                   [(value)]=\\\"currentLanguage\\\"\\r\\n                                                   (onSelectItem)=\\\"currentLanguage = $event.id\\\"></nh-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group cm-mgb-10\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@productCategory\\\" ghmLabel=\\\"Nhóm Sản Phẩm\\\"\\r\\n                                           class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                    <div class=\\\"col-sm-8\\\" [formGroup]=\\\"model\\\">\\r\\n                                        <nh-dropdown-tree\\r\\n                                            [width]=\\\"500\\\"\\r\\n                                            [data]=\\\"productCategoryTree\\\" i18n-title=\\\"@@selectProductCategory\\\"\\r\\n                                            [title]=\\\"'-- Chọn nhóm cha --'\\\"\\r\\n                                            i18n-title=\\\"@@productCategoryTitle\\\"\\r\\n                                            formControlName=\\\"parentId\\\">\\r\\n                                        </nh-dropdown-tree>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                                     *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                     [formGroupName]=\\\"i\\\"\\r\\n                                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                                    <label i18n-ghmLabel=\\\"@@categoryName\\\" ghmLabel=\\\"Tên Nhóm Sản Phẩm\\\"\\r\\n                                           class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                    <div class=\\\"col-sm-8\\\">\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"{{'name ' + currentLanguage}}\\\"\\r\\n                                               i18n-placeholder=\\\"@@enterCategoryNamePlaceHolder\\\"\\r\\n                                               placeholder=\\\"Enter category name.\\\"\\r\\n                                               formControlName=\\\"name\\\">\\r\\n                                        <span class=\\\"help-block\\\">{ translationFormErrors[modelTranslation.value.languageId]?.name, select,\\r\\n                                                        required {Tên nhóm sản phẩm không được đê trống}\\r\\n                                                        maxLength {Tên nhóm sản phẩm không được vượt quá 256 ký tự}\\r\\n                                                        pattern {Tên nhóm sản phẩm phải là ký tự}}\\r\\n                            </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                     *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                                     [formGroupName]=\\\"i\\\"\\r\\n                                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                                    <label i18n=\\\"@@description\\\" i18n-ghmLabel ghmLabel=\\\"Mô tả\\\"\\r\\n                                           class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                                    <div class=\\\"col-sm-8\\\">\\r\\n                                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                                              formControlName=\\\"description\\\"\\r\\n                                                              i18n-placeholder=\\\"@@enterDescriptionPlaceholder\\\"\\r\\n                                                              placeholder=\\\"Enter description.\\\"></textarea>\\r\\n                                        <span class=\\\"help-block\\\">\\r\\n                                                        { translationFormErrors[modelTranslation.value.languageId]?.description, select, maxLength {Mô tả không được vượt quá 500 ký tự} }\\r\\n                                                    </span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                                    <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                        <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                                            {model.value.isActive, select, 0 {Chưa kích hoạt} 1 {Kich Hoạt}}\\r\\n                                        </mat-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </nh-tab-pane>\\r\\n                        <nh-tab-pane title=\\\"Thuộc Tính Sản Phẩm\\\"\\r\\n                                     i18n-title=\\\"@@productCategoryAttribute\\\"\\r\\n                                     i18n=\\\"productCategoryAttribute\\\">\\r\\n                            <div class=\\\"table-reponsive\\\">\\r\\n                                <table class=\\\"table table-striped table-hover\\\">\\r\\n                                    <thead>\\r\\n                                    <tr>\\r\\n                                        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">STT</th>\\r\\n                                        <th class=\\\"middle\\\" i18n=\\\"@@user\\\">Thuộc Tính Sản Phẩm</th>\\r\\n                                        <th class=\\\"middle center w50\\\" i18n=\\\"@@actions\\\">Thao Tác</th>\\r\\n                                    </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of listProductCategoryAttributeViewModel let i = index\\\">\\r\\n                                        <td class=\\\"center middle\\\">{{i + 1 }}</td>\\r\\n                                        <td class=\\\"middle\\\">\\r\\n                                            {{item.attributeName}}\\r\\n                                        </td>\\r\\n                                        <td class=\\\"middle text-right\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-sm red\\\"\\r\\n                                                    i18n-matTooltip=\\\"@@delete\\\"\\r\\n                                                    matTooltip=\\\"Xóa\\\"\\r\\n                                                    (click)=\\\"deleteAttribute(item, i)\\\">\\r\\n                                                <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                                            </button>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    </tbody>\\r\\n                                    <tfoot>\\r\\n                                    <tr>\\r\\n                                        <td></td>\\r\\n                                        <td>\\r\\n                                            <nh-suggestion\\r\\n                                                i18n-placeholder=\\\"@@productAttributeSuggestionPlaceholder\\\"\\r\\n                                                placeholder=\\\"Nhập thuộc tính sản phẩm\\\"\\r\\n                                                [selectedItems]=\\\"productCategoryAttributeSelect\\\"\\r\\n                                                [sources]=\\\"productCategoryAttributeSuggestions\\\"\\r\\n                                                [loading]=\\\"isSearchingProductCategory\\\"\\r\\n                                                (searched)=\\\"onSearched($event)\\\"\\r\\n                                                (itemSelected)=\\\"onSelectedProductAttribute($event)\\\"\\r\\n                                            ></nh-suggestion>\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                    </tfoot>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </nh-tab-pane>\\r\\n                    </nh-tab>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Tiếp tục thêm\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn blue cm-mgr-5\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@Save\\\">Lưu</span>\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Đóng</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../../../base-form.component';\r\nimport { ProductCategory } from '../model/product-category.model';\r\nimport { TreeData } from '../../../../../view-model/tree-data';\r\nimport { UtilService } from '../../../../../shareds/services/util.service';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ProductCategoryTranslation } from '../model/product-category-translation.model';\r\nimport { ProductCategoryService } from '../service/product-category-service';\r\nimport { ActionResultViewModel } from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport { ProductCategoryDetailViewModel } from '../viewmodel/product-category-detail.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport { Pattern } from '../../../../../shareds/constants/pattern.const';\r\nimport { ProductCategoryAttribute } from '../product-category-attribute/product-category-attribute.model';\r\nimport { NhTabComponent } from '../../../../../shareds/components/nh-tab/nh-tab.component';\r\nimport { NhSuggestion } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { ProductAttributeService } from '../../product-attribute/product-attribute.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ProductCategoryAttributeViewModel } from '../product-category-attribute/product-category-attribute.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-product-category-form',\r\n    templateUrl: './product-category-form.component.html',\r\n})\r\n\r\nexport class ProductCategoryFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('productCategoryFormModal') productCategoryFormModal: NhModalComponent;\r\n    @ViewChild(NhTabComponent) nhTabComponent: NhTabComponent;\r\n    productCategory = new ProductCategory();\r\n    productCategoryTree: TreeData[] = [];\r\n    modelTranslation = new ProductCategoryTranslation();\r\n    isGettingTree = false;\r\n    productCategoryAttributes: ProductCategoryAttribute[] = [];\r\n    listProductCategoryAttributeViewModel: ProductCategoryAttributeViewModel[];\r\n    productCategoryAttributeSuggestions: NhSuggestion[];\r\n    isSearchingProductCategory;\r\n    categoryText;\r\n    productCategoryAttributeSelect: NhSuggestion[];\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private productCategoryService: ProductCategoryService,\r\n                private productAttributeService: ProductAttributeService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalShow() {\r\n        this.getProductCategoryTree();\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.resetForm();\r\n        this.utilService.focusElement('name ' + this.currentLanguage);\r\n        this.renderForm();\r\n        this.productCategoryFormModal.open();\r\n    }\r\n\r\n    edit(id: number) {\r\n        this.utilService.focusElement('name ' + this.currentLanguage);\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n        this.productCategoryFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        const isLanguageValid = this.validateLanguage();\r\n        if (isValid && isLanguageValid) {\r\n            this.productCategory = this.model.value;\r\n            this.productCategory.productCategoryAttributes = this.productCategoryAttributes;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.productCategoryService\r\n                    .update(this.id, this.productCategory)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.reloadTree();\r\n                        this.saveSuccessful.emit();\r\n                        this.productCategoryFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.productCategoryService\r\n                    .insert(this.productCategory)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.utilService.focusElement('name ' + this.currentLanguage);\r\n                            this.getProductCategoryTree();\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.saveSuccessful.emit();\r\n                            this.productCategoryFormModal.dismiss();\r\n                        }\r\n                        this.reloadTree();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onSearched(keyword) {\r\n        this.isSearchingProductCategory = true;\r\n        this.subscribers.searchSuggestionProductAttribute = this.productAttributeService\r\n            .suggestions(keyword, 1, 20)\r\n            .pipe(\r\n                finalize(() => this.isSearchingProductCategory = false)\r\n            )\r\n            .subscribe((result: SearchResultViewModel<NhSuggestion>) => this.productCategoryAttributeSuggestions = result.items);\r\n    }\r\n\r\n    onSelectedProductAttribute(value: NhSuggestion) {\r\n        if (value) {\r\n            const countByProductAttributeId = _.countBy(this.productCategoryAttributes, (item: ProductCategoryAttribute) => {\r\n                return item.attributeId === value.id;\r\n            }).true;\r\n\r\n            if (countByProductAttributeId && countByProductAttributeId > 0) {\r\n                this.toastr.error('This attribute aldresdy exists');\r\n                return;\r\n            }\r\n\r\n            this.productCategoryAttributes.push(new ProductCategoryAttribute(this.id, value.id.toString()));\r\n            this.listProductCategoryAttributeViewModel\r\n                .push(new ProductCategoryAttributeViewModel(this.id, value.id.toString(), value.name));\r\n            this.productCategoryAttributeSelect = null;\r\n        } else {\r\n            this.productCategoryAttributeSelect = null;\r\n        }\r\n    }\r\n\r\n    deleteAttribute(value, index: number) {\r\n        _.pullAt(this.productCategoryAttributes, [index]);\r\n        _.remove(this.listProductCategoryAttributeViewModel, (item: ProductCategoryAttributeViewModel) => {\r\n            return item.attributeId === value.attributeId;\r\n        });\r\n    }\r\n\r\n    reloadTree() {\r\n        this.isGettingTree = true;\r\n        this.productCategoryService.getTree().subscribe((result: any) => {\r\n            this.isGettingTree = false;\r\n            this.productCategoryTree = result;\r\n        });\r\n    }\r\n\r\n    onParentSelect(productCategory: TreeData) {\r\n        this.model.patchValue({parentId: productCategory ? productCategory.id : null});\r\n    }\r\n\r\n    private getDetail(id: number) {\r\n        this.subscribers.productCategoryService = this.productCategoryService\r\n            .getDetail(id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<ProductCategoryDetailViewModel>) => {\r\n                    const productCategoryDetail = result.data;\r\n                    if (productCategoryDetail) {\r\n                        this.model.patchValue({\r\n                            isActive: productCategoryDetail.isActive,\r\n                            order: productCategoryDetail.order,\r\n                            parentId: productCategoryDetail.parentId,\r\n                            concurrencyStamp: productCategoryDetail.concurrencyStamp,\r\n                        });\r\n\r\n                        if (productCategoryDetail.productCategoryAttributes && productCategoryDetail.productCategoryAttributes.length > 0) {\r\n                            this.productCategoryAttributes = [];\r\n                            _.each(productCategoryDetail.productCategoryAttributes, (item: ProductCategoryAttributeViewModel) => {\r\n                                this.productCategoryAttributes.push(new ProductCategoryAttribute(item.categoryId, item.attributeId));\r\n                            });\r\n                        } else {\r\n                            this.productCategoryAttributes = [];\r\n                        }\r\n                        this.listProductCategoryAttributeViewModel = productCategoryDetail.productCategoryAttributes;\r\n\r\n                        if (productCategoryDetail.translations && productCategoryDetail.translations.length > 0) {\r\n                            this.translations.controls.forEach(\r\n                                (model: FormGroup) => {\r\n                                    const detail = _.find(\r\n                                        productCategoryDetail.translations,\r\n                                        (productCategoryTranslation: ProductCategoryTranslation) => {\r\n                                            return (\r\n                                                productCategoryTranslation.languageId ===\r\n                                                model.value.languageId\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    if (detail) {\r\n                                        model.patchValue(detail);\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    private getProductCategoryTree() {\r\n        this.subscribers.getTree = this.productCategoryService\r\n            .getTree()\r\n            .subscribe((result: TreeData[]) => {\r\n                this.productCategoryTree = result;\r\n            });\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError([]);\r\n        this.model = this.fb.group({\r\n            parentId: [this.productCategory.parentId],\r\n            isActive: [this.productCategory.isActive],\r\n            order: [this.productCategory.order],\r\n            concurrencyStamp: [this.productCategory.concurrencyStamp],\r\n            productCategoryAttributes: [this.productCategoryAttributes],\r\n            translations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.categoryText = '-';\r\n        this.model.patchValue({\r\n            parentId: null,\r\n            isActive: true,\r\n            order: 0,\r\n        });\r\n        this.translations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n            });\r\n        });\r\n        this.productCategoryAttributes = [];\r\n        this.listProductCategoryAttributeViewModel = [];\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name', 'description']\r\n        );\r\n        this.translationValidationMessage[\r\n            language\r\n            ] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxlength', 'pattern']},\r\n            {description: ['maxlength']},\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256), Validators.pattern(Pattern.whiteSpace)]\r\n            ],\r\n            description: [\r\n                this.modelTranslation.description,\r\n                [Validators.maxLength(500)]\r\n            ]\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslation(false)\r\n        );\r\n        return translationModel;\r\n    };\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@searchPlaceHolder\\\"\\n               placeholder=\\\"Please enter categoryName\\\"\\n               (keyup)=\\\"keyword = searchGroupKeyword.value\\\" #searchGroupKeyword/>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button type=\\\"button\\\" class=\\\"btn blue\\\">\\n          <i class=\\\"fa fa-search\\\"></i>\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n<div class=\\\"row cm-mgt-10\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <ul class=\\\"media-list select-category-container cm-pdl-0\\\">\\n      <li class=\\\"media cursor-pointer\\\" *ngFor=\\\"let item of listGroup\\\"\\n          [class.selected]=\\\"item.selected\\\"\\n          (click)=\\\"onSelectItem(item)\\\">\\n        <h4>{{item.name}}</h4>\\n      </li>\\n    </ul>\\n    <ghm-paging [totalRows]=\\\"totalRows\\\" [pageSize]=\\\"pageSize\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\"\\n                (pageClick)=\\\"search($event)\\\"\\n                [isDisabled]=\\\"isSearching\\\" i18n-pageName=\\\"@@news\\\" pageName=\\\"News\\\"></ghm-paging>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 text-right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn blue cm-mgr-5\\\" (click)=\\\"accept()\\\" i18n=\\\"@@accept\\\">\\n      Accept\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn default\\\" (click)=\\\"cancel()\\\" i18n=\\\"@@close\\\">\\n      Close\\n    </button>\\n  </div>\\n</div>\\n\"","module.exports = \".select-category-container {\\n  list-style-type: none; }\\n  .select-category-container li {\\n    padding: 5px; }\\n  .select-category-container li h4 {\\n      margin-top: 0px;\\n      margin-bottom: 0px; }\\n  .select-category-container .media {\\n    margin-top: 10px; }\\n  .select-category-container .media:first-child {\\n      margin-top: 0px; }\\n  .select-category-container .selected {\\n    border-left: 3px solid #007455; }\\n  .list-items {\\n  border: none !important; }\\n\"","import {AfterViewInit, Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {ToastrService} from 'ngx-toastr';\nimport {CategoryService} from '../../../../news/category/category.service';\nimport {BaseListComponent} from '../../../../../base-list.component';\nimport {ProductCategory} from '../model/product-category.model';\nimport * as _ from 'lodash';\nimport {ProductCategoryService} from '../service/product-category-service';\n\n@Component({\n  selector: 'app-product-category-select',\n  templateUrl: './product-category-select.component.html',\n  styleUrls: ['./product-category-select.component.scss']\n})\nexport class ProductCategorySelectComponent extends BaseListComponent<ProductCategory> implements OnInit, AfterViewInit {\n\n  @Output() onCancel = new EventEmitter();\n  @Output() onAccept = new EventEmitter();\n  type = 0;\n  keyword = '';\n  listGroup = [];\n\n  constructor(private toastr: ToastrService,\n              private productCategoryService: ProductCategoryService) {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.search(1);\n  }\n\n  search(currentPage) {\n    this.currentPage = currentPage;\n    this.isSearching = true;\n    this.productCategoryService.search(this.keyword, true , this.currentPage, this.pageSize)\n        .subscribe((result: any) => {\n          this.isSearching = true;\n          this.listGroup = _.map(result.items, (item: any) => {\n            item.selected = false;\n            return item;\n          });\n          this.totalRows = result.totalRows;\n        });\n  }\n\n  onTabSelect(index) {\n    this.type = index;\n    this.search(1);\n  }\n\n  onSelectItem(groupItem) {\n    groupItem.selected = !groupItem.selected;\n  }\n\n  accept() {\n    const listSelectedItem = _.filter(this.listGroup, (item) => {\n      return item.selected;\n    });\n\n    if (listSelectedItem.length === 0) {\n      this.toastr.warning('Vui lòng chọn ít nhất 1 nhóm.');\n      return;\n    }\n    this.onAccept.emit(_.map(listSelectedItem, (item, index) => {\n      return {\n        id: item.id,\n        name: item.name,\n        order: index\n      };\n    }));\n  }\n\n  cancel() {\n    this.onCancel.emit();\n  }\n\n}\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listProductCategoryPageTitle\\\">Danh sách nhóm sản phẩm</span>\\r\\n    <small i18n=\\\"@@productModuleTitle\\\">Quản lý sản phẩm</small>\\r\\n</h1>\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@keywordSearch\\\" i18n-placeholder\\r\\n               placeholder=\\\"Nhập từ khóa tìm kiếm\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'inActive'},{id: true, name: 'Active'}]\\\"\\r\\n            i18n=\\\"@@selectStatus\\\"\\r\\n            i18n-title\\r\\n            [title]=\\\"'-- Chọn trạng thái --'\\\"\\r\\n            [(value)]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"selectIsActive($event)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button class=\\\"btn blue cm-mgr-5\\\" *ngIf=\\\"permission.add\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\"\\r\\n                type=\\\"button\\\">\\r\\n            Thêm\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n<table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">STT</th>\\r\\n        <th class=\\\"middle \\\" i18n=\\\"@@questionGroup\\\">Nhóm Sản Phẩm</th>\\r\\n        <th class=\\\"middle center\\\" i18n=\\\"@@status\\\">Trạng Thái</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@description\\\">Mô Tả</th>\\r\\n        <th class=\\\"middle text-right w150\\\" i18n=\\\"@@actions\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Thao Tác</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listProductCategory; let i = index\\\"\\r\\n        nhContextMenuTrigger\\r\\n        [nhContextMenuTriggerFor]=\\\"nhMenu\\\"\\r\\n        [nhContextMenuData]=\\\"item\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\"><span [innerHTML]=\\\"item.nameLevel\\\"></span>{{ item.name }}</td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            <mat-checkbox *ngIf=\\\"!item.isActive\\\" color=\\\"primary\\\" [checked]=\\\"item.isActive\\\"\\r\\n                          (change)=\\\"updateStatus(item)\\\"></mat-checkbox>\\r\\n            <mat-checkbox *ngIf=\\\"item.isActive\\\" color=\\\"primary\\\"[checked]=\\\"item.isActive\\\"\\r\\n                          [swal]=\\\"waringUpdateProductCategory\\\"\\r\\n                          (confirm)=\\\"updateStatus(item)\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"middle\\\">{{item.description}}</td>\\r\\n        <td class=\\\"text-right middle\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.edit\\\"\\r\\n                           (click)=\\\"edit(item)\\\"\\r\\n                           i18n=\\\"@@edit\\\">\\r\\n                            <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                            Sửa\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a (click)=\\\"confirm(item)\\\" i18n=\\\"@@delete\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                            Xóa\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ghm-paging\\r\\n    class=\\\"pull-right\\\"\\r\\n    [totalRows]=\\\"totalRows\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    [pageShow]=\\\"6\\\"\\r\\n    [pageSize]=\\\"pageSize\\\"\\r\\n    (pageClick)=\\\"search($event)\\\"\\r\\n    i18n=\\\"@@productCategory\\\" i18n-pageName\\r\\n    [pageName]=\\\"'Category'\\\">\\r\\n</ghm-paging>\\r\\n\\r\\n<app-product-category-form (saveSuccessful)=\\\"search(1)\\\"></app-product-category-form>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteProductCategory\\r\\n    i18n=\\\"@@confirmDeleteProductCategory\\\"\\r\\n    i18n-title=\\\"@@confirmTitleDeleteProductCategory\\\"\\r\\n    i18n-text=\\\"@@confirmTextDeleteProductCategory\\\"\\r\\n    title=\\\"Bạn có muốn xóa nhóm sản phẩm này?\\\"\\r\\n    text=\\\"Bạn không thể khôi phục nhóm sản phẩm này sau khi xóa.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Đồng Ý\\\"\\r\\n    cancelButtonText=\\\"Hủy\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n<swal\\r\\n    #waringUpdateProductCategory\\r\\n    i18n=\\\"@@waringUpdateProductCategory\\\"\\r\\n    i18n-title=\\\"@@waringTitleUpdateProductCategory\\\"\\r\\n    i18n-text=\\\"@@waringTextUpdateProductCategory\\\"\\r\\n    title=\\\"Are you sure for update status isActive this product category?\\\"\\r\\n    text=\\\"All children product category deactivate .\\\"\\r\\n    type=\\\"warning\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Đồng Ý\\\"\\r\\n    cancelButtonText=\\\"Hủy\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n<nh-menu #nhMenu>\\r\\n    <nh-menu-item (clicked)=\\\"edit($event)\\\">\\r\\n       <i class=\\\"fa fa-edit\\\"></i>\\r\\n        <span i18n=\\\"@@edit\\\">Sửa</span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item *ngIf=\\\"permission.delete\\\"\\r\\n                  (clicked)=\\\"confirm($event)\\\">\\r\\n       <i class=\\\"fa fa-trash\\\"></i>\\r\\n        <span i18n=\\\"@@edit\\\">Xóa</span>\\r\\n    </nh-menu-item>\\r\\n</nh-menu>\\r\\n\\r\\n\"","import {BaseListComponent} from '../../../../base-list.component';\r\nimport {ProductCategorySearchViewModel} from './viewmodel/product-category-search.viewmodel';\r\nimport {AfterViewInit, Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {HelperService} from '../../../../shareds/services/helper.service';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {IPageId, PAGE_ID} from '../../../../configs/page-id.config';\r\nimport {Location} from '@angular/common';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {QuestionGroupSearchViewModel} from '../../../surveys/question-group/viewmodels/question-group-search-viewmodel';\r\nimport {FilterLink} from '../../../../shareds/models/filter-link.model';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ProductCategoryFormComponent} from './product-category-form/product-category-form.component';\r\nimport {ProductCategoryService} from './service/product-category-service';\r\nimport * as _ from 'lodash';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {SwalComponent} from '@toverux/ngx-sweetalert2';\r\n\r\n@Component({\r\n    selector: 'app-product-category',\r\n    templateUrl: './product-category.component.html',\r\n    providers: [HelperService, Location]\r\n})\r\n\r\nexport class ProductCategoryComponent extends BaseListComponent<ProductCategorySearchViewModel> implements OnInit, AfterViewInit {\r\n    @ViewChild(ProductCategoryFormComponent) productCategoryFormComponent: ProductCategoryFormComponent;\r\n    @ViewChild('confirmDeleteProductCategory') swalConfirmDelete: SwalComponent;\r\n    isActive;\r\n    listProductCategory: ProductCategorySearchViewModel[];\r\n    productCategoryId;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private location: Location,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private productCategoryService: ProductCategoryService,\r\n                private helperService: HelperService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.PRODUCT, this.pageId.PRODUCT_CATEGORY, 'Quản lý loại sản phẩm', 'Quản lý phân loại sản phẩm');\r\n        this.subscribers.data = this.route.data.subscribe((result: { data: SearchResultViewModel<ProductCategorySearchViewModel> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            this.listProductCategory = data.items;\r\n        });\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.isActive = params.isActive !== null && params.isActive !== '' && params.isActive !== undefined\r\n                ? Boolean(params.isActive) : '';\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.swalConfirmDelete.confirm.subscribe(result => {\r\n            this.delete(this.productCategoryId);\r\n        });\r\n    }\r\n\r\n    searchKeyUp(keyword) {\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderFilterLink();\r\n        this.productCategoryService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((data: SearchResultViewModel<ProductCategorySearchViewModel>) => {\r\n                this.totalRows = data.totalRows;\r\n                this.listProductCategory = data.items;\r\n            });\r\n    }\r\n\r\n    selectIsActive(value) {\r\n        if (value) {\r\n            this.isActive = value.id;\r\n        } else {\r\n            this.isActive = null;\r\n        }\r\n\r\n        this.search(1);\r\n    }\r\n\r\n    onPageClick(page: number) {\r\n        this.currentPage = page;\r\n        this.search(1);\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    add() {\r\n        this.productCategoryFormComponent.add();\r\n    }\r\n\r\n    edit(questionGroup: QuestionGroupSearchViewModel) {\r\n        this.productCategoryFormComponent.edit(questionGroup.id);\r\n    }\r\n\r\n    delete(id: number) {\r\n        this.productCategoryService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(1);\r\n                // _.remove(this.listProductCategory, (item: ProductCategorySearchViewModel) => {\r\n                //     return item.id === id;\r\n                // });\r\n            });\r\n    }\r\n\r\n    updateStatus(item: ProductCategorySearchViewModel) {\r\n        this.productCategoryService.updateStatus(item.id, !item.isActive).subscribe((result: ActionResultViewModel) => {\r\n            item.isActive = !item.isActive;\r\n\r\n\r\n            if (!item.isActive) {\r\n                const listChildren = _.filter(this.listProductCategory, (child: ProductCategorySearchViewModel) => {\r\n                    return child.idPath.indexOf(item.idPath + '.') > -1;\r\n                });\r\n                if (listChildren && listChildren.length > 0) {\r\n                    _.each(listChildren, (childItem: ProductCategorySearchViewModel) => {\r\n                        childItem.isActive = item.isActive;\r\n                    });\r\n                }\r\n            } else {\r\n                const listParent = _.filter(this.listProductCategory, (parent: ProductCategorySearchViewModel) => {\r\n                    return item.idPath.indexOf(parent.idPath + '.') > -1;\r\n                });\r\n                if (listParent && listParent.length > 0) {\r\n                    _.each(listParent, (parentItem: ProductCategorySearchViewModel) => {\r\n                        parentItem.isActive = item.isActive;\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    confirm(value: ProductCategorySearchViewModel) {\r\n        this.swalConfirmDelete.show();\r\n        this.productCategoryId = value.id;\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = 'products/categories';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","import {finalize} from 'rxjs/internal/operators';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\nimport {TreeData} from '../../../../../view-model/tree-data';\r\nimport {SearchResultViewModel} from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Inject} from '@angular/core';\r\nimport {SpinnerService} from '../../../../../core/spinner/spinner.service';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {ActivatedRouteSnapshot} from '../../../../../../../node_modules/@angular/router';\r\nimport {ProductCategorySearchViewModel} from '../viewmodel/product-category-search.viewmodel';\r\nimport {ProductCategoryDetailViewModel} from '../viewmodel/product-category-detail.viewmodel';\r\nimport {ProductCategory} from '../model/product-category.model';\r\nimport {ProductCategorySuggestionViewModel} from '../viewmodel/product-category-suggestion.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport {NhSuggestion} from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\n\r\nexport class ProductCategoryService {\r\n    url = 'api/v1/warehouse/product-categories';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinceService: SpinnerService,\r\n                private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.isActive,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page: number = 1,\r\n           pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<ProductCategorySearchViewModel>> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword ? keyword : '')\r\n            .set('isActive', isActive !== null && isActive !== undefined ? isActive.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString());\r\n\r\n        return this.http.get(`${this.url}`, {\r\n            params: params\r\n        }).pipe(map((result: SearchResultViewModel<ProductCategorySearchViewModel>) => {\r\n            if (result.items) {\r\n                result.items.forEach((item: ProductCategorySearchViewModel) => {\r\n                    // item.activeStatus = item.isActive\r\n                    //     ? 'active'\r\n                    //     : 'inActive';\r\n                    const level = item.idPath.split('.');\r\n                    item.nameLevel = '';\r\n                    for (let i = 1; i < level.length; i++) {\r\n                        item.nameLevel += '<i class=\"fa fa-long-arrow-right cm-mgr-5\"></i>';\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<ProductCategorySearchViewModel>>;\r\n    }\r\n\r\n    getDetail(id: number): Observable<ActionResultViewModel<ProductCategoryDetailViewModel>> {\r\n        this.spinceService.show();\r\n        return this.http.get(`${this.url}/${id}`, {})\r\n            .pipe(finalize(() => {\r\n                this.spinceService.hide();\r\n            }))as Observable<ActionResultViewModel<ProductCategoryDetailViewModel>>;\r\n    }\r\n\r\n    getTree(): Observable<TreeData[]> {\r\n        return this.http.get(`${this.url}/trees`) as Observable<TreeData[]>;\r\n    }\r\n\r\n    insert(productCategory: ProductCategory): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, productCategory).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: number, productCategory: ProductCategory): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}`, productCategory).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: number): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${id}`, ).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    suggestions(keyword: string, page: number, pageSize: number): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/suggestions`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }).pipe(map((result: SearchResultViewModel<NhSuggestion>) => {\r\n                _.each(result.items, (item: NhSuggestion) => {\r\n                    item.isSelected = false;\r\n                });\r\n                return result;\r\n            })) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    updateStatus(id: number, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/status/${isActive}`, {}).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ProductComponent} from './product/product.component';\r\nimport {ProductAttributeComponent} from './product-attribute/product-attribute.component';\r\nimport {ProductAttributeService} from './product-attribute/product-attribute.service';\r\nimport {ProductCategoryComponent} from './product-category/product-category.component';\r\nimport {ProductCategoryService} from './product-category/service/product-category-service';\r\nimport {ProductAttributeFormComponent} from './product-attribute/product-attribute-form/product-attribute-form.component';\r\nimport {SupplierComponent} from './supplier/supplier.component';\r\nimport {SupplierService} from './supplier/service/supplier.service';\r\nimport {UnitComponent} from './unit/unit-component';\r\nimport {UnitService} from './unit/service/unit.service';\r\nimport {ProductAttributeDetailComponent} from './product-attribute/product-attribute-detail/product-attribute-detail.component';\r\nimport {BrandComponent} from './brand/brand.component';\r\nimport {BrandService} from './brand/services/brand.service';\r\nimport {ProductService} from './product/service/product.service';\r\nimport {ProductFormComponent} from './product/product-form/product-form.component';\r\nimport {ProductDetailComponent} from './product/product-detail/product-detail.component';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ProductComponent,\r\n        resolve: {\r\n            data: ProductService\r\n        }\r\n    },\r\n    {\r\n        path: 'add',\r\n        component: ProductFormComponent\r\n    },\r\n    {\r\n        path: 'edit/:id',\r\n        component: ProductFormComponent\r\n    },\r\n    {\r\n        path: 'detail/:id',\r\n        component: ProductDetailComponent,\r\n    },\r\n    {\r\n        path: 'attributes',\r\n        component: ProductAttributeComponent,\r\n        resolve: {\r\n            data: ProductAttributeService\r\n        }\r\n    },{\r\n        path: 'categories',\r\n        component: ProductCategoryComponent,\r\n        resolve: {\r\n            data: ProductCategoryService\r\n        }\r\n    },\r\n    {\r\n        path: 'suppliers',\r\n        component: SupplierComponent,\r\n        resolve: {\r\n            data: SupplierService\r\n        }\r\n    },\r\n    {\r\n        path: 'attributes/add',\r\n        component: ProductAttributeFormComponent\r\n    },\r\n    {\r\n        path: 'attributes/edit/:id',\r\n        component: ProductAttributeFormComponent\r\n    },\r\n    {\r\n        path: 'units',\r\n        component: UnitComponent,\r\n        resolve: {\r\n            data: UnitService\r\n        }\r\n    },\r\n    {\r\n        path: 'attributes/:id',\r\n        component: ProductAttributeDetailComponent\r\n    },\r\n    {\r\n        path: 'brands',\r\n        component: BrandComponent,\r\n        resolve: {\r\n            data: BrandService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers: [ProductAttributeService, ProductCategoryService, SupplierService, UnitService,\r\n        BrandService, ProductService]\r\n})\r\n\r\nexport class ProductRoutingModule {\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\n      <div class=\\\"form-group cm-mgr-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@searchPlaceHolder\\\" placeholder=\\\"Please enter news title\\\"\\n               (keyup)=\\\"keyword = searchGroupKeyword.value\\\" #searchGroupKeyword/>\\n      </div>\\n      <div class=\\\"form-group cm-mgr-5\\\">\\n        <nh-dropdown-tree [data]=\\\"categoryTree\\\"\\n                          [width]=\\\"350\\\"\\n                          (nodeSelected)=\\\"selectCategory($event)\\\"></nh-dropdown-tree>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn blue\\\">\\n          <i class=\\\"fa fa-search\\\"></i>\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n<div class=\\\"row cm-mgt-10\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <ul class=\\\"media-list select-news-container\\\">\\n      <li class=\\\"media cursor-pointer\\\" *ngFor=\\\"let item of listNews\\\"\\n          [class.selected]=\\\"item.selected\\\"\\n          (click)=\\\"onSelectItem(item)\\\">\\n        <div class=\\\"media-left\\\">\\n          <a href=\\\"javascript://\\\">\\n            <img ghmImage [src]=\\\"item.image\\\" class=\\\"w50\\\" [isUrlAbsolute]=\\\"true\\\"/>\\n          </a>\\n        </div>\\n        <div class=\\\"media-body\\\">\\n          <h4 class=\\\"media-heading\\\">{{item.title}}</h4>\\n          {{item.description}}\\n        </div>\\n      </li>\\n    </ul>\\n    <ghm-paging [totalRows]=\\\"totalRows\\\" [pageSize]=\\\"pageSize\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\"\\n                (pageClick)=\\\"search($event)\\\"\\n                [isDisabled]=\\\"isSearching\\\" i18n-pageName=\\\"@@news\\\" pageName=\\\"News\\\"></ghm-paging>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 text-right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn blue cm-mgr-5\\\" (click)=\\\"accept()\\\" i18n=\\\"@@accept\\\">\\n      Accept\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn default\\\" (click)=\\\"cancel()\\\" i18n=\\\"@@close\\\">\\n      Close\\n    </button>\\n  </div>\\n</div>\\n\"","module.exports = \"@charset \\\"UTF-8\\\";\\n.new-content .portlet-body .form-group {\\n  margin-bottom: 5px !important; }\\n.new-content .portlet-body .control-label {\\n  padding-bottom: 5px; }\\n.blog-page .bordered {\\n  border: 1px solid;\\n  border-color: #e7ecf1; }\\n.blog-page .blog-container {\\n  margin-bottom: 30px; }\\n.blog-page .blog-title > a {\\n  color: #4e5a64;\\n  font-weight: 600; }\\n.blog-page .blog-title > a:hover {\\n    color: #3598DC;\\n    text-decoration: none; }\\n/* Cubic Bezier Transition */\\n/***\\r\\nBlog Page\\r\\n***/\\n.blog-page {\\n  margin-top: 15px; }\\n.blog-page .blog-container {\\n    margin-bottom: 30px; }\\n.blog-page .blog-title > a {\\n    color: #4e5a64;\\n    font-weight: 600; }\\n.blog-page .blog-title > a:hover {\\n      color: #3598DC;\\n      text-decoration: none; }\\n.blog-content-2 .portlet.light {\\n  padding: 0px; }\\n.blog-content-2 .blog-single-content {\\n  padding: 15px;\\n  background-color: #fff; }\\n.blog-content-2 .blog-single-content > .media {\\n    margin-bottom: 10px; }\\n.blog-content-2 .blog-single-content > .media .media-left .blog-single-img {\\n      margin: 0 0 35px 0; }\\n.blog-content-2 .blog-single-content > .media .media-left .blog-single-img > img {\\n        width: 100%; }\\n.blog-content-2 .blog-single-content > .media .media-body .blog-single-head > .blog-single-head-title {\\n      font-size: 20px;\\n      font-weight: 600;\\n      color: #4e5a64;\\n      margin: 0 0 5px;\\n      display: inline-block; }\\n.blog-content-2 .blog-single-content > .media .media-body .blog-single-head > .blog-single-head-date {\\n      font-size: 13px;\\n      font-weight: 600;\\n      margin-bottom: 10px; }\\n.blog-content-2 .blog-single-content > .media .media-body .blog-single-head > .blog-single-head-date > i {\\n        margin-right: 5px; }\\n.blog-content-2 .blog-single-content > .media .media-body .blog-single-head > .blog-single-head-date > a {\\n        color: #9aa5b2; }\\n.blog-content-2 .blog-single-content > .media .media-body .blog-single-head > .blog-single-head-date > a:hover {\\n          color: #3598DC;\\n          text-decoration: none; }\\n.blog-content-2 .blog-single-content > .media .media-body .blog-single-description {\\n      font-weight: 600;\\n      margin-top: 0px; }\\n.blog-content-2 .blog-single-content > .blog-single-desc > {\\n    margin-bottom: 20px; }\\n.blog-content-2 .blog-single-content > .blog-single-desc > p {\\n      margin: 0 0 35px 0;\\n      font-size: 16px;\\n      color: #7e8691;\\n      line-height: 24px; }\\n.blog-content-2 .blog-single-content > .blog-single-foot {\\n    border-top: 1px solid;\\n    border-bottom: 1px solid;\\n    border-color: #f0f1f2;\\n    padding: 20px 0 25px 0;\\n    margin-bottom: 20px; }\\n.blog-content-2 .blog-single-content > .blog-single-foot > .blog-post-tags {\\n      text-align: left;\\n      padding: 0;\\n      margin: 0; }\\n.blog-content-2 .blog-single-content > .blog-single-foot > .blog-post-tags > li {\\n        list-style: none;\\n        display: inline-block;\\n        margin-right: 5px; }\\n.blog-content-2 .blog-single-content > .blog-single-foot > .blog-post-tags > li > a {\\n          background-color: #f4f6f8;\\n          color: #a0a9b4;\\n          font-size: 11px;\\n          font-weight: 600;\\n          padding: 7px 10px; }\\n.blog-content-2 .blog-single-content > .blog-single-foot > .blog-post-tags > li > a:hover {\\n            background-color: #3598DC;\\n            color: #fff;\\n            text-decoration: none; }\\n.blog-content-2 .blog-single-content > .blog-single-foot > .blog-post-tags > li:last-child {\\n          margin-right: 0; }\\n.blog-content-2 .blog-single-content > p {\\n    margin: 10px 0 !important; }\\n.blog-content-2 .blog-single-content > .blog-comments {\\n    display: inline-block;\\n    font-size: 14px;\\n    font-weight: 400;\\n    margin: 6px 10px 3px 0; }\\n.blog-content-2 .blog-single-content > .blog-comments .blog-comments-title {\\n      font-size: 20px; }\\n.blog-content-2 .blog-single-content > .blog-comments i {\\n      position: relative;\\n      top: 2px; }\\n.blog-content-2 .blog-single-content > .blog-comments input:focus, .blog-content-2 .blog-single-content > .blog-comments textarea:focus {\\n      outline: 0;\\n      border: 1px solid #ccc; }\\n.blog-content-2 .blog-single-sidebar {\\n  padding: 15px;\\n  background-color: #fff; }\\n.blog-content-2 .blog-single-sidebar .blog-sidebar-title {\\n    font-weight: 600;\\n    font-size: 14px;\\n    color: #4e5a64;\\n    letter-spacing: 1px;\\n    margin: 20px 0px; }\\n.blog-content-2 .blog-single-sidebar .list-inline .list-items {\\n    border: none !important; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-search input {\\n    font-size: 14px;\\n    color: #a0a9b4; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-search input:focus {\\n      outline: 0;\\n      border: 1px solid #ccc; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-recent > ul {\\n    padding: 0; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-recent > ul > li {\\n      list-style: none;\\n      margin-bottom: 10px;\\n      position: relative; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-recent > ul > li > a {\\n        color: #49a7fa;\\n        font-size: 16px;\\n        padding-left: 20px;\\n        display: block; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-recent > ul > li > a:hover {\\n          text-decoration: none;\\n          color: #3598DC; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-recent > ul > li:before {\\n        content: \\\"•\\\";\\n        color: #dae0e5;\\n        font-size: 30px;\\n        position: absolute;\\n        margin-top: -9px; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-tags .blog-post-tags {\\n    text-align: left;\\n    padding: 0;\\n    margin: 20px 0 0 0; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-tags .blog-post-tags > li {\\n      list-style: none;\\n      display: inline-block;\\n      margin: 0 5px 20px 0; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-tags .blog-post-tags > li > a {\\n        background-color: #f4f6f8;\\n        color: #a0a9b4;\\n        font-size: 11px;\\n        font-weight: 600;\\n        padding: 7px 10px; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-tags .blog-post-tags > li > a:hover {\\n          background-color: #3598DC;\\n          color: #fff;\\n          text-decoration: none; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-tags .blog-post-tags > li:last-child {\\n        margin-right: 0; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-links > ul {\\n    padding: 0; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-links > ul > li {\\n      list-style: none;\\n      border-bottom: 1px solid;\\n      border-color: #f0f1f2;\\n      padding: 20px 0; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-links > ul > li > a {\\n        color: #49a7fa;\\n        font-size: 16px; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-links > ul > li > a:hover {\\n          text-decoration: none;\\n          color: #3598DC; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-links > ul > li:first-child {\\n        padding-top: 0; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-links > ul > li:last-child {\\n        border: none; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-ui .ui-margin {\\n    margin: 0; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-ui .ui-padding {\\n    padding: 0 5px 5px 0; }\\n.blog-content-2 .blog-single-sidebar > .blog-single-sidebar-ui img {\\n    width: 100%; }\\n@media (max-width: 991px) {\\n  .blog-content-1 .blog-post-lg > .blog-img-thumb {\\n    height: 330px; }\\n  .blog-content-1 .blog-post-sm > .blog-img-thumb {\\n    height: 170px; }\\n  .blog-content-1 .blog-video > .blog-img-thumb {\\n    height: 301px; }\\n    .blog-content-1 .blog-video > .blog-img-thumb img {\\n      height: auto;\\n      width: 100%; } }\\n@media (max-width: 480px) {\\n  .blog-content-1 .blog-post-lg > .blog-post-content > .blog-post-foot {\\n    text-align: left; }\\n    .blog-content-1 .blog-post-lg > .blog-post-content > .blog-post-foot > .blog-post-tags {\\n      float: none; }\\n    .blog-content-1 .blog-post-lg > .blog-post-content > .blog-post-foot > .blog-post-meta {\\n      margin-right: 10px;\\n      margin-top: 10px; }\\n  .blog-content-2 .blog-single-content > .blog-single-head > .list-inline .list-items {\\n    border: none !important; }\\n  .blog-content-2 .blog-single-content > .blog-single-head > .blog-single-head-title {\\n    margin-bottom: 0px; }\\n  .blog-content-2 .blog-single-content > .blog-single-head > .blog-single-head-date {\\n    float: none;\\n    margin-bottom: 40px; } }\\n.select-news-container li {\\n  padding: 5px; }\\n.select-news-container .selected {\\n  border-left: 3px solid #007455; }\\n.select-news-container .media .media-body {\\n  vertical-align: middle; }\\n.list-items {\\n  border: none !important; }\\n\"","import {AfterViewInit, Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {ToastrService} from 'ngx-toastr';\nimport {TreeData} from '../../../../view-model/tree-data';\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\nimport {NewSearchForSelectViewModel} from '../../../news/new/viewmodel/new-search-for-select.viewmodel';\nimport {BaseListComponent} from '../../../../base-list.component';\nimport {Product} from '../product/model/product.model';\nimport {ProductService} from '../product/service/product.service';\nimport {ProductCategoryService} from '../product-category/service/product-category-service';\nimport {ProductSearchViewModel} from '../product/viewmodel/product-search.viewmodel';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-product-select',\n  templateUrl: './product-select.component.html',\n  styleUrls: ['./product-select.component.scss'],\n  providers: [ProductService, ProductCategoryService]\n})\nexport class ProductSelectComponent extends BaseListComponent<Product> implements OnInit, AfterViewInit {\n\n  @Output() onCancel = new EventEmitter();\n  @Output() onAccept = new EventEmitter();\n  listSelectedNews = [];\n  categoryId;\n  keyword = '';\n  listNews = [];\n  categoryTree = [];\n\n  constructor(private toastr: ToastrService,\n              private productService: ProductService,\n              private productCategoryService: ProductCategoryService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.productCategoryService.getTree().subscribe((result: TreeData[]) => this.categoryTree = result);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.search(1);\n    }, 200);\n  }\n\n  search(currentPage) {\n    this.currentPage = currentPage;\n    this.isSearching = true;\n    this.productService.search(this.keyword, this.categoryId, true, true, this.currentPage, this.pageSize)\n        .subscribe((result: SearchResultViewModel<ProductSearchViewModel>) => {\n          this.renderListNews(result.items);\n          this.totalRows = result.totalRows;\n        });\n  }\n\n  selectCategory(value: TreeData) {\n    if (value) {\n      this.categoryId = value.id;\n    } else {\n      this.categoryId = '';\n    }\n    this.search(1);\n  }\n\n  onSelectItem(item: any) {\n    item.selected = !item.selected;\n\n    if (item.selected) {\n      const existsItem = _.find(this.listSelectedNews, (news) => {\n        return item.id === news.id;\n      });\n\n      if (existsItem) {\n        return;\n      } else {\n        this.listSelectedNews.push({\n          id: item.id,\n          name: item.title,\n          image: item.image,\n        });\n      }\n    } else {\n      _.remove(this.listSelectedNews, (news) => {\n        return item.id === news.id;\n      });\n    }\n  }\n\n  accept() {\n    if (this.listSelectedNews.length === 0) {\n      this.toastr.warning('Vui lòng chọn ít nhất 1 nhóm.');\n      return;\n    }\n    this.onAccept.emit(_.map(this.listSelectedNews, (news) => {\n      return news;\n    }));\n    _.each(this.listNews, (item) => {\n      item.selected = false;\n    });\n  }\n\n  cancel() {\n    this.onCancel.emit();\n  }\n\n  private renderListNews(listNews) {\n    const newsItems = [];\n    _.each(listNews, (item: any) => {\n      item.selected = _.map(this.listSelectedNews, news => {\n        return news.id;\n      }).indexOf(item.id) > -1;\n\n      const itemValue = {'id': item.id, 'title': item.name, 'image': item.thumbnail, 'selected': item.selected};\n      newsItems.push(itemValue);\n    });\n\n    this.listNews = newsItems;\n  }\n}\n","import { ProductCategoryComponent } from './product-category/product-category.component';\r\nimport { ProductCategoryFormComponent } from './product-category/product-category-form/product-category-form.component';\r\nimport { NHTreeModule } from '../../../shareds/components/nh-tree/nh-tree.module';\r\nimport { SupplierFormComponent } from './supplier/supplier-form/supplier-form.component';\r\nimport { SupplierComponent } from './supplier/supplier.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ProductRoutingModule } from './product-routing.module';\r\nimport { ProductAttributeComponent } from './product-attribute/product-attribute.component';\r\nimport { ProductAttributeFormComponent } from './product-attribute/product-attribute-form/product-attribute-form.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CoreModule } from '../../../core/core.module';\r\nimport {\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatExpansionModule,\r\n    MatSlideToggleModule\r\n} from '@angular/material';\r\nimport { NhModalModule } from '../../../shareds/components/nh-modal/nh-modal.module';\r\nimport { GhmPagingModule } from '../../../shareds/components/ghm-paging/ghm-paging.module';\r\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\r\nimport { NhDropdownModule } from '../../../shareds/components/nh-dropdown/nh-dropdown.module';\r\nimport { DatetimeFormatModule } from '../../../shareds/pipe/datetime-format/datetime-format.module';\r\nimport { NhWizardModule } from '../../../shareds/components/nh-wizard/nh-wizard.module';\r\nimport { ProductAttributeValueComponent } from './product-attribute/product-attribute-value/product-attribute-value.component';\r\nimport {\r\n    ProductAttributeValueFormComponent\r\n} from './product-attribute/product-attribute-value/product-attribute-value-form/product-attribute-value-form.component';\r\nimport { NhSelectModule } from '../../../shareds/components/nh-select/nh-select.module';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { ContactFormComponent } from './contact/contact-form/contact-form.component';\r\nimport { UnitComponent } from './unit/unit-component';\r\nimport { UnitFormComponent } from './unit/form/unit-form.component';\r\nimport { NhTabModule } from '../../../shareds/components/nh-tab/nh-tab.module';\r\nimport { ProductAttributeDetailComponent } from './product-attribute/product-attribute-detail/product-attribute-detail.component';\r\nimport { BrandComponent } from './brand/brand.component';\r\nimport { BrandFormComponent } from './brand/brand-form/brand-form.component';\r\nimport { ProductFormComponent } from './product/product-form/product-form.component';\r\nimport { NhSuggestionModule } from '../../../shareds/components/nh-suggestion/nh-suggestion.module';\r\nimport { GhmFileExplorerModule } from '../../../shareds/components/ghm-file-explorer/ghm-file-explorer.module';\r\nimport { NhContextMenuModule } from '../../../shareds/components/nh-context-menu/nh-context-menu.module';\r\nimport { NhImageViewerModule } from '../../../shareds/components/nh-image-viewer/nh-image-viewer.module';\r\nimport { ProductUnitComponent } from './product/product-form/product-unit/product-unit.component';\r\nimport { ProductFormAttributeComponent } from './product/product-form/product-attribute/product-form-attribute.component';\r\nimport { SupplierSuggestionComponent } from './supplier/supplier-suggestion/supplier-suggestion.component';\r\nimport { ProductSuggestionComponent } from './product/product-suggestion/product-suggestion.component';\r\nimport { ProductDetailComponent } from './product/product-detail/product-detail.component';\r\nimport { FormatNumberModule } from '../../../shareds/pipe/format-number/format-number.module';\r\nimport { SupplierDetailComponent } from './supplier/supplier-detail/supplier-detail.component';\r\nimport { UnitSuggestionComponent } from './unit/unit-suggestion/unit-suggestion.component';\r\nimport { ProductAttributeSuggestionComponent } from './product-attribute/product-attribute-suggestion/product-attribute-suggestion.component';\r\nimport { ProductAttributeValueSuggestionComponent } from './product-attribute/product-attribute-value-suggestion/product-attribute-value-suggestion.component';\r\nimport { GhmCurrencyPipe } from '../../../shareds/components/ghm-mask/ghm-currency.pipe';\r\nimport { GhmMaskModule } from '../../../shareds/components/ghm-mask/ghm-mask.module';\r\nimport { ProductSelectComponent } from './product-select/product-select.component';\r\nimport { ProductCategorySelectComponent } from './product-category/product-category-select/product-category-select.component';\r\nimport {TinymceModule} from '../../../shareds/components/tinymce/tinymce.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, ProductRoutingModule, FormsModule, ReactiveFormsModule, CoreModule, MatCheckboxModule, MatTooltipModule,\r\n        NHTreeModule, NhSelectModule, NhDropdownModule, MatIconModule, NhModalModule, GhmPagingModule,\r\n        DatetimeFormatModule, NhWizardModule, NhTabModule, NhSuggestionModule, GhmFileExplorerModule, NhContextMenuModule,\r\n        MatRadioModule, MatSlideToggleModule, GhmMaskModule, FormatNumberModule, TinymceModule,\r\n        MatRadioModule, NhSuggestionModule,\r\n        NhImageViewerModule, MatExpansionModule,\r\n        SweetAlert2Module.forRoot({\r\n            buttonsStyling: false,\r\n            customClass: 'modal-content',\r\n            confirmButtonClass: 'btn blue cm-mgr-5',\r\n            cancelButtonClass: 'btn',\r\n            showCancelButton: true,\r\n        })\r\n    ],\r\n    declarations: [ProductComponent, ProductAttributeComponent, ProductAttributeFormComponent, ProductAttributeValueComponent,\r\n        ProductAttributeValueFormComponent, ProductCategoryFormComponent, ProductCategoryComponent, SupplierFormComponent,\r\n        SupplierComponent, ContactComponent, ContactFormComponent, UnitComponent, UnitFormComponent,\r\n        SupplierComponent, ContactComponent, ContactFormComponent, ProductAttributeDetailComponent, BrandComponent,\r\n        BrandFormComponent, ProductFormComponent, ProductUnitComponent, ProductFormAttributeComponent, ProductDetailComponent,\r\n        SupplierSuggestionComponent, SupplierDetailComponent, ProductSuggestionComponent, UnitSuggestionComponent,\r\n        ProductAttributeSuggestionComponent,\r\n        ProductAttributeValueSuggestionComponent,\r\n        ProductSelectComponent,\r\n        ProductCategorySelectComponent],\r\n    entryComponents: [ProductFormComponent, ProductDetailComponent],\r\n    exports: [ProductAttributeComponent, BrandFormComponent, ProductFormComponent, ProductUnitComponent,\r\n        ProductFormAttributeComponent, SupplierSuggestionComponent, ProductSuggestionComponent,\r\n        ProductSelectComponent, ProductCategorySelectComponent]\r\n})\r\nexport class ProductModule {\r\n}\r\n","export const ProductStatus =  {\r\n    draft: 0, // Nhap\r\n    pending: 1, // Dang gui\r\n    Approve: 2, // Da duyet\r\n    Decline: 3 // chua duyet\r\n};\r\n","export class ProductImage {\r\n    productId: string;\r\n    description: string;\r\n    url: string;\r\n    isThumbnail: boolean;\r\n\r\n    constructor(productId?: string, description?: string, url?: string) {\r\n        this.productId = productId;\r\n        this.description = description;\r\n        this.url = url;\r\n    }\r\n}\r\n","export class ProductTranslation {\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n    metaDescription: string;\r\n    metaKeyword: string;\r\n    seoLink: string;\r\n    content: string;\r\n    source: string;\r\n}\r\n","import { ProductTranslation } from './product-translation.model';\r\nimport { ProductImage } from './product-image.model';\r\nimport { ProductListUnit } from '../product-form/product-unit/model/product-list-unit.model';\r\nimport { ProductConversionUnit } from '../product-form/product-unit/model/product-conversion-unit.model';\r\nimport { ProductAttribute } from '../product-form/product-attribute/model/product-value.model';\r\n\r\nexport class Product {\r\n    isActive: boolean;\r\n    isManagementByLot: boolean;\r\n    thumbnail: string;\r\n    concurrencyStamp: string;\r\n    unitId: string;\r\n    unitName: string;\r\n    isHot: boolean;\r\n    isHomePage: boolean;\r\n    source: string;\r\n    status: number;\r\n    categories?: number[];\r\n    images: ProductImage[];\r\n    translations: ProductTranslation[];\r\n    productListUnit: ProductListUnit;\r\n    conversionUnits: ProductConversionUnit[];\r\n    attributes: ProductAttribute[];\r\n    salePrice?: number;\r\n    isChangeAttribute?: boolean;\r\n    isChangeConversionUnit?: boolean;\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n        this.isManagementByLot = true;\r\n        this.images = [];\r\n        this.translations = [];\r\n        this.categories = [];\r\n        this.thumbnail = '';\r\n        this.productListUnit = null;\r\n        this.conversionUnits = [];\r\n        this.attributes = [];\r\n        this.isChangeAttribute = false;\r\n        this.isChangeConversionUnit = false;\r\n        this.isHomePage = false;\r\n        this.isHot = true;\r\n        this.salePrice = null;\r\n        this.unitId = null;\r\n        this.unitName = null;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #productFormModal size=\\\"lg\\\">\\r\\n    <nh-modal-header class=\\\"uppercase font-green-sharp bold\\\">\\r\\n        <span\\r\\n            i18n=\\\"@@productDetailModalTitle\\\">Chi tiết sản phẩm</span>\\r\\n    </nh-modal-header>\\r\\n    <form action=\\\"\\\" class=\\\"form-horizontal\\\">\\r\\n        <nh-modal-content>\\r\\n            <div>\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"languages && languages.length > 1\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <nh-select [data]=\\\"languages\\\"\\r\\n                                   i18n-title=\\\"@@pleaseSelectLanguage\\\"\\r\\n                                   title=\\\"-- Chọn ngôn ngữ --\\\"\\r\\n                                   name=\\\"language\\\"\\r\\n                                   [(value)]=\\\"currentLanguage\\\"\\r\\n                                   (onSelectItem)=\\\"currentLanguage = $event.id\\\"></nh-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label col-sm-4\\\" i18n-ghmLabel=\\\"@@productCategory\\\"\\r\\n                           ghmLabel=\\\"Nhóm sản phẩm\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                       <div class=\\\"form-control height-auto\\\">\\r\\n                           <span class=\\\"badge badge-info cm-mgr-5\\\" *ngFor=\\\"let category of categories\\\">\\r\\n                            {{ category.categoryName }}\\r\\n                           </span>\\r\\n                       </div>\\r\\n                    </div>\\r\\n                </div><!-- END: Product category -->\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let translation of product?.translations\\\"\\r\\n                     [hidden]=\\\"translation?.languageId !== currentLanguage\\\">\\r\\n                    <label class=\\\"col-sm-4 control-label\\\" ghmLabel=\\\"Tên sản phẩm\\\"\\r\\n                           i18n-ghmLabel=\\\"@@productName\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                            {{ translation.name }}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div><!-- END: Product name -->\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let translation of product?.translations\\\"\\r\\n                     [hidden]=\\\"translation?.languageId !== currentLanguage\\\">\\r\\n                    <label class=\\\"col-sm-4 control-label\\\" ghmLabel=\\\"Mô tả\\\"\\r\\n                           i18n-ghmLabel=\\\"@@description\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <div class=\\\"form-control\\\">{{ translation?.description }}</div>\\r\\n                    </div>\\r\\n                </div><!-- END: Product description -->\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"col-sm-4 control-label\\\" ghmLabel=\\\"Đơn vị tính\\\"\\r\\n                       i18n-ghmLabel=\\\"@@productUnit\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <div class=\\\"form-control\\\">{{ product?.unitName }}</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"col-sm-4 control-label\\\" ghmLabel=\\\"Giá bán\\\"\\r\\n                       i18n-ghmLabel=\\\"@@salePrice\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <div class=\\\"form-control\\\">{{ product?.salePrice }}</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle color=\\\"primary\\\" [checked]=\\\"product?.isManagementByLot\\\"\\r\\n                                      [disabled]=\\\"true\\\">\\r\\n                        <span i18n=\\\"@@isManagementByLot\\\">{product?.isManagementByLot, select, 0 {Không theo lô} 1 {Quản lý theo lô}}</span>\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle [checked]=\\\"product?.isActive\\\" color=\\\"primary\\\"\\r\\n                                      [disabled]=\\\"true\\\">\\r\\n                        <span i18n=\\\"@@isActive\\\">\\r\\n                             {product?.isActive, select, 0 {Không sử dụng} 1 {Sử dụng}}\\r\\n                        </span>\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <mat-accordion class=\\\"example-headers-align\\\">\\r\\n                <mat-expansion-panel hideToggle class=\\\"cm-mgt-10\\\">\\r\\n                    <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                            <span i18n=\\\"@@unitConversion\\\" class=\\\"color-white\\\">Hình ảnh sản phẩm</span>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <div class=\\\"product-images\\\">\\r\\n                        <div class=\\\"image-content\\\" *ngFor=\\\"let item of productImages\\\"\\r\\n                             [class.thumbnail]=\\\"item.isThumbnail\\\">\\r\\n                            <img ghmImage [src]=\\\"item.url\\\"\\r\\n                                 [nhImageViewer]=\\\"item.url\\\"\\r\\n                                 [errorImageUrl]=\\\"'/assets/images/no-image.png'\\\"\\r\\n                                 [isUrlAbsolute]=\\\"true\\\">\\r\\n                            <button class=\\\"btn btn-sm btn-remove red\\\" type=\\\"button\\\"\\r\\n                                    [swal]=\\\"confirmDeleteImage\\\"\\r\\n                                    (confirm)=\\\"removeImage(item)\\\">\\r\\n                                <i class=\\\"fa fa-times\\\"></i>\\r\\n                            </button>\\r\\n                            <button class=\\\"btn btn-sm btn-check blue\\\"\\r\\n                                    [class.display-none]=\\\"!item.isThumbnail\\\" (click)=\\\"checkThumbnail(item)\\\"\\r\\n                                    type=\\\"button\\\">\\r\\n                                <i class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!item.isThumbnail\\\"></i>\\r\\n                                <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"item.isThumbnail\\\">\\r\\n                                </i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel><!-- END: Product images -->\\r\\n\\r\\n                <mat-expansion-panel hideToggle class=\\\"cm-mgt-10\\\">\\r\\n                    <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                            <span i18n=\\\"@@unitConversion\\\" class=\\\"color-white\\\">Đơn vị chuyển đổi</span>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <table class=\\\"table table-stripped table-hover\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th i18n=\\\"@@unit\\\">Đơn vị</th>\\r\\n                            <th></th>\\r\\n                            <th i18n=\\\"@@conversion\\\" class=\\\"w100\\\">Chuyển đổi</th>\\r\\n                            <th i18n=\\\"@@unit\\\">Đơn vị</th>\\r\\n                            <th i18n=\\\"@@salePrice\\\" class=\\\"text-right\\\">Giá bán</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let conversionUnit of conversionUnits\\\">\\r\\n                            <td>\\r\\n                                {{ conversionUnit.unitName }}\\r\\n                            </td>\\r\\n                            <td class=\\\"center middle\\\">=</td>\\r\\n                            <td>\\r\\n                                {{ conversionUnit.value }}\\r\\n                            </td>\\r\\n                            <td class=\\\"middle\\\">\\r\\n                                {{ product?.unitName }}\\r\\n                            </td>\\r\\n                            <td class=\\\"text-right bold\\\">\\r\\n                                {{ conversionUnit?.salePrice | ghmCurrency:2 }}\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </mat-expansion-panel><!-- END: Product unit conversion -->\\r\\n\\r\\n                <mat-expansion-panel hideToggle class=\\\"cm-mgt-10\\\">\\r\\n                    <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                            <span i18n=\\\"@@productAttribute\\\" class=\\\"color-white\\\">Thuộc tính sản phẩm</span>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n\\r\\n                    <div style=\\\"height: 350px;\\\" class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-hover table-striped\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th class=\\\"middle w200\\\" i18n=\\\"@@productAttribute\\\">Thuộc tính sản phẩm</th>\\r\\n                                <th class=\\\"middle\\\" i18n=\\\"@@productAttributeValue\\\">Giá trị thuộc tính sản phẩm</th>\\r\\n                                <th class=\\\"middle center\\\" i18n=\\\"@@websiteVisible\\\">Hiển thị website</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr *ngFor=\\\"let attribute of attributes; let i = index\\\">\\r\\n                                <td>\\r\\n                                    <ng-container *ngIf=\\\"!isReadOnly\\\">\\r\\n                                        {{ attribute?.attributeName }}\\r\\n                                    </ng-container>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <span *ngFor=\\\"let attributeValue of attribute?.attributeValues\\\"\\r\\n                                          class=\\\"badge badge-info cm-mgr-5\\\">\\r\\n                                        {{ attributeValue.name }}\\r\\n                                    </span>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle\\\">\\r\\n                                    <mat-slide-toggle color=\\\"primary\\\"\\r\\n                                                      [disabled]=\\\"true\\\"\\r\\n                                                      [checked]=\\\"attribute?.isShowClient\\\"></mat-slide-toggle>\\r\\n\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </mat-expansion-panel><!-- END: Product attribute -->\\r\\n            </mat-accordion>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn default\\\" i18n=\\\"@@close\\\" nh-dismiss\\r\\n                            [disabled]=\\\"isSaving\\\">\\r\\n                        Đóng\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteImage\\r\\n    i18n=\\\"@@confirmDeleteImage\\\"\\r\\n    i18n-title=\\\"@@confirmTitleDeleteImage\\\"\\r\\n    i18n-text=\\\"@@confirmTextDeleteImage\\\"\\r\\n    title=\\\"Are you sure for delete this Image?\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Accept\\\"\\r\\n    cancelButtonText=\\\"Cancel\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","import { AfterViewInit, Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../../../base-form.component';\r\nimport { IPageId, PAGE_ID } from '../../../../../configs/page-id.config';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport { Product } from '../model/product.model';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { UtilService } from '../../../../../shareds/services/util.service';\r\nimport { ProductImage } from '../model/product-image.model';\r\nimport { ProductTranslation } from '../model/product-translation.model';\r\nimport { ProductService } from '../service/product.service';\r\nimport { TreeData } from '../../../../../view-model/tree-data';\r\nimport * as _ from 'lodash';\r\nimport { ProductCategoryService } from '../../product-category/service/product-category-service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ProductDetailViewModel } from '../viewmodel/product-detail.viewmodel';\r\nimport { NhTabComponent } from '../../../../../shareds/components/nh-tab/nh-tab.component';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { NhSuggestion } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { NumberValidator } from '../../../../../validators/number.validator';\r\nimport { ProductCategoryViewModel } from '../viewmodel/product-category.viewmodel';\r\nimport { ProductFormAttributeComponent } from '../product-form/product-attribute/product-form-attribute.component';\r\nimport { ProductUnitComponent } from '../product-form/product-unit/product-unit.component';\r\nimport { ProductConversionUnit } from '../product-form/product-unit/model/product-conversion-unit.model';\r\nimport { ProductAttribute } from '../product-form/product-attribute/model/product-value.model';\r\n\r\n@Component({\r\n    selector: 'app-product-form',\r\n    templateUrl: './product-detail.component.html',\r\n    styleUrls: ['../product.scss'],\r\n    providers: [UtilService, NumberValidator]\r\n})\r\n\r\nexport class ProductDetailComponent extends BaseFormComponent implements OnInit, AfterViewInit {\r\n    @ViewChild(ProductUnitComponent) productUnitComponent: ProductUnitComponent;\r\n    @ViewChild(ProductFormAttributeComponent) productAttributeComponent: ProductFormAttributeComponent;\r\n    @ViewChild(NhTabComponent) nhTabComponent: NhTabComponent;\r\n    @ViewChild('productFormModal') productFormModal: NhModalComponent;\r\n    product = new Product();\r\n    categoryTree: TreeData[];\r\n    categoryText;\r\n    categories: any[];\r\n    productImages: ProductImage[] = [];\r\n    modelTranslation = new ProductTranslation();\r\n    listProductValue: ProductAttribute[] = [];\r\n    conversionFormErrors: any = {};\r\n    conversionValidationMessages: any = {};\r\n    attributeFormErrors: any = {};\r\n    attributeValidationMessages: any = {};\r\n    conversionUnits = [];\r\n    attributes = [];\r\n\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private numberValidator: NumberValidator,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private productCategoryService: ProductCategoryService,\r\n                private productService: ProductService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.WAREHOUSE, this.pageId.PRODUCT, 'Quản lý sản phẩm', 'Quản lý sản phẩm');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.reloadTree();\r\n    }\r\n\r\n    onProductAttributeValueSelected(selectedAttributeValue: any, attributeFormControl: FormControl, index: number) {\r\n        const count = _.countBy(attributeFormControl.get('attributeValues').value, (attributeValue: NhSuggestion) => {\r\n            return attributeValue.id === selectedAttributeValue.id;\r\n        }).true;\r\n        if (count) {\r\n            this.toastr.warning('Giá trị thuộc tính đã tồn tại. Vui lòng kiểm tra lại.');\r\n            attributeFormControl.patchValue({attributeId: null, productAttributeName: null});\r\n            return;\r\n        }\r\n        attributeFormControl.patchValue({\r\n            productAttributeValues: selectedAttributeValue.map((attribute: NhSuggestion) => {\r\n                return {\r\n                    id: attribute.id,\r\n                    name: attribute.name\r\n                };\r\n            })\r\n        });\r\n        // if (this.isUpdate) {\r\n        //     this.saveAttribute(attributeFormControl, index);\r\n        // }\r\n    }\r\n\r\n    onProductAttributeValueRemoved(attributeFormControl: FormControl) {\r\n    }\r\n\r\n    add() {\r\n        this.productFormModal.open();\r\n    }\r\n\r\n    show(productId: string) {\r\n        this.id = productId;\r\n        this.isUpdate = true;\r\n        this.getDetail(productId);\r\n    }\r\n\r\n    removeThumbnail() {\r\n        this.model.patchValue({thumbnail: ''});\r\n    }\r\n\r\n    removeImage(productImage: ProductImage) {\r\n        if (productImage.isThumbnail) {\r\n            this.model.patchValue({thumbnail: ''});\r\n        }\r\n        _.remove(this.productImages, (item: ProductImage) => {\r\n            return item.url === productImage.url;\r\n        });\r\n    }\r\n\r\n    clickTabProductUnit(value) {\r\n        this.productUnitComponent.renderListUnit();\r\n    }\r\n\r\n    clickTabProductAttribute(value) {\r\n        this.productAttributeComponent.getProductAttribute();\r\n    }\r\n\r\n    reloadTree() {\r\n        this.productCategoryService.getTree().subscribe((result: TreeData[]) => {\r\n            this.categoryTree = result;\r\n        });\r\n    }\r\n\r\n    checkThumbnail(item: ProductImage) {\r\n        if (!item.isThumbnail) {\r\n            _.each(this.productImages, (image: ProductImage) => {\r\n                image.isThumbnail = false;\r\n            });\r\n            this.model.patchValue({thumbnail: item.url});\r\n        }\r\n        item.isThumbnail = !item.isThumbnail;\r\n    }\r\n\r\n    private buildConversionForm(index: number, conversionUnit?: ProductConversionUnit) {\r\n        this.conversionFormErrors[index] = this.renderFormError(['unitId', 'value']);\r\n        this.conversionValidationMessages[index] = this.renderFormErrorMessage([\r\n            {unitId: ['required']},\r\n            {value: ['isValid']}\r\n        ]);\r\n        const conversionModel = this.formBuilder.group({\r\n            unitId: [conversionUnit ? conversionUnit.unitId : '', [\r\n                Validators.required\r\n            ]],\r\n            unitName: [conversionUnit ? conversionUnit.unitName : ''],\r\n            salePrice: [conversionUnit ? conversionUnit.salePrice : null],\r\n            conversionUnitId: [conversionUnit ? conversionUnit.conversionUnitId : this.model.value.unitId],\r\n            conversionUnitName: [conversionUnit ? conversionUnit.conversionUnitName : ''],\r\n            value: [conversionUnit ? conversionUnit.value : null, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n        });\r\n        conversionModel.valueChanges.subscribe(() => this.validateFormGroup(conversionModel, this.conversionFormErrors[index],\r\n            this.conversionValidationMessages[index], false));\r\n        return conversionModel;\r\n    }\r\n\r\n    private buildAttributeForm(index: number, productValue?: ProductAttribute) {\r\n        this.attributeFormErrors[index] = this.renderFormError(['unitId', 'value', 'productAttributeValues']);\r\n        this.attributeValidationMessages[index] = this.renderFormErrorMessage([\r\n            {unitId: ['required']},\r\n            {value: ['isValid']},\r\n            {productAttributeValues: ['required']},\r\n        ]);\r\n        const attributeModel = this.formBuilder.group({\r\n            attributeId: [productValue ? productValue.attributeId : '', [\r\n                Validators.required\r\n            ]],\r\n            attributeName: [productValue ? productValue.attributeName : ''],\r\n            value: [productValue ? productValue.value : ''],\r\n            isSelfContent: [productValue ? productValue.isSelfContent : false],\r\n            isMultiple: [productValue ? productValue.isMultiple : false],\r\n            isShowClient: [productValue ? productValue.isShowClient : false],\r\n            attributeValues: [productValue ? productValue.attributeValues : [], [\r\n                Validators.required\r\n            ]],\r\n        });\r\n        attributeModel.valueChanges.subscribe(() => this.validateFormGroup(attributeModel, this.attributeFormErrors[index],\r\n            this.attributeValidationMessages[index], false));\r\n        return attributeModel;\r\n    }\r\n\r\n    private getDetail(productId: string) {\r\n        this.productFormModal.open();\r\n        this.subscribers.getDetail = this.productService.getDetail(productId)\r\n            .subscribe((result: ProductDetailViewModel) => {\r\n                this.product = {\r\n                    unitId: result.unitId,\r\n                    unitName: result.unitName,\r\n                    isActive: result.isActive,\r\n                    isManagementByLot: result.isManagementByLot,\r\n                    salePrice: result.salePrice,\r\n                    translations: result.translations,\r\n                    concurrencyStamp: result.concurrencyStamp,\r\n                    thumbnail: result.thumbnail,\r\n                    images: result.images\r\n                } as Product;\r\n                this.productImages = result.images;\r\n                if (result.categories) {\r\n                    this.categories = result.categories;\r\n                }\r\n                if (result.conversionUnits && result.conversionUnits.length > 0) {\r\n                    this.conversionUnits = result.conversionUnits;\r\n                    // result.conversionUnits.forEach((conversionUnit: ProductConversionUnit) => {\r\n                    //     this.conversionUnits.push(this.buildConversionForm(index, conversionUnit));\r\n                    //     index++;\r\n                    // });\r\n                }\r\n                if (result.attributes) {\r\n                    const groups = _.groupBy(result.attributes, 'attributeId');\r\n                    if (groups) {\r\n                        // this.attributes.removeAt(0);\r\n                        let index = 0;\r\n                        for (const key in groups) {\r\n                            if (groups.hasOwnProperty(key)) {\r\n                                const groupItem: ProductAttribute = groups[key][0];\r\n                                const productAttributeValue: ProductAttribute = {\r\n                                    id: groupItem.id,\r\n                                    attributeId: groupItem.attributeId,\r\n                                    attributeName: groupItem.attributeName,\r\n                                    value: groupItem.value,\r\n                                    isSelfContent: groupItem.isSelfContent,\r\n                                    isMultiple: groupItem.isMultiple,\r\n                                    isShowClient: groupItem.isShowClient,\r\n                                    attributeValues: groups[key].map((group: ProductAttribute) => {\r\n                                        return {\r\n                                            id: group.attributeValueId,\r\n                                            name: group.attributeValueName\r\n                                        };\r\n                                    })\r\n                                };\r\n                                // this.attributes.push(this.buildAttributeForm(index, productAttributeValue));\r\n                                this.attributes = [...this.attributes, productAttributeValue];\r\n                            }\r\n                            index++;\r\n                        }\r\n                    }\r\n                }\r\n                if (result.images) {\r\n                    this.productImages = result.images;\r\n                    _.each(this.productImages, (image: ProductImage) => {\r\n                        if (image.url === result.thumbnail) {\r\n                            image.isThumbnail = true;\r\n                        } else {\r\n                            image.isThumbnail = false;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { AttributeValueViewModel } from '../../../../product-attribute/product-attribute-value/product-attribute-value.viewmodel';\r\n\r\nexport class ProductAttribute {\r\n    id?: string;\r\n    attributeId: string;\r\n    attributeName: string;\r\n    value: string;\r\n    attributeValues: AttributeValueViewModel[];\r\n    attributeValueId?: string;\r\n    attributeValueName?: string;\r\n    isMultiple: boolean;\r\n    isSelfContent: boolean;\r\n    isShowClient?: boolean;\r\n    languageId?: string;\r\n\r\n    constructor(attributeId?: string,\r\n                value?: string,\r\n                attributeValues?: AttributeValueViewModel[],\r\n                isShowClient?: boolean) {\r\n        this.attributeId = attributeId;\r\n        this.value = value;\r\n        this.attributeValues = attributeValues;\r\n        this.isShowClient = isShowClient;\r\n    }\r\n}\r\n","module.exports = \"<form action=\\\"\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <table class=\\\"table table-hover table-striped\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th class=\\\"middle w200\\\" i18n=\\\"@@productAttribute\\\">Thuộc tính sản phẩm</th>\\r\\n                    <th class=\\\"middle\\\" i18n=\\\"@@productAttributeValue\\\">Giá trị thuộc tính sản phẩm</th>\\r\\n                    <th class=\\\"middle w50\\\" *ngIf=\\\"!isReadOnly\\\"></th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr *ngFor=\\\"let item of listAttribute\\\">\\r\\n                    <td>{{item.attributeName}}</td>\\r\\n                    <td>\\r\\n                        <ng-container *ngIf=\\\"!isReadOnly; else readOnly\\\">\\r\\n                            <nh-suggestion *ngIf=\\\"!item.isSelfContent ; else formValue\\\"\\r\\n                                           [multiple]=\\\"item.isMultiple\\\"\\r\\n                                           [isShowSelected]=\\\"false\\\"\\r\\n                                           i18n-title=\\\"@@productAttributeValueTitle\\\"\\r\\n                                           title=\\\"Product attribute value\\\"\\r\\n                                           [sources]=\\\"productCategoryAttributeValueSuggestions\\\"\\r\\n                                           [selectedItem]=\\\"!item.isMultiple && item.productAttributeValueSuggestion? item.productAttributeValueSuggestion[0] : ''\\\"\\r\\n                                           [selectedItems]=\\\"item.productAttributeValueSuggestion\\\"\\r\\n                                           (searched)=\\\"searchProductAttributeValue(item.attributeId, $event)\\\"\\r\\n                                           (itemSelected)=\\\"onSelectedProductAttributeValue(item.attributeId, item.attributeName, item.isMultiple, $event)\\\"\\r\\n                                           (itemRemoved)=\\\"removeSelectProductAttributeValue($event, item)\\\"\\r\\n                            ></nh-suggestion>\\r\\n                            <ng-template #formValue>\\r\\n                                <input *ngIf=\\\"!isReadOnly;\\\" class=\\\"form-control\\\"\\r\\n                                       [value]=\\\"item.value ? item.value : ''\\\"\\r\\n                                       (blur)=\\\"onBlur(item.attributeId, item.attributeName, $event.target.value)\\\">\\r\\n                            </ng-template>\\r\\n                        </ng-container>\\r\\n                        <ng-template #readOnly>\\r\\n                            <ul *ngIf=\\\"!item.isSelfContent; else spanValue\\\" class=\\\"list-style-none list-inline\\\">\\r\\n                                <li *ngFor=\\\"let attribute of item.productAttributeValueSuggestion\\\"\\r\\n                                    class=\\\"product-attribute-value\\\">\\r\\n                                    {{attribute.name}}\\r\\n                                    <span> ,</span>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                            <ng-template #spanValue>\\r\\n                                {{item.value ? item.value : ''}}\\r\\n                            </ng-template>\\r\\n                        </ng-template>\\r\\n                    </td>\\r\\n                    <td class=\\\"middle center\\\" *ngIf=\\\"!isReadOnly\\\">\\r\\n                        <a class=\\\"btn red btn-sm\\\" type=\\\"button\\\"\\r\\n                           [swal]=\\\"confirmDeleteProductValue\\\"\\r\\n                           (confirm)=\\\"remove(item)\\\">\\r\\n                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                        </a>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n                <tfoot *ngIf=\\\"!isReadOnly\\\">\\r\\n                <tr>\\r\\n                    <td class=\\\"middle\\\">\\r\\n                        <app-product-attribute-suggestion (itemSelected)=\\\"onSelectedProductAttribute($event)\\\"\\r\\n                                                          (itemRemoved)=\\\"onAttributeRemoved()\\\"></app-product-attribute-suggestion>\\r\\n                    </td>\\r\\n                    <td class=\\\"middle\\\">\\r\\n                        <ng-container *ngIf=\\\"productAttributeSelect\\\">\\r\\n                            <nh-suggestion *ngIf=\\\"!productAttributeSelect?.isSelfContent; else formValueInsert\\\"\\r\\n                                           [multiple]=\\\"productAttributeSelect?.isMultiple\\\"\\r\\n                                           i18n-title=\\\"@@productAttributeValueTitle\\\"\\r\\n                                           title=\\\"Product attribute value\\\"\\r\\n                                           [sources]=\\\"productCategoryAttributeValueSuggestions\\\"\\r\\n                                           (searched)=\\\"searchProductAttributeValue(productAttributeSelect?.id, $event)\\\"\\r\\n                                           (itemSelected)=\\\"onSelectedProductAttributeValue(productAttributeSelect.id, productAttributeSelect.name, productAttributeSelect?.isMultiple, $event)\\\"\\r\\n                                           (itemRemoved)=\\\"removeSelectProductAttributeValue($event, productAttributeSelect)\\\"\\r\\n                            ></nh-suggestion>\\r\\n                            <ng-template #formValueInsert>\\r\\n                                <input class=\\\"form-control\\\"\\r\\n                                       (blur)=\\\"onBlur(productAttributeSelect.id, productAttributeSelect.name, $event.target.value)\\\">\\r\\n                            </ng-template>\\r\\n                        </ng-container>\\r\\n                    </td>\\r\\n                    <td class=\\\"middle\\\">\\r\\n                        <button class=\\\"btn btn-sm blue\\\" (click)=\\\"addAttribute()\\\"\\r\\n                                *ngIf=\\\"productAttributeSelect\\\">\\r\\n                            <i class=\\\"fa fa-plus\\\"></i>\\r\\n                        </button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tfoot>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteProductValue\\r\\n    i18n=\\\"@@confirmDeleteProductValue\\\"\\r\\n    i18n-title=\\\"@@confirmTitleDeleteProductValue\\\"\\r\\n    i18n-text=\\\"@@confirmTextDeleteProduct\\\"\\r\\n    title=\\\"Are you sure for delete this product value?\\\"\\r\\n    text=\\\"You can't recover this product value after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Accept\\\"\\r\\n    cancelButtonText=\\\"Cancel\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { ProductService } from '../../service/product.service';\r\nimport { SearchResultViewModel } from '../../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { NhSuggestion } from '../../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { ProductAttributeService } from '../../../product-attribute/product-attribute.service';\r\nimport { ProductCategoriesAttributeViewModel } from './viewmodel/product-categories-attribute.viewmodel';\r\nimport { ProductAttribute } from './model/product-value.model';\r\nimport { ActionResultViewModel } from '../../../../../../shareds/view-models/action-result.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../../configs/app.config';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseFormComponent } from '../../../../../../base-form.component';\r\n\r\n@Component({\r\n    selector: 'app-product-form-attribute',\r\n    styleUrls: ['../../product.scss'],\r\n    templateUrl: './product-form-attribute.component.html'\r\n})\r\nexport class ProductFormAttributeComponent extends BaseFormComponent implements OnInit {\r\n    @Input() productId: string;\r\n    @Input() listProductValue: ProductAttribute[];\r\n    @Input() isUpdate;\r\n    @Input() isReadOnly = false;\r\n    listAttribute: ProductCategoriesAttributeViewModel[] = [];\r\n    productCategoryAttributeValueSuggestions: NhSuggestion[] = [];\r\n    productAttributeSuggestions: NhSuggestion[] = [];\r\n    urlProductAttributeSuggestion;\r\n    productAttributeSelect;\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private productService: ProductService,\r\n                private toastr: ToastrService,\r\n                private productAttributeService: ProductAttributeService) {\r\n        super();\r\n        this.urlProductAttributeSuggestion = `${appConfig.API_GATEWAY_URL}api/v1/warehouse/product-attributes/suggestion`;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onAttributeRemoved() {\r\n    }\r\n\r\n    getProductAttribute() {\r\n        if (!this.listProductValue || this.listProductValue.length === 0) {\r\n            this.productService.getProductAttribute(this.productId)\r\n                .subscribe((result: SearchResultViewModel<ProductCategoriesAttributeViewModel>) => {\r\n                    this.listAttribute = result.items;\r\n                });\r\n        }\r\n        this.rendResult();\r\n    }\r\n\r\n    onSelectedProductAttributeValue(attributeId: string, attributeName: string, isMultiple: boolean, values: any) {\r\n        if (values) {\r\n            if (this.isUpdate) {\r\n                if (isMultiple) {\r\n                    _.each(values, (valueSuggestion: NhSuggestion) => {\r\n                        // const existsProductValue = _.find(this.listProductValue, (productValue: ProductAttribute) => {\r\n                        //     return productValue.productAttributeId === attributeId\r\n                        //         && productValue.productAttributeValueId === valueSuggestion.id;\r\n                        // });\r\n                        //\r\n                        // if (!existsProductValue) {\r\n                        //     const productValueInsert = new ProductAttribute();\r\n                        //     // productValueInsert.productAttributeValueId = valueSuggestion.id.toString();\r\n                        //     productValueInsert.productAttributeId = attributeId;\r\n                        //     productValueInsert.productAttributeValueName = valueSuggestion.name;\r\n                        //     productValueInsert.languageId = this.currentLanguage;\r\n                        //     productValueInsert.productAttributeIsMultiple = multiple;\r\n                        //     productValueInsert.productAttributeIsSelfContent = false;\r\n                        //     productValueInsert.productAttributeName = attributeName;\r\n                        //\r\n                        //     this.productService.insertAttributeValue(this.productId, productValueInsert)\r\n                        //         .subscribe((result: ActionResultViewModel) => {\r\n                        //             productValueInsert.id = result.data;\r\n                        //             this.listProductValue.push(productValueInsert);\r\n                        //         });\r\n                        // }\r\n                    });\r\n                } else {\r\n                    // const productValues = _.filter(this.listProductValue, (productValue: ProductAttribute) => {\r\n                    //     return productValue.productAttributeId === attributeId;\r\n                    // });\r\n\r\n                    // if (!productValues || productValues.length === 0) {\r\n                    //     const productValueInsert = new ProductAttribute();\r\n                    //     productValueInsert.productAttributeValueId = values.id.toString();\r\n                    //     productValueInsert.productAttributeId = attributeId;\r\n                    //     productValueInsert.productAttributeValueName = values.name;\r\n                    //     productValueInsert.languageId = this.currentLanguage;\r\n                    //     productValueInsert.productAttributeIsMultiple = multiple;\r\n                    //     productValueInsert.productAttributeIsSelfContent = false;\r\n                    //     productValueInsert.productAttributeName = attributeName;\r\n                    //\r\n                    //     this.productService.insertAttributeValue(this.productId, productValueInsert)\r\n                    //         .subscribe((result: ActionResultViewModel) => {\r\n                    //             productValueInsert.id = result.data;\r\n                    //             this.listProductValue.push(productValueInsert);\r\n                    //         });\r\n                    // } else {\r\n                    //     const productValue = productValues[0];\r\n                    //     productValue.productAttributeId = attributeId;\r\n                    //     productValue.productAttributeValueId = values.id;\r\n                    //     productValue.productAttributeValueName = values.name;\r\n                    //     productValue.languageId = this.currentLanguage;\r\n                    //\r\n                    //     this.productService.updateProductAttributeValue(this.productId, productValue.id, productValue)\r\n                    //         .subscribe(() => {\r\n                    //             // this.listProductValue.push(productValueInsert);\r\n                    //         });\r\n                    // }\r\n                }\r\n                const productAttribute = this.getProductAttributeById(attributeId);\r\n                if (productAttribute) {\r\n                    productAttribute.productAttributeValueSuggestion = values;\r\n                }\r\n            } else {\r\n                // _.remove(this.listProductValue, (value: ProductAttribute) => {\r\n                //     return value.productAttributeValueId === attributeId;\r\n                // });\r\n                // if (multiple) {\r\n                //     _.each(values, (value: NhSuggestion) => {\r\n                //         // const existsProductValue = _.find(this.listProductValue, (productValue: ProductAttribute) => {\r\n                //         //     return productValue.productAttributeId === attributeId\r\n                //         //         && productValue.productAttributeValueId === value.id;\r\n                //         // });\r\n                //\r\n                //         // if (!existsProductValue) {\r\n                //         //     const productValue = new ProductAttribute();\r\n                //         //     productValue.productAttributeId = attributeId;\r\n                //         //     productValue.productAttributeName = attributeName;\r\n                //         //     // productValue.productAttributeValueId = value.id.toString();\r\n                //         //     productValue.productAttributeValueName = value.name;\r\n                //         //     this.listProductValue.push(productValue);\r\n                //         // }\r\n                //     });\r\n                // } else {\r\n                //     const productValueSingle = new ProductAttribute();\r\n                //     productValueSingle.productAttributeId = attributeId;\r\n                //     productValueSingle.productAttributeName = attributeName;\r\n                //     productValueSingle.productAttributeValueId = values.id.toString();\r\n                //     productValueSingle.productAttributeValueName = values.name;\r\n                //     this.listProductValue.push(productValueSingle);\r\n                // }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeSelectProductAttributeValue(value: NhSuggestion, productAttribute?: ProductCategoriesAttributeViewModel) {\r\n        if (this.isUpdate) {\r\n            // const productAttributeValues = _.filter(this.listProductValue, (productValue: ProductAttribute) => {\r\n            //     return productValue.productAttributeValueId === value.id;\r\n            // });\r\n\r\n            // if (productAttributeValues && productAttributeValues.length > 0 && productAttributeValues[0].id) {\r\n            //     this.productService.deleteProductAttributeValue(this.productId, productAttributeValues[0].id).subscribe(() => {\r\n            //         _.remove(this.listProductValue, (item: ProductAttribute) => {\r\n            //             return item.productAttributeValueId === value.id;\r\n            //         });\r\n            //         if (productAttribute) {\r\n            //             _.remove(productAttribute.productAttributeValueSuggestion, (suggestion: NhSuggestion) => {\r\n            //                 return suggestion.id === value.id;\r\n            //             });\r\n            //         }\r\n            //     });\r\n            // }\r\n        } else {\r\n            // _.remove(this.listProductValue, (item: ProductAttribute) => {\r\n            //     return item.productAttributeValueId === value.id;\r\n            // });\r\n            if (productAttribute) {\r\n                _.remove(productAttribute.productAttributeValueSuggestion, (suggestion: NhSuggestion) => {\r\n                    return suggestion.id === value.id;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    searchProductAttributeValue(attributeId: string, keyword: string) {\r\n        this.productAttributeService.suggestionValue(attributeId, keyword, 1, 1)\r\n            .subscribe((result: SearchResultViewModel<NhSuggestion>) => {\r\n                this.productCategoryAttributeValueSuggestions = result.items;\r\n            });\r\n    }\r\n\r\n    searchProductAttributeSuggestions(keyword: string) {\r\n        this.productAttributeService\r\n            .suggestions(keyword, 1, 20)\r\n            .subscribe((result: SearchResultViewModel<NhSuggestion>) => this.productAttributeSuggestions = result.items);\r\n    }\r\n\r\n    onSelectedProductAttribute(value: NhSuggestion) {\r\n        if (value) {\r\n            const existsProductAttribute = _.find(this.listAttribute, (item: ProductCategoriesAttributeViewModel) => {\r\n                return item.attributeId === value.id;\r\n            });\r\n\r\n            if (existsProductAttribute) {\r\n                this.toastr.error('Product attribute already exists');\r\n                value.id = '';\r\n                value.name = '';\r\n                return;\r\n            } else {\r\n                this.productAttributeSelect = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    remove(value: ProductCategoriesAttributeViewModel) {\r\n        // if (value) {\r\n        //\r\n        //     if ((value.value || value.productAttributeValueSuggestion) && this.isUpdate) {\r\n        //         this.productService.deleteProductAttributeValueByAttributeId(this.productId, value.attributeId).subscribe(() => {\r\n        //             const productAttributeValues = _.filter(this.listProductValue, (productValue: ProductAttribute) => {\r\n        //                 return productValue.productAttributeId === value.attributeId;\r\n        //             });\r\n        //\r\n        //             if (productAttributeValues && productAttributeValues.length > 0 && productAttributeValues[0].id) {\r\n        //                 _.remove(this.listAttribute, (item: ProductCategoriesAttributeViewModel) => {\r\n        //                     return item.attributeId === value.attributeId;\r\n        //                 });\r\n        //\r\n        //                 _.remove(this.listProductValue, (productValue: ProductAttribute) => {\r\n        //                     return productValue.productAttributeId === value.attributeId;\r\n        //                 });\r\n        //             }\r\n        //         });\r\n        //     } else {\r\n        //         _.remove(this.listAttribute, (item: ProductCategoriesAttributeViewModel) => {\r\n        //             return item.attributeId === value.attributeId;\r\n        //         });\r\n        //\r\n        //         _.remove(this.listProductValue, (productValue: ProductAttribute) => {\r\n        //             return productValue.productAttributeId === value.attributeId;\r\n        //         });\r\n        //     }\r\n        //\r\n        // }\r\n    }\r\n\r\n    save() {\r\n        if (!this.isUpdate) {\r\n            this.productService.insertAttributeValues(this.productId, this.listProductValue).subscribe((result: ActionResultViewModel) => {\r\n            });\r\n        }\r\n    }\r\n\r\n    onBlur(attributeId: string, attributeName: string, value) {\r\n        if (!value) {\r\n            this.toastr.error('Please enter value');\r\n            return;\r\n        }\r\n\r\n        // const productAttributeValues = _.filter(this.listProductValue, (productValue: ProductAttribute) => {\r\n        //     return productValue.productAttributeId === attributeId && !productValue.productAttributeValueId;\r\n        // });\r\n\r\n        if (this.productAttributeSelect) {\r\n            this.productAttributeSelect.value = value;\r\n        }\r\n\r\n        const productAttributeValue = new ProductAttribute(attributeId, value, [], false);\r\n        // if (this.isUpdate) {\r\n        //     if (productAttributeValues && productAttributeValues.length > 0) {\r\n        //         this.productService.updateProductAttributeValue(this.productId, productAttributeValues[0].id,\r\n        //             productAttributeValue).subscribe(() => {\r\n        //         });\r\n        //     } else {\r\n        //         this.productService.insertAttributeValue(this.productId,\r\n        //             productAttributeValue).subscribe((result: ActionResultViewModel) => {\r\n        //             productAttributeValue.id = result.data;\r\n        //             productAttributeValue.productAttributeIsSelfContent = true;\r\n        //             productAttributeValue.value = value;\r\n        //             productAttributeValue.productAttributeName = attributeName;\r\n        //             this.listProductValue.push(productAttributeValue);\r\n        //         });\r\n        //     }\r\n        //\r\n        //     const productAttribute = this.getProductAttributeById(attributeId);\r\n        //     productAttribute.value = value;\r\n        // } else {\r\n        //     this.listProductValue.push(productAttributeValue);\r\n        // }\r\n    }\r\n\r\n    addAttribute() {\r\n        // const productAttribute = new ProductCategoriesAttributeViewModel();\r\n        // const listAttributeValue = _.filter(this.listProductValue, (value: ProductAttribute) => {\r\n        //     return value.productAttributeId === this.productAttributeSelect.id;\r\n        // });\r\n        //\r\n        // productAttribute.attributeName = this.productAttributeSelect.name;\r\n        // productAttribute.attributeId = this.productAttributeSelect.id;\r\n        // productAttribute.isSelfContent = this.productAttributeSelect.isSelfContent;\r\n        // productAttribute.multiple = this.productAttributeSelect.multiple;\r\n        // productAttribute.value = this.productAttributeSelect.value;\r\n        // if (listAttributeValue && listAttributeValue.length > 0 && !this.productAttributeSelect.isSelfContent) {\r\n        //     if (!this.productAttributeSelect.isSelfContent) {\r\n        //         const productAttributeValueSuggestions: NhSuggestion[] = [];\r\n        //         _.each(listAttributeValue, (productValue: ProductAttribute) => {\r\n        //             // productAttributeValueSuggestions.push(new NhSuggestion(productValue.productAttributeValueId,\r\n        //             //     productValue.productAttributeValueName, '', true, true, productValue));\r\n        //         });\r\n        //         productAttribute.productAttributeValueSuggestion = productAttributeValueSuggestions;\r\n        //     } else {\r\n        //         productAttribute.value = listAttributeValue[0].value;\r\n        //     }\r\n        // }\r\n        // this.listAttribute.push(productAttribute);\r\n        // this.productAttributeSelect = null;\r\n    }\r\n\r\n    private getProductAttributeById(attributeId: string) {\r\n        if (attributeId) {\r\n            const listProductAttribute = _.filter(this.listAttribute, (item: ProductCategoriesAttributeViewModel) => {\r\n                return item.attributeId === attributeId;\r\n            });\r\n\r\n            if (listProductAttribute && listProductAttribute.length > 0) {\r\n                return listProductAttribute[0];\r\n            }\r\n        }\r\n    }\r\n\r\n    private rendResult() {\r\n        // if (this.listProductValue && this.listProductValue.length > 0 && (this.isUpdate || this.isReadOnly)) {\r\n        //     this.listAttribute = [];\r\n        //     const groupByAttributeIds = _.groupBy(this.listProductValue, (productValue: ProductAttribute) => {\r\n        //         return productValue.productAttributeId;\r\n        //     });\r\n        //     _.each(groupByAttributeIds, (groups: ProductAttribute[]) => {\r\n        //         const attribute = groups[0];\r\n        //         const productAttribute = new ProductCategoriesAttributeViewModel();\r\n        //         productAttribute.attributeId = attribute.productAttributeId;\r\n        //         productAttribute.attributeName = attribute.productAttributeName;\r\n        //         productAttribute.isSelfContent = attribute.isSelfContent;\r\n        //         productAttribute.multiple = attribute.multiple;\r\n        //         const productAttributeValueSuggestions: NhSuggestion[] = [];\r\n        //         _.each(groups, (group: ProductAttribute) => {\r\n        //             if (attribute.isSelfContent && group.value !== '') {\r\n        //                 productAttribute.value = attribute.value;\r\n        //                 productAttribute.productAttributeValueSuggestion = [];\r\n        //             } else {\r\n        //                 // productAttributeValueSuggestions.push(new NhSuggestion(group.productAttributeValueId,\r\n        //                 //     group.productAttributeValueName, '', true, true, group));\r\n        //\r\n        //                 productAttribute.productAttributeValueSuggestion = productAttributeValueSuggestions;\r\n        //             }\r\n        //         });\r\n        //\r\n        //         this.listAttribute.push(productAttribute);\r\n        //     });\r\n        // }\r\n    }\r\n}\r\n\r\n","module.exports = \"<nh-modal #productFormModal size=\\\"lg\\\"\\r\\n          (shown)=\\\"onModalShown()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header class=\\\"uppercase font-green-sharp bold\\\">\\r\\n        <span\\r\\n            i18n=\\\"@@productFormModalTitle\\\">{isUpdate, select, 0 {Thêm mới sản phẩm} 1 {Cập nhật thông tin sản phẩm}}</span>\\r\\n    </nh-modal-header>\\r\\n    <form action=\\\"\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div formArrayName=\\\"translations\\\">\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"languages && languages.length > 1\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                           class=\\\"col-sm-2 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <nh-select [data]=\\\"languages\\\"\\r\\n                                   i18n-title=\\\"@@pleaseSelectLanguage\\\"\\r\\n                                   title=\\\"-- Please select language --\\\"\\r\\n                                   name=\\\"language\\\"\\r\\n                                   [(value)]=\\\"currentLanguage\\\"\\r\\n                                   (onSelectItem)=\\\"currentLanguage = $event.id\\\"></nh-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n                     [class.has-error]=\\\"formErrors?.categories\\\">\\r\\n                    <label class=\\\"control-label col-sm-2\\\" i18n-ghmLabel=\\\"@@productCategory\\\"\\r\\n                           ghmLabel=\\\"Nhóm sản phẩm\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <nh-dropdown-tree [data]=\\\"categoryTree\\\"\\r\\n                                          [title]=\\\"id ? categoryText : 'Chọn nhóm sản phẩm'\\\"\\r\\n                                          [isMultiple]=\\\"true\\\"\\r\\n                                          formControlName=\\\"categories\\\"\\r\\n                                          (accepted)=\\\"onAcceptSelectCategory($event)\\\">\\r\\n                        </nh-dropdown-tree>\\r\\n                        <span class=\\\"help-block\\\">{formErrors?.categories, select, required {Product Category is required}}</span>\\r\\n                    </div>\\r\\n                </div><!-- END: Product category -->\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Tên sản phẩm\\\"\\r\\n                           i18n-ghmLabel=\\\"@@productName\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                               id=\\\"{{'name ' + currentLanguage}}\\\"\\r\\n                               formControlName=\\\"name\\\"\\r\\n                               placeholder=\\\"Nhập tên sản phẩm\\\"\\r\\n                               i18n-placeholder=\\\"@@enterProductName\\\">\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                                {\\r\\n                                translationFormErrors[modelTranslation.value.languageId]?.name,\\r\\n                                select, required {Vui lòng nhập tên sản phẩm.} maxlength {Tên sản phẩm không được vượt quá 256 ký tự.}\\r\\n                                        pattern  {Tên sản phẩm phải là chữ.}\\r\\n                                }\\r\\n                            </span>\\r\\n                    </div>\\r\\n                </div><!-- END: Product name -->\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.metaKeyword\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Từ khóa\\\"\\r\\n                           i18n-ghmLabel=\\\"@@metakeyword\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                                    <input name=\\\"\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                              formControlName=\\\"metaKeyword\\\"\\r\\n                                              placeholder=\\\"Nhập nội dung tổng hợp khóa\\\"\\r\\n                                              i18n-placeholder=\\\"@@enterMetaKeyword\\\"/>\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                            {\\r\\n                                translationFormErrors[modelTranslation.value.languageId]?.metaKeyword,\\r\\n                                    select, maxlength {Thông tin keyword sản phẩm không được phép vượt quá 500 ký tự.}\\r\\n                                    }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div><!-- END: Product meta keyword -->\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Mô tả\\\"\\r\\n                           i18n-ghmLabel=\\\"@@description\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea name=\\\"\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                              formControlName=\\\"description\\\"\\r\\n                                              placeholder=\\\"Nhập nội dung mô tả\\\"\\r\\n                                              i18n-placeholder=\\\"@@enterDescription\\\"></textarea>\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                            {\\r\\n                            translationFormErrors[modelTranslation.value.languageId]?.description,\\r\\n                            select, maxlength {Thông tin mô tả sản phẩm không được phép vượt quá 500 ký tự.}\\r\\n                            }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div><!-- END: Product description -->\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.metaDescription\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Tổng hợp mô tả\\\"\\r\\n                           i18n-ghmLabel=\\\"@@metaDescription\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea name=\\\"\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                              formControlName=\\\"metaDescription\\\"\\r\\n                                              placeholder=\\\"Nhập nội dung tổng hợp mô tả\\\"\\r\\n                                              i18n-placeholder=\\\"@@enterMetaDescription\\\"></textarea>\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                            {\\r\\n                                translationFormErrors[modelTranslation.value.languageId]?.metaDescription,\\r\\n                                    select, maxlength {Thông tin mô tả sản phẩm không được phép vượt quá 500 ký tự.}\\r\\n                                    }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div><!-- END: Product meta description -->\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.metaDescription\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Seo Link\\\"\\r\\n                           i18n-ghmLabel=\\\"@@seoLink\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                                    <input name=\\\"\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                              formControlName=\\\"seoLink\\\"\\r\\n                                              placeholder=\\\"Nhập nội Seo Link\\\"\\r\\n                                              i18n-placeholder=\\\"@@enterSeoLink\\\"/>\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                            {\\r\\n                                translationFormErrors[modelTranslation.value.languageId]?.seoLink,\\r\\n                                    select, maxlength {Thông tin seoLink sản phẩm không được phép vượt quá 500 ký tự.}\\r\\n                                    }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div><!-- END: Product seo Link -->\\r\\n\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.metaDescription\\\">\\r\\n                    <div class=\\\"col-sm-2\\\"></div>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <label ghmLabel=\\\"Nội dung\\\"\\r\\n                               i18n-ghmLabel=\\\"@@seoLink\\\"></label>\\r\\n                        <tinymce [elementId]=\\\"'content'+ i\\\" formControlName=\\\"content\\\" [height]=\\\"300\\\"></tinymce>\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                            {\\r\\n                                translationFormErrors[modelTranslation.value.languageId]?.content,\\r\\n                                    select, maxlength {Thông tin seoLink sản phẩm không được phép vượt quá 500 ký tự.}\\r\\n                                    }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div><!-- END: Product seo Link -->\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.unitId\\\">\\r\\n                <label class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Đơn vị tính\\\"\\r\\n                       i18n-ghmLabel=\\\"@@productUnit\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <app-unit-suggestion\\r\\n                        [selectedItem]=\\\"model.value.unitId ? {id: model.value.unitId, name: model.value.unitName} : null\\\"\\r\\n                        (itemSelected)=\\\"onUnitSelected($event)\\\"\\r\\n                        (itemRemoved)=\\\"onUnitRemoved()\\\"></app-unit-suggestion>\\r\\n                    <span class=\\\"help-block\\\">{formErrors?.unitId, select, required {Vui lòng chọn đơn vị tính} maxlength {Đơn vị tính không được phép vượt quá 50 ký tự.}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.salePrice\\\">\\r\\n                <label class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Giá bán\\\"\\r\\n                       i18n-ghmLabel=\\\"@@salePrice\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"salePrice\\\">\\r\\n                    <span class=\\\"help-block\\\">{formErrors?.salePrice, select, required {Vui lòng chọn đơn vị tính} maxlength {Đơn vị tính không được phép vượt quá 50 ký tự.}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.salePrice\\\">\\r\\n                <label class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Nguồn sản phẩm\\\"\\r\\n                       i18n-ghmLabel=\\\"@@source\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"source\\\" placeholder=\\\" Nguồn sản phẩm\\\">\\r\\n                    <span class=\\\"help-block\\\">{formErrors?.salePrice, select, maxlength {Đơn vị tính không được phép vượt quá 500 ký tự.}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.isManagementByLot\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle formControlName=\\\"isManagementByLot\\\" color=\\\"primary\\\">\\r\\n                        <span i18n=\\\"@@isManagementByLot\\\">{model.value.isManagementByLot, select, 0 {Không theo lô} 1 {Quản lý theo lô}}</span>\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.isActive\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle formControlName=\\\"isActive\\\" color=\\\"primary\\\">\\r\\n                        <span i18n=\\\"@@isActive\\\">\\r\\n                            {model.value.isActive, select, 0 {Không sử dụng} 1 {Sử dụng}}\\r\\n                        </span>\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.isHot\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle formControlName=\\\"isHot\\\" color=\\\"primary\\\">\\r\\n                        <span i18n=\\\"@@isHot\\\">\\r\\n                            {model.value.isHot, select, 0 {No hot} 1 {Hot}}\\r\\n                        </span>\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.isHomePage\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle formControlName=\\\"isHomePage\\\" color=\\\"primary\\\">\\r\\n                        <span i18n=\\\"@@isHot\\\">\\r\\n                            {model.value.isHomePage, select, 0 {No HomePage} 1 {HomePage}}\\r\\n                        </span>\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n            <mat-accordion class=\\\"example-headers-align\\\">\\r\\n                <mat-expansion-panel hideToggle class=\\\"cm-mgt-10\\\">\\r\\n                    <mat-expansion-panel-header class=\\\"cm-mgb-10\\\">\\r\\n                        <mat-panel-title>\\r\\n                            <span i18n=\\\"@@unitConversion\\\" class=\\\"color-white\\\">Hình ảnh sản phẩm</span>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <ghm-file-explorer i18n-buttonText=\\\"@@selectImage\\\"\\r\\n                                       [multiple]=\\\"true\\\"\\r\\n                                       i18n-buttonText=\\\"@@selectProductImage\\\"\\r\\n                                       [buttonText]=\\\"'Chọn ảnh sản phẩm'\\\"\\r\\n                                       [buttonClass]=\\\"'center'\\\"\\r\\n                                       (acceptSelected)=\\\"uploadImageProduct($event)\\\"></ghm-file-explorer>\\r\\n                    <div class=\\\"product-images\\\">\\r\\n                        <div class=\\\"image-content\\\" *ngFor=\\\"let item of productImages\\\"\\r\\n                             [class.thumbnail]=\\\"item.isThumbnail\\\">\\r\\n                            <img ghmImage [src]=\\\"item.url\\\"\\r\\n                                 [nhImageViewer]=\\\"item.url\\\"\\r\\n                                 [errorImageUrl]=\\\"'/assets/images/no-image.png'\\\"\\r\\n                                 [isUrlAbsolute]=\\\"true\\\">\\r\\n                            <button class=\\\"btn btn-sm btn-remove red\\\" type=\\\"button\\\"\\r\\n                                    [swal]=\\\"confirmDeleteImage\\\"\\r\\n                                    (confirm)=\\\"removeImage(item)\\\">\\r\\n                                <i class=\\\"fa fa-times\\\"></i>\\r\\n                            </button>\\r\\n                            <button class=\\\"btn btn-sm btn-check blue\\\"\\r\\n                                    [class.display-none]=\\\"!item.isThumbnail\\\" (click)=\\\"checkThumbnail(item)\\\"\\r\\n                                    type=\\\"button\\\">\\r\\n                                <i class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!item.isThumbnail\\\"></i>\\r\\n                                <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"item.isThumbnail\\\">\\r\\n                                </i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-expansion-panel><!-- END: Product images -->\\r\\n\\r\\n                <mat-expansion-panel hideToggle class=\\\"cm-mgt-10\\\">\\r\\n                    <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                            <span i18n=\\\"@@unitConversion\\\" class=\\\"color-white\\\">Đơn vị chuyển đổi</span>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <table class=\\\"table table-stripped table-hover\\\"\\r\\n                           *ngIf=\\\"model.value.unitName; else selectDefaultUnitTemplate\\\"\\r\\n                           formArrayName=\\\"conversionUnits\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th i18n=\\\"@@unit\\\">Đơn vị</th>\\r\\n                            <th></th>\\r\\n                            <th i18n=\\\"@@conversion\\\" class=\\\"w100\\\">Chuyển đổi</th>\\r\\n                            <th i18n=\\\"@@unit\\\">Đơn vị</th>\\r\\n                            <th i18n=\\\"@@salePrice\\\" class=\\\"text-right\\\">Giá bán</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let item of conversionUnits.controls; let i = index\\\"\\r\\n                            [formGroupName]=\\\"i\\\">\\r\\n                            <td>\\r\\n                                <app-unit-suggestion\\r\\n                                    [selectedItem]=\\\"item.value.unitId ? {id: item.value.unitId, name: item.value.unitName} : null\\\"\\r\\n                                    (itemSelected)=\\\"onConversionUnitSelected($event, item, i)\\\"\\r\\n                                    (itemRemoved)=\\\"onConversionUnitRemoved(i)\\\"></app-unit-suggestion>\\r\\n                            </td>\\r\\n                            <td class=\\\"center middle\\\">=</td>\\r\\n                            <td>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control text-right\\\"\\r\\n                                       [class.has-error]=\\\"conversionFormErrors[i]?.value\\\"\\r\\n                                       ghm-text-selection\\r\\n                                       formControlName=\\\"value\\\"\\r\\n                                       id=\\\"conversionValue{{i}}\\\"\\r\\n                                       name=\\\"conversionValue{{i}}\\\">\\r\\n                            </td>\\r\\n                            <td class=\\\"middle\\\">\\r\\n                                {{ model.value.unitName }}\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control text-right\\\" formControlName=\\\"salePrice\\\">\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <ng-template #selectDefaultUnitTemplate>\\r\\n                        <div i18n=\\\"@@pleaseSelectUnit\\\" class=\\\"alert alert-info\\\">Vui lòng chọn đơn vị.</div>\\r\\n                    </ng-template>\\r\\n                </mat-expansion-panel><!-- END: Product unit conversion -->\\r\\n\\r\\n                <mat-expansion-panel hideToggle class=\\\"cm-mgt-10\\\">\\r\\n                    <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                            <span i18n=\\\"@@productAttribute\\\" class=\\\"color-white\\\">Thuộc tính sản phẩm</span>\\r\\n                        </mat-panel-title>\\r\\n                    </mat-expansion-panel-header>\\r\\n\\r\\n                    <div style=\\\"height: 350px;\\\" class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-hover table-striped\\\"\\r\\n                               formArrayName=\\\"attributes\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th class=\\\"middle w200\\\" i18n=\\\"@@productAttribute\\\">Thuộc tính sản phẩm</th>\\r\\n                                <th class=\\\"middle\\\" i18n=\\\"@@productAttributeValue\\\">Giá trị thuộc tính sản phẩm</th>\\r\\n                                <th class=\\\"middle center\\\" i18n=\\\"@@websiteVisible\\\">Hiển thị website</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr *ngFor=\\\"let item of attributes.controls; let i = index\\\"\\r\\n                                [formGroupName]=\\\"i\\\">\\r\\n                                <td>\\r\\n                                    <ng-container *ngIf=\\\"!isReadOnly\\\">\\r\\n                                        <app-product-attribute-suggestion\\r\\n                                            [selectedItem]=\\\"item.value.attributeId ? {id: item.value.attributeId, name: item.value.attributeName} : null\\\"\\r\\n                                            (itemSelected)=\\\"onAttributeSelected($event, item, i)\\\"\\r\\n                                            (itemRemoved)=\\\"onAttributeRemoved(i)\\\"></app-product-attribute-suggestion>\\r\\n                                    </ng-container>\\r\\n                                    <!--<ng-template #readOnly>-->\\r\\n                                    <!--<ul *ngIf=\\\"!item.isSelfContent; else spanValue\\\"-->\\r\\n                                    <!--class=\\\"list-style-none list-inline\\\">-->\\r\\n                                    <!--<li *ngFor=\\\"let attribute of item.productAttributeValueSuggestion\\\"-->\\r\\n                                    <!--class=\\\"product-attribute-value\\\">-->\\r\\n                                    <!--{{attribute.name}}-->\\r\\n                                    <!--<span> ,</span>-->\\r\\n                                    <!--</li>-->\\r\\n                                    <!--</ul>-->\\r\\n                                    <!--<ng-template #spanValue>-->\\r\\n                                    <!--{{item.value ? item.value : ''}}-->\\r\\n                                    <!--</ng-template>-->\\r\\n                                    <!--</ng-template>-->\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <ng-container *ngIf=\\\"!item.value.isSelfContent; else selfContentTemplate\\\">\\r\\n                                        <app-product-attribute-value-suggestion\\r\\n                                            [class.has-error]=\\\"attributeFormErrors[i].productAttributeValues\\\"\\r\\n                                            [multiple]=\\\"item.value.isMultiple\\\"\\r\\n                                            [attributeId]=\\\"item.value.attributeId\\\"\\r\\n                                            [selectedItem]=\\\"item.value.attributeValues ? item.value.attributeValues : []\\\"\\r\\n                                            (itemSelected)=\\\"onProductAttributeValueSelected($event, item, i)\\\"\\r\\n                                            (itemRemoved)=\\\"onProductAttributeValueRemoved(item)\\\"></app-product-attribute-value-suggestion>\\r\\n                                    </ng-container>\\r\\n                                    <ng-template #selfContentTemplate>\\r\\n                                        <textarea type=\\\"text\\\" formControlName=\\\"value\\\" class=\\\"form-control\\\"\\r\\n                                                  [class.has-error]=\\\"attributeFormErrors[i].value\\\"\\r\\n                                                  placeholder=\\\"Nhập nội dung\\\"\\r\\n                                                  i18n-placeholder=\\\"@@enterContent\\\"></textarea>\\r\\n                                    </ng-template>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle\\\">\\r\\n                                    <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"isShowClient\\\"></mat-slide-toggle>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </mat-expansion-panel><!-- END: Product attribute -->\\r\\n            </mat-accordion>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-checkbox\\r\\n                        class=\\\"cm-mgr-5\\\"\\r\\n                        color=\\\"primary\\\"\\r\\n                        name=\\\"isCreateAnother\\\"\\r\\n                        i18n=\\\"@@isCreateAnother\\\"\\r\\n                        *ngIf=\\\"!isUpdate\\\"\\r\\n                        [(checked)]=\\\"isCreateAnother\\\"\\r\\n                        (change)=\\\"isCreateAnother = !isCreateAnother\\\"> Tiếp tục thêm\\r\\n                    </mat-checkbox>\\r\\n                    <button class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\"\\r\\n                            [disabled]=\\\"isSaving\\\">\\r\\n                        <i class=\\\"fa fa-spinner\\\" *ngIf=\\\"isSaving\\\"></i>\\r\\n                        Lưu\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn default\\\" i18n=\\\"@@close\\\" nh-dismiss\\r\\n                            [disabled]=\\\"isSaving\\\">\\r\\n                        Đóng\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteImage\\r\\n    i18n=\\\"@@confirmDeleteImage\\\"\\r\\n    i18n-title=\\\"@@confirmTitleDeleteImage\\\"\\r\\n    i18n-text=\\\"@@confirmTextDeleteImage\\\"\\r\\n    title=\\\"Are you sure for delete this Image?\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Accept\\\"\\r\\n    cancelButtonText=\\\"Cancel\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","import {AfterViewInit, Component, Inject, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\r\nimport { BaseFormComponent } from '../../../../../base-form.component';\r\nimport { IPageId, PAGE_ID } from '../../../../../configs/page-id.config';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport { Product } from '../model/product.model';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UtilService } from '../../../../../shareds/services/util.service';\r\nimport { ProductImage } from '../model/product-image.model';\r\nimport { ProductTranslation } from '../model/product-translation.model';\r\nimport { Pattern } from '../../../../../shareds/constants/pattern.const';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ProductService } from '../service/product.service';\r\nimport { TreeData } from '../../../../../view-model/tree-data';\r\nimport * as _ from 'lodash';\r\nimport { ProductCategoryService } from '../../product-category/service/product-category-service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ExplorerItem } from '../../../../../shareds/components/ghm-file-explorer/explorer-item.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActionResultViewModel } from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport { ProductDetailViewModel } from '../viewmodel/product-detail.viewmodel';\r\nimport { ProductUnitComponent } from './product-unit/product-unit.component';\r\nimport { ProductConversionUnit } from './product-unit/model/product-conversion-unit.model';\r\nimport { ProductFormAttributeComponent } from './product-attribute/product-form-attribute.component';\r\nimport { ProductAttribute } from './product-attribute/model/product-value.model';\r\nimport { NhTabComponent } from '../../../../../shareds/components/nh-tab/nh-tab.component';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { NhSuggestion } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { NumberValidator } from '../../../../../validators/number.validator';\r\nimport { ProductCategoryViewModel } from '../viewmodel/product-category.viewmodel';\r\nimport {TinymceComponent} from '../../../../../shareds/components/tinymce/tinymce.component';\r\nimport {ProductStatus} from '../contants/product-status.const';\r\n\r\n@Component({\r\n    selector: 'app-product-form',\r\n    templateUrl: './product-form.component.html',\r\n    styleUrls: ['../product.scss'],\r\n    providers: [UtilService, NumberValidator]\r\n})\r\n\r\nexport class ProductFormComponent extends BaseFormComponent implements OnInit, AfterViewInit {\r\n    @ViewChild(ProductUnitComponent) productUnitComponent: ProductUnitComponent;\r\n    @ViewChild(ProductFormAttributeComponent) productAttributeComponent: ProductFormAttributeComponent;\r\n    @ViewChild(NhTabComponent) nhTabComponent: NhTabComponent;\r\n    @ViewChild(TinymceComponent) contentEditor: TinymceComponent;\r\n    @ViewChild('productFormModal') productFormModal: NhModalComponent;\r\n    product = new Product();\r\n    categoryTree: TreeData[];\r\n    categoryText;\r\n    categories: number[];\r\n    productStatus = ProductStatus;\r\n    productImages: ProductImage[] = [];\r\n    modelTranslation = new ProductTranslation();\r\n    listProductValue: ProductAttribute[] = [];\r\n    conversionFormErrors: any = {};\r\n    conversionValidationMessages: any = {};\r\n    attributeFormErrors: any = {};\r\n    attributeValidationMessages: any = {};\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private numberValidator: NumberValidator,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private productCategoryService: ProductCategoryService,\r\n                private productService: ProductService) {\r\n        super();\r\n    }\r\n\r\n    get conversionUnits(): FormArray {\r\n        return this.model.get('conversionUnits') as FormArray;\r\n    }\r\n\r\n    get attributes(): FormArray {\r\n        return this.model.get('attributes') as FormArray;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.WAREHOUSE, this.pageId.PRODUCT, 'Quản lý sản phẩm', 'Quản lý sản phẩm');\r\n        this.renderForm();\r\n        this.addConversionUnit();\r\n        this.addAttribute();\r\n        // this.subscribers.routerParam = this.route.params.subscribe((params: any) => {\r\n        //         const id = params['id'];\r\n        //         if (id) {\r\n        //             this.id = id;\r\n        //             this.isUpdate = true;\r\n        //             this.productService.getDetail(id).subscribe((result: ActionResultViewModel<ProductDetailViewModel>) => {\r\n        //                 this.productDetail = result.data;\r\n        //                 if (this.productDetail) {\r\n        //                     if (this.productDetail.categories) {\r\n        //                         this.categories = [];\r\n        //                         const listCategoryByLanguageId = _.filter(this.productDetail.categories,\r\n        //                             (category: ProductCategoryViewModel) => {\r\n        //                                 return category.languageId === this.currentLanguage;\r\n        //                             });\r\n        //\r\n        //                         _.each(listCategoryByLanguageId, (category: ProductCategoryViewModel) => {\r\n        //                             this.categories.push(category.categoryId);\r\n        //                         });\r\n        //\r\n        //                         this.categoryText = _.join(_.map(listCategoryByLanguageId, (categoryNews: ProductCategoryViewModel) => {\r\n        //                             return categoryNews.categoryName;\r\n        //                         }), ', ');\r\n        //                     }\r\n        //                     this.model.patchValue({\r\n        //                         id: this.productDetail.id,\r\n        //                         categories: this.categories,\r\n        //                         thumbnail: this.productDetail.thumbnail,\r\n        //                         images: this.productDetail.images,\r\n        //                         isManagementByLot: this.productDetail.isManagementByLot,\r\n        //                         isActive: this.productDetail.isActive,\r\n        //                         concurrencyStamp: this.productDetail.concurrencyStamp,\r\n        //                     });\r\n        //                     this.productImages = this.productDetail.images;\r\n        //                     this.listProductUnit = this.productDetail.units;\r\n        //                     this.listProductUnitConversion = this.productDetail.conversionUnits;\r\n        //                     this.getUnitIdFromProductUnitId();\r\n        //                     this.listProductValue = _.filter(this.productDetail.values, (productValue: ProductAttribute) => {\r\n        //                         return productValue.languageId === this.currentLanguage;\r\n        //                     });\r\n        //\r\n        //                     _.each(this.productImages, (image: ProductImage) => {\r\n        //                         if (image.url === this.productDetail.thumbnail) {\r\n        //                             image.isThumbnail = true;\r\n        //                         } else {\r\n        //                             image.isThumbnail = false;\r\n        //                         }\r\n        //                     });\r\n        //                 }\r\n        //\r\n        //                 if (this.productDetail.translations && this.productDetail.translations.length > 0) {\r\n        //                     this.translations.controls.forEach(\r\n        //                         (model: FormGroup) => {\r\n        //                             const detail = _.find(\r\n        //                                 this.productDetail.translations,\r\n        //                                 (productTranslation: ProductTranslation) => {\r\n        //                                     return (\r\n        //                                         productTranslation.languageId === model.value.languageId\r\n        //                                     );\r\n        //                                 }\r\n        //                             );\r\n        //                             if (detail) {\r\n        //                                 model.patchValue(detail);\r\n        //                             }\r\n        //                         }\r\n        //                     );\r\n        //                 }\r\n        //             });\r\n        //         } else {\r\n        //             this.resetForm();\r\n        //         }\r\n        //     }\r\n        // );\r\n        // this.utilService.focusElement('name ' + this.currentLanguage);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.reloadTree();\r\n        this.contentEditor.initEditor();\r\n    }\r\n    onModalShown() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    onUnitSelected(unit: any) {\r\n        const {id, name} = unit;\r\n        this.model.patchValue({\r\n            unitId: id,\r\n            unitName: name,\r\n        });\r\n    }\r\n\r\n    onUnitRemoved() {\r\n        this.model.patchValue({\r\n            unitId: null,\r\n            unitName: null\r\n        });\r\n    }\r\n\r\n    onAcceptSelectCategory(data: TreeData[]) {\r\n        this.categories = [];\r\n        if (data && data.length > 0) {\r\n            _.each(data, (tree: TreeData) => {\r\n                this.categories.push(parseInt(tree.id));\r\n            });\r\n        }\r\n        this.model.patchValue({categories: this.categories});\r\n    }\r\n\r\n    onConversionUnitSelected(unit: NhSuggestion, conversionUnitControl: FormControl, index: number) {\r\n        if (unit.id === this.model.value.unitId) {\r\n            this.toastr.warning('Đơn vị chuyển đổi phải khác đơn vị chuyển đổi.');\r\n            return;\r\n        }\r\n        // Check conversion unit exists.\r\n        const count = _.countBy(this.conversionUnits.controls, (conversion: FormControl) => {\r\n            return conversion.get('unitId').value === unit.id;\r\n        }).true;\r\n        if (count) {\r\n            this.toastr.warning('Đơn vị đã tồn tại. Vui lòng kiểm tra lại.');\r\n            conversionUnitControl.patchValue({unitId: null, unitName: null});\r\n            return;\r\n        } else {\r\n            // if (this.isUpdate) {\r\n            //     this.saveProductUnit(conversionUnitControl.value, index);\r\n            // } else {\r\n            conversionUnitControl.patchValue({unitId: unit.id, unitName: unit.name});\r\n            this.utilService.focusElement(`conversionValue${index}`);\r\n            // }\r\n            this.addConversionUnit();\r\n        }\r\n    }\r\n\r\n    onConversionUnitRemoved(index: number) {\r\n        this.conversionUnits.removeAt(index);\r\n        const defaultFormControl = _.find(this.conversionUnits.controls, (control: FormControl) => {\r\n            return !control.value.unitId;\r\n        });\r\n        if (!defaultFormControl) {\r\n            this.addConversionUnit();\r\n        }\r\n    }\r\n\r\n    // onConversionValueBlur(conversionUnitControl: FormControl, index: number) {\r\n    //     if (this.isUpdate) {\r\n    //         this.saveProductUnit(conversionUnitControl, index);\r\n    //     }\r\n    // }\r\n\r\n    // onSalePriceBlur(conversionUnitControl: FormControl, index: number) {\r\n    //     if (this.isUpdate) {\r\n    //         // const isValid = this.validateFormGroup(conversionUnitControl, this.conversionFormErrors[index],\r\n    //         //     this.conversionValidationMessages[index], true);\r\n    //         // if (isValid) {\r\n    //         //     const salePrice = conversionUnitControl.value.salePrice;\r\n    //         //     const productUnitId = conversionUnitControl.value.productUnitId;\r\n    //         //     const productUnitConversionId = conversionUnitControl.value.productUnitConversionId;\r\n    //         //     this.subscribers.updateConversionSalePrice = this.productService.updateConversionUnitSalePrice(this.id, productUnitId,\r\n    //         //         productUnitConversionId, salePrice)\r\n    //         //         .subscribe((result: ActionResultViewModel) => {\r\n    //         //             this.toastr.success(result.message);\r\n    //         //         });\r\n    //         // }\r\n    //         // this.saveProductUnit(conversionUnitControl, index);\r\n    //     }\r\n    // }\r\n\r\n    onAttributeSelected(selectedAttribute: any, attributeFormControl: FormControl, index: number) {\r\n        const count = _.countBy(this.attributes.controls, (conversion: FormControl) => {\r\n            return conversion.get('attributeId').value === selectedAttribute.id;\r\n        }).true;\r\n        if (count) {\r\n            this.toastr.warning('Thuộc tính đã tồn tại. Vui lòng kiểm tra lại.');\r\n            attributeFormControl.patchValue({attributeId: null, attributeName: null});\r\n            return;\r\n        }\r\n        attributeFormControl.patchValue({\r\n            attributeId: selectedAttribute.id,\r\n            attributeName: selectedAttribute.name,\r\n            isSelfContent: selectedAttribute.isSelfContent,\r\n            isMultiple: selectedAttribute.isMultiple\r\n        });\r\n        this.utilService.focusElement(`conversionValue${index}`);\r\n        this.addAttribute();\r\n    }\r\n\r\n    onAttributeRemoved(index: number) {\r\n        this.attributes.removeAt(index);\r\n        const defaultFormControl = _.find(this.attributes, (formControl: FormControl) => {\r\n            return !formControl.value.attributeId;\r\n        });\r\n\r\n        if (!defaultFormControl) {\r\n            this.addAttribute();\r\n        }\r\n    }\r\n\r\n    onProductAttributeValueSelected(selectedAttributeValue: any, attributeFormControl: FormControl, index: number) {\r\n        const count = _.countBy(attributeFormControl.get('attributeValues').value, (attributeValue: NhSuggestion) => {\r\n            return attributeValue.id === selectedAttributeValue.id;\r\n        }).true;\r\n        if (count) {\r\n            this.toastr.warning('Giá trị thuộc tính đã tồn tại. Vui lòng kiểm tra lại.');\r\n            attributeFormControl.patchValue({attributeId: null, productAttributeName: null});\r\n            return;\r\n        }\r\n        attributeFormControl.patchValue({\r\n            productAttributeValues: selectedAttributeValue.map((attribute: NhSuggestion) => {\r\n                return {\r\n                    id: attribute.id,\r\n                    name: attribute.name\r\n                };\r\n            })\r\n        });\r\n        // if (this.isUpdate) {\r\n        //     this.saveAttribute(attributeFormControl, index);\r\n        // }\r\n    }\r\n\r\n    onProductAttributeValueRemoved(attributeFormControl: FormControl) {\r\n    }\r\n\r\n    add() {\r\n        this.productFormModal.open();\r\n    }\r\n\r\n    edit(productId: string) {\r\n        this.id = productId;\r\n        this.isUpdate = true;\r\n        this.getDetail(productId);\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        const isLanguageValid = this.validateLanguage();\r\n        if (isValid && isLanguageValid) {\r\n            this.product = this.model.value;\r\n            this.product.status = this.productStatus.pending;\r\n            this.product.conversionUnits = _.filter(this.product.conversionUnits, (productConversionUnit: ProductConversionUnit) => {\r\n                return productConversionUnit.unitId;\r\n            });\r\n            this.product.attributes = _.filter(this.product.attributes, (productAttributeValue: ProductAttribute) => {\r\n                return productAttributeValue.attributeId\r\n                    && productAttributeValue.attributeValues\r\n                    && productAttributeValue.attributeValues.length > 0;\r\n            });\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.productService\r\n                    .update(this.id, this.product)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.productFormModal.dismiss();\r\n                        // this.router.navigate(['/products']);\r\n                    });\r\n            } else {\r\n                this.productService\r\n                    .insert(this.product)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.id = result.data;\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.utilService.focusElement('name ' + this.currentLanguage);\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.productFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    uploadImageProduct(files: ExplorerItem[]) {\r\n        if (files && files.length > 0) {\r\n            _.each(files, (file: ExplorerItem) => {\r\n                const countByUrl = _.countBy(this.productImages, (productImage: ProductImage) => {\r\n                    return productImage.url === file.absoluteUrl;\r\n                }).true;\r\n\r\n                if (countByUrl && countByUrl > 0 || !file.isImage) {\r\n                    this.toastr.error('Product image already exists or File have select not is image');\r\n                    return;\r\n                } else {\r\n                    this.productImages.push(new ProductImage(this.id, '', file.absoluteUrl));\r\n                }\r\n            });\r\n\r\n            this.model.patchValue({images: this.productImages});\r\n        }\r\n    }\r\n\r\n    removeThumbnail() {\r\n        this.model.patchValue({thumbnail: ''});\r\n    }\r\n\r\n    removeImage(productImage: ProductImage) {\r\n        if (productImage.isThumbnail) {\r\n            this.model.patchValue({thumbnail: ''});\r\n        }\r\n        _.remove(this.productImages, (item: ProductImage) => {\r\n            return item.url === productImage.url;\r\n        });\r\n    }\r\n\r\n    clickTabProductUnit(value) {\r\n        this.productUnitComponent.renderListUnit();\r\n    }\r\n\r\n    clickTabProductAttribute(value) {\r\n        this.productAttributeComponent.getProductAttribute();\r\n    }\r\n\r\n    reloadTree() {\r\n        this.productCategoryService.getTree().subscribe((result: TreeData[]) => {\r\n            this.categoryTree = result;\r\n        });\r\n    }\r\n\r\n    checkThumbnail(item: ProductImage) {\r\n        if (!item.isThumbnail) {\r\n            _.each(this.productImages, (image: ProductImage) => {\r\n                image.isThumbnail = false;\r\n            });\r\n            this.model.patchValue({thumbnail: item.url});\r\n        }\r\n        item.isThumbnail = !item.isThumbnail;\r\n    }\r\n\r\n    // onSelectProductListUnit(value: ProductListUnit) {\r\n    //     this.productListUnit = value ? value : null;\r\n    //     this.model.patchValue({productListUnit: this.productListUnit});\r\n    // }\r\n    //\r\n    // private getUnitIdFromProductUnitId() {\r\n    //     if (this.listProductUnitConversion && this.listProductUnit && this.listProductUnit.length > 0\r\n    //         && this.listProductUnitConversion.length > 0) {\r\n    //         _.each(this.listProductUnitConversion, (unitConversion: ProductConversionUnit) => {\r\n    //             const productUnitById = _.filter(this.listProductUnit, (unit: ProductUnit) => {\r\n    //                 return unit.id === unitConversion.productUnitId;\r\n    //             });\r\n    //\r\n    //             if (productUnitById && productUnitById.length > 0) {\r\n    //                 unitConversion.unitId = productUnitById[0].unitId;\r\n    //             }\r\n    //\r\n    //             const productUnitConversionById = _.filter(this.listProductUnit, (unitConvert: ProductUnit) => {\r\n    //                 return unitConvert.id === unitConversion.conversionUnitId;\r\n    //             });\r\n    //\r\n    //             if (productUnitConversionById && productUnitConversionById.length > 0) {\r\n    //                 unitConversion.conversionUnitId = productUnitConversionById[0].unitId;\r\n    //             }\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['unitId', 'thumbnail', 'isManagementByLot', 'isActive', 'categories', 'source']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'unitId': ['required', 'maxLength']},\r\n            {'thumbnail': ['maxLength']},\r\n            {'categories': ['required']},\r\n            {'isManagementByLot': ['required']},\r\n            {'isActive': ['required']},\r\n            {'source': ['maxLength']}\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            unitId: [this.product.unitId, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            unitName: [this.product.unitName],\r\n            salePrice: [this.product.salePrice],\r\n            thumbnail: [this.product.thumbnail, [Validators.maxLength(500)]],\r\n            isManagementByLot: [this.product.isManagementByLot, [Validators.required]],\r\n            isActive: [this.product.isActive, [Validators.required]],\r\n            isHot: [this.product.isHot, [Validators.required]],\r\n            isHomePage: [this.product.isHomePage, [Validators.required]],\r\n            categories: [this.categories, [Validators.required]],\r\n            images: [this.productImages],\r\n            source: [\r\n                this.product.source,\r\n                [Validators.maxLength(500)]\r\n            ],\r\n            concurrencyStamp: [this.product.concurrencyStamp],\r\n            translations: this.fb.array([]),\r\n            conversionUnits: this.fb.array([]),\r\n            attributes: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name', 'description', 'metaKeyword', 'metaDescription', 'seoLink', 'content']\r\n        );\r\n        this.translationValidationMessage[\r\n            language\r\n            ] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxlength', 'pattern']},\r\n            {description: ['maxlength']},\r\n            {metaKeyword: ['maxLength']},\r\n            {metaDescription: ['maxLength']},\r\n            {seoLink: ['maxLength']},\r\n            {content: ['maxLength']}\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256), Validators.pattern(Pattern.whiteSpace)]\r\n            ],\r\n            description: [\r\n                this.modelTranslation.description,\r\n                [Validators.maxLength(500)]\r\n            ],\r\n            metaKeyword: [\r\n                this.modelTranslation.metaKeyword,\r\n                [Validators.maxLength(500)]\r\n            ],\r\n            metaDescription: [\r\n                this.modelTranslation.metaDescription,\r\n                [Validators.maxLength(500)]\r\n            ],\r\n            seoLink: [\r\n                this.modelTranslation.seoLink,\r\n                [Validators.maxLength(500)]\r\n            ],\r\n            content: [\r\n                this.modelTranslation.content,\r\n                [Validators.maxLength(4000)]\r\n            ]\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslation(false)\r\n        );\r\n        return translationModel;\r\n    };\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue(new Product());\r\n        this.translations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n            });\r\n        });\r\n        this.resetConversionUnit();\r\n        this.resetAttributes();\r\n        this.productImages = [];\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private addConversionUnit() {\r\n        const lastConversionUnitModel = this.conversionUnits.at(this.conversionUnits.length - 1);\r\n        if (lastConversionUnitModel && !lastConversionUnitModel.value.unitId) {\r\n            return;\r\n        }\r\n        const index = this.conversionUnits.length;\r\n        this.conversionUnits.push(this.buildConversionForm(index));\r\n    }\r\n\r\n    // private saveProductUnit(conversionUnitFormControl: FormControl, index: number) {\r\n    //     const isValid = this.validateFormGroup(conversionUnitFormControl, this.conversionFormErrors[index],\r\n    //         this.conversionValidationMessages[index], true);\r\n    //     if (!isValid) {\r\n    //         return;\r\n    //     }\r\n    //     const conversionUnit = conversionUnitFormControl.value;\r\n    //     this.subscribers.saveProductUnitConversion = this.productService.saveConversionUnit(this.id, conversionUnit.productUnitId,\r\n    //         conversionUnit.productUnitConversionId, conversionUnit.value, conversionUnit.salePrice)\r\n    //         .subscribe((result: ActionResultViewModel) => {\r\n    //             this.toastr.success(result.message);\r\n    //         });\r\n    // }\r\n\r\n    private buildConversionForm(index: number, conversionUnit?: ProductConversionUnit) {\r\n        this.conversionFormErrors[index] = this.renderFormError(['unitId', 'value']);\r\n        this.conversionValidationMessages[index] = this.renderFormErrorMessage([\r\n            {unitId: ['required']},\r\n            {value: ['isValid']}\r\n        ]);\r\n        const conversionModel = this.formBuilder.group({\r\n            unitId: [conversionUnit ? conversionUnit.unitId : '', [\r\n                Validators.required\r\n            ]],\r\n            unitName: [conversionUnit ? conversionUnit.unitName : ''],\r\n            salePrice: [conversionUnit ? conversionUnit.salePrice : null],\r\n            conversionUnitId: [conversionUnit ? conversionUnit.conversionUnitId : this.model.value.unitId],\r\n            conversionUnitName: [conversionUnit ? conversionUnit.conversionUnitName : ''],\r\n            value: [conversionUnit ? conversionUnit.value : null, [\r\n                this.numberValidator.isValid\r\n            ]],\r\n        });\r\n        conversionModel.valueChanges.subscribe(() => this.validateFormGroup(conversionModel, this.conversionFormErrors[index],\r\n            this.conversionValidationMessages[index], false));\r\n        return conversionModel;\r\n    }\r\n\r\n    private buildAttributeForm(index: number, productValue?: ProductAttribute) {\r\n        this.attributeFormErrors[index] = this.renderFormError(['unitId', 'value', 'productAttributeValues']);\r\n        this.attributeValidationMessages[index] = this.renderFormErrorMessage([\r\n            {unitId: ['required']},\r\n            {value: ['isValid']},\r\n            {productAttributeValues: ['required']},\r\n        ]);\r\n        const attributeModel = this.formBuilder.group({\r\n            attributeId: [productValue ? productValue.attributeId : '', [\r\n                Validators.required\r\n            ]],\r\n            attributeName: [productValue ? productValue.attributeName : ''],\r\n            value: [productValue ? productValue.value : ''],\r\n            isSelfContent: [productValue ? productValue.isSelfContent : false],\r\n            isMultiple: [productValue ? productValue.isMultiple : false],\r\n            isShowClient: [productValue ? productValue.isShowClient : false],\r\n            attributeValues: [productValue ? productValue.attributeValues : [], [\r\n                Validators.required\r\n            ]],\r\n        });\r\n        attributeModel.valueChanges.subscribe(() => this.validateFormGroup(attributeModel, this.attributeFormErrors[index],\r\n            this.attributeValidationMessages[index], false));\r\n        return attributeModel;\r\n    }\r\n\r\n    private addAttribute() {\r\n        const lastAttributeModel = this.attributes.at(this.attributes.length - 1);\r\n        if (lastAttributeModel && !lastAttributeModel.value.attributeId) {\r\n            return;\r\n        }\r\n        const index = this.attributes.length;\r\n        this.attributes.push(this.buildAttributeForm(index));\r\n    }\r\n\r\n    // private saveAttribute(attributeFormControl: FormControl, index: number) {\r\n    //     const isValid = this.validateFormGroup(attributeFormControl, this.conversionFormErrors[index],\r\n    //         this.conversionValidationMessages[index], true);\r\n    //     if (!isValid) {\r\n    //         return;\r\n    //     }\r\n    //     const attribute = attributeFormControl.value;\r\n    //     this.subscribers.saveProductUnitConversion = this.productService.saveAttribute(this.id, attribute.attributeId,\r\n    //         attribute.productAttributeValueId, attribute.value)\r\n    //         .subscribe((result: ActionResultViewModel) => {\r\n    //             this.toastr.success(result.message);\r\n    //         });\r\n    // }\r\n\r\n    private resetAttributes() {\r\n        while (this.attributes.length !== 0) {\r\n            this.attributes.removeAt(0);\r\n        }\r\n        setTimeout(() => {\r\n            this.addAttribute();\r\n        });\r\n    }\r\n\r\n    private resetConversionUnit() {\r\n        while (this.conversionUnits.length !== 0) {\r\n            this.conversionUnits.removeAt(0);\r\n        }\r\n        setTimeout(() => {\r\n            this.addConversionUnit();\r\n        });\r\n    }\r\n\r\n    private getDetail(productId: string) {\r\n        this.productFormModal.open();\r\n        this.subscribers.getDetail = this.productService.getDetail(productId)\r\n            .subscribe((result: ProductDetailViewModel) => {\r\n                this.model.patchValue({\r\n                    categories: result.categories.map((category: any) => category.categoryId),\r\n                    unitId: result.unitId,\r\n                    unitName: result.unitName,\r\n                    isActive: result.isActive,\r\n                    isManagementByLot: result.isManagementByLot,\r\n                    salePrice: result.salePrice,\r\n                    translations: result.translations,\r\n                    concurrencyStamp: result.concurrencyStamp,\r\n                    thumbnail: result.thumbnail,\r\n                    images: result.images\r\n                });\r\n                this.productImages = result.images;\r\n                if (result.categories) {\r\n                    this.categories = [];\r\n                    const listCategoryByLanguageId = _.filter(result.categories,\r\n                        (category: ProductCategoryViewModel) => {\r\n                            return category.languageId === this.currentLanguage;\r\n                        });\r\n\r\n                    _.each(listCategoryByLanguageId, (category: ProductCategoryViewModel) => {\r\n                        this.categories.push(category.categoryId);\r\n                    });\r\n\r\n                    this.categoryText = _.join(_.map(listCategoryByLanguageId, (categoryNews: ProductCategoryViewModel) => {\r\n                        return categoryNews.categoryName;\r\n                    }), ', ');\r\n                }\r\n                if (result.conversionUnits && result.conversionUnits.length > 0) {\r\n                    this.conversionUnits.removeAt(0);\r\n                    let index = 0;\r\n                    result.conversionUnits.forEach((conversionUnit: ProductConversionUnit) => {\r\n                        this.conversionUnits.push(this.buildConversionForm(index, conversionUnit));\r\n                        index++;\r\n                    });\r\n                }\r\n                if (result.attributes) {\r\n                    const groups = _.groupBy(result.attributes, 'attributeId');\r\n                    if (groups) {\r\n                        this.attributes.removeAt(0);\r\n                        let index = 0;\r\n                        for (const key in groups) {\r\n                            if (groups.hasOwnProperty(key)) {\r\n                                const groupItem: ProductAttribute = groups[key][0];\r\n                                const productAttributeValue: ProductAttribute = {\r\n                                    id: groupItem.id,\r\n                                    attributeId: groupItem.attributeId,\r\n                                    attributeName: groupItem.attributeName,\r\n                                    value: groupItem.value,\r\n                                    isSelfContent: groupItem.isSelfContent,\r\n                                    isMultiple: groupItem.isMultiple,\r\n                                    isShowClient: groupItem.isShowClient,\r\n                                    attributeValues: groups[key].map((group: ProductAttribute) => {\r\n                                        return {\r\n                                            id: group.attributeValueId,\r\n                                            name: group.attributeValueName\r\n                                        };\r\n                                    })\r\n                                };\r\n                                this.attributes.push(this.buildAttributeForm(index, productAttributeValue));\r\n                            }\r\n                            index++;\r\n                        }\r\n                    }\r\n                }\r\n                if (result.images) {\r\n                    this.productImages = result.images;\r\n                    _.each(this.productImages, (image: ProductImage) => {\r\n                        if (image.url === result.thumbnail) {\r\n                            image.isThumbnail = true;\r\n                        } else {\r\n                            image.isThumbnail = false;\r\n                        }\r\n                    });\r\n                }\r\n                setTimeout(() => {\r\n                    this.addConversionUnit();\r\n                    this.addAttribute();\r\n                });\r\n            });\r\n    }\r\n}\r\n","export class ProductConversionUnit {\r\n    unitId: string;\r\n    unitName: string;\r\n    productUnitId: string;\r\n    conversionUnitId: string;\r\n    conversionUnitName: string;\r\n    value: number;\r\n    salePrice: number;\r\n\r\n    constructor(unitId?: string, unitName?: string, conversionUnitId?: string, conversionUnitName?: string, value?: number) {\r\n        this.unitId = unitId;\r\n        this.unitName = unitName;\r\n        this.conversionUnitId = conversionUnitId;\r\n        this.conversionUnitName = conversionUnitName;\r\n        this.value = value;\r\n    }\r\n}\r\n","import {ProductUnit} from './product-unit.model';\r\nimport {ProductConversionUnit} from './product-conversion-unit.model';\r\n\r\nexport class ProductListUnit {\r\n    listUnit: ProductUnit[];\r\n    listConversionUnit: ProductConversionUnit[];\r\n\r\n    constructor(listUnit?: ProductUnit[], listConversionUnit?: ProductConversionUnit[]) {\r\n        this.listUnit = listUnit ? listUnit : [];\r\n        this.listConversionUnit = listConversionUnit ? listConversionUnit : [];\r\n    }\r\n}\r\n","export class ProductUnit {\r\n    id: string;\r\n    unitId: string;\r\n    isDefault: boolean;\r\n    salePrice: number;\r\n\r\n    constructor(isDefault?: boolean, unitId?: string, salePrice?: number) {\r\n        this.isDefault = isDefault;\r\n        this.unitId = unitId;\r\n        this.salePrice = salePrice;\r\n    }\r\n}\r\n","module.exports = \"<!--<form action=\\\"\\\" (ngSubmit)=\\\"save()\\\">-->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"portlet\\\">\\r\\n                <div class=\\\"portlet-title\\\">\\r\\n                    <div class=\\\"caption\\\">\\r\\n                      <span class=\\\"caption-subject bold caption font-red-sunglo uppercase\\\"\\r\\n                            i18n=\\\"@@unit\\\">\\r\\n                      <i class=\\\"fa fa-cube\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                       <ng-container i18n=\\\"@@unit\\\"> Unit</ng-container>\\r\\n                       </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"portlet-body bordered cm-pdt-0\\\">\\r\\n                    <table class=\\\"table table-hover table-striped\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th class=\\\"middle center w100\\\" i18n=\\\"@@isDefault\\\">Is Default ?</th>\\r\\n                            <th class=\\\"middle\\\" i18n=\\\"@@unit\\\">Unit</th>\\r\\n                            <th class=\\\"middle w200 text-right\\\" i18n=\\\"@@price\\\">Price</th>\\r\\n                            <th class=\\\"middle w50 center\\\" *ngIf=\\\"!isReadonly\\\">\\r\\n                                <button class=\\\"btn btn-sm blue\\\" type=\\\"button\\\" (click)=\\\"addUnit()\\\">\\r\\n                                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                                </button>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let productUnit of listProductUnit; let i = index\\\">\\r\\n                            <td class=\\\"middle center\\\">\\r\\n                                <mat-radio-button color=\\\"primary\\\" [checked]=\\\"productUnit.isDefault\\\"\\r\\n                                                  [disabled]=\\\"isReadonly\\\"\\r\\n                                                  (change)=\\\"selectIsDefault(productUnit)\\\"></mat-radio-button>\\r\\n                            </td>\\r\\n                            <td class=\\\"middle\\\">\\r\\n                                <nh-select\\r\\n                                    [isEnable]=\\\"!isReadonly\\\"\\r\\n                                    [liveSearch]=\\\"true\\\"\\r\\n                                    [class]=\\\"'w100pc'\\\"\\r\\n                                    [title]=\\\"'- Unit -'\\\"\\r\\n                                    i18n-title=\\\"@@selectUnit\\\"\\r\\n                                    [data]=\\\"listUnitSuggestion\\\"\\r\\n                                    [value]=\\\"productUnit.unitId\\\"\\r\\n                                    (onSelectItem)=\\\"selectProductUnit($event, productUnit, i)\\\"\\r\\n                                ></nh-select>\\r\\n                            </td>\\r\\n                            <td class=\\\"middle text-right\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input class=\\\"form-control text-right\\\"\\r\\n                                           id=\\\"salePrice - {{productUnit.unitId}}\\\"\\r\\n                                           [(ngModel)]=\\\"productUnit.salePrice\\\" name=\\\"salePrice - {{productUnit.unitId}}\\\"\\r\\n                                           (blur)=\\\"changeSalePrice(productUnit)\\\"\\r\\n                                           (focus)=\\\"oldSalePrice = productUnit.salePrice\\\"\\r\\n                                           *ngIf=\\\"!isReadonly; else inputPrice\\\">\\r\\n                                    <ng-template #inputPrice>\\r\\n                                        <div class=\\\"form-control height-auto\\\">\\r\\n                                            {{productUnit.salePrice | formatNumber}}\\r\\n                                        </div>\\r\\n                                    </ng-template>\\r\\n                                    <div class=\\\"input-group-addon text-right\\\">\\r\\n                                        <span>VNĐ</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td class=\\\"center\\\" *ngIf=\\\"!isReadonly\\\">\\r\\n                                <a class=\\\"btn red\\\" (click)=\\\"removeUnit(productUnit, i)\\\">\\r\\n                                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                                </a>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"portlet\\\">\\r\\n                <div class=\\\"portlet-title\\\">\\r\\n                    <div class=\\\"caption\\\">\\r\\n                      <span class=\\\"caption-subject bold caption font-red-sunglo uppercase\\\"\\r\\n                            i18n=\\\"@@unit\\\">\\r\\n                      <i class=\\\"fa fa-cube\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                       <ng-container i18n=\\\"@@unitConversion\\\"> Unit conversion</ng-container>\\r\\n                       </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"portlet-body bordered cm-pdt-0\\\">\\r\\n                    <table class=\\\"table table-hover table-striped\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th class=\\\"middle\\\" i18n=\\\"@@unit\\\">Unit</th>\\r\\n                            <th class=\\\"middle w50\\\"></th>\\r\\n                            <th class=\\\"middle w100\\\" i18n=\\\"@@conversionRate\\\">Rate</th>\\r\\n                            <th class=\\\"middle\\\" i18n=\\\"@@\\\">Unit Conversion</th>\\r\\n                            <th class=\\\"middle w50 center\\\" *ngIf=\\\"!isReadonly\\\">\\r\\n                                <button class=\\\"btn btn-sm blue\\\" type=\\\"button\\\" (click)=\\\"addUnitConversion()\\\">\\r\\n                                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                                </button>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let productUnitConversion of listProductUnitConversion; let i = index\\\">\\r\\n                            <td class=\\\"middle\\\">\\r\\n                                <nh-select\\r\\n                                    [isEnable]=\\\"!isReadonly\\\"\\r\\n                                    [title]=\\\"'- Unit -'\\\"\\r\\n                                    i18n-title=\\\"@@unit\\\"\\r\\n                                    [data]=\\\"listUnitSelect\\\"\\r\\n                                    [value]=\\\"productUnitConversion.unitId\\\"\\r\\n                                    (onSelectItem)=\\\"selectUnit(productUnitConversion, $event, i)\\\"\\r\\n                                ></nh-select>\\r\\n                            </td>\\r\\n                            <td class=\\\"center\\\">=</td>\\r\\n                            <td class=\\\"middle center\\\">\\r\\n                                <input class=\\\"form-control text-right\\\" [(ngModel)]=\\\"productUnitConversion.value\\\"\\r\\n                                       name=\\\"value - {{productUnitConversion.unitId}} - {{productUnitConversion.unitConversionId}}\\\"\\r\\n                                       id=\\\"value - {{productUnitConversion.unitId}} - {{productUnitConversion.unitConversionId}}\\\"\\r\\n                                       *ngIf=\\\"!isReadonly; else inputValue\\\"\\r\\n                                       (blur)=\\\"changeProductUnitConversionValue(productUnitConversion)\\\"\\r\\n                                       (focus)=\\\"oldValue = productUnitConversion.value\\\">\\r\\n                                <ng-template #inputValue>\\r\\n                                    <div class=\\\"form-control height-auto text-right\\\">\\r\\n                                        {{productUnitConversion.value | formatNumber}}\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </td>\\r\\n                            <td class=\\\"middle\\\">\\r\\n                                <nh-select\\r\\n                                    [title]=\\\"'- Unit Conversion -'\\\"\\r\\n                                    [isEnable]=\\\"!isReadonly\\\"\\r\\n                                    i18n-title=\\\"@@unitConversion\\\"\\r\\n                                    [value]=\\\"productUnitConversion.unitConversionId\\\"\\r\\n                                    [data]=\\\"listUnitSelect\\\"\\r\\n                                    (onSelectItem)=\\\"selectUnitConversionId(productUnitConversion, $event, i)\\\"\\r\\n                                ></nh-select>\\r\\n                            </td>\\r\\n                            <td class=\\\"center\\\" *ngIf=\\\"!isReadonly\\\">\\r\\n                                <a class=\\\"btn red\\\" (click)=\\\"removeUnitConversion(productUnitConversion, i)\\\">\\r\\n                                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                                </a>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"center\\\" >\\r\\n            <button *ngIf=\\\"!isReadonly\\\" class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\"  type=\\\"button\\\" (click)=\\\"save()\\\">\\r\\n                Save\\r\\n            </button>\\r\\n            <a routerLink=\\\"/products\\\" class=\\\"btn default\\\" i18n=\\\"@@close\\\">\\r\\n                Close\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n<!--</form>-->\\r\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ProductUnit } from './model/product-unit.model';\r\nimport { ProductConversionUnit } from './model/product-conversion-unit.model';\r\nimport * as _ from 'lodash';\r\nimport { ProductListUnit } from './model/product-list-unit.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NhSuggestion } from '../../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { UnitService } from '../../../unit/service/unit.service';\r\nimport { ProductService } from '../../service/product.service';\r\nimport { SearchResultViewModel } from '../../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { UtilService } from '../../../../../../shareds/services/util.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { NumberValidator } from '../../../../../../validators/number.validator';\r\nimport { BaseFormComponent } from '../../../../../../base-form.component';\r\n\r\n@Component({\r\n    selector: 'app-product-form-product-unit',\r\n    templateUrl: './product-unit.component.html',\r\n    providers: [NumberValidator]\r\n})\r\n\r\nexport class ProductUnitComponent extends BaseFormComponent {\r\n    @Input() listProductUnit: ProductUnit[] = [];\r\n    @Input() listProductUnitConversion: ProductConversionUnit[] = [];\r\n    @Input() productId;\r\n    @Input() isReadonly = false;\r\n    @Output() selectProductListUnit = new EventEmitter();\r\n    listUnitSuggestion: NhSuggestion[] = [];\r\n    listUnitSelect: NhSuggestion[] = [];\r\n    productUnitId;\r\n    formGroup: FormGroup;\r\n    oldSalePrice;\r\n    oldValue;\r\n\r\n    constructor(private unitService: UnitService,\r\n                private toastr: ToastrService,\r\n                private fb: FormBuilder,\r\n                private numberValidator: NumberValidator,\r\n                private utilService: UtilService,\r\n                private productService: ProductService) {\r\n        super();\r\n    }\r\n\r\n    addUnit() {\r\n        this.listProductUnit.push(new ProductUnit(false, '', 0));\r\n    }\r\n\r\n    removeUnit(productUnit: ProductUnit, index) {\r\n        _.pullAt(this.listProductUnit, [index]);\r\n        this.getProductUnitSelect();\r\n    }\r\n\r\n    selectIsDefault(item: ProductUnit) {\r\n        item.isDefault = !item.isDefault;\r\n        if (item.isDefault) {\r\n            const listProductUnitNotDefault = _.filter(this.listProductUnit, (unit: ProductUnit) => {\r\n                return unit.unitId !== item.unitId;\r\n            });\r\n\r\n            if (listProductUnitNotDefault && listProductUnitNotDefault.length > 0) {\r\n                _.each(listProductUnitNotDefault, (unitNotDefault: ProductUnit) => {\r\n                    unitNotDefault.isDefault = false;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    addUnitConversion() {\r\n        this.listProductUnitConversion.push(new ProductConversionUnit('', '', '', '', 0));\r\n    }\r\n\r\n    removeUnitConversion(unitConversion: ProductConversionUnit, index) {\r\n        _.pullAt(this.listProductUnitConversion, [index]);\r\n    }\r\n\r\n    renderListUnit() {\r\n        if (this.listProductUnit && this.listProductUnit.length > 0) {\r\n            this.productUnitId = this.listProductUnit[0].id;\r\n        }\r\n\r\n        if (!this.listUnitSuggestion || this.listUnitSuggestion.length === 0) {\r\n            this.unitService.suggestions('', 1, 1000).subscribe((result: SearchResultViewModel<NhSuggestion>) => {\r\n                this.listUnitSuggestion = result.items;\r\n                this.getProductUnitSelect();\r\n            });\r\n        }\r\n    }\r\n\r\n    selectProductUnit(value: NhSuggestion, item: ProductUnit, index) {\r\n        if (value) {\r\n            const countProductById = _.countBy(this.listProductUnit, (productUnit: ProductUnit) => {\r\n                return productUnit.unitId === value.id;\r\n            }).true;\r\n\r\n            if (countProductById && countProductById > 0 && value.id !== item.unitId) {\r\n                this.toastr.error('Unit already exists');\r\n                _.pullAt(this.listProductUnit, [index]);\r\n                this.listProductUnit.push(new ProductUnit(item.isDefault, '', item.salePrice));\r\n                return;\r\n            } else {\r\n                item.unitId = value.id.toString();\r\n                this.utilService.focusElement('unit ' + value.id);\r\n                this.getProductUnitSelect();\r\n            }\r\n        } else {\r\n            item.unitId = '';\r\n        }\r\n    }\r\n\r\n    selectUnit(unitConversion: ProductConversionUnit, value: NhSuggestion, index) {\r\n        if (value) {\r\n            if (unitConversion.unitId === value.id) {\r\n                this.toastr.error(`Unit must other UnitConversion`);\r\n                _.pullAt(this.listProductUnitConversion, [index]);\r\n                this.listProductUnitConversion.push(new ProductConversionUnit('', '', unitConversion.conversionUnitId, '',\r\n                    unitConversion.value));\r\n                return;\r\n            } else {\r\n                const countProductByUnitId = _.countBy(this.listProductUnitConversion, (productUnitConversion: ProductConversionUnit) => {\r\n                    return (productUnitConversion.unitId === value.id\r\n                        && productUnitConversion.conversionUnitId === unitConversion.conversionUnitId)\r\n                        || (productUnitConversion.unitId === unitConversion.conversionUnitId\r\n                            && productUnitConversion.conversionUnitId === value.id);\r\n                }).true;\r\n\r\n                if (countProductByUnitId && countProductByUnitId > 0 && unitConversion.unitId !== value.id) {\r\n                    this.toastr.error('Unit already exists');\r\n                    _.pullAt(this.listProductUnitConversion, [index]);\r\n                    this.listProductUnitConversion.push(new ProductConversionUnit('', '', unitConversion.conversionUnitId, '',\r\n                        unitConversion.value));\r\n                    return;\r\n                } else {\r\n                    unitConversion.unitId = value.id.toString();\r\n                }\r\n            }\r\n        } else {\r\n            unitConversion.unitId = '';\r\n        }\r\n    }\r\n\r\n    selectconversionUnitId(unitConversion: ProductConversionUnit, value: NhSuggestion, index) {\r\n        if (value) {\r\n\r\n            if (unitConversion.unitId === value.id) {\r\n                this.toastr.error(`UnitConversion must other Unit`);\r\n                _.pullAt(this.listProductUnitConversion, [index]);\r\n                this.listProductUnitConversion.push(new ProductConversionUnit(unitConversion.unitId, '', '', '',\r\n                    unitConversion.value));\r\n                return;\r\n            } else {\r\n                const countProductByUnitConversion = _.countBy(this.listProductUnitConversion,\r\n                    (productUnitConversion: ProductConversionUnit) => {\r\n                        return (productUnitConversion.conversionUnitId === value.id\r\n                            && productUnitConversion.unitId === unitConversion.unitId) ||\r\n                            (productUnitConversion.conversionUnitId === unitConversion.unitId\r\n                                && productUnitConversion.unitId === value.id);\r\n                    }).true;\r\n                if (countProductByUnitConversion && countProductByUnitConversion > 0 && unitConversion.conversionUnitId !== value.id) {\r\n                    this.toastr.error('Unit already exists');\r\n                    _.pullAt(this.listProductUnitConversion, [index]);\r\n                    this.listProductUnitConversion.push(new ProductConversionUnit(unitConversion.unitId, '', '', '',\r\n                        unitConversion.value));\r\n                    return;\r\n                } else {\r\n                    unitConversion.conversionUnitId = value.id.toString();\r\n                }\r\n            }\r\n        } else {\r\n            unitConversion.conversionUnitId = '';\r\n        }\r\n    }\r\n\r\n    save() {\r\n        const isExistsUnitNotSelect = _.find(this.listProductUnit, (unit: ProductUnit) => {\r\n            return !unit.unitId;\r\n        });\r\n\r\n        if (isExistsUnitNotSelect) {\r\n            this.toastr.error('Please select product unit');\r\n            return;\r\n        }\r\n\r\n        this.listProductUnit = _.filter(this.listProductUnit, (productUnit: ProductUnit) => {\r\n            return productUnit.unitId;\r\n        });\r\n        this.listProductUnitConversion = _.filter(this.listProductUnitConversion, (productUnitConversion: ProductConversionUnit) => {\r\n            return productUnitConversion.unitId && productUnitConversion.conversionUnitId;\r\n        });\r\n\r\n        const existsDefault = _.find(this.listProductUnit, (unit: ProductUnit) => {\r\n            return unit.isDefault;\r\n        });\r\n\r\n        if (!existsDefault) {\r\n            this.toastr.error('Please select set isDefault');\r\n            return;\r\n        }\r\n\r\n        const productListUnit = new ProductListUnit(this.listProductUnit, this.listProductUnitConversion);\r\n        if (this.productId) {\r\n            if (this.productUnitId) {\r\n                this.productService.updateUnit(this.productId, this.productUnitId, productListUnit).subscribe(() => {\r\n                    this.getProductUnit();\r\n                });\r\n            } else {\r\n                this.productService.insertUnit(this.productId, productListUnit)\r\n                    .subscribe(() => {\r\n                        this.getProductUnit();\r\n                    });\r\n            }\r\n        } else {\r\n            this.selectProductListUnit.emit(productListUnit);\r\n        }\r\n    }\r\n\r\n    getProductUnit() {\r\n        this.productService.getProductUnit(this.productId).subscribe((result: SearchResultViewModel<ProductUnit>) => {\r\n            this.listProductUnit = result.items;\r\n            if (this.listProductUnit && this.listProductUnit.length > 0) {\r\n                this.productUnitId = this.listProductUnit[0].id;\r\n            } else {\r\n                this.productUnitId = '';\r\n            }\r\n        });\r\n    }\r\n\r\n    changeProductUnitConversionValue(productConversionUnit: ProductConversionUnit) {\r\n        if (!Number(productConversionUnit.value) || Number(productConversionUnit.value) < 0) {\r\n            this.toastr.error('Value is valid');\r\n            productConversionUnit.value = this.oldValue;\r\n            this.utilService.focusElement(`value - ${productConversionUnit.unitId} - ${productConversionUnit.conversionUnitId}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    changeSalePrice(productUnit: ProductUnit) {\r\n        if (!Number(productUnit.salePrice) || Number(productUnit.salePrice) < 0) {\r\n            this.toastr.error('Sale Price is valid');\r\n            productUnit.salePrice = this.oldSalePrice;\r\n            this.utilService.focusElement(`salePrice - ${productUnit.unitId}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    private emitProductListUnit() {\r\n        const productListUnit = new ProductListUnit(this.listProductUnit, this.listProductUnitConversion);\r\n        this.selectProductListUnit.emit(productListUnit);\r\n    }\r\n\r\n    private getProductUnitSelect() {\r\n        const joinUnitSelectId = _.join(_.map(this.listProductUnit, (unit: ProductUnit) => {\r\n            return unit.unitId;\r\n        }), ',');\r\n\r\n        this.listUnitSelect = _.filter(this.listUnitSuggestion, (unitSuggestion: NhSuggestion) => {\r\n            return joinUnitSelectId.indexOf(unitSuggestion.id) > -1;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<nh-suggestion\\r\\n    i18n-placeholder=\\\"@@enterProductName\\\"\\r\\n    placeholder=\\\"Nhập tên sản phẩm\\\"\\r\\n    [class.receipt]=\\\"isReceipt\\\"\\r\\n    [class.has-error]=\\\"hasError\\\"\\r\\n    [loading]=\\\"isSearching\\\"\\r\\n    [sources]=\\\"listItems\\\"\\r\\n    [selectedItem]=\\\"selectedItem\\\"\\r\\n    (itemSelected)=\\\"onItemSelected($event)\\\"\\r\\n    (itemRemoved)=\\\"itemRemoved.emit($event)\\\"\\r\\n    (searched)=\\\"onSearchKeyPress($event)\\\"\\r\\n></nh-suggestion>\\r\\n\"","import {Component, EventEmitter, Inject, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { BaseListComponent } from '../../../../../base-list.component';\r\nimport { NhSuggestion, NhSuggestionComponent } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, finalize } from 'rxjs/operators';\r\nimport { ProductService } from '../service/product.service';\r\nimport { WarehouseService } from '../../../warehouse/service/warehouse.service';\r\nimport {IPageId, PAGE_ID} from '../../../../../configs/page-id.config';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\n\r\n@Component({\r\n    selector: 'app-product-suggestion',\r\n    templateUrl: './product-suggestion.component.html'\r\n})\r\nexport class ProductSuggestionComponent extends BaseListComponent<any> implements OnInit {\r\n    @ViewChild(NhSuggestionComponent) nhSuggestionComponent: NhSuggestionComponent;\r\n    @Input() multiple = false;\r\n    @Input() isReceipt = false;\r\n    @Input() selectedItem;\r\n    @Input() warehouseId: string;\r\n    @Input() hasError = false;\r\n    @Output() keyPressed = new EventEmitter();\r\n    @Output() itemSelected = new EventEmitter();\r\n    @Output() itemRemoved = new EventEmitter();\r\n\r\n    constructor(private productService: ProductService, @Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private warehouseService: WarehouseService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onItemSelected(item: any) {\r\n        this.itemSelected.emit(item);\r\n    }\r\n\r\n    onSearchKeyPress(keyword: string) {\r\n        this.keyPressed.emit(keyword);\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.isSearching = true;\r\n        this.currentPage = currentPage;\r\n        if (this.warehouseId) {\r\n            this.warehouseService.productSuggestions(this.warehouseId, this.keyword, this.currentPage, this.appConfig.PAGE_SIZE)\r\n                .pipe(finalize(() => this.isSearching = false))\r\n                .subscribe((result: SearchResultViewModel<NhSuggestion>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    this.listItems = result.items.map((product: any) => {\r\n                        return {\r\n                            id: product.id,\r\n                            name: product.name,\r\n                            description: product.lotId,\r\n                            image: product.image,\r\n                            data: product\r\n                        };\r\n                    });\r\n                });\r\n        } else {\r\n            this.productService.suggestions(this.keyword, this.currentPage, this.appConfig.PAGE_SIZE)\r\n                .pipe(finalize(() => this.isSearching = false))\r\n                .subscribe((result: SearchResultViewModel<NhSuggestion>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    this.listItems = result.items.map((product: any) => {\r\n                        return {\r\n                            id: product.id,\r\n                            name: product.name,\r\n                            description: product.lotId,\r\n                            image: product.image,\r\n                            data: product\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.nhSuggestionComponent.clear();\r\n    }\r\n\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listProductPageTitle\\\">Danh sách sản phẩm</span>\\r\\n    <small i18n=\\\"@@productModuleTitle\\\">Quản lý sản phẩm</small>\\r\\n</h1>\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@keywordSearch\\\"\\r\\n               placeholder=\\\"Vui lòng nhập từ khóa tìm kiếm.\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-dropdown-tree [data]=\\\"categoryTree\\\"\\r\\n                          i18n-title=\\\"@@selectCategoryNews\\\"\\r\\n                          [title]=\\\"'-- Chọn nhóm sản phẩm --'\\\"\\r\\n                          [width]=\\\"350\\\"\\r\\n                          [(ngModel)]=\\\"categoryId\\\"\\r\\n                          name=\\\"categoryId\\\"\\r\\n                          (nodeSelected)=\\\"selectCategory($event)\\\"></nh-dropdown-tree>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'Không quản lý theo lô'},{id: true, name: 'Quản lý theo lô'}]\\\"\\r\\n            i18n-title=\\\"@@selectStatus\\\"\\r\\n            [title]=\\\"'-- Tất cả --'\\\"\\r\\n            [(value)]=\\\"isManagementByLot\\\"\\r\\n            (onSelectItem)=\\\"selectIsManagementByLot($event)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'Chưa kích hoạt'},{id: true, name: 'Đã kích hoạt'}]\\\"\\r\\n            i18n-title=\\\"@@selectStatus\\\"\\r\\n            [title]=\\\"'-- Tất cả --'\\\"\\r\\n            [(value)]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"selectIsActive($event)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <a class=\\\"btn blue cm-mgr-5\\\" *ngIf=\\\"permission.add\\\" i18n=\\\"@@add\\\"\\r\\n           (click)=\\\"add()\\\"\\r\\n           type=\\\"button\\\">\\r\\n            Thêm\\r\\n        </a>\\r\\n    </div>\\r\\n</form>\\r\\n<table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">STT</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@product\\\">Sản phẩm</th>\\r\\n        <th class=\\\"middle w200\\\" i18n=\\\"@@productCategory\\\">Nhóm sản phẩm</th>\\r\\n        <th class=\\\"middle center w100\\\" i18n=\\\"@@unitDefault\\\">Đơn vị tính</th>\\r\\n        <th class=\\\"middle w150  center\\\" i18n=\\\"@@consignmentManagement\\\">Theo lô</th>\\r\\n        <th class=\\\"middle w150  center\\\" i18n=\\\"@@consignmentManagement\\\">Trạng thái duyệt</th>\\r\\n        <th class=\\\"middle center w100\\\" i18n=\\\"@@status\\\">Kích hoạt</th>\\r\\n        <th class=\\\"middle text-right w150\\\" i18n=\\\"@@action\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Hành động</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listProduct; let i = index\\\"\\r\\n        nhContextMenuTrigger\\r\\n        [nhContextMenuTriggerFor]=\\\"nhMenu\\\"\\r\\n        [nhContextMenuData]=\\\"item\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            <div class=\\\"media\\\" [class.cursor-pointer]=\\\"permission.view\\\" (click)=\\\"permission.view ? detail(item) : ''\\\"\\r\\n                 title=\\\"{{item.name}}\\\">\\r\\n                <div class=\\\"media-left middle\\\">\\r\\n                    <img ghmImage=\\\"\\\" [src]=\\\"item.thumbnail\\\" [isUrlAbsolute]=\\\"true\\\" class=\\\"media-object w50\\\"\\r\\n                         alt=\\\"{{item.thumbnail}}\\\">\\r\\n                </div>\\r\\n                <div class=\\\"media-body middle\\\">\\r\\n                    <h4 class=\\\"media-heading\\\">{{ item.name }}</h4>\\r\\n                </div>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            {{item.categoryName}}\\r\\n        </td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            {{item.defaultUnit}}\\r\\n        </td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            <mat-checkbox color=\\\"primary\\\" [checked]=\\\"item.isManagementByLot\\\"\\r\\n                          (change)=\\\"updateManagementByLot(item)\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            <span *ngIf=\\\"item.status === productStatus.Approve\\\" class=\\\"badge badge-success\\\">Approved</span>\\r\\n            <span *ngIf=\\\"item.status === productStatus.Decline\\\" class=\\\"badge badge-dark\\\">Decline</span>\\r\\n            <span *ngIf=\\\"item.status === productStatus.pending && permission.approve\\\" [swal]=\\\"confirmApprove\\\" (confirm)=\\\"updateApprove(item.id)\\\" class=\\\"badge badge-warning cursor-pointer\\\">Pending</span>\\r\\n            <span *ngIf=\\\"item.status === productStatus.pending && !permission.approve\\\" class=\\\"badge badge-secondary\\\">Pending</span>\\r\\n            <span *ngIf=\\\"item.status === productStatus.draft\\\" class=\\\"badge badge-default\\\">Draft</span>\\r\\n        </td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            <mat-checkbox color=\\\"primary\\\" [checked]=\\\"item.isActive\\\" (change)=\\\"updateStatus(item)\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"text-right middle\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.view\\\"\\r\\n                           (click)=\\\"detail(item)\\\">\\r\\n                            <!--<i class=\\\"fa fa-eye\\\"></i>-->\\r\\n                            <mat-icon class=\\\"menu-icon\\\">info</mat-icon>\\r\\n                            <span i18n=\\\"@@detail\\\">Chi tiết</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.edit\\\"\\r\\n                           (click)=\\\"edit(item.id)\\\">\\r\\n                            <!--<i class=\\\"fa fa-edit\\\"></i>-->\\r\\n                            <mat-icon class=\\\"menu-icon\\\">edit</mat-icon>\\r\\n                            <span i18n=\\\"@@edit\\\">Chỉnh sửa</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a (click)=\\\"confirm(item)\\\">\\r\\n                            <!--<i class=\\\"fa fa-trash\\\"></i>-->\\r\\n                            <mat-icon class=\\\"menu-icon\\\">delete</mat-icon>\\r\\n                            <span i18n=\\\"@@delete\\\">Xóa</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<div dynamic-component-host></div>\\r\\n\\r\\n<ghm-paging\\r\\n    class=\\\"pull-right\\\"\\r\\n    [totalRows]=\\\"totalRows\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    [pageShow]=\\\"6\\\"\\r\\n    [pageSize]=\\\"pageSize\\\"\\r\\n    (pageClick)=\\\"search($event)\\\"\\r\\n    i18n=\\\"@@product\\\" i18n-pageName\\r\\n    [pageName]=\\\"'product'\\\">\\r\\n</ghm-paging>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteProduct\\r\\n    i18n=\\\"@@confirmDeleteProduct\\\"\\r\\n    i18n-title=\\\"@@confirmTitleDeleteProduct\\\"\\r\\n    i18n-text=\\\"@@confirmTextDeleteProduct\\\"\\r\\n    title=\\\"Are you sure for delete this product?\\\"\\r\\n    text=\\\"You can't recover this product after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Accept\\\"\\r\\n    cancelButtonText=\\\"Cancel\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n<swal\\r\\n    #confirmApprove\\r\\n    i18n=\\\"@@confirmApprove\\\"\\r\\n    i18n-title=\\\"@@confirmApprove\\\"\\r\\n    i18n-text=\\\"@@confirmApprove\\\"\\r\\n    title=\\\"Are you want approve this product?\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Accept\\\"\\r\\n    cancelButtonText=\\\"Cancel\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n<nh-menu #nhMenu>\\r\\n    <nh-menu-item (clicked)=\\\"detail($event)\\\">\\r\\n        <!--<i class=\\\"fa fa-eye menu-icon\\\"></i>-->\\r\\n        <mat-icon class=\\\"menu-icon\\\">info</mat-icon>\\r\\n        <span i18n=\\\"@@view\\\">Chi tiết</span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item (clicked)=\\\"edit($event.id)\\\">\\r\\n        <mat-icon class=\\\"menu-icon\\\">edit</mat-icon>\\r\\n        <span i18n=\\\"@@edit\\\">Chỉnh sửa</span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item *ngIf=\\\"permission.delete\\\"\\r\\n                  (clicked)=\\\"confirm($event)\\\">\\r\\n        <mat-icon class=\\\"menu-icon\\\">delete</mat-icon>\\r\\n        <span i18n=\\\"@@edit\\\">Xóa</span>\\r\\n    </nh-menu-item>\\r\\n</nh-menu>\\r\\n\"","import { AfterViewInit, Component, ComponentFactoryResolver, Inject, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../../base-list.component';\r\nimport { ProductSearchViewModel } from './viewmodel/product-search.viewmodel';\r\nimport { UtilService } from '../../../../shareds/services/util.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Location } from '@angular/common';\r\nimport { HelperService } from '../../../../shareds/services/helper.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ActionResultViewModel } from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../configs/app.config';\r\nimport { FilterLink } from '../../../../shareds/models/filter-link.model';\r\nimport { IPageId, PAGE_ID } from '../../../../configs/page-id.config';\r\nimport { SearchResultViewModel } from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport { ProductService } from './service/product.service';\r\nimport { TreeData } from '../../../../view-model/tree-data';\r\nimport { ProductCategoryService } from '../product-category/service/product-category-service';\r\nimport { SwalComponent } from '@toverux/ngx-sweetalert2';\r\nimport { ProductResultViewModel } from './viewmodel/product-result.viewmodel';\r\nimport { NHDropdownTreeComponent } from '../../../../shareds/components/nh-tree/nh-dropdown-tree.component';\r\nimport { DynamicComponentHostDirective } from '../../../../core/directives/dynamic-component-host.directive';\r\nimport { ProductFormComponent } from './product-form/product-form.component';\r\nimport { AppInjector } from '../../../../shareds/helpers/app-injector';\r\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\r\nimport {ProductStatus} from './contants/product-status.const';\r\n\r\n@Component({\r\n    selector: 'app-product',\r\n    templateUrl: './product.component.html',\r\n    styleUrls: ['./product.scss'],\r\n    providers: [HelperService]\r\n})\r\nexport class ProductComponent extends BaseListComponent<ProductSearchViewModel> implements OnInit, AfterViewInit {\r\n    @ViewChild('confirmDeleteProduct') swalConfirmDelete: SwalComponent;\r\n    @ViewChild(NHDropdownTreeComponent) nHDropdownTreeComponent: NHDropdownTreeComponent;\r\n    @ViewChild(DynamicComponentHostDirective) dynamicComponentHostDirective: DynamicComponentHostDirective;\r\n    isActive;\r\n    categoryId;\r\n    isManagementByLot;\r\n    categoryTree: TreeData[];\r\n    listProduct: ProductResultViewModel[];\r\n    productId: string;\r\n    categorySelectText;\r\n    productStatus = ProductStatus;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private location: Location,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private componentFactoryResolver: ComponentFactoryResolver,\r\n                private productCategoryService: ProductCategoryService,\r\n                private productService: ProductService,\r\n                private helperService: HelperService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.PRODUCT, this.pageId.PRODUCT, 'Quản lý sản phẩm', 'Quản lý sản phẩm');\r\n        this.subscribers.data = this.route.data.subscribe((result: { data: SearchResultViewModel<ProductSearchViewModel> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            // this.listProduct = data.items;\r\n            this.rendResult(data.items);\r\n        });\r\n        // this.search(1);\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.categoryId = params.categoryId ? parseInt(params.categoryId) : '';\r\n            this.isManagementByLot = params.isManagementByLot !== null && params.isManagementByLot !== ''\r\n            && params.isManagementByLot !== undefined ? Boolean(params.isManagementByLot) : null;\r\n            this.isActive = params.isActive !== null && params.isActive !== '' && params.isActive !== undefined\r\n                ? Boolean(params.isActive) : null;\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.getCategoryTrees();\r\n        this.swalConfirmDelete.confirm.subscribe(result => {\r\n            this.delete(this.productId);\r\n        });\r\n    }\r\n\r\n    add() {\r\n        const productFormComponent = this.loadComponent(\r\n            this.dynamicComponentHostDirective.viewContainerRef,\r\n            ProductFormComponent);\r\n        setTimeout(() => {\r\n            productFormComponent.add();\r\n            this.subscribers.productFormModalDissmiss = productFormComponent.saveSuccessful.subscribe(() => {\r\n                this.search();\r\n            });\r\n        });\r\n    }\r\n\r\n    searchKeyUp(keyword) {\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    selectCategory(value: TreeData) {\r\n        if (value) {\r\n            this.categorySelectText = value.text;\r\n            this.categoryId = value.id;\r\n        } else {\r\n            this.categoryId = null;\r\n            this.categorySelectText = '';\r\n        }\r\n\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage = 1) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderFilterLink();\r\n        this.productService.search(this.keyword, this.categoryId, this.isManagementByLot, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((data: SearchResultViewModel<ProductSearchViewModel>) => {\r\n                this.totalRows = data.totalRows;\r\n                // this.listProduct = data.items;\r\n                this.rendResult(data.items);\r\n            });\r\n    }\r\n\r\n    selectIsActive(value) {\r\n        if (value) {\r\n            this.isActive = value.id;\r\n        } else {\r\n            this.isActive = null;\r\n        }\r\n\r\n        this.search(1);\r\n    }\r\n\r\n    selectIsManagementByLot(value) {\r\n        if (value) {\r\n            this.isManagementByLot = value.id;\r\n        } else {\r\n            this.isManagementByLot = null;\r\n        }\r\n\r\n        this.search(1);\r\n    }\r\n\r\n    onPageClick(page: number) {\r\n        this.currentPage = page;\r\n        this.search(1);\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.categoryId = null;\r\n        this.isManagementByLot = null;\r\n        this.isActive = null;\r\n        this.categorySelectText = null;\r\n        this.nHDropdownTreeComponent.selectDefaultNode();\r\n        this.search(1);\r\n    }\r\n\r\n    edit(productId: string) {\r\n        const productFormComponent = this.loadComponent(\r\n            this.dynamicComponentHostDirective.viewContainerRef,\r\n            ProductFormComponent);\r\n        setTimeout(() => {\r\n            productFormComponent.edit(productId);\r\n            this.subscribers.productFormModalDissmiss = productFormComponent.saveSuccessful.subscribe(() => {\r\n                this.search();\r\n            });\r\n        });\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.productService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(this.currentPage);\r\n                // _.remove(this.listProduct, (item: ProductResultViewModel) => {\r\n                //     return item.id === id;\r\n                // });\r\n            });\r\n    }\r\n\r\n    updateStatus(item: ProductResultViewModel) {\r\n        this.productService.updateStatus(item.id, !item.isActive).subscribe((result: ActionResultViewModel) => {\r\n            item.isActive = !item.isActive;\r\n        });\r\n    }\r\n\r\n    updateManagementByLot(product: ProductResultViewModel) {\r\n        this.productService.updateManagementByLot(product.id, !product.isManagementByLot).subscribe(() => {\r\n            product.isManagementByLot = !product.isManagementByLot;\r\n        });\r\n    }\r\n\r\n    detail(product: ProductResultViewModel) {\r\n        // this.router.navigate([`/products/detail/${product.id}`]);\r\n        const productFormComponent = this.loadComponent(\r\n            this.dynamicComponentHostDirective.viewContainerRef,\r\n            ProductDetailComponent);\r\n        setTimeout(() => {\r\n            productFormComponent.show(product.id);\r\n            // this.subscribers.productFormModalDissmiss = productFormComponent.saveSuccessful.subscribe(() => {\r\n            //             //     this.search();\r\n            //             // });\r\n        });\r\n    }\r\n\r\n    confirm(value: ProductResultViewModel) {\r\n        this.productId = value.id;\r\n        this.swalConfirmDelete.show();\r\n    }\r\n\r\n    updateApprove(id: string) {\r\n        this.productService.updateApprove(id, this.productStatus.Approve).subscribe((result: any) => {\r\n            const product = _.find(this.listProduct, (item: any) => {\r\n                return item.id === id;\r\n            });\r\n            product.status = this.productStatus.Approve;\r\n        });\r\n    }\r\n\r\n    private rendResult(list: ProductSearchViewModel[]) {\r\n        this.listProduct = [];\r\n        if (list && list.length > 0) {\r\n            _.each(list, (item: ProductSearchViewModel) => {\r\n                const productCategoryName = _.join(item.categoryNames, ', ');\r\n\r\n                this.listProduct.push(new ProductResultViewModel(item.id, item.thumbnail, productCategoryName,\r\n                    item.name, item.defaultUnit, item.isManagementByLot,\r\n                    item.isActive, item.isHot, item.isHomePage, item.source, item.status));\r\n            });\r\n        }\r\n    }\r\n\r\n    private getCategoryTrees() {\r\n        this.subscribers.getTree = this.productCategoryService\r\n            .getTree()\r\n            .subscribe((result: TreeData[]) => {\r\n                this.categoryTree = result;\r\n            });\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = 'products';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('categoryId', this.categoryId),\r\n            new FilterLink('isManagementByLot', this.isManagementByLot),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","module.exports = \".thumbnail {\\n  border: none;\\n  position: relative; }\\n  .thumbnail .btn {\\n    display: none;\\n    padding: 4px 8px;\\n    font-size: 12px;\\n    position: absolute;\\n    top: 0px;\\n    right: 0px; }\\n  .thumbnail:hover .btn {\\n    display: block; }\\n  .product-images {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-left: -5px; }\\n  .product-images .image-content {\\n    position: relative;\\n    flex-basis: 22%;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    margin: 5px;\\n    padding: 5px;\\n    border: 1px solid #ddd;\\n    transition: 0.5s ease-in-out; }\\n  @media screen and (max-width: 768px) {\\n      .product-images .image-content {\\n        flex-basis: 48%; } }\\n  @media screen and (min-width: 768px) and (max-width: 992px) {\\n      .product-images .image-content {\\n        flex-basis: 32%; } }\\n  @media screen and (min-width: 992px) and (max-width: 1280px) {\\n      .product-images .image-content {\\n        flex-basis: 27%; } }\\n  .product-images .image-content .btn {\\n      display: none;\\n      padding: 4px 8px;\\n      font-size: 12px;\\n      position: absolute;\\n      top: 0px; }\\n  .product-images .image-content .btn-remove {\\n      right: 0px; }\\n  .product-images .image-content .btn-check {\\n      display: block;\\n      left: 0px; }\\n  .product-images .image-content .display-none {\\n      display: none; }\\n  .product-images .image-content:hover .btn {\\n      display: block; }\\n  .product-images .image-content img {\\n      width: 100%; }\\n  .product-images .image-content img:hover {\\n        opacity: 0.8;\\n        cursor: pointer; }\\n  .list-inline .product-attribute-value {\\n  background-color: #f4f5f7;\\n  color: #253858;\\n  height: 20px;\\n  line-height: 1;\\n  border-radius: 3px;\\n  margin: 4px !important;\\n  padding: 0px; }\\n  .list-inline .product-attribute-value:last-child span {\\n    display: none; }\\n  .mat-expansion-panel .mat-expansion-panel-header {\\n  border-radius: 0px !important;\\n  background-color: #0072BC !important;\\n  padding: 0px 15px 0px 7px !important; }\\n  .mat-expansion-panel .mat-expansion-panel-header .title {\\n    font-size: 14px;\\n    color: white; }\\n  .mat-expansion-panel .mat-expansion-panel-header i {\\n    font-size: 16px;\\n    font-weight: normal !important;\\n    margin-right: 5px; }\\n  .mat-expansion-panel .mat-expansion-panel-body {\\n  padding: 0 10px;\\n  background-color: #f5f7f7 !important; }\\n\"","import { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { SpinnerService } from '../../../../../core/spinner/spinner.service';\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { Inject } from '@angular/core';\r\nimport { ProductSearchViewModel } from '../viewmodel/product-search.viewmodel';\r\nimport { ActionResultViewModel } from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport { Product } from '../model/product.model';\r\nimport { ProductDetailViewModel } from '../viewmodel/product-detail.viewmodel';\r\nimport { finalize } from 'rxjs/internal/operators';\r\nimport { NhSuggestion } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { ProductListUnit } from '../product-form/product-unit/model/product-list-unit.model';\r\nimport { ProductAttribute } from '../product-form/product-attribute/model/product-value.model';\r\nimport { ProductCategoriesAttributeViewModel } from '../product-form/product-attribute/viewmodel/product-categories-attribute.viewmodel';\r\nimport { ProductUnit } from '../product-form/product-unit/model/product-unit.model';\r\n\r\nexport class ProductService {\r\n    url = 'api/v1/warehouse/products';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinceService: SpinnerService,\r\n                private http: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.categoryId,\r\n            queryParams.isManagementByLot,\r\n            queryParams.isActive,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string, categoryId: number, isManagementByLot: boolean, isActive?: boolean, page: number = 1,\r\n           pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<ProductSearchViewModel>> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword ? keyword : '')\r\n            .set('categoryId', categoryId ? categoryId.toString() : '')\r\n            .set('isManagementByLot', isManagementByLot !== null && isManagementByLot !== undefined ? isManagementByLot.toString() : '')\r\n            .set('isActive', isActive !== null && isActive !== undefined ? isActive.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString());\r\n\r\n        return this.http.get(`${this.url}`, {\r\n            params: params\r\n        }) as Observable<SearchResultViewModel<ProductSearchViewModel>>;\r\n    }\r\n\r\n    insert(product: Product): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, product).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, product: Product): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}`, product).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${id}`).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateStatus(id: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/actives/${isActive}`, {}).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateApprove(id: string, status: number): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/updateApprove/${id}/${status}`, null).pipe(finalize(() => this.spinnerService.hide()),\r\n            map( (result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n    updateManagementByLot(id: string, isManagementByLot: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/management-by-lots/${isManagementByLot}`, {})\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ProductDetailViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${id}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel<ProductDetailViewModel>) => {\r\n                    return result.data;\r\n                })\r\n            ) as Observable<ProductDetailViewModel>;\r\n    }\r\n\r\n    suggestions(keyword: string, page: number = 1, pageSize: number = 20): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/suggestions`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    // Unit\r\n    insertUnit(productId: string, productListUnit: ProductListUnit): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${productId}/units`, productListUnit).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateUnit(productId: string, productUnitId: string, productListUnit: ProductListUnit): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${productId}/units/${productUnitId}`, productListUnit)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getUnit(productId: string, page: number = 1,\r\n            pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/${productId}/units/${page}/${pageSize}`) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    getProductUnit(productId: string): Observable<SearchResultViewModel<ProductUnit>> {\r\n        return this.http.get(`${this.url}/${productId}/product-units/`) as Observable<SearchResultViewModel<ProductUnit>>;\r\n    }\r\n\r\n    // Attribute value\r\n    insertAttributeValue(productId: string, productValue: ProductAttribute): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${productId}/values`, productValue)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                // this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    insertAttributeValues(productId: string, productValues: ProductAttribute[]): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${productId}/values/listValues`, productValues)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                // this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateProductAttributeValue(productId: string, valueId: string, productValue: ProductAttribute): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${productId}/values/${valueId}`, productValue)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                // this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    deleteProductAttributeValue(productId: string, productValueId: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${productId}/values/${productValueId}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                // this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    deleteProductAttributeValueByAttributeId(productId: string, productAttributeId: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${productId}/attributes/${productAttributeId}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                // this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getProductAttribute(productId: string): Observable<SearchResultViewModel<ProductCategoriesAttributeViewModel>> {\r\n        return this.http.get(`${this.url}/${productId}/attributes`,\r\n            {})as Observable<SearchResultViewModel<ProductCategoriesAttributeViewModel>>;\r\n    }\r\n\r\n    deleteProductUnit(productId: string, unitId: string): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}/${productId}/units/${unitId}`) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    saveConversionUnit(productId: string, productUnitId: string, productConversionUnitId: any, value: number, salePrice: number): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${productId}/conversion-units/`, {\r\n            productUnitId: productUnitId,\r\n            productConversionUnitId: productConversionUnitId,\r\n            value: value,\r\n            salePrice: salePrice\r\n        }) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    saveAttribute(id: any, productAttributeId: string, productAttributeValueIds: string[],\r\n                  value: string): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/attributes`, {\r\n            productAttributeId: productAttributeId,\r\n            productAttributeValueIds: productAttributeValueIds,\r\n            value: value\r\n        }) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateConversionUnitSalePrice(id: any, productUnitId: string, productUnitConversionId: string,\r\n                                  salePrice: number): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/${id}/conversion-units/sale-price`, {\r\n            params: new HttpParams()\r\n                .set('productUnitId', productUnitId)\r\n                .set('productUnitConversionId', productUnitConversionId)\r\n                .set('salePrice', salePrice ? salePrice.toString() : '')\r\n        }).pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","export class ProductResultViewModel {\r\n    id: string;\r\n    thumbnail: string;\r\n    categoryName: string;\r\n    name: string;\r\n    defaultUnit: string;\r\n    isManagementByLot: boolean;\r\n    isActive: boolean;\r\n    isHot: boolean;\r\n    isHomePage: boolean;\r\n    source: string;\r\n    status: number;\r\n\r\n    constructor(id?: string,\r\n                thumbnail?: string,\r\n                categoryName?: string,\r\n                name?: string,\r\n                defaultUnit?: string,\r\n                isManagementByLot?: boolean,\r\n                isActive?: boolean, isHot?: boolean, isHomePage?: boolean, source?: string, status?: number) {\r\n        this.id = id;\r\n        this.thumbnail = thumbnail;\r\n        this.categoryName = categoryName;\r\n        this.name = name;\r\n        this.defaultUnit = defaultUnit;\r\n        this.isManagementByLot = isManagementByLot;\r\n        this.isActive = isActive;\r\n        this.isHot = isHot;\r\n        this.isHomePage = isHomePage;\r\n        this.source = source;\r\n        this.status = status;\r\n    }\r\n}\r\n","import {Contact} from '../../contact/model/contact.model';\r\n\r\nexport class Supplier {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    isActive: boolean;\r\n    address: string;\r\n    concurrencyStamp: string;\r\n    contacts: Contact[];\r\n\r\n    constructor(id?: string, name?: string, desctiption?: string, isActive?: boolean, address?: string, concurrencyStamp?: string,\r\n                contacts?: Contact[]) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.description = desctiption;\r\n        this.isActive = isActive !== undefined ? isActive : true;\r\n        this.address = address;\r\n        this.concurrencyStamp = concurrencyStamp;\r\n        this.contacts = contacts;\r\n    }\r\n}\r\n","import { finalize } from 'rxjs/internal/operators';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SpinnerService } from '../../../../../core/spinner/spinner.service';\r\nimport { ActionResultViewModel } from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport { Inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { SupplierSearchViewModel } from '../viewmodel/supplier-search.viewmodel';\r\nimport { SupplierDetailViewModel } from '../viewmodel/supplier-detail.viewmodel';\r\nimport { Supplier } from '../model/supplier.model';\r\nimport * as _ from 'lodash';\r\nimport { SupplierSuggestionsViewModel } from '../viewmodel/supplier-suggestions.viewmodel';\r\nimport { NhSuggestion } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\n\r\nexport class SupplierService {\r\n    url = 'api/v1/warehouse/suppliers';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinceService: SpinnerService,\r\n                private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.address,\r\n            queryParams.isActive,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string, address: string, isActive?: boolean, page: number = 1,\r\n           pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<SupplierSearchViewModel>> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword ? keyword : '')\r\n            .set('isActive', isActive !== null && isActive !== undefined ? isActive.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString());\r\n\r\n        return this.http.get(`${this.url}`, {\r\n            params: params\r\n        }).pipe(map((result: SearchResultViewModel<SupplierSearchViewModel>) => {\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<SupplierSearchViewModel>>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<SupplierDetailViewModel>> {\r\n        this.spinceService.show();\r\n        return this.http.get(`${this.url}/${id}`, {})\r\n            .pipe(finalize(() => {\r\n                this.spinceService.hide();\r\n            }))as Observable<ActionResultViewModel<SupplierDetailViewModel>>;\r\n    }\r\n\r\n    insert(supplier: Supplier): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, supplier).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, supplier: Supplier): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}`, supplier).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${id}`,).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    suggestions(keyword: string, page: number, pageSize: number): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/suggestions`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }).pipe(map((result: SearchResultViewModel<NhSuggestion>) => {\r\n            _.each(result.items, (item: NhSuggestion) => {\r\n                item.isSelected = false;\r\n            });\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    updateStatus(id: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/status/${isActive}`, {}).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #supplierFormModal size=\\\"lg\\\"\\r\\n          (show)=\\\"onModalShow()\\\">\\r\\n    <nh-modal-header class=\\\"uppercase bold\\\">\\r\\n        {{supplierDetail?.name}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"form\\\">\\r\\n                        <div class=\\\"form-group cm-mgb-10 form-md-line-input\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@supplierName\\\" ghmLabel=\\\"Supplier Name\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <div class=\\\"form-control height-auto\\\">{{supplierDetail?.name}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10 form-md-line-input\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@address\\\" ghmLabel=\\\"Address\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <div class=\\\"form-control height-auto\\\">{{supplierDetail?.address}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10 form-md-line-input\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <div class=\\\"form-control height-auto\\\">{{supplierDetail?.description}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                <mat-checkbox [checked]=\\\"supplierDetail?.isActive\\\" [disabled]=\\\"true\\\"\\r\\n                                              color=\\\"primary\\\"><span\\r\\n                                    i18n=\\\"@@isActive\\\"></span>\\r\\n                                    Active\\r\\n                                </mat-checkbox>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 portlet-title\\\">\\r\\n                    <span class=\\\"caption-subject bold uppercase\\\">Contact supplier</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <app-product-contact [listContact]=\\\"supplierDetail?.contacts\\\"\\r\\n                                         [isReadOnly]=\\\"true\\\"\\r\\n                                         [type]=\\\"contactType.supplier\\\"\\r\\n                                         [isUpdate]=\\\"isUpdate\\\"\\r\\n                                         [subjectId]=\\\"supplierDetail?.id\\\"\\r\\n                    ></app-product-contact>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <ghm-button classes=\\\"btn default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Close</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {Component, ViewChild} from '@angular/core';\r\nimport {SupplierDetailViewModel} from '../viewmodel/supplier-detail.viewmodel';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {SupplierService} from '../service/supplier.service';\r\nimport {ContactType} from '../../../../../shareds/constants/contact-type.const';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-product-supplier-detail',\r\n    templateUrl: './supplier-detail.component.html'\r\n})\r\n\r\nexport class SupplierDetailComponent extends BaseFormComponent {\r\n    @ViewChild('supplierFormModal') supplierFormModal: NhModalComponent;\r\n    supplierDetail: SupplierDetailViewModel;\r\n    contactType = ContactType;\r\n\r\n    constructor(private supplierService: SupplierService) {\r\n        super();\r\n    }\r\n\r\n    onModalShow() {\r\n\r\n    }\r\n\r\n    show(id: string) {\r\n        this.getDetail(id);\r\n        this.supplierFormModal.open();\r\n    }\r\n\r\n    private getDetail(id: string) {\r\n        this.subscribers.supplierService = this.supplierService\r\n            .getDetail(id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<SupplierDetailViewModel>) => {\r\n                    this.supplierDetail = result.data;\r\n                }\r\n            );\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #supplierFormModal size=\\\"lg\\\"\\r\\n          (show)=\\\"onModalShow()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header class=\\\"uppercase bold\\\">\\r\\n        {isUpdate, select, 0 {Thêm mới nhà cung cấp} 1 {Cập nhật nhà cung cấp} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"form\\\">\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.name\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@supplierName\\\" ghmLabel=\\\"Tên Nhà Cung Cấp\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\" [formGroup]=\\\"model\\\">\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"name\\\" id=\\\"name\\\"\\r\\n                                       i18n-placeholder=\\\"@@enterSupplierPlaceHolder\\\"\\r\\n                                       placeholder=\\\"Enter supplier\\\">\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.name, select,\\r\\n                                                        required {Tên nhà cung cấp không được để trống}\\r\\n                                                        maxLength {Tên nhà cung cấp không được vượt quá 256 ký tự}\\r\\n                                                        pattern {Tên nhà cung cấp phải là ký tự}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.address\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@address\\\" ghmLabel=\\\"Địa chỉ\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <textarea type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                          i18n-placeholder=\\\"@@enterAddressPlaceHolder\\\"\\r\\n                                          placeholder=\\\"Nhập địa chỉ\\\"\\r\\n                                          formControlName=\\\"address\\\"></textarea>\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.address, select, maxLength\\r\\n                                    {Địa chỉ không được vượt quá 500 ký tự}}\\r\\n                            </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                             [class.has-error]=\\\"formErrors?.description\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Mô tả\\\"\\r\\n                                   class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <textarea type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                          i18n-placeholder=\\\"@@enterDescriptionPlaceHolder\\\"\\r\\n                                          placeholder=\\\"Enter description\\\"\\r\\n                                          formControlName=\\\"description\\\"></textarea>\\r\\n                                <span class=\\\"help-block\\\">{ formErrors?.description, select, maxLength {Mô tả không dược vượt quá 500 ký tự}}\\r\\n                            </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                            <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                                    {model.value.isActive, select, 0 {Chưa Kich hoạt} 1 {Kích hoạt}}\\r\\n                                </mat-checkbox>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 portlet-title\\\">\\r\\n                    <span class=\\\"caption-subject bold uppercase\\\">Thông tin liên hệ nhà cung cấp</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <app-product-contact [listContact]=\\\"listContact\\\"\\r\\n                                         [type]=\\\"contactType.supplier\\\"\\r\\n                                         [isUpdate]=\\\"isUpdate\\\"\\r\\n                                         [subjectId]=\\\"id\\\"\\r\\n                                         (saveSuccess)=\\\"listContact = $event\\\"\\r\\n                    ></app-product-contact>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n               Tiếp tục thêm\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn blue cm-mgr-5\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@Save\\\">Lưu</span>\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Đóng</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {Supplier} from '../model/supplier.model';\r\nimport {SupplierService} from '../service/supplier.service';\r\nimport {Contact} from '../../contact/model/contact.model';\r\nimport {SupplierDetailViewModel} from '../viewmodel/supplier-detail.viewmodel';\r\nimport {ContactType} from '../../../../../shareds/constants/contact-type.const';\r\nimport {Pattern} from '../../../../../shareds/constants/pattern.const';\r\n\r\n@Component({\r\n    selector: 'app-product-supplier-form',\r\n    templateUrl: './supplier-form.component.html'\r\n})\r\n\r\nexport class SupplierFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('supplierFormModal') supplierFormModal: NhModalComponent;\r\n    supplier = new Supplier();\r\n    listContact: Contact[] = [];\r\n    contactType = ContactType;\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private supplierService: SupplierService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalShow() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.utilService.focusElement('name');\r\n        this.renderForm();\r\n        this.resetForm();\r\n        this.supplierFormModal.open();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.utilService.focusElement('name');\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n        this.supplierFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        if (isValid) {\r\n            this.supplier = this.model.value;\r\n            this.supplier.contacts = !this.isUpdate ? this.listContact : [];\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.supplierService\r\n                    .update(this.id, this.supplier)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.supplierFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.supplierService\r\n                    .insert(this.supplier)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.utilService.focusElement('name');\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.supplierFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDetail(id: string) {\r\n        this.subscribers.supplierService = this.supplierService\r\n            .getDetail(id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<SupplierDetailViewModel>) => {\r\n                    const detail = result.data;\r\n                    if (detail) {\r\n                        this.model.patchValue({\r\n                            isActive: detail.isActive,\r\n                            name: detail.name,\r\n                            address: detail.address,\r\n                            description: detail.description,\r\n                            concurrencyStamp: detail.concurrencyStamp,\r\n                        });\r\n\r\n                        this.listContact = detail.contacts;\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'address', 'description']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxLength', 'pattern']},\r\n            {'address': ['maxLength']},\r\n            {'description': ['maxLength']},\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            name: [this.supplier.name, [Validators.required, Validators.maxLength(256), Validators.pattern(Pattern.whiteSpace)]],\r\n            description: [this.supplier.description, [Validators.maxLength(500)]],\r\n            address: [this.supplier.address, [Validators.maxLength(500)]],\r\n            isActive: [this.supplier.isActive],\r\n            concurrencyStamp: [this.supplier.concurrencyStamp],\r\n            contacts: this.listContact,\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            name: '',\r\n            isActive: true,\r\n            address: '',\r\n            description: ''\r\n        });\r\n        this.listContact = [];\r\n        this.clearFormError(this.formErrors);\r\n    }\r\n}\r\n","module.exports = \"<nh-suggestion\\r\\n    placeholder=\\\"Chọn nhà cung cấp\\\"\\r\\n    i18n-placeholder=\\\"@@selectSupplier\\\"\\r\\n    [class.receipt]=\\\"isReceipt\\\"\\r\\n    [loading]=\\\"isSearching\\\"\\r\\n    [sources]=\\\"listItems\\\"\\r\\n    [selectedItem]=\\\"selectedItem\\\"\\r\\n    (itemSelected)=\\\"onItemSelected($event)\\\"\\r\\n    (itemRemoved)=\\\"itemRemoved.emit()\\\"\\r\\n    (searched)=\\\"onSearchKeyPress($event)\\\"\\r\\n></nh-suggestion>\\r\\n\"","module.exports = \"app-supplier-suggestion {\\n  display: block;\\n  width: 100%; }\\n\"","import {Component, EventEmitter, Inject, Input, OnInit, Output, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport { BaseListComponent } from '../../../../../base-list.component';\r\nimport { SupplierService } from '../service/supplier.service';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { NhSuggestion, NhSuggestionComponent } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, finalize } from 'rxjs/operators';\r\nimport {IPageId, PAGE_ID} from '../../../../../configs/page-id.config';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\n\r\n@Component({\r\n    selector: 'app-supplier-suggestion',\r\n    templateUrl: './supplier-suggestion.component.html',\r\n    styleUrls: ['./supplier-suggestion.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SupplierSuggestionComponent extends BaseListComponent<NhSuggestion> implements OnInit {\r\n    @ViewChild(NhSuggestionComponent) nhSuggestionComponent: NhSuggestionComponent;\r\n    @Input() multiple = false;\r\n    @Input() isReceipt = false;\r\n    @Input() selectedItem;\r\n    @Output() keyPressed = new EventEmitter();\r\n    @Output() itemSelected = new EventEmitter();\r\n    @Output() itemRemoved = new EventEmitter();\r\n\r\n    constructor(private supplierService: SupplierService, @Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onItemSelected(item: any) {\r\n        this.itemSelected.emit(item);\r\n    }\r\n\r\n    onSearchKeyPress(keyword: string) {\r\n        this.keyPressed.emit(keyword);\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.isSearching = true;\r\n        this.currentPage = currentPage;\r\n        this.supplierService.suggestions(this.keyword, this.currentPage, this.appConfig.PAGE_SIZE)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<NhSuggestion>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listItems = result.items;\r\n            });\r\n    }\r\n\r\n    clear() {\r\n        this.nhSuggestionComponent.clear();\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listSupplierPageTitle\\\">Danh sách nhà cung cấp</span>\\r\\n    <small i18n=\\\"@@productModuleTitle\\\">Quản lý sản phẩm</small>\\r\\n</h1>\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@keywordSearch\\\" i18n-placeholder\\r\\n               placeholder=\\\"Nhà cung cấp.\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'inActive'},{id: true, name: 'Active'}]\\\"\\r\\n            i18n=\\\"@@selectStatus\\\"\\r\\n            i18n-title\\r\\n            [title]=\\\"'-- Chọn trạng thái --'\\\"\\r\\n            [value]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"selectIsActive($event)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button class=\\\"btn blue cm-mgr-5\\\" *ngIf=\\\"permission.add\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\"\\r\\n                type=\\\"button\\\">\\r\\n            Thêm\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n<table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">STT</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@supplier\\\">Tên Nhà Cung Cấp</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@address\\\">Địa Chỉ</th>\\r\\n        <th class=\\\"middle center\\\" i18n=\\\"@@status\\\">Trạng Thái</th>\\r\\n        <th class=\\\"middle text-right w150\\\" i18n=\\\"@@action\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Thao Tác</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listSupplier; let i = index\\\"\\r\\n        nhContextMenuTrigger\\r\\n        [nhContextMenuTriggerFor]=\\\"nhMenu\\\"\\r\\n        [nhContextMenuData]=\\\"item\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">{{ item.name }}</td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            {{item.address}}\\r\\n        </td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            <mat-checkbox color=\\\"primary\\\" [checked]=\\\"item.isActive\\\" (change)=\\\"updateStatus(item)\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"text-right middle\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.view\\\"\\r\\n                           (click)=\\\"detail(item)\\\"\\r\\n                           i18n=\\\"@@view\\\">\\r\\n                            <i class=\\\"fa fa-eye\\\"></i>\\r\\n                            Xem\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.edit\\\"\\r\\n                           (click)=\\\"edit(item)\\\"\\r\\n                           i18n=\\\"@@edit\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                            Sửa\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a [swal]=\\\"confirmDeleteSupplier\\\"\\r\\n                           (confirm)=\\\"delete(item.id)\\\" i18n=\\\"@@delete\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                            Xóa\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ghm-paging\\r\\n    class=\\\"pull-right\\\"\\r\\n    [totalRows]=\\\"totalRows\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    [pageShow]=\\\"6\\\"\\r\\n    [pageSize]=\\\"pageSize\\\"\\r\\n    (pageClick)=\\\"search($event)\\\"\\r\\n    i18n=\\\"@@supplier\\\" i18n-pageName\\r\\n    [pageName]=\\\"'Nhà cung cấp'\\\">\\r\\n</ghm-paging>\\r\\n\\r\\n<app-product-supplier-form (saveSuccessful)=\\\"search(1)\\\"></app-product-supplier-form>\\r\\n<app-product-supplier-detail></app-product-supplier-detail>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteSupplier\\r\\n    i18n=\\\"@@confirmDeleteSupplier\\\"\\r\\n    i18n-title=\\\"@@confirmTitleDeleteSupplier\\\"\\r\\n    i18n-text=\\\"@@confirmTextDeleteSupplier\\\"\\r\\n    title=\\\"Bạn có muống xóa nhà cung cấp này?\\\"\\r\\n    text=\\\"Bạn không thể khôi phục nhà cung cấp này sau khi xóa.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Đồng ý\\\"\\r\\n    cancelButtonText=\\\"Hủy\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n<nh-menu #nhMenu>\\r\\n    <nh-menu-item (clicked)=\\\"detail($event)\\\">\\r\\n        <i class=\\\"fa fa-eye\\\"></i>\\r\\n        <span i18n=\\\"@@view\\\">Xem </span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item (clicked)=\\\"edit($event)\\\">\\r\\n        <i class=\\\"fa fa-edit\\\"></i>\\r\\n        <span i18n=\\\"@@edit\\\">Sửa</span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item *ngIf=\\\"permission.delete\\\"\\r\\n                  [swal]=\\\"confirmDeleteSupplier\\\"\\r\\n                  (clicked)=\\\"confirm($event)\\\">\\r\\n        <i class=\\\"fa fa-trash\\\"></i>\\r\\n        <span i18n=\\\"@@edit\\\">Xóa</span>\\r\\n    </nh-menu-item>\\r\\n</nh-menu>\\r\\n\"","import {AfterViewInit, Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseListComponent} from '../../../../base-list.component';\r\nimport {SupplierSearchViewModel} from './viewmodel/supplier-search.viewmodel';\r\nimport {HelperService} from '../../../../shareds/services/helper.service';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {IPageId, PAGE_ID} from '../../../../configs/page-id.config';\r\nimport {Location} from '@angular/common';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {FilterLink} from '../../../../shareds/models/filter-link.model';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {SupplierFormComponent} from './supplier-form/supplier-form.component';\r\nimport {SupplierService} from './service/supplier.service';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {SwalComponent} from '@toverux/ngx-sweetalert2';\r\nimport {SupplierDetailComponent} from './supplier-detail/supplier-detail.component';\r\n\r\n@Component({\r\n    selector: 'app-product-supplier',\r\n    templateUrl: './supplier.component.html',\r\n    providers: [HelperService, SupplierService]\r\n})\r\n\r\nexport class SupplierComponent extends BaseListComponent<SupplierSearchViewModel> implements OnInit, AfterViewInit {\r\n    @ViewChild(SupplierFormComponent) supplierFormComponent: SupplierFormComponent;\r\n    @ViewChild(SupplierDetailComponent) supplierDetailComponent: SupplierDetailComponent;\r\n    @ViewChild('confirmDeleteSupplier') swalConfirmDelete: SwalComponent;\r\n    isActive;\r\n    address;\r\n    listSupplier: SupplierSearchViewModel[];\r\n    supplierId: string;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private location: Location,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private supplierService: SupplierService,\r\n                private helperService: HelperService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.PRODUCT, this.pageId.SUPPLIER, 'Quản lý nhà cung cấp', 'Quản lý sản phẩm');\r\n        this.subscribers.data = this.route.data.subscribe((result: { data: SearchResultViewModel<SupplierSearchViewModel> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            this.listSupplier = data.items;\r\n        });\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.address = params.address ? params.address : '';\r\n            this.isActive = params.isActive !== null && params.isActive !== '' && params.isActive !== undefined\r\n                ? Boolean(params.isActive) : null;\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.swalConfirmDelete.confirm.subscribe(result => {\r\n            this.delete(this.supplierId);\r\n        });\r\n    }\r\n\r\n    searchKeyUp(keyword) {\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderFilterLink();\r\n        this.supplierService.search(this.keyword, this.address, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((data: SearchResultViewModel<SupplierSearchViewModel>) => {\r\n                this.totalRows = data.totalRows;\r\n                this.listSupplier = data.items;\r\n            });\r\n    }\r\n\r\n    selectIsActive(value) {\r\n        if (value) {\r\n            this.isActive = value.id;\r\n        } else {\r\n            this.isActive = null;\r\n        }\r\n\r\n        this.search(1);\r\n    }\r\n\r\n    onPageClick(page: number) {\r\n        this.currentPage = page;\r\n        this.search(1);\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.address = '';\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    add() {\r\n        this.supplierFormComponent.add();\r\n    }\r\n\r\n    edit(supplier: SupplierSearchViewModel) {\r\n        this.supplierFormComponent.edit(supplier.id);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.supplierService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(1);\r\n                // _.remove(this.listSupplier, (item: SupplierSearchViewModel) => {\r\n                //     return item.id === id;\r\n                // });\r\n            });\r\n    }\r\n\r\n    detail(supplier: SupplierSearchViewModel) {\r\n        this.supplierDetailComponent.show(supplier.id);\r\n    }\r\n\r\n    updateStatus(item: SupplierSearchViewModel) {\r\n        this.supplierService.updateStatus(item.id, !item.isActive).subscribe((result: ActionResultViewModel) => {\r\n            item.isActive = !item.isActive;\r\n        });\r\n    }\r\n\r\n    confirm(value: SupplierSearchViewModel) {\r\n        this.supplierId = value.id;\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = 'products/supplies';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('address', this.address),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #productUnitFormModal size=\\\"lg\\\"\\r\\n          (shown)=\\\"onModalShow()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header class=\\\"uppercase bold\\\">\\r\\n        {isUpdate, select, 0 {Thêm mới đơn vị} 1 {Cập nhật đơn vị} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <div formArrayName=\\\"translations\\\">\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"languages && languages.length > 1\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                               class=\\\"col-sm-4 control-label\\\"\\r\\n                               [required]=\\\"true\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <nh-select [data]=\\\"languages\\\"\\r\\n                                       i18n-title=\\\"@@pleaseSelectLanguage\\\"\\r\\n                                       title=\\\"-- Chọn ngôn ngữ --\\\"\\r\\n                                       name=\\\"language\\\"\\r\\n                                       [(value)]=\\\"currentLanguage\\\"\\r\\n                                       (onSelectItem)=\\\"currentLanguage = $event.id\\\"></nh-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                         *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                         [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                         [formGroupName]=\\\"i\\\"\\r\\n                         [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@name\\\" ghmLabel=\\\"Tên đơn vị\\\"\\r\\n                               class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"{{'name ' + currentLanguage}}\\\"\\r\\n                                   i18n-placeholder=\\\"@@enterUnitNamePlaceHolder\\\"\\r\\n                                   placeholder=\\\"Nhập tên đơn vị.\\\"\\r\\n                                   formControlName=\\\"name\\\">\\r\\n                            <span class=\\\"help-block\\\">{ translationFormErrors[modelTranslation.value.languageId]?.name, select,\\r\\n                                                        required {Tên đơn vị không được để trống}\\r\\n                                                        maxLength {Tên đơn vị không được để quá 256 ký tự}\\r\\n                                                        pattern {Tên đơn vị phải là chữ}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                         *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                         [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                         [formGroupName]=\\\"i\\\"\\r\\n                         [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.abbreviation\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@abbreviation\\\" ghmLabel=\\\"Đơn vị viết tắt\\\"\\r\\n                               class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                   i18n-placeholder=\\\"@@enterUnitabbreviationPlaceHolder\\\"\\r\\n                                   placeholder=\\\"Enter abbreviation.\\\"\\r\\n                                   formControlName=\\\"abbreviation\\\">\\r\\n                            <span class=\\\"help-block\\\">{ translationFormErrors[modelTranslation.value.languageId]?.abbreviation, select,\\r\\n                                required {Đơn vị viết tắt không được để trống}\\r\\n                                maxLength {Đơn vị viết tắt không được vượt quá 50 ký tự}\\r\\n                                pattern {Đơn vị viết tắt phải là các chữ cái a-z, A-Z, 0-9}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group cm-mgb-10\\\"\\r\\n                         [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                         *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n                         [formGroupName]=\\\"i\\\"\\r\\n                         [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                        <label i18n=\\\"@@description\\\" i18n-ghmLabel ghmLabel=\\\"Mô tả đơn vị\\\"\\r\\n                               class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                                              formControlName=\\\"description\\\"\\r\\n                                                              i18n-placeholder=\\\"@@enterDescriptionPlaceholder\\\"\\r\\n                                                              placeholder=\\\"Nhập mô tả.\\\"></textarea>\\r\\n                            <span class=\\\"help-block\\\">\\r\\n                                  {translationFormErrors[modelTranslation.value.languageId]?.description, select, maxLength {Môt tả đơn vị không được vượt quá 500 ký tự}}\\r\\n                             </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                        <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                            <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                                {model.value.isActive, select, 0 {Chưa kích hoạt} 1 {Kich hoạt}}\\r\\n                            </mat-checkbox>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Tiếp tục thêm\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn blue cm-mgr-5\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@Save\\\">Lưu</span>\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Đóng</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {UnitService} from '../service/unit.service';\r\nimport {Unit} from '../model/unit.model';\r\nimport {UnitTranslations} from '../model/unit-translations.model';\r\nimport {UnitDetailViewModel} from '../view-model/unit-detail.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport {Pattern} from '../../../../../shareds/constants/pattern.const';\r\n\r\n@Component({\r\n    selector: 'app-product-unit-form',\r\n    templateUrl: './unit-form.component.html',\r\n    providers: [UnitService]\r\n})\r\n\r\nexport class UnitFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('productUnitFormModal') productUnitFormModal: NhModalComponent;\r\n    unit = new Unit();\r\n    modelTranslation = new UnitTranslations();\r\n    isGettingTree = false;\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private unitService: UnitService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalShow() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.utilService.focusElement('name ' + this.currentLanguage);\r\n        this.renderForm();\r\n        this.productUnitFormModal.open();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.utilService.focusElement('name ' + this.currentLanguage);\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n        this.productUnitFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        const isLanguageValid = this.validateLanguage();\r\n        if (isValid && isLanguageValid) {\r\n            this.unit = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.unitService\r\n                    .update(this.id, this.unit)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.saveSuccessful.emit();\r\n                        this.productUnitFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.unitService\r\n                    .insert(this.unit)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.utilService.focusElement('name ' + this.currentLanguage);\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.saveSuccessful.emit();\r\n                            this.productUnitFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private getDetail(id: string) {\r\n        this.subscribers.productUnitService = this.unitService\r\n            .getDetail(id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<UnitDetailViewModel>) => {\r\n                    const unitDetail = result.data;\r\n                    if (unitDetail) {\r\n                        this.model.patchValue({\r\n                            isActive: unitDetail.isActive,\r\n                            concurrencyStamp: unitDetail.concurrencyStamp,\r\n                        });\r\n                        if (unitDetail.translations && unitDetail.translations.length > 0) {\r\n                            this.translations.controls.forEach(\r\n                                (model: FormGroup) => {\r\n                                    const detail = _.find(\r\n                                        unitDetail.translations,\r\n                                        (unitTranslation: UnitTranslations) => {\r\n                                            return (\r\n                                                unitTranslation.languageId ===\r\n                                                model.value.languageId\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    if (detail) {\r\n                                        model.patchValue(detail);\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError([]);\r\n        this.model = this.fb.group({\r\n            isActive: [this.unit.isActive],\r\n            concurrencyStamp: [this.unit.concurrencyStamp],\r\n            translations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            isActive: true,\r\n        });\r\n        this.translations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                abbreviation: '',\r\n                description: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name', 'abbreviation', 'description']\r\n        );\r\n        this.translationValidationMessage[\r\n            language\r\n            ] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxlength', 'pattern']},\r\n            {abbreviation: ['required', 'maxlength', 'pattern']},\r\n            {description: ['maxlength']},\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256), Validators.pattern(Pattern.whiteSpace)]\r\n            ],\r\n            abbreviation: [\r\n                this.modelTranslation.abbreviation,\r\n                [Validators.required, Validators.maxLength(50),\r\n                    Validators.pattern('^[a-zA-Z0-9]+$')]\r\n            ],\r\n            description: [\r\n                this.modelTranslation.description,\r\n                [Validators.maxLength(500)]\r\n            ]\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslation(false)\r\n        );\r\n        return translationModel;\r\n    }\r\n}\r\n","export class UnitTranslations {\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n    abbreviation: string;\r\n}\r\n","import {UnitTranslations} from './unit-translations.model';\r\n\r\nexport class Unit {\r\n    id: string;\r\n    isActive: boolean;\r\n    concurrencyStamp: string;\r\n    translations: UnitTranslations[];\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n    }\r\n}\r\n","import {SearchResultViewModel} from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\nimport {SpinnerService} from '../../../../../core/spinner/spinner.service';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {ActivatedRouteSnapshot} from '@angular/router';\r\nimport {map} from 'rxjs/operators';\r\nimport {SupplierSuggestionsViewModel} from '../../supplier/viewmodel/supplier-suggestions.viewmodel';\r\nimport {Observable} from 'rxjs';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {finalize} from 'rxjs/internal/operators';\r\nimport {Inject} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {UnitSearchViewModel} from '../view-model/unit-search.viewmodel';\r\nimport {UnitDetailViewModel} from '../view-model/unit-detail.viewmodel';\r\nimport {Unit} from '../model/unit.model';\r\nimport * as _ from 'lodash';\r\nimport {UnitSuggestionsViewModel} from '../view-model/unit-suggestions.viewmodel';\r\nimport {NhSuggestion} from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\n\r\nexport class UnitService {\r\n    url = 'api/v1/warehouse/units';\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinceService: SpinnerService,\r\n                private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.isActive,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string,  isActive?: boolean, page: number = 1,\r\n           pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<UnitSearchViewModel>> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword ? keyword : '')\r\n            .set('isActive', isActive !== null && isActive !== undefined ? isActive.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString());\r\n\r\n        return this.http.get(`${this.url}`, {\r\n            params: params\r\n        }) as Observable<SearchResultViewModel<UnitSearchViewModel>>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<UnitDetailViewModel>> {\r\n        this.spinceService.show();\r\n        return this.http.get(`${this.url}/${id}`, {})\r\n            .pipe(finalize(() => {\r\n                this.spinceService.hide();\r\n            }))as Observable<ActionResultViewModel<UnitDetailViewModel>>;\r\n    }\r\n\r\n    insert(unit: Unit): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, unit).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, unit: Unit): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}`, unit).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${id}`, ).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    suggestions(keyword: string, page: number = 1,\r\n                pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/suggestions`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }).pipe(map((result: SearchResultViewModel<NhSuggestion>) => {\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    updateStatus(id: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/status/${isActive}`, {}).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","import {AfterViewInit, Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseListComponent} from '../../../../base-list.component';\r\nimport {UnitSearchViewModel} from './view-model/unit-search.viewmodel';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {IPageId, PAGE_ID} from '../../../../configs/page-id.config';\r\nimport {Location} from '@angular/common';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {FilterLink} from '../../../../shareds/models/filter-link.model';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {HelperService} from '../../../../shareds/services/helper.service';\r\nimport {UnitService} from './service/unit.service';\r\nimport * as _ from 'lodash';\r\nimport {UnitFormComponent} from './form/unit-form.component';\r\nimport {SwalComponent} from '@toverux/ngx-sweetalert2';\r\n\r\n@Component({\r\n    selector: 'app-product-unit',\r\n    templateUrl: './unit.component.html',\r\n    providers: [HelperService]\r\n})\r\n\r\nexport class UnitComponent extends BaseListComponent<UnitSearchViewModel> implements OnInit, AfterViewInit {\r\n    @ViewChild('confirmDeleteUnit') swalConfirmDelete: SwalComponent;\r\n    @ViewChild(UnitFormComponent) unitFormComponent: UnitFormComponent;\r\n    isActive;\r\n    address;\r\n    listUnit: UnitSearchViewModel[];\r\n    unitId: string;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private location: Location,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private unitService: UnitService,\r\n                private helperService: HelperService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.PRODUCT, this.pageId.UNIT, 'Quản lý đơn vị', 'Quản lý sản phẩm');\r\n        this.subscribers.data = this.route.data.subscribe((result: { data: SearchResultViewModel<UnitSearchViewModel> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            this.listUnit = data.items;\r\n        });\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.isActive = params.isActive !== null && params.isActive !== '' && params.isActive !== undefined\r\n                ? Boolean(params.isActive) : '';\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.swalConfirmDelete.confirm.subscribe(result => {\r\n            this.delete(this.unitId);\r\n        });\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderFilterLink();\r\n        this.unitService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((data: SearchResultViewModel<UnitSearchViewModel>) => {\r\n                this.totalRows = data.totalRows;\r\n                this.listUnit = data.items;\r\n            });\r\n    }\r\n\r\n    onPageClick(page: number) {\r\n        this.currentPage = page;\r\n        this.search(1);\r\n    }\r\n\r\n    selectIsActive(value) {\r\n        if (value) {\r\n            this.isActive = value.id;\r\n        } else {\r\n            this.isActive = null;\r\n        }\r\n\r\n        this.search(1);\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.address = '';\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    add() {\r\n        this.unitFormComponent.add();\r\n    }\r\n\r\n    edit(unit: UnitSearchViewModel) {\r\n        this.unitFormComponent.edit(unit.id);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.unitService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(1);\r\n                // _.remove(this.listUnit, (item: UnitSearchViewModel) => {\r\n                //     return item.id === id;\r\n                // });\r\n            });\r\n    }\r\n\r\n    confirm(value: UnitSearchViewModel) {\r\n        this.swalConfirmDelete.show();\r\n        this.unitId = value.id;\r\n    }\r\n\r\n    updateStatus(item: UnitSearchViewModel) {\r\n        this.unitService.updateStatus(item.id, !item.isActive).subscribe((result: ActionResultViewModel) => {\r\n            item.isActive = !item.isActive;\r\n        });\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = 'products/units';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('address', this.address),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","module.exports = \"<nh-suggestion\\r\\n    [placeholder]=\\\"'Nhập tên đơn vị.'\\\"\\r\\n    [sources]=\\\"listItems\\\"\\r\\n    [loading]=\\\"isSearching\\\"\\r\\n    [selectedItem]=\\\"selectedItem\\\"\\r\\n    (searched)=\\\"onSearchKeyPress($event)\\\"\\r\\n    (itemRemoved)=\\\"itemRemoved.emit($event)\\\"\\r\\n    (itemSelected)=\\\"onItemSelected($event)\\\"></nh-suggestion>\\r\\n\"","import {Component, EventEmitter, Inject, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { NhSuggestion, NhSuggestionComponent } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { BaseListComponent } from '../../../../../base-list.component';\r\nimport { UnitService } from '../service/unit.service';\r\nimport {IPageId, PAGE_ID} from '../../../../../configs/page-id.config';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\n\r\n@Component({\r\n  selector: 'app-unit-suggestion',\r\n  templateUrl: './unit-suggestion.component.html'\r\n})\r\nexport class UnitSuggestionComponent extends BaseListComponent<NhSuggestion> implements OnInit {\r\n\r\n    @ViewChild(NhSuggestionComponent) nhSuggestionComponent: NhSuggestionComponent;\r\n    @Input() isReceipt = false;\r\n    @Input() multiple = false;\r\n    @Input() selectedItem;\r\n\r\n    @Output() keyPressed = new EventEmitter();\r\n    @Output() itemSelected = new EventEmitter();\r\n    @Output() itemRemoved = new EventEmitter();\r\n\r\n    constructor(private unitService: UnitService, @Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onItemSelected(item: any) {\r\n        this.itemSelected.emit(item);\r\n    }\r\n\r\n    onSearchKeyPress(keyword: string) {\r\n        this.keyPressed.emit(keyword);\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.isSearching = true;\r\n        this.currentPage = currentPage;\r\n        this.unitService.suggestions(this.keyword, this.currentPage, this.appConfig.PAGE_SIZE)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<NhSuggestion>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listItems = result.items;\r\n            });\r\n    }\r\n\r\n    clear() {\r\n        this.nhSuggestionComponent.clear();\r\n    }\r\n\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listUnitPageTitle\\\">Danh sách đơn vị</span>\\r\\n    <small i18n=\\\"@@productModuleTitle\\\">Quản lý sản phẩm</small>\\r\\n</h1>\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@keywordSearch\\\" i18n-placeholder\\r\\n               placeholder=\\\"Nhập từ khóa tìm kiếm.\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'Chưa kích hoạt'},{id: true, name: 'Đã kích hoạt'}]\\\"\\r\\n            i18n-title=\\\"@@selectStatus\\\"\\r\\n\\r\\n            [title]=\\\"'-- Tất cả --'\\\"\\r\\n            [(value)]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"selectIsActive($event)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button class=\\\"btn blue cm-mgr-5\\\" *ngIf=\\\"permission.add\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\"\\r\\n                type=\\\"button\\\">\\r\\n            Thêm\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n<table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">STT</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@supplier\\\">Viết Tắt</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@address\\\">Tên</th>\\r\\n        <th class=\\\"middle center\\\" i18n=\\\"@@status\\\">Trạng Thái</th>\\r\\n        <th class=\\\"middle text-right w150\\\" i18n=\\\"@@action\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Hành động</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listUnit; let i = index\\\"\\r\\n        nhContextMenuTrigger\\r\\n        [nhContextMenuTriggerFor]=\\\"nhMenu\\\"\\r\\n        [nhContextMenuData]=\\\"item\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">{{ item.abbreviation }}</td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            {{item.name}}\\r\\n        </td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            <mat-checkbox color=\\\"primary\\\" [checked]=\\\"item.isActive\\\" (change)=\\\"updateStatus(item)\\\"></mat-checkbox>\\r\\n        </td>\\r\\n        <td class=\\\"text-right middle\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.edit\\\"\\r\\n                           (click)=\\\"edit(item)\\\">\\r\\n                            <!--<i class=\\\"fa fa-edit\\\"></i>-->\\r\\n                            <mat-icon>edit</mat-icon>\\r\\n                            <span i18n=\\\"@@edit\\\">Sửa</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a (click)=\\\"confirm(item)\\\" i18n=\\\"@@delete\\\">\\r\\n                            <!--<i class=\\\"fa fa-trash\\\"></i>-->\\r\\n                            <mat-icon>delete</mat-icon>\\r\\n                            <span i18n=\\\"@@delete\\\">Xóa</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ghm-paging\\r\\n    class=\\\"pull-right\\\"\\r\\n    [totalRows]=\\\"totalRows\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    [pageShow]=\\\"6\\\"\\r\\n    [pageSize]=\\\"pageSize\\\"\\r\\n    (pageClick)=\\\"search($event)\\\"\\r\\n    i18n=\\\"@@unit\\\" i18n-pageName\\r\\n    [pageName]=\\\"'Đơn vị'\\\">\\r\\n</ghm-paging>\\r\\n<app-product-unit-form (saveSuccessful)=\\\"search(1)\\\"></app-product-unit-form>\\r\\n\\r\\n<swal\\r\\n    #confirmDeleteUnit\\r\\n    i18n=\\\"@@confirmDeleteUnit\\\"\\r\\n    i18n-title=\\\"@@confirmTitleDeleteUnit\\\"\\r\\n    i18n-text=\\\"@@confirmTextDeleteUnit\\\"\\r\\n    title=\\\"Bạn có chắc chắn muốn xóa đơn vị này?\\\"\\r\\n    text=\\\"Lưu ý: bạn không thể khôi phục lại đơn vị sau khi xóa.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Đồng ý\\\"\\r\\n    cancelButtonText=\\\"Hủy bỏ\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n<nh-menu #nhMenu>\\r\\n    <nh-menu-item (clicked)=\\\"edit($event)\\\">\\r\\n        <!--<i class=\\\"fa fa-edit\\\"></i>-->\\r\\n        <mat-icon class=\\\"menu-icon\\\">edit</mat-icon>\\r\\n        <span i18n=\\\"@@edit\\\">Sửa</span>\\r\\n    </nh-menu-item>\\r\\n    <nh-menu-item *ngIf=\\\"permission.delete\\\"\\r\\n                  (clicked)=\\\"confirm($event)\\\">\\r\\n        <!--<i class=\\\"fa fa-trash\\\"></i>-->\\r\\n        <mat-icon class=\\\"menu-icon\\\">delete</mat-icon>\\r\\n        <span i18n=\\\"@@edit\\\">Xóa</span>\\r\\n    </nh-menu-item>\\r\\n</nh-menu>\\r\\n\"","import { ActionResultViewModel } from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../configs/app.config';\r\nimport { SpinnerService } from '../../../../core/spinner/spinner.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { SearchResultViewModel } from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport { NhSuggestion } from '../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { finalize } from 'rxjs/internal/operators';\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { WarehouseSearchViewModel } from '../viewmodel/warehouse-search.viewmodel';\r\nimport { Warehouse } from '../model/warehouse.model';\r\nimport { WarehouseManagerConfig } from '../model/warehouse-manager-config.model';\r\nimport { WarehouseDetailViewModel } from '../viewmodel/warehouse-detail.viewmodel';\r\nimport { WarehouseLimit } from '../model/warehouse-limit.model';\r\nimport { WarehouseLimitSearchViewModel } from '../viewmodel/warehouse-limit-search.viewmodel';\r\nimport { SuggestionViewModel } from '../../../../shareds/view-models/SuggestionViewModel';\r\n\r\nexport class WarehouseService {\r\n\r\n    url = 'api/v1/warehouse/warehouses';\r\n\r\n    constructor(@Inject(APP_CONFIG)\r\n                private appConfig: IAppConfig,\r\n                private spinceService: SpinnerService,\r\n                private http: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.isActive,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page: number = 1,\r\n           pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<WarehouseSearchViewModel>> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword ? keyword : '')\r\n            .set('isActive', isActive !== null && isActive !== undefined ? isActive.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString());\r\n\r\n        return this.http.get(`${this.url}`, {\r\n            params: params\r\n        }) as Observable<SearchResultViewModel<WarehouseSearchViewModel>>;\r\n    }\r\n\r\n    insert(warehouse: Warehouse): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, warehouse).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, warehouse: Warehouse): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}`, warehouse).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${id}`).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateStatus(id: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/actives/${isActive}`, {}).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<WarehouseDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${id}`)\r\n            .pipe(finalize(() => this.spinnerService.hide()))as Observable<ActionResultViewModel<WarehouseDetailViewModel>>;\r\n    }\r\n\r\n    suggestions(keyword: string, page: number, pageSize: number): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/suggestions`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '10')\r\n        }) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    // ManagerConfig\r\n    getManagerConfigByWarehouseId(warehouseId: string, isActive: boolean, page: number = 1,\r\n                                  pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<WarehouseManagerConfig>> {\r\n        const params = new HttpParams()\r\n            .set('isActive', isActive !== null && isActive !== undefined ? isActive.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString());\r\n\r\n        return this.http.get(`${this.url}/${warehouseId}/warehouse-manager-configs`, {\r\n            params: params\r\n        }) as Observable<SearchResultViewModel<WarehouseManagerConfig>>;\r\n    }\r\n\r\n    insertManagerConfig(warehouseId: string, warehouseManagerConfig: WarehouseManagerConfig): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${warehouseId}/warehouse-manager-configs`, warehouseManagerConfig)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateManagerConfig(warehouseId: string, userId: string,\r\n                        warehouseManagerConfig: WarehouseManagerConfig): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${warehouseId}/warehouse-manager-configs/${userId}`, warehouseManagerConfig)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    deleteManagerConfig(warehouseId: string, userId: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${warehouseId}/warehouse-manager-configs/${userId}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    // Warehouse limit\r\n    insertWarehouseLimit(warehouseId: string, warehouseLimit: WarehouseLimit): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${warehouseId}/warehouse-limits`, warehouseLimit)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    searchWarehouseLimit(warehouseId: string, keyword: string, page: number = 1,\r\n                         pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<WarehouseLimitSearchViewModel>> {\r\n        return this.http.get(`${this.url}/${warehouseId}/warehouse-limits`,\r\n            {\r\n                params: new HttpParams()\r\n                    .set('keyword', keyword ? keyword : '')\r\n                    .set('page', page ? page.toString() : '1')\r\n                    .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n            }).pipe(map((result: SearchResultViewModel<WarehouseLimit>) => {\r\n            result.items.forEach((item: WarehouseLimitSearchViewModel) => {\r\n                item.isNew = false;\r\n                item.isEdit = false;\r\n            });\r\n            return result;\r\n        }))as Observable<SearchResultViewModel<WarehouseLimitSearchViewModel>>;\r\n    }\r\n\r\n    deleteWarehouseLimit(warehouseId: string, productId: string, unitId: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${warehouseId}/warehouse-limits/${productId}/${unitId}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    managerSuggestion(warehouseId: string, keyword: string, page: number,\r\n                      pageSize: number): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http\r\n            .get(`${this.url}/${warehouseId}/managers`, {\r\n                params: new HttpParams()\r\n                    .set('keyword', keyword ? keyword : '')\r\n                    .set('page', page ? page.toString() : '1')\r\n                    .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n            }) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    productSuggestions(warehouseId: string, keyword: string, page: number,\r\n                       pageSize: number): Observable<SearchResultViewModel<NhSuggestion>> {\r\n        return this.http.get(`${this.url}/${warehouseId}/product-suggestions`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<SearchResultViewModel<NhSuggestion>>;\r\n    }\r\n\r\n    getAllProductToTakeInventory(warehouseId: string) {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${warehouseId}/products`)\r\n            .pipe(finalize(() => this.spinnerService.hide()));\r\n    }\r\n\r\n    getConfigs(id: string) {\r\n        return this.http.get(`${this.url}/${id}/configs`);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'ghmCurrency'\r\n})\r\nexport class GhmCurrencyPipe implements PipeTransform {\r\n    private j: any;\r\n\r\n    transform(value: any, fixedNumber: number, radixPoint?: string, decimalPoint?: string): any {\r\n        return this.formatMoney(value, fixedNumber, decimalPoint, radixPoint);\r\n    }\r\n\r\n    formatMoney(n, c, d?: string, t?: string) {\r\n        c = isNaN(c = Math.abs(c)) ? 2 : c;\r\n        d = d === undefined ? ',' : d;\r\n        t = t === undefined ? '.' : t;\r\n        const s = n < 0 ? '-' : '',\r\n            i: any = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c)));\r\n        this.j = (this.j = i.length) > 3 ? this.j % 3 : 0;\r\n\r\n        return s + (this.j ? i.substr(0, this.j) + t : '') + i.substr(this.j).replace(/(\\d{3})(?=\\d)/g, '$1' + t)\r\n            + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\r\n    }\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appGhmMask]'\r\n})\r\nexport class GhmMaskDirective {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GhmMaskDirective } from './ghm-mask.directive';\r\nimport { GhmCurrencyPipe } from './ghm-currency.pipe';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [GhmMaskDirective, GhmCurrencyPipe],\r\n    exports: [GhmMaskDirective, GhmCurrencyPipe]\r\n})\r\nexport class GhmMaskModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NhDropdownComponent } from './nh-dropdown/nh-dropdown.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [NhDropdownComponent],\r\n    exports: [NhDropdownComponent]\r\n})\r\nexport class NhDropdownModule {\r\n}\r\n","module.exports = \"<ng-content></ng-content>\\r\\n\\r\\n\"","module.exports = \"nh-dropdown {\\n  display: inline-block;\\n  position: relative; }\\n  nh-dropdown.nh-dropdown-open .nh-dropdown-menu {\\n    display: block;\\n    top: 100%;\\n    left: 0;\\n    background: white;\\n    border: 1px solid #ddd; }\\n  nh-dropdown > button.btn-no-background {\\n    background: transparent !important; }\\n  nh-dropdown > button.no-border {\\n    border: none !important; }\\n  nh-dropdown .nh-dropdown-menu {\\n    position: absolute;\\n    padding-left: 0;\\n    margin-bottom: 0;\\n    list-style: none;\\n    display: none;\\n    min-width: 175px;\\n    z-index: 1000;\\n    margin-top: 10px;\\n    text-align: left; }\\n  nh-dropdown .nh-dropdown-menu:before {\\n      position: absolute;\\n      top: -8px;\\n      left: 9px;\\n      right: auto;\\n      display: inline-block !important;\\n      border-right: 8px solid transparent;\\n      border-bottom: 8px solid #ddd;\\n      border-left: 8px solid transparent;\\n      content: ''; }\\n  nh-dropdown .nh-dropdown-menu:after {\\n      position: absolute;\\n      top: -7px;\\n      left: 10px;\\n      right: auto;\\n      display: inline-block !important;\\n      border-right: 7px solid transparent;\\n      border-bottom: 7px solid white;\\n      border-left: 7px solid transparent;\\n      content: ''; }\\n  nh-dropdown .nh-dropdown-menu.right {\\n      right: 0 !important;\\n      left: auto; }\\n  nh-dropdown .nh-dropdown-menu.right:before {\\n        left: auto;\\n        right: 18px; }\\n  nh-dropdown .nh-dropdown-menu.right:after {\\n        position: absolute;\\n        left: auto;\\n        right: 19px; }\\n  nh-dropdown .nh-dropdown-menu li a {\\n      padding: 5px 10px;\\n      color: #333;\\n      text-decoration: none;\\n      clear: both;\\n      font-weight: 300;\\n      line-height: 18px;\\n      white-space: nowrap;\\n      display: flex;\\n      align-items: center; }\\n  nh-dropdown .nh-dropdown-menu li a:hover {\\n        background: #eee; }\\n  nh-dropdown .nh-dropdown-menu li a .menu-icon {\\n        font-size: 1.5em;\\n        color: #555;\\n        margin-right: 2px; }\\n\"","import {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostListener,\r\n    OnInit,\r\n    Output,\r\n    Renderer2,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'nh-dropdown',\r\n    templateUrl: './nh-dropdown.component.html',\r\n    styleUrls: ['./nh-dropdown.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NhDropdownComponent implements OnInit {\r\n    @Output() shown = new EventEmitter();\r\n    @Output() hidden = new EventEmitter();\r\n\r\n    isOpen = false;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private renderer: Renderer2) {\r\n    }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    documentClick(event: any) {\r\n        if (!this.el.nativeElement.contains(event.target)) {\r\n            this.closeDropdown();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderer.listen(this.el.nativeElement, 'click', (event) => {\r\n            this.toggleDropdown(event);\r\n        });\r\n    }\r\n\r\n    toggleDropdown(event: MouseEvent) {\r\n        this.isOpen = !this.isOpen;\r\n        if (this.isOpen) {\r\n            this.renderer.addClass(this.el.nativeElement, 'nh-dropdown-open');\r\n            this.shown.emit();\r\n        } else {\r\n            this.closeDropdown();\r\n        }\r\n    }\r\n\r\n    private closeDropdown() {\r\n        this.isOpen = false;\r\n        this.renderer.removeClass(this.el.nativeElement, 'nh-dropdown-open');\r\n        this.hidden.emit();\r\n    }\r\n}\r\n","/**\r\n * Created by Administrator on 6/18/2017.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// Services\r\nimport { NhTabService } from './nh-tab.service';\r\n\r\nimport { NhTabComponent } from './nh-tab.component';\r\nimport { NhTabPaneComponent } from './nh-tab-pane.component';\r\n\r\n// Directives\r\nimport { NhTabHostDirective } from './nh-tab-host.directive';\r\nimport { NhTabTitleDirective } from './nh-tab-title.directive';\r\nimport { NhTabTitleComponent } from './nh-tab-title.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [NhTabComponent, NhTabPaneComponent, NhTabTitleDirective],\r\n    declarations: [NhTabComponent, NhTabPaneComponent, NhTabHostDirective, NhTabTitleDirective, NhTabTitleComponent]\r\n})\r\nexport class NhTabModule {\r\n}\r\n","export const ContactType = {\r\n    supplier: 0,\r\n    agency: 1,\r\n};\r\n","export const Pattern = {\r\n    phoneNumber: '^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$',\r\n    email: '^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$',\r\n    whiteSpace: '.*\\\\S.*',\r\n    url: '(http(s)?://)?([\\\\w-]+\\\\.)+[\\\\w-]+(/[\\\\w- ;,./?%&=]*)?'\r\n}\r\n","export const WorkStatus = {\r\n    quit: 0, // Thôi việc\r\n    official: 1, // đang làm việc\r\n    transfer: 2 // chuyển công tác\r\n};\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { FormatNumberPipe } from './format-number.pipe';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [FormatNumberPipe],\r\n    declarations: [FormatNumberPipe],\r\n    providers: [],\r\n})\r\nexport class FormatNumberModule {\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'formatNumber' })\r\nexport class FormatNumberPipe implements PipeTransform {\r\n    private j: any;\r\n    transform(value: number, exponent: string) {\r\n        return this.formatMoney(value, exponent, ',', '.');\r\n    }\r\n\r\n    formatMoney(value, c, d, t) {\r\n        let n = value;\r\n        c = isNaN(c = Math.abs(c)) ? 0 : c;\r\n        d = d === undefined ? '.' : d;\r\n        t = t === undefined ? ',' : t;\r\n        const s = n < 0 ? '-' : '';\r\n        const i: any = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c)));\r\n        this.j = (this.j = i.length) > 3 ? this.j % 3 : 0;\r\n        return s + (this.j ? i.substr(0, this.j) + t : '') + i.substr(this.j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\r\n    }\r\n}\r\n"],"sourceRoot":""}