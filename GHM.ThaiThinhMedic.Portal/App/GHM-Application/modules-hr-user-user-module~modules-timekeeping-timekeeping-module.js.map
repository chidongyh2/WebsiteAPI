{"version":3,"sources":["webpack:///./src/app/base.component.ts","webpack:///./src/app/modules/hr/organization/office/services/office.service.ts","webpack:///./src/app/modules/hr/user/services/user.service.ts","webpack:///./src/app/shareds/components/nh-image/nh-image.component.ts","webpack:///./src/app/shareds/components/nh-image/nh-image.module.ts","webpack:///./src/app/shareds/services/helper.service.ts","webpack:///./src/app/validators/number.validator.ts"],"names":[],"mappings":"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","file":"modules-hr-user-user-module~modules-timekeeping-timekeeping-module.js","sourcesContent":["﻿﻿import { IMessage } from './interfaces/imessage';\r\nimport { BriefUser } from './view-model/brief-user';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport module String {\r\n    export let format: any;\r\n}\r\n\r\nexport class BaseComponent {\r\n    isSaving = false;\r\n    isUpdate = false;\r\n    isShowForm = false;\r\n    isLoading = false;\r\n    isSearching = false;\r\n    message: IMessage;\r\n    totalRows = 0;\r\n    currentPage = 1;\r\n    pageSize = 20;\r\n    isSubmitted = false;\r\n    keyword = '';\r\n    isActiveSearch = null;\r\n    pageTitle = '';\r\n    errorMessage: string;\r\n    formErrors: any = {};\r\n    validationMessages: any = {};\r\n    isHasInsertPermission = false;\r\n    isHasUpdatePermission = false;\r\n    isHasDeletePermission = false;\r\n    isHasPrintPermission = false;\r\n    isHasApprovePermission = false;\r\n    isHasExportPermission = false;\r\n    isHasViewPermission = false;\r\n    isHasReportPermission = false;\r\n    currentUser: BriefUser;\r\n    subscribers: any = {};\r\n    downloading = false;\r\n    totalRows$: Observable<number>;\r\n    dateTimeValidFormat = [\r\n        'DD/MM/YYYY',\r\n        'DD/MM/YYYY HH:mm',\r\n        'DD/MM/YYYY HH:mm:ss',\r\n        'DD/MM/YYYY HH:mm Z',\r\n        'DD-MM-YYYY',\r\n        'DD-MM-YYYY HH:mm',\r\n        'DD-MM-YYYY HH:mm:ss',\r\n        'DD-MM-YYYY HH:mm Z',\r\n        // --------------------\r\n        'MM/DD/YYYY',\r\n        'MM/DD/YYYY HH:mm',\r\n        'MM/DD/YYYY HH:mm:ss',\r\n        'MM/DD/YYYY HH:mm Z',\r\n        'MM-DD-YYYY',\r\n        'MM-DD-YYYY HH:mm',\r\n        'MM-DD-YYYY HH:mm:ss',\r\n        'MM-DD-YYYY HH:mm Z',\r\n        // --------------------\r\n        'YYYY/MM/DD',\r\n        'YYYY/MM/DD HH:mm',\r\n        'YYYY/MM/DD HH:mm:ss',\r\n        'YYYY/MM/DD HH:mm Z',\r\n        'YYYY-MM-DD',\r\n        'YYYY-MM-DD HH:mm',\r\n        'YYYY-MM-DD HH:mm:ss',\r\n        'YYYY-MM-DD HH:mm Z',\r\n        // --------------------\r\n        'YYYY/DD/MM',\r\n        'YYYY/DD/MM HH:mm',\r\n        'YYYY/DD/MM HH:mm:ss',\r\n        'YYYY/DD/MM HH:mm Z',\r\n        'YYYY-DD-MM',\r\n        'YYYY-DD-MM HH:mm',\r\n        'YYYY-DD-MM HH:mm:ss',\r\n        'YYYY-DD-MM HH:mm Z',\r\n    ];\r\n\r\n    constructor() {\r\n    }\r\n\r\n    resetAfterSave() {\r\n        this.isSaving = false;\r\n        this.isSubmitted = false;\r\n    }\r\n\r\n    formatString(message: string, ...args: string[]) {\r\n        args.forEach((value, index) => {\r\n            const pattern = new RegExp(`\\\\{${index}\\\\}`, 'g');\r\n            message = message.replace(pattern, value);\r\n        });\r\n        return message;\r\n    }\r\n\r\n    // showWarningBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'warning');\r\n    // }\r\n    //\r\n    // showSuccessBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'success');\r\n    // }\r\n    //\r\n    // showDangerBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'error');\r\n    // }\r\n    //\r\n    // showInfoBox(title: string, message: string) {\r\n    //     this.showAlertBox(title, message, 'info');\r\n    // }\r\n\r\n    // showAlertBox(title: string, message: string, type: any = 'success') {\r\n    //     setTimeout(() => {\r\n    //         swal({\r\n    //             title: title,\r\n    //             text: message,\r\n    //             type: type,\r\n    //             timer: 1500,\r\n    //             showConfirmButton: false\r\n    //         }).then(() => {\r\n    //         }, () => {\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    getListOrderNumber(currentPage, pageSize, index): number {\r\n        return (currentPage - 1) * pageSize + index + 1;\r\n    }\r\n\r\n    // getPermission(appService: AppService) {\r\n    //     // setTimeout(() => {\r\n    //     //     this.isHasViewPermission = appService.checkPermission(PERMISSION_VALUE_DI.view);\r\n    //     //     this.isHasInsertPermission = appService.checkPermission(PERMISSION_VALUE_DI.insert);\r\n    //     //     this.isHasUpdatePermission = appService.checkPermission(PERMISSION_VALUE_DI.update);\r\n    //     //     this.isHasDeletePermission = appService.checkPermission(PERMISSION_VALUE_DI.delete);\r\n    //     //     this.isHasExportPermission = appService.checkPermission(PERMISSION_VALUE_DI.export);\r\n    //     //     this.isHasPrintPermission = appService.checkPermission(PERMISSION_VALUE_DI.print);\r\n    //     //     this.isHasApprovePermission = appService.checkPermission(PERMISSION_VALUE_DI.approve);\r\n    //     //     this.isHasReportPermission = appService.checkPermission(PERMISSION_VALUE_DI.report);\r\n    //     // });\r\n    // }\r\n\r\n    // renderFormError(args: string[]) {\r\n    //     let object = {};\r\n    //     args.forEach((item) => {\r\n    //         object[item] = \"\";\r\n    //     });\r\n    //     return object;\r\n    // }\r\n    // private getFormErrors(form: FormGroup, formErrors: any, validationMessages: any): boolean {\r\n    //     let isValid = true;\r\n    //     debugger;\r\n    //     for (const field in formErrors) {\r\n    //         if (typeof(formErrors[field]) === \"object\" && field != null && form != null) {\r\n    //             let newFormGroup = <any>form.get(field) as FormGroup;\r\n    //             isValid = this.getFormErrors(newFormGroup, formErrors[field], validationMessages[field]);\r\n    //         } else {\r\n    //             if (field != null && form != null) {\r\n    //                 formErrors[field] = \"\";\r\n    //                 const control = form.get(field);\r\n    //                 if (control && (control.dirty || (this.isSubmitted && control.pristine)) && !control.valid) {\r\n    //                     const messages = validationMessages[field];\r\n    //                     for (const key in control.errors) {\r\n    //                         formErrors[field] += messages[key] + \" \";\r\n    //                         isValid = false;\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //\r\n    //     return isValid;\r\n    // }\r\n}\r\n","﻿import { IActionResultResponse } from './../../../../../interfaces/iaction-result-response.result';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Office } from '../models/office.model';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport { ISearchResult } from '../../../../../interfaces/isearch.result';\r\nimport { OfficeSearchViewModel } from '../models/office-search.viewmodel';\r\nimport { OfficeDetailViewModel } from '../models/office-detail.viewmodel';\r\nimport { TreeData } from '../../../../../view-model/tree-data';\r\nimport { OfficeContact } from '../models/office-contact.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SpinnerService } from '../../../../../core/spinner/spinner.service';\r\nimport { OfficeSuggestionViewModel } from '../models/office-suggestion.viewmodel';\r\nimport { NhSuggestion } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { OfficeEditViewModel } from '../models/office-edit.viewmodel';\r\n\r\n@Injectable()\r\nexport class OfficeService implements Resolve<Office> {\r\n    url = 'offices/';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.HR_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.isActive,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string,\r\n           isActive?: boolean,\r\n           page: number = 1,\r\n           pageSize: number = 10): Observable<ISearchResult<OfficeSearchViewModel>> {\r\n        return this.http\r\n            .get(`${this.url}`, {\r\n                params: new HttpParams()\r\n                    .set('keyword', keyword ? keyword : '')\r\n                    .set(\r\n                        'isActive',\r\n                        isActive != null ? isActive.toString() : ''\r\n                    )\r\n                    .set('page', page ? page.toString() : '0')\r\n                    .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n            })\r\n            .pipe(\r\n                map((result: ISearchResult<OfficeSearchViewModel>) => {\r\n                    result.items.forEach((item: OfficeSearchViewModel) => {\r\n                        item.activeStatus = item.isActive\r\n                            ? 'active'\r\n                            : 'inActive';\r\n                        const level = item.idPath.split('.');\r\n                        item.nameLevel = '';\r\n                        for (let i = 1; i < level.length; i++) {\r\n                            item.nameLevel += '<i class=\"fa fa-long-arrow-right cm-mgr-5\"></i>';\r\n                        }\r\n                    });\r\n                    return result;\r\n                })\r\n            ) as Observable<ISearchResult<OfficeSearchViewModel>>;\r\n    }\r\n\r\n    searchName(keyword: string,\r\n               isActive?: boolean,\r\n               page: number = 1,\r\n               pageSize: number = 20): Observable<any> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '0')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '10')\r\n        });\r\n    }\r\n\r\n    getDetail(id: number): Observable<IActionResultResponse<OfficeDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}${id}`).pipe(\r\n            finalize(() => this.spinnerService.hide()),\r\n            map((result: IActionResultResponse<OfficeDetailViewModel>) => {\r\n                const data = result.data;\r\n                data.activeStatus = data.isActive ? 'active' : 'inActive';\r\n                return result;\r\n            })\r\n        ) as Observable<IActionResultResponse<OfficeDetailViewModel>>;\r\n    }\r\n\r\n    getEditDetail(id: number): Observable<IActionResultResponse<OfficeEditViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}edit/${id}`).pipe(\r\n            finalize(() => this.spinnerService.hide()),\r\n            map((result: IActionResultResponse<OfficeEditViewModel>) => {\r\n                const data = result.data;\r\n                data.activeStatus = data.isActive ? 'active' : 'inActive';\r\n                return result;\r\n            })\r\n        ) as Observable<IActionResultResponse<OfficeEditViewModel>>;\r\n    }\r\n\r\n    insert(office: Office): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}`, {\r\n            isActive: office.isActive,\r\n            code: office.code,\r\n            officeType: office.officeType,\r\n            parentId: office.parentId,\r\n            officeTranslations: office.modelTranslations,\r\n            officeContacts: office.officeContacts\r\n        })\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    update(id: string, office: Office): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}${id}`, {\r\n            isActive: office.isActive,\r\n            code: office.code,\r\n            officeType: office.officeType,\r\n            parentId: office.parentId,\r\n            officeTranslations: office.modelTranslations,\r\n            officeContacts: office.officeContacts\r\n        })\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    // updateIsActive(office: Office): Observable<IActionResultResponse> {\r\n    //     return this.http.post(`${this.url}update-active-status`, '', {\r\n    //         params: new HttpParams()\r\n    //             .set('id', office.id.toString())\r\n    //             .set('isActive', office.isActive.toString())\r\n    //     }) as Observable<IActionResultResponse>;\r\n    // }\r\n\r\n    delete(id: number): Observable<IActionResultResponse> {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}${id}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: IActionResultResponse) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                }))as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    getTree(): Observable<TreeData[]> {\r\n        return this.http.get(`${this.url}trees`) as Observable<TreeData[]>;\r\n    }\r\n\r\n    getOfficeUserTree() {\r\n        return this.http.get(`${this.url}`);\r\n    }\r\n\r\n    getOfficeUserTreeLazy(parentId: number) {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams().set(\r\n                'parentId',\r\n                parentId ? parentId.toString() : ''\r\n            )\r\n        });\r\n    }\r\n\r\n    searchForSuggestion(keyword: string): Observable<NhSuggestion[]> {\r\n        return this.http\r\n            .get(`${this.url}suggestions`, {\r\n                params: new HttpParams()\r\n                    .set('keyword', keyword ? keyword : '')\r\n            })\r\n            .pipe(map((result: ISearchResult<OfficeSuggestionViewModel>) => {\r\n                return result.items.map((item: OfficeSuggestionViewModel) => {\r\n                    return new NhSuggestion(item.id, item.name);\r\n                });\r\n            })) as Observable<NhSuggestion[]>;\r\n    }\r\n\r\n    // Contacts.\r\n    updateContact(officeId: number,\r\n                  id: string,\r\n                  contact: OfficeContact): Observable<IActionResultResponse> {\r\n        return this.http\r\n            .post(`${this.url}${officeId}/contacts/${id}`, {\r\n                userId: contact.userId,\r\n                email: contact.email,\r\n                phoneNumber: contact.phoneNumber,\r\n                fax: contact.fax\r\n            })\r\n            .pipe(\r\n                map((result: IActionResultResponse) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    addContact(officeId: number, contact: OfficeContact) {\r\n        return this.http\r\n            .post(`${this.url}${officeId}/contacts`, {\r\n                userId: contact.userId,\r\n                email: contact.email,\r\n                phoneNumber: contact.phoneNumber,\r\n                fax: contact.fax\r\n            })\r\n            .pipe(\r\n                map((result: IActionResultResponse) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    deleteContact(officeId: number, contactId: string): Observable<IActionResultResponse> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .delete(`${this.url}${officeId}/contacts/${contactId}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: IActionResultResponse) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            );\r\n    }\r\n\r\n    // searchPositions(officeId: number, keyword: string, page: number,\r\n    //                 pageSize: number): Observable<ISearchResult<OfficePositionSearchViewModel>> {\r\n    //     return this.http.get(`${this.url}${officeId}/positions`, {\r\n    //         params: new HttpParams()\r\n    //             .set('keyword', keyword ? keyword : '')\r\n    //             .set('page', page ? page.toString() : '1')\r\n    //             .set('pageSize', pageSize ? pageSize.toString() : '20')\r\n    //     }) as Observable<ISearchResult<OfficePositionSearchViewModel>>;\r\n    // }\r\n    //\r\n    // deletePosition(officeId: number, positionId: string): Observable<IActionResultResponse> {\r\n    //     return this.http.delete(`${this.url}${officeId}/positions/${positionId}`)\r\n    //         .pipe(\r\n    //             map((result: IActionResultResponse) => {\r\n    //                 this.toastr.success(result.message);\r\n    //                 return result;\r\n    //             })\r\n    //         )as Observable<IActionResultResponse>;\r\n    // }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from '../models/user.model';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../configs/app.config';\r\nimport { ISearchResult } from '../../../../interfaces/isearch.result';\r\nimport { UserSearchViewModel } from '../models/user-search.viewmodel';\r\nimport { UserDetailViewModel } from '../models/user-detail.viewmodel';\r\nimport { IActionResultResponse } from '../../../../interfaces/iaction-result-response.result';\r\nimport { UserContact } from '../models/user-contact.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ShortUserInfoViewModel } from '../models/short-user-info.viewmodel';\r\n\r\n@Injectable()\r\nexport class UserService implements Resolve<any> {\r\n    url = 'api/v1/core/users';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.queryParams;\r\n        const keyword = queryParams.keyword;\r\n        const status = queryParams.status;\r\n        const officeIdPath = queryParams.officeIdPath;\r\n        const positionId = queryParams.position;\r\n        const gender = queryParams.gender;\r\n        const monthBirthDay = queryParams.month;\r\n        const yearBirthday = queryParams.year;\r\n        const academicRank = queryParams.academicRank;\r\n        const page = queryParams.page;\r\n        const pageSize = queryParams.pageSize;\r\n        return this.search(keyword, positionId, status, officeIdPath, gender, monthBirthDay, yearBirthday, academicRank, page, pageSize);\r\n    }\r\n\r\n    search(keyword: string, positionId?: string, status?: string, officeIdPath?: string, gender?: number,\r\n           monthBirthDay?: number, yearBirthday?: number, academicRank ?: number, page: number = 1,\r\n           pageSize: number = this.appConfig.PAGE_SIZE): Observable<ISearchResult<UserSearchViewModel>> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword ? keyword : '')\r\n            .set('status', status ? status : '')\r\n            .set('officeIdPath', officeIdPath ? officeIdPath : '')\r\n            .set('positionId', positionId ? positionId : '')\r\n            .set('gender', gender != null && gender !== undefined ? gender.toString() : '')\r\n            .set('monthBirthDay', monthBirthDay ? monthBirthDay.toString() : '')\r\n            .set('yearBirthday', yearBirthday ? yearBirthday.toString() : '')\r\n            .set('academicRank', academicRank ? academicRank.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString());\r\n\r\n        return this.http.get(`${this.url}`, {\r\n            params: params\r\n        }) as Observable<ISearchResult<UserSearchViewModel>>;\r\n    }\r\n\r\n    searchForSelect(keyword: string, page: number = 1, pageSize: number = 20): Observable<any> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword)\r\n            .set('page', page.toString())\r\n            .set('pageSize', pageSize.toString());\r\n\r\n        return this.http.get(`${this.url}/search-for-select`, {\r\n            params: params\r\n        });\r\n    }\r\n\r\n    getDetail(id: string): Observable<ISearchResult<UserDetailViewModel>> {\r\n        return this.http.get(`${this.url}/${id}`, {}) as Observable<ISearchResult<UserDetailViewModel>>;\r\n    }\r\n\r\n    insert(user: User): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}`, {\r\n            fullName: user.fullName,\r\n            userName: user.userName,\r\n            avatar: user.avatar,\r\n            birthday: user.birthday,\r\n            idCardNumber: user.idCardNumber,\r\n            idCardDateOfIssue: user.idCardDateOfIssue,\r\n            gender: user.gender,\r\n            ethnic: user.ethnic,\r\n            denomination: user.denomination,\r\n            tin: user.tin,\r\n            joinedDate: user.joinedDate,\r\n            bankingNumber: user.bankingNumber,\r\n            provinceId: user.provinceId,\r\n            districtId: user.districtId,\r\n            marriedStatus: user.marriedStatus,\r\n            officeId: user.officeId,\r\n            titleId: user.titleId,\r\n            positionId: user.positionId,\r\n            userType: user.userType,\r\n            passportId: user.passportId,\r\n            passportDateOfIssue: user.passportDateOfIssue,\r\n            enrollNumber: user.enrollNumber,\r\n            cardNumber: user.cardNumber,\r\n            ext: user.ext,\r\n            academicRank: user.academicRank,\r\n            userTranslations: user.modelTranslations,\r\n            userContacts: user.userContacts,\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    update(id: string, user: User): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}/${id}`, {\r\n            fullName: user.fullName,\r\n            userName: user.userName,\r\n            avatar: user.avatar,\r\n            birthday: user.birthday,\r\n            idCardNumber: user.idCardNumber,\r\n            idCardDateOfIssue: user.idCardDateOfIssue,\r\n            gender: user.gender,\r\n            ethnic: user.ethnic,\r\n            denomination: user.denomination,\r\n            tin: user.tin,\r\n            joinedDate: user.joinedDate,\r\n            bankingNumber: user.bankingNumber,\r\n            provinceId: user.provinceId,\r\n            districtId: user.districtId,\r\n            marriedStatus: user.marriedStatus,\r\n            officeId: user.officeId,\r\n            titleId: user.titleId,\r\n            positionId: user.positionId,\r\n            userType: user.userType,\r\n            passportId: user.passportId,\r\n            passportDateOfIssue: user.passportDateOfIssue,\r\n            enrollNumber: user.enrollNumber,\r\n            cardNumber: user.cardNumber,\r\n            ext: user.ext,\r\n            academicRank: user.academicRank,\r\n            concurrencyStamp: user.concurrencyStamp,\r\n            userTranslations: user.modelTranslations,\r\n            userContacts: user.userContacts,\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    updateAvatar(userId: string, avatar: string): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}/update-avatar`, '', {\r\n            params: new HttpParams()\r\n                .set('userId', userId)\r\n                .set('avatar', avatar)\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    delete(id: string): Observable<IActionResultResponse> {\r\n        return this.http.delete(`${this.url}/${id}`, {\r\n            params: new HttpParams()\r\n                .set('id', id)\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    export(officeIdPath?: number) {\r\n        const url = `${this.url}/export-user?officeIdPath=${officeIdPath == null ? '' : officeIdPath}`;\r\n        return this.http.get(url, {responseType: 'blob'})\r\n            .pipe(map(response => {\r\n                return new Blob([response,\r\n                    {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel'}]);\r\n            }));\r\n    }\r\n\r\n    exportLabor(officeIdPath?: number, fileName?: string) {\r\n        const url = `${this.url}/export-labor-contract?officeIdPath=${officeIdPath == null ? '' : officeIdPath}`;\r\n        return this.http.get(url, {responseType: 'blob'})\r\n            .pipe(map(response => {\r\n                return new Blob([response,\r\n                    {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel'}]);\r\n            }));\r\n    }\r\n\r\n    exportRecord(officeIdPath?: number, fileName?: string) {\r\n        const url = `${this.url}/export-user-record?officeIdPath=${officeIdPath == null ? '' : officeIdPath}`;\r\n        return this.http.get(url, {responseType: 'blob'})\r\n            .pipe(map(response => {\r\n                return new Blob([response,\r\n                    {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel'}]);\r\n            }));\r\n    }\r\n\r\n    changePassword(oldPassword: string, newPassword: string): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}/change-password`, '', {\r\n            params: new HttpParams()\r\n                .set('oldPassword', oldPassword)\r\n                .set('newPassword', newPassword)\r\n        }) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    getUserId(): Observable<{ id: string, enrollNumber: number }> {\r\n        return this.http.get(`${this.url}/generate-user-id`) as Observable<{ id: string, enrollNumber: number }>;\r\n    }\r\n\r\n    getUserByOfficeIdAndChild(officeId: number, isChild: boolean): Observable<any> {\r\n        return this.http.get(`${this.url}/search-user-by-officeId-and-isChild`, {\r\n            params: new HttpParams()\r\n                .set('officeId', officeId.toString())\r\n                .set('isChild', isChild.toString())\r\n        }) as Observable<any>;\r\n    }\r\n\r\n    getUserByUserId(userId: string): Observable<any> {\r\n        return this.http.get(`${this.url}/search-user-by-userId`, {\r\n            params: new HttpParams().set('userId', userId)\r\n        }) as Observable<any>;\r\n    }\r\n\r\n    searchForSuggestion(keyword: string, officeIdPath?: string, page: number = 1, pageSize: number = 20): any {\r\n        return this.http.get(`${this.url}/search-for-suggestion`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '20')\r\n        });\r\n    }\r\n\r\n    insertUserContact(userContact: UserContact): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}/insert-user-contact`, userContact).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    updateUserContact(id: string, userContact: UserContact): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}/update-user-contact`, userContact, {\r\n            params: new HttpParams()\r\n                .set('id', id ? id : '')\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    deleteUserContact(id: string): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}/delete-user-contact`, '', {\r\n            params: new HttpParams()\r\n                .set('id', id)\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    getUserInfo(id: string): Observable<ShortUserInfoViewModel> {\r\n        return this.http.get(`${this.url}/short-user-info/${id}`, {}) as Observable<ShortUserInfoViewModel>;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, forwardRef, Inject } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'nh-image',\r\n    template: `\r\n        <img alt=\"\" [class]=\"cssClass\"\r\n             src=\"{{ value }}\"\r\n             alt=\"{{ alt }}\"\r\n             (error)=\"onImageError()\"/>\r\n    `,\r\n    providers: [\r\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NhImageComponent), multi: true}\r\n    ],\r\n})\r\n\r\nexport class NhImageComponent implements OnInit, ControlValueAccessor {\r\n    @Input() alt;\r\n    @Input() cssClass = 'img-circle';\r\n    @Input() mode = 'crop';\r\n    @Input() width = 40;\r\n    @Input() height = 40;\r\n    @Input() errorImageUrl = '/assets/images/noavatar.png';\r\n    @Input() baseUrl = '';\r\n\r\n    @Input()\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n\r\n    private _value: string;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onImageError() {\r\n        this.value = this.errorImageUrl;\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    writeValue(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n\r\n    propagateChange: any = () => {\r\n    }\r\n}\r\n","/**\r\n * Created by HoangNH on 3/2/2017.\r\n */\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { NhImageComponent } from \"./nh-image.component\";\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [NhImageComponent],\r\n    exports: [NhImageComponent]\r\n})\r\n\r\nexport class NhImageModule { }\r\n","/**\r\n * Created by HoangNH on 3/22/2017.\r\n */\r\nimport { Injectable, ViewContainerRef, Type, ComponentFactoryResolver } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HelperService {\r\n\r\n    constructor(private _componentFactoryResolver: ComponentFactoryResolver) {\r\n    }\r\n\r\n    createComponent(viewContainerRef: ViewContainerRef, component: Type<any>) {\r\n        const componentFactory = this._componentFactoryResolver.resolveComponentFactory(component);\r\n        const componentRef = viewContainerRef.createComponent(componentFactory);\r\n        return componentRef.instance;\r\n    }\r\n\r\n    openPrintWindow(title: string, content: string, style?: string) {\r\n        const htmlContent = ` <!DOCTYPE html>\r\n                    <html>\r\n                    <head>\r\n                        <title>${title}</title>\r\n                        <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\"\r\n                            crossorigin=\"anonymous\">\r\n                        <style>\r\n                            @page {\r\n                                size: auto;\r\n                                margin: 0mm;\r\n                            }\r\n\r\n                            @media print {\r\n                                * {\r\n                                    margin: 0;\r\n                                    padding: 0;\r\n                                    font-size: 12px;\r\n                                    box-sizing: border-box;\r\n                                }\r\n                                html,\r\n                                body {\r\n                                    width: 100%;\r\n                                    height: 100%;\r\n                                    margin: 0;\r\n                                    padding: 0;\r\n                                }\r\n                                header{\r\n                                    padding-top: 10px;\r\n                                }\r\n                                header, footer {\r\n                                    text-align: center;\r\n                                }\r\n                                header img {\r\n                                    width: 70%;\r\n                                }\r\n                                footer img{\r\n                                    width: 100%;\r\n                                }\r\n                                .print-page {\r\n                                    width: 100%;\r\n                                    height: 100%;\r\n                                    position: relative;\r\n                                }\r\n                                .print-page footer {\r\n                                    position: absolute;\r\n                                    bottom: 0;\r\n                                    left: 0;\r\n                                    right: 0;\r\n                                }\r\n                                div.wrapper-table {\r\n                                    padding: 0 30px;\r\n                                    text-align: center;\r\n                                }\r\n                                table.bordered {\r\n                                    border: 1px solid #999;\r\n                                    width: 100%;\r\n                                    max-width: 100%;\r\n                                    margin-bottom: 1rem;\r\n                                    border-collapse: collapse;\r\n                                    background-color: transparent;\r\n                                    margin-top: 20px;\r\n                                }\r\n                                table.bordered thead tr th,\r\n                                table.bordered tbody tr td {\r\n                                    border: 1px solid #999;\r\n                                    font-size:  12px !important;\r\n                                    text-align: center;\r\n                                    padding: 3px;\r\n                                }\r\n                                table.bordered tbody tr td a{\r\n                                    text-decoration: none;\r\n                                    text-align: left;\r\n                                    font-size: 14px;\r\n                                }\r\n                                .middle {\r\n                                    vertical-align: middle;\r\n                                }\r\n                                .pr-w-30 {\r\n                                    width: 30px !important;\r\n                                }\r\n                                .pr-w-27 {\r\n                                    width: 27px !important;\r\n                                }\r\n                                .pr-w-70 {\r\n                                    width: 70px !important;\r\n                                    min-width: 70px !important;\r\n                                    max-width: 70px !important;\r\n                                }\r\n                                .pr-w-100 {\r\n                                    width: 100px !important;\r\n                                }\r\n                                .pr-w-55 {\r\n                                    width: 55px !important;\r\n                                    min-width: 55px !important;\r\n                                    max-width: 55px !important;\r\n                                }\r\n                                .center {\r\n                                    text-align: center;\r\n                                }\r\n                                .pr-va-top{\r\n                                    vertical-align: top !important;\r\n                                }\r\n                                .page-break {\r\n                                    page-break-after: always;\r\n                                }\r\n                                .visible-print{\r\n                                    display: block;\r\n                                }\r\n                                .hidden-print{\r\n                                    display: none;\r\n                                }\r\n                                .text-left{\r\n                                    text-align: left !important;\r\n                                }\r\n                                .text-right{\r\n                                    text-align: right !important;\r\n                                }\r\n                                .w100pc{\r\n                                    width: 100%;\r\n                                }\r\n                                .uppercase{\r\n                                    text-transform: uppercase;\r\n                                }\r\n                                ${style}\r\n                            }\r\n                        </style>\r\n                     </head>\r\n                     <body onload=\"window.print();window.close()\">\r\n                     ${content}\r\n                     </body>\r\n                     </html>\r\n        `;\r\n        let popupWin;\r\n        const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : 0;\r\n        const dualScreenTop = window.screenTop !== undefined ? window.screenTop : 0;\r\n        const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\r\n        const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\r\n        const w = window.outerWidth;\r\n        const h = window.outerHeight;\r\n        const left = ((width / 2) - (w / 2)) + dualScreenLeft;\r\n        const top = ((height / 2) - (h / 2)) + dualScreenTop;\r\n        popupWin = window.open('', '_blank', 'width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\r\n        popupWin.document.open();\r\n        popupWin.document.write(htmlContent);\r\n        popupWin.document.close();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, Validators, ValidatorFn } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class NumberValidator implements Validators {\r\n    constructor() {\r\n    }\r\n\r\n    isValid(c: FormControl) {\r\n        if (c && c.value && c.value != null) {\r\n            if (isNaN(parseFloat(c.value)) || !isFinite(c.value)) {\r\n                return { isValid: false };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    greaterThan(value: number): ValidatorFn {\r\n        return (c: FormControl) => {\r\n            if (value !== undefined && c.value) {\r\n                if (c.value <= value) {\r\n                    return { greaterThan: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n\r\n    lessThan(value: number) {\r\n        return (c: FormControl) => {\r\n            if (value && c.value) {\r\n                if (c.value >= value) {\r\n                    return { lessThan: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n\r\n    range(value: { fromValue: number, toValue: number }): ValidatorFn {\r\n        return (c: FormControl) => {\r\n            if (value && c.value) {\r\n                if (c.value < value.fromValue || c.value > value.toValue) {\r\n                    return { invalidRange: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}