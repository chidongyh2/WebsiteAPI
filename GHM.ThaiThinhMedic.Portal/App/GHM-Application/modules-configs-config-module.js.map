{"version":3,"sources":["webpack:///./src/app/base-form.component.ts","webpack:///./src/app/base-list.component.ts","webpack:///./src/app/modules/configs/client/client-form.component.html","webpack:///./src/app/modules/configs/client/client-form.component.ts","webpack:///./src/app/modules/configs/client/client.component.html","webpack:///./src/app/modules/configs/client/client.component.ts","webpack:///./src/app/modules/configs/client/client.model.ts","webpack:///./src/app/modules/configs/client/client.service.ts","webpack:///./src/app/modules/configs/config-routing.module.ts","webpack:///./src/app/modules/configs/config.component.html","webpack:///./src/app/modules/configs/config.component.ts","webpack:///./src/app/modules/configs/config.module.ts","webpack:///./src/app/modules/configs/language/language.component.html","webpack:///./src/app/modules/configs/language/language.component.ts","webpack:///./src/app/modules/configs/page/models/page-translation.model.ts","webpack:///./src/app/modules/configs/page/models/page.model.ts","webpack:///./src/app/modules/configs/page/page-form.component.html","webpack:///./src/app/modules/configs/page/page-form.component.ts","webpack:///./src/app/modules/configs/page/page.component.html","webpack:///./src/app/modules/configs/page/page.component.ts","webpack:///./src/app/modules/configs/role/models/role.model.ts","webpack:///./src/app/modules/configs/role/role-detail/role-detail.component.html","webpack:///./src/app/modules/configs/role/role-detail/role-detail.component.ts","webpack:///./src/app/modules/configs/role/role-form/role-form.component.html","webpack:///./src/app/modules/configs/role/role-form/role-form.component.ts","webpack:///./src/app/modules/configs/role/role.component.html","webpack:///./src/app/modules/configs/role/role.component.ts","webpack:///./src/app/modules/configs/role/role.service.ts","webpack:///./src/app/modules/configs/tenant/tenant-form.component.html","webpack:///./src/app/modules/configs/tenant/tenant-form.component.ts","webpack:///./src/app/modules/configs/tenant/tenant.component.html","webpack:///./src/app/modules/configs/tenant/tenant.component.ts","webpack:///./src/app/modules/configs/tenant/tenant.model.ts","webpack:///./src/app/modules/configs/tenant/tenant.service.ts","webpack:///./src/app/modules/configs/user-setting/user-setting.component.html","webpack:///./src/app/modules/configs/user-setting/user-setting.component.ts","webpack:///./src/app/shareds/components/ghm-select-picker/ghm-select-picker.component.html","webpack:///./src/app/shareds/components/ghm-select-picker/ghm-select-picker.component.scss","webpack:///./src/app/shareds/components/ghm-select-picker/ghm-select-picker.component.ts","webpack:///./src/app/shareds/components/ghm-select-picker/ghm-select-picker.module.ts","webpack:///./src/app/shareds/components/ghm-select-picker/ghm-select-picker.service.ts","webpack:///./src/app/shareds/components/nh-image/nh-image.component.ts","webpack:///./src/app/shareds/components/nh-image/nh-image.module.ts","webpack:///./src/app/shareds/components/nh-tree/nh-dropdown-tree.component.html","webpack:///./src/app/shareds/components/nh-tree/nh-dropdown-tree.component.ts","webpack:///./src/app/shareds/components/nh-tree/nh-tree.component.html","webpack:///./src/app/shareds/components/nh-tree/nh-tree.component.ts","webpack:///./src/app/shareds/components/nh-tree/nh-tree.module.ts","webpack:///./src/app/shareds/components/nh-tree/nh-tree.scss","webpack:///./src/app/shareds/decorator/check-permission.decorator.ts","webpack:///./src/app/shareds/models/filter-link.model.ts","webpack:///./src/app/shareds/services/language.service.ts"],"names":[],"mappings":"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","file":"modules-configs-config-module.js","sourcesContent":["import { FormArray, FormGroup } from '@angular/forms';\r\nimport { EventEmitter, Output } from '@angular/core';\r\nimport { LanguageViewModel, LanguageSearchViewModel } from './shareds/models/language.viewmodel';\r\nimport { Observable } from 'rxjs';\r\nimport { AppService } from './shareds/services/app.service';\r\nimport { PageTranslation } from './modules/configs/page/models/page-translation.model';\r\n\r\nexport class BaseFormComponent {\r\n    @Output() saveSuccessful = new EventEmitter();\r\n    private _message: { type: string, content: string } = {\r\n        type: '',\r\n        content: ''\r\n    };\r\n    id: any;\r\n    model: FormGroup;\r\n    modelTranslationArray: FormArray;\r\n    isSubmitted = false;\r\n    isSaving = false;\r\n    isUpdate = false;\r\n    currentLanguage: string;\r\n    formErrors: any = {};\r\n    validationMessages: any = {};\r\n    translationFormErrors = {};\r\n    translationValidationMessage = [];\r\n    subscribers: any = {};\r\n    isModified = false;\r\n    isCreateAnother = false;\r\n    languages: LanguageViewModel[] = [];\r\n    languages$: Observable<LanguageSearchViewModel[]>;\r\n\r\n    // Permission.\r\n    permission = {\r\n        view: false,\r\n        insert: false,\r\n        update: false,\r\n        delete: false,\r\n        export: false,\r\n        print: false,\r\n        approve: false,\r\n        report: false\r\n    };\r\n\r\n    constructor() {\r\n    }\r\n\r\n    get message() {\r\n        return this._message;\r\n    }\r\n\r\n    get modelTranslations(): FormArray {\r\n        return this.model.get('modelTranslations') as FormArray;\r\n    }\r\n\r\n    setMessage(type: string, content: string) {\r\n        this._message.type = type;\r\n        this._message.content = content;\r\n    }\r\n\r\n    resetMessage() {\r\n        this._message.type = '';\r\n        this._message.content = '';\r\n    }\r\n\r\n    renderLanguageData(appService: AppService) {\r\n        this.languages = appService.languages.map((language: LanguageSearchViewModel) => {\r\n            if (language.isDefault) {\r\n                this.currentLanguage = language.languageId;\r\n            }\r\n            return {id: language.languageId, name: language.name, isSelected: language.isDefault};\r\n        });\r\n    }\r\n\r\n    renderTranslationFormArray(buildFormFunction: Function) {\r\n        this.modelTranslationArray = this.model.get('modelTranslations') as FormArray;\r\n        this.languages.forEach((language: LanguageViewModel) => {\r\n            const formGroup = buildFormFunction(language.id);\r\n            this.modelTranslationArray.push(formGroup);\r\n        });\r\n    }\r\n\r\n    renderFormError(args: (string | Object)[]): any {\r\n        const object = {};\r\n        args.forEach((item: string | Object) => {\r\n            if (item instanceof Object) {\r\n                object[Object.keys(item)[0]] = this.renderFormError(\r\n                    Object.values(item)[0]\r\n                );\r\n            } else {\r\n                object[item as string] = '';\r\n            }\r\n        });\r\n        return object;\r\n    }\r\n\r\n    renderFormErrorMessage(args: (string | Object)[]): any {\r\n        const object = {};\r\n        args.forEach((item: string | Object) => {\r\n            if (item instanceof Object) {\r\n                object[Object.keys(item)[0]] = this.renderFormErrorMessage(\r\n                    Object.values(item)[0]\r\n                );\r\n            } else {\r\n                object[item as string] = item;\r\n            }\r\n        });\r\n        return object;\r\n    }\r\n\r\n    validateModel<T>(isSubmit: boolean = true) {\r\n        return this.validateFormGroup(this.model, this.formErrors, this.validationMessages, isSubmit);\r\n    }\r\n\r\n    validateTranslationModel(isSubmit: boolean = true) {\r\n        return this.modelTranslations.controls.map((translationModel: FormGroup) => {\r\n            const languageId = translationModel.value.languageId;\r\n            const isValid = this.validateFormGroup(translationModel, this.translationFormErrors[languageId],\r\n                this.translationValidationMessage[languageId], isSubmit);\r\n            return {\r\n                languageId: languageId,\r\n                isValid: isValid,\r\n            };\r\n        });\r\n    }\r\n\r\n    validateFormGroup<T>(formGroup: T, formErrors: any, validationMessages: any, isSubmit?: boolean,\r\n                         elements?: any, data?: any): boolean {\r\n        if (!formGroup) {\r\n            return;\r\n        }\r\n        const form = <any>formGroup as FormGroup;\r\n        return this.checkFormValid(form, formErrors, validationMessages, isSubmit);\r\n    }\r\n\r\n    checkLanguageValid() {\r\n        const languageValidCheck = this.validateTranslationModel();\r\n        const languageValid = languageValidCheck.map((languageCheck: any) => {\r\n            if (!languageCheck.isValid) {\r\n                this.currentLanguage = languageCheck.languageId;\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        });\r\n        return !(languageValid.indexOf(false) > -1);\r\n    }\r\n\r\n    private checkFormValid(form: FormGroup, formErrors: any, validationMessages: any, isSubmit?: boolean): boolean {\r\n        let inValidCount = 0;\r\n        let isValid = true;\r\n        for (const field in formErrors) {\r\n            if (typeof (formErrors[field]) === 'object' && field != null && form != null) {\r\n                const newFormGroup = <any>form.get(field) as FormGroup;\r\n                if (newFormGroup instanceof FormArray) {\r\n                    newFormGroup.controls.forEach((control: FormGroup, index: number) => {\r\n                        isValid = this.checkFormValid(control, formErrors[field], validationMessages[field], isSubmit);\r\n                    });\r\n                } else {\r\n                    isValid = this.checkFormValid(newFormGroup, formErrors[field], validationMessages[field], isSubmit);\r\n                }\r\n            } else {\r\n                if (field != null && form != null) {\r\n                    formErrors[field] = '';\r\n                    const control = form.get(field);\r\n                    if (control && isSubmit) {\r\n                        control.markAsDirty();\r\n                    }\r\n                    if (control && control.dirty && !control.valid) {\r\n                        const messages = validationMessages[field];\r\n                        for (const key in control.errors) {\r\n                            if (control.errors.hasOwnProperty(key)) {\r\n                                formErrors[field] += messages[key];\r\n                                inValidCount++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return inValidCount === 0 && isValid;\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\nexport class BaseListComponent<TEntity> {\r\n    keyword: string;\r\n    currentPage = 1;\r\n    pageSize = 20;\r\n    totalRows = 0;\r\n    totalRows$: Observable<number>;\r\n    isSearching = false;\r\n    listItems: TEntity[] = [];\r\n    listItems$: Observable<TEntity[]>;\r\n    subscribers: any = {};\r\n    // Permission.\r\n    permission = {\r\n        view: false,\r\n        add: false,\r\n        edit: false,\r\n        delete: false,\r\n        export: false,\r\n        print: false,\r\n        approve: false,\r\n        report: false\r\n    };\r\n\r\n    // getPermission(appService: AppService, pageId: number) {\r\n    //     this.permission.view = appService.checkPermission(pageId, Permission.view);\r\n    //     this.permission.add = appService.checkPermission(pageId, Permission.insert);\r\n    //     this.permission.edit = appService.checkPermission(pageId, Permission.update);\r\n    //     this.permission.delete = appService.checkPermission(pageId, Permission.delete);\r\n    //     this.permission.export = appService.checkPermission(pageId, Permission.export);\r\n    //     this.permission.print = appService.checkPermission(pageId, Permission.print);\r\n    //     this.permission.approve = appService.checkPermission(pageId, Permission.approve);\r\n    //     this.permission.report = appService.checkPermission(pageId, Permission.report);\r\n    // }\r\n}\r\n","module.exports = \"<form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n    <div class=\\\"m-portlet\\\">\\r\\n        <div class=\\\"m-portlet__head\\\">\\r\\n            <div class=\\\"m-portlet__head-caption\\\">\\r\\n                <div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"m-portlet__head-icon m--hide\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"flaticon-computer\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                    <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                        {{isUpdate ? \\\"Cập nhật thông tin Client\\\" : \\\"Thêm mới Client\\\"}}\\r\\n                    </h3>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"m-portlet__body\\\">\\r\\n            <pre>{{model.value|json}}</pre>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Client ID\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <div type=\\\"text\\\" value=\\\"\\\"\\r\\n                                 class=\\\"form-control disabled\\\"\\r\\n                                 placeholder=\\\"Nhập mã trang\\\">\\r\\n                                {{model.value.clientId}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div><!-- END: clientId -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Client Name\\\" class=\\\"col-3 col-form-label\\\" [required]=\\\"true\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter client name\\\"\\r\\n                                   formControlName=\\\"clientName\\\">\\r\\n                        </div>\\r\\n                    </div><!-- END: clientName -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Refresh token usage\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <nh-select\\r\\n                                title=\\\"-- Select refresh token usage --\\\"\\r\\n                                [data]=\\\"[{id: 0, name: 'Reuse'}, {id: 1, name: 'One time only'}]\\\"\\r\\n                                formControlName=\\\"refreshTokenUsage\\\"\\r\\n                            ></nh-select>\\r\\n                        </div>\\r\\n                    </div><!-- END: Refresh token usage -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Refresh Token Expiration\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <nh-select\\r\\n                                title=\\\"-- Select refresh token expiration --\\\"\\r\\n                                [data]=\\\"[{id: 0, name: 'Sliding'}, {id: 1, name: 'Absolute'}]\\\"\\r\\n                                formControlName=\\\"refreshTokenExpiration\\\"\\r\\n                            ></nh-select>\\r\\n                        </div>\\r\\n                    </div><!-- END: Refresh Token Expiration -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Allowed Grant Types\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <nh-select\\r\\n                                title=\\\"-- Select grant types --\\\"\\r\\n                                [data]=\\\"listGrantTypes\\\"\\r\\n                                formControlName=\\\"clientAllowedGrantTypes\\\"\\r\\n                            ></nh-select>\\r\\n                        </div>\\r\\n                    </div><!-- END: Allowed Grant Types -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Allowed Scopes\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <textarea type=\\\"text\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                      placeholder=\\\"Please enter allowed scope separate by comma.\\\"\\r\\n                                      formControlName=\\\"clientAllowedScopes\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div><!-- END: Allowed Scopes -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Allowed Cors Origins\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <textarea class=\\\"form-control\\\"\\r\\n                                      rows=\\\"3\\\"\\r\\n                                      placeholder=\\\"Please enter allowed cors origin separate by comma.\\\"\\r\\n                                      formControlName=\\\"clientAllowedCorsOrigins\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div><!-- END: Refresh Token Expiration -->\\r\\n                </div><!-- END: first-col -->\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <mat-slide-toggle formControlName=\\\"enabled\\\"> Enabled</mat-slide-toggle>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <mat-slide-toggle formControlName=\\\"allowOfflineAccess\\\"> Allowed Offline Access\\r\\n                            </mat-slide-toggle>\\r\\n                        </div>\\r\\n                    </div><!-- END: Allowed Offline Access -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <mat-slide-toggle formControlName=\\\"requireClientSecret\\\"> Require Client Secret\\r\\n                            </mat-slide-toggle>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Client Secret\\\" class=\\\"col-3 col-form-label\\\"\\r\\n                               [required]=\\\"model.value.requireClientSecret\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input [attr.type]=\\\"isShowSecret ? 'text' : 'password'\\\" class=\\\"form-control\\\"\\r\\n                                       placeholder=\\\"Enter secret\\\"\\r\\n                                       formControlName=\\\"clientSecret\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" matTooltip=\\\"Show secret\\\"\\r\\n                                            matTooltipPosition=\\\"above\\\" (click)=\\\"toggleShowSecret()\\\">\\r\\n                                        <!--<i class=\\\"flaticon-medical\\\"></i>-->\\r\\n                                        <i class=\\\"fa fa-eye\\\" *ngIf=\\\"isShowSecret\\\"></i>\\r\\n                                        <i class=\\\"fa fa-eye-slash\\\" *ngIf=\\\"!isShowSecret\\\"></i>\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div><!-- END: clientSecret -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Absolute Refresh Token Lifetime\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                               placeholder=\\\"Enter absolute refresh token lifetime\\\"\\r\\n                                               formControlName=\\\"absoluteRefreshTokenLifetime\\\">\\r\\n                                        <div class=\\\"input-group-append\\\">\\r\\n                                            <span class=\\\"input-group-text\\\"\\r\\n                                                  id=\\\"absoluteRefreshTokenLifetime\\\">seconds</span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <span class=\\\"m-form__help\\\">\\r\\n                                Maximum lifetime of a refresh token in seconds. Defaults to 2592000 seconds / 30 days\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div><!-- END: AbsoluteRefreshTokenLifetime -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Sliding Refresh Token Lifetime\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                           placeholder=\\\"Enter sliding refresh token lifetime\\\"\\r\\n                                           formControlName=\\\"slidingRefreshTokenLifetime\\\">\\r\\n                                    <div class=\\\"input-group-append\\\">\\r\\n                                        <span class=\\\"input-group-text\\\" id=\\\"slidingRefreshTokenLifeTime\\\">seconds</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <span class=\\\"m-form__help\\\">\\r\\n                                Sliding lifetime of a refresh token in seconds. Defaults to 1296000 seconds / 15 days\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div><!-- END: SlidingRefreshTokenLifetime -->\\r\\n                </div><!-- END: second-col -->\\r\\n            </div>\\r\\n        </div><!-- END .m-portlet__body -->\\r\\n        <div class=\\\"m-portlet__foot m-portlet__foot--fit\\\">\\r\\n            <div class=\\\"m-form__actions m-form__actions\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\">\\r\\n                    Lưu lại\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" mat-raised-button routerLink=\\\"/config/client\\\">\\r\\n                    Hủy bỏ\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Client } from './client.model';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DestroySubscribers } from '../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport { ClientService } from './client.service';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\n\r\n@Component({\r\n    selector: 'app-client-form',\r\n    templateUrl: './client-form.component.html'\r\n})\r\n\r\n@DestroySubscribers()\r\nexport class ClientFormComponent extends BaseFormComponent implements OnInit {\r\n    model: FormGroup;\r\n    client: Client = new Client();\r\n    isShowSecret = false;\r\n\r\n    listGrantTypes = [];\r\n    listPostRedirectLogoutUris: string[] = [];\r\n    listIdentityProviderRestrictions: string[] = [];\r\n\r\n    constructor(private router: Router,\r\n                private route: ActivatedRoute,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService,\r\n                private clientService: ClientService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('here');\r\n        this.renderListGrantTypes();\r\n        this.buildForm();\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            if (params.clientId) {\r\n                this.isUpdate = true;\r\n                this.clientService.getDetail(params.clientId)\r\n                    .subscribe(client => {\r\n                        this.model.patchValue(client);\r\n                    });\r\n            } else {\r\n                this.isUpdate = false;\r\n                this.getClientId();\r\n            }\r\n        });\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (isValid) {\r\n            this.client = this.model.value;\r\n            this.spinnerService.show('Đang lưu thông tin client. Vui lòng đợi...');\r\n            if (this.isUpdate) {\r\n                this.clientService.update(this.client)\r\n                    .pipe(finalize(() => this.spinnerService.hide()))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.show(result.message, result.title);\r\n                        this.router.navigateByUrl('/config/client');\r\n                    });\r\n            } else {\r\n                this.clientService.insert(this.client)\r\n                    .pipe(finalize(() => this.spinnerService.hide()))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.show(result.message, result.title);\r\n                        this.model.reset(new Client());\r\n                        this.getClientId();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleShowSecret() {\r\n        this.isShowSecret = !this.isShowSecret;\r\n    }\r\n\r\n    private getClientId() {\r\n        this.spinnerService.show('Đang tạo mã Client. Vui lòng đợi...');\r\n        this.clientService.getCientId()\r\n            .pipe(finalize(() => this.spinnerService.hide()))\r\n            .subscribe(clientId => this.model.patchValue({clientId: clientId}));\r\n    }\r\n\r\n    private renderListGrantTypes() {\r\n        this.listGrantTypes = [\r\n            {id: 'Implicit', name: 'Implicit'},\r\n            {id: 'ImplicitAndClientCredentials', name: 'ImplicitAndClientCredentials'},\r\n            {id: 'Code', name: 'Code'},\r\n            {id: 'CodeAndClientCredentials', name: 'CodeAndClientCredentials'},\r\n            {id: 'Hybrid', name: 'Hybrid'},\r\n            {id: 'HybridAndClientCredentials', name: 'HybridAndClientCredentials'},\r\n            {id: 'ClientCredentials', name: 'ClientCredentials'},\r\n            {id: 'ResourceOwnerPassword', name: 'ResourceOwnerPassword'},\r\n            {id: 'ResourceOwnerPasswordAndClientCredentials', name: 'ResourceOwnerPasswordAndClientCredentials'},\r\n        ];\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['']);\r\n\r\n        this.validationMessages = {};\r\n\r\n        this.model = this.fb.group({\r\n            'clientId': [this.client.clientId],\r\n            'clientName': [this.client.clientName, [\r\n                Validators.required,\r\n                Validators.maxLength(450)\r\n            ]],\r\n            'absoluteRefreshTokenLifetime': [this.client.absoluteRefreshTokenLifetime],\r\n            'accessTokenLifetime': [this.client.accessTokenLifetime],\r\n            'accessTokenType': [this.client.accessTokenType],\r\n            'allowAccessTokensViaBrowser': [this.client.allowAccessTokensViaBrowser],\r\n            'allowOfflineAccess': [this.client.allowOfflineAccess],\r\n            'allowPlainTextPkce': [this.client.allowPlainTextPkce],\r\n            'allowRememberConsent': [this.client.allowRememberConsent],\r\n            'alwaysIncludeUserClaimsInIdToken': [this.client.alwaysIncludeUserClaimsInIdToken],\r\n            'alwaysSendClientClaims': [this.client.alwaysSendClientClaims],\r\n            'authorizationCodeLifetime': [this.client.authorizationCodeLifetime],\r\n            'backChannelLogoutSessionRequired': [this.client.backChannelLogoutSessionRequired],\r\n            'backChannelLogoutUri': [this.client.backChannelLogoutUri],\r\n            'clientAllowedGrantTypes': [this.client.clientAllowedGrantTypes, [\r\n                Validators.required\r\n            ]],\r\n            'clientClaimsPrefix': [this.client.clientClaimsPrefix],\r\n            'clientUri': [this.client.clientUri],\r\n            'consentLifetime': [this.client.consentLifetime],\r\n            'enableLocalLogin': [this.client.enableLocalLogin],\r\n            'enabled': [this.client.enabled],\r\n            'frontChannelLogoutSessionRequired': [this.client.frontChannelLogoutSessionRequired],\r\n            'frontChannelLogoutUri': [this.client.frontChannelLogoutUri],\r\n            'identityTokenLifetime': [this.client.identityTokenLifetime],\r\n            'includeJwtId': [this.client.includeJwtId],\r\n            'logoUri': [this.client.logoUri],\r\n            'pairWiseSubjectSalt': [this.client.pairWiseSubjectSalt],\r\n            'protocolType': [this.client.protocolType],\r\n            'refreshTokenExpiration': [this.client.refreshTokenExpiration],\r\n            'refreshTokenUsage': [this.client.refreshTokenUsage],\r\n            'requireClientSecret': [this.client.requireClientSecret],\r\n            'requireConsent': [this.client.requireConsent],\r\n            'requirePkce': [this.client.requirePkce],\r\n            'slidingRefreshTokenLifetime': [this.client.slidingRefreshTokenLifetime],\r\n            'updateAccessTokenClaimsOnRefresh': [this.client.updateAccessTokenClaimsOnRefresh],\r\n            'clientAllowedScopes': [this.client.clientAllowedScopes],\r\n            'clientAllowedCorsOrigins': [this.client.clientAllowedCorsOrigins],\r\n            'clientSecret': [this.client.clientSecret]\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet\\\">\\r\\n    <div class=\\\"m-portlet__head\\\">\\r\\n        <div class=\\\"m-portlet__head-caption\\\">\\r\\n            <div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"m-portlet__head-icon m--hide\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"flaticon-computer\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                    Danh sách Client.\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-portlet__body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search()\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" placeholder=\\\"Nhập từ khoá tìm kiếm\\\"\\r\\n                               (keyup)=\\\"keyword = searchBox.value\\\" #searchBox>\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"form-group\\\">-->\\r\\n                        <!--<nh-select-->\\r\\n                            <!--[data]=\\\"[{id: 1, name: 'Kích hoạt'}, {id: 0, name: 'Chưa kích hoạt'}]\\\"-->\\r\\n                            <!--[title]=\\\"'&#45;&#45; Tất cả trạng thái &#45;&#45;'\\\"-->\\r\\n                            <!--[(value)]=\\\"moduleIdSearch\\\"-->\\r\\n                            <!--(onSelectItem)=\\\"search(1)\\\"></nh-select>-->\\r\\n                    <!--</div>-->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">\\r\\n                            <i class=\\\"fa fa-search\\\"></i>\\r\\n                            Tìm kiếm\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group pull-right\\\">\\r\\n                        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n                            <i class=\\\"fa fa-plus\\\"></i>\\r\\n                            Thêm mới\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n            <!--<div class=\\\"col-sm-12\\\">-->\\r\\n            <!--<table-->\\r\\n            <!--class=\\\"table table-striped table-bordered table-hover table-full-width dataTable no-footer table-main\\\">-->\\r\\n            <!--<thead>-->\\r\\n            <!--<tr>-->\\r\\n            <!--<th class=\\\"center w50\\\">STT</th>-->\\r\\n            <!--<th class=\\\"center\\\">Tên trang</th>-->\\r\\n            <!--<th class=\\\"center\\\">Module</th>-->\\r\\n            <!--<th class=\\\"center\\\">Icon</th>-->\\r\\n            <!--<th class=\\\"center w100\\\">Thứ tự</th>-->\\r\\n            <!--<th class=\\\"center\\\">Đường dẫn</th>-->\\r\\n            <!--<th class=\\\"center w100\\\">Public</th>-->\\r\\n            <!--<th class=\\\"center w100\\\">Kích hoạt</th>-->\\r\\n            <!--<th class=\\\"center w150\\\" *ngIf=\\\"isHasUpdatePermission || isHasDeletePermission\\\">Sửa, Xóa</th>-->\\r\\n            <!--</tr>-->\\r\\n            <!--</thead>-->\\r\\n            <!--<tbody>-->\\r\\n            <!--<ng-template ngFor let-parent let-parentIndex=\\\"index\\\" [ngForOf]=\\\"listPages\\\">-->\\r\\n            <!--<tr>-->\\r\\n            <!--<td colspan=\\\"9\\\" class=\\\"bg-info bold middle color-white\\\">{{parent.modulesName}}</td>-->\\r\\n            <!--</tr>-->\\r\\n            <!--<tr *ngFor=\\\"let page of parent.listPage; let i = index\\\">-->\\r\\n            <!--<td class=\\\"center middle\\\">{{(currentPage - 1) * pageSize + i + 1}}</td>-->\\r\\n            <!--<td class=\\\"middle\\\">{{page.name}}</td>-->\\r\\n            <!--<td class=\\\"middle\\\">{{page.modulesName}}</td>-->\\r\\n            <!--<td class=\\\"w100 center middle\\\">-->\\r\\n            <!--<i [class]=\\\"page.icon\\\"></i>-->\\r\\n            <!--</td>-->\\r\\n            <!--<td class=\\\"middle\\\">-->\\r\\n            <!--<span *ngIf=\\\"!isHasUpdatePermission\\\">{{page.order}}</span>-->\\r\\n            <!--<input *ngIf=\\\"isHasUpdatePermission\\\" type=\\\"text\\\" class=\\\"form-control text-right\\\"-->\\r\\n            <!--value=\\\"{{page.order}}\\\"-->\\r\\n            <!--(blur)=\\\"onOrderBlur(page, $event)\\\"/>-->\\r\\n            <!--</td>-->\\r\\n            <!--<td class=\\\"middle\\\">{{page.url}}</td>-->\\r\\n            <!--<td class=\\\"center middle\\\">-->\\r\\n            <!--<i *ngIf=\\\"!isHasUpdatePermission && page.isPubclic\\\"-->\\r\\n            <!--class=\\\"fa fa-check color-green size-16\\\"></i>-->\\r\\n            <!--&lt;!&ndash;<mat-checkbox color=\\\"primary\\\" *ngIf=\\\"isHasUpdatePermission\\\" [checked]=\\\"page.isPublic\\\"&ndash;&gt;-->\\r\\n            <!--&lt;!&ndash;(change)=\\\"changePublicStatus(page)\\\"></mat-checkbox>&ndash;&gt;-->\\r\\n            <!--</td>-->\\r\\n            <!--<td class=\\\"center middle\\\">-->\\r\\n            <!--<i *ngIf=\\\"!isHasUpdatePermission && page.isActive\\\"-->\\r\\n            <!--class=\\\"fa fa-check color-green size-16\\\"></i>-->\\r\\n            <!--<mat-checkbox color=\\\"primary\\\" *ngIf=\\\"isHasUpdatePermission\\\" [checked]=\\\"page.isActive\\\"-->\\r\\n            <!--(change)=\\\"changeActiveStatus(page)\\\"></mat-checkbox>-->\\r\\n            <!--</td>-->\\r\\n            <!--<td class=\\\"center middle w100\\\" *ngIf=\\\"isHasUpdatePermission || isHasDeletePermission\\\">-->\\r\\n            <!--<a *ngIf=\\\"isHasUpdatePermission\\\" mat-mini-fab color=\\\"primary\\\" href=\\\"javascript://\\\"-->\\r\\n            <!--(click)=\\\"setUpdate(page)\\\">-->\\r\\n            <!--<i class=\\\"fa fa-pencil\\\"></i>-->\\r\\n            <!--</a>-->\\r\\n            <!--<a *ngIf=\\\"isHasDeletePermission\\\" mat-mini-fab color=\\\"warn\\\"-->\\r\\n            <!--class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"delete(page)\\\">-->\\r\\n            <!--<i class=\\\"fa fa-trash-o\\\"></i>-->\\r\\n            <!--</a>-->\\r\\n            <!--</td>-->\\r\\n            <!--</tr>-->\\r\\n            <!--&lt;!&ndash; /ko &ndash;&gt;-->\\r\\n            <!--</ng-template>-->\\r\\n            <!--</tbody>-->\\r\\n            <!--</table>-->\\r\\n            <!--</div>-->\\r\\n            <!--</div>-->\\r\\n            <!--<ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"-->\\r\\n            <!--[isDisabled]=\\\"isSearching\\\" [pageName]=\\\"'trang'\\\"></ghm-paging>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { Page } from '../page/models/page.model';\r\nimport { ClientFormComponent } from './client-form.component';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\n\r\n@Component({\r\n    selector: 'app-client',\r\n    templateUrl: './client.component.html'\r\n})\r\nexport class ClientComponent extends BaseListComponent<Page> implements OnInit {\r\n    isActive?: boolean;\r\n\r\n    constructor( @Inject(PAGE_ID) pageId: IPageId,\r\n        private appService: AppService) {\r\n        super();\r\n        console.log(pageId.CONFIG);\r\n        this.appService.setupPage(pageId.CONFIG, pageId.CONFIG_CLIENT, 'Cấu hình', 'Cấu hình');\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    search() {\r\n\r\n    }\r\n\r\n    addNew() {\r\n    }\r\n}\r\n","export class Client {\r\n    clientId: string;\r\n    clientName?: string;\r\n    absoluteRefreshTokenLifetime: number;\r\n    accessTokenLifetime: number;\r\n    accessTokenType: number;\r\n    allowAccessTokensViaBrowser: boolean;\r\n    allowOfflineAccess: boolean;\r\n    allowPlainTextPkce: boolean;\r\n    allowRememberConsent: boolean;\r\n    alwaysIncludeUserClaimsInIdToken: boolean;\r\n    alwaysSendClientClaims: boolean;\r\n    authorizationCodeLifetime: number;\r\n    backChannelLogoutSessionRequired: boolean;\r\n    backChannelLogoutUri?: string;\r\n    clientAllowedGrantTypes?: string;\r\n    clientClaimsPrefix?: string;\r\n    clientUri?: string;\r\n    consentLifetime?: boolean;\r\n    enableLocalLogin: boolean;\r\n    enabled: boolean;\r\n    frontChannelLogoutSessionRequired: boolean;\r\n    frontChannelLogoutUri?: string;\r\n    identityTokenLifetime: number;\r\n    includeJwtId: boolean;\r\n    logoUri?: string;\r\n    pairWiseSubjectSalt?: string;\r\n    protocolType?: string;\r\n    refreshTokenExpiration: number;\r\n    refreshTokenUsage: number;\r\n    requireClientSecret: boolean;\r\n    requireConsent: boolean;\r\n    requirePkce: boolean;\r\n    slidingRefreshTokenLifetime: number;\r\n    updateAccessTokenClaimsOnRefresh: boolean;\r\n    clientAllowedScopes: string;\r\n    clientAllowedCorsOrigins: string;\r\n    clientSecret: string;\r\n\r\n    constructor() {\r\n        this.enabled = true;\r\n        this.requireConsent = false;\r\n        this.requirePkce = false;\r\n        this.requireClientSecret = false;\r\n        this.allowPlainTextPkce = false;\r\n        this.allowOfflineAccess = true;\r\n        this.allowAccessTokensViaBrowser = false;\r\n        this.frontChannelLogoutSessionRequired = true;\r\n        this.backChannelLogoutSessionRequired = true;\r\n        this.enableLocalLogin = false;\r\n\r\n        // Token\r\n        this.identityTokenLifetime = 300;\r\n        this.accessTokenLifetime = 3600;\r\n        this.authorizationCodeLifetime = 300;\r\n        this.absoluteRefreshTokenLifetime = 2592000;\r\n        this.slidingRefreshTokenLifetime = 1296000;\r\n        this.refreshTokenUsage = this.TOKEN_USAGE.oneTimeOnly;\r\n        this.refreshTokenExpiration = this.TOKEN_EXPIRATION.absolute;\r\n        this.updateAccessTokenClaimsOnRefresh = true;\r\n        this.accessTokenType = this.ACCESS_TOKEN_TYPE.jwt;\r\n        this.includeJwtId = false;\r\n        this.clientClaimsPrefix = 'ghm_client';\r\n        this.requireConsent = false;\r\n        this.allowRememberConsent = true;\r\n        this.alwaysIncludeUserClaimsInIdToken = false;\r\n        this.alwaysSendClientClaims = false;\r\n    }\r\n\r\n    ACCESS_TOKEN_TYPE = {\r\n        jwt: 0,\r\n        reference: 1\r\n    };\r\n\r\n    TOKEN_USAGE = {\r\n        reuse: 0,\r\n        oneTimeOnly: 1\r\n    };\r\n\r\n    TOKEN_EXPIRATION = {\r\n        sliding: 0,\r\n        absolute: 1\r\n    };\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Client } from './client.model';\r\nimport { Observable } from 'rxjs';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class ClientService implements Resolve<any> {\r\n    url: string;\r\n\r\n    constructor(private http: HttpClient,\r\n        @Inject(APP_CONFIG) public appConfig: IAppConfig) {\r\n        this.url = `${appConfig.CORE_API_URL}client/`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.queryParams;\r\n        const keyword = queryParams.keyword;\r\n        const enabled = queryParams.enabled;\r\n        const page = queryParams.page;\r\n        const pageSize = queryParams.pageSize;\r\n        return this.search(keyword, enabled, page, pageSize);\r\n    }\r\n\r\n    search(keyword: string, enabled?: boolean, page: number = 1, pageSize: number = 20) {\r\n        return this.http.get(`${this.url}search`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('enabled', enabled != null && enabled !== undefined ? enabled.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<ISearchResult<Client>>;\r\n    }\r\n\r\n    getCientId(): Observable<string> {\r\n        return this.http.get(`${this.url}get-client-id`) as Observable<string>;\r\n    }\r\n\r\n    getDetail(clientId: string): Observable<Client> {\r\n        return this.http.get(`${this.url}get-detail`, {\r\n            params: new HttpParams()\r\n                .set('clientId', clientId)\r\n        }) as Observable<Client>;\r\n    }\r\n\r\n    insert(client: Client): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}insert`, client) as Observable<IResponseResult>;\r\n    }\r\n\r\n    update(client: Client): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}update`, client) as Observable<IResponseResult>;\r\n    }\r\n\r\n    delete(clientId: string): Observable<IResponseResult> {\r\n        return this.http.delete(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('clientId', clientId)\r\n        }) as Observable<IResponseResult>;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PageComponent } from './page/page.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport { ClientFormComponent } from './client/client-form.component';\r\nimport { ClientService } from './client/client.service';\r\nimport { AuthGuardService } from '../../shareds/services/auth-guard.service';\r\nimport { TenantComponent } from './tenant/tenant.component';\r\nimport { TenantService } from './tenant/tenant.service';\r\nimport { LayoutComponent } from '../../shareds/layouts/layout.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { PageService } from './page/page.service';\r\nimport { RoleService } from './role/role.service';\r\nimport { UserSettingComponent } from './user-setting/user-setting.component';\r\n\r\nconst routes: Routes = [\r\n    // {\r\n    //     path: '',\r\n    //     component: LayoutComponent,\r\n    //     canActivate: [AuthGuardService],\r\n    //     children: [\r\n    {\r\n        path: '',\r\n        component: RoleComponent\r\n    },\r\n    {\r\n        path: 'tenants',\r\n        component: TenantComponent,\r\n    },\r\n    {\r\n        path: 'pages',\r\n        component: PageComponent,\r\n        resolve: {\r\n            data: PageService\r\n        }\r\n    },\r\n    {\r\n        path: 'clients',\r\n        resolve: {\r\n            data: ClientService\r\n        },\r\n        component: ClientComponent,\r\n        children: [\r\n            {\r\n                path: 'add-new',\r\n                component: ClientFormComponent\r\n            },\r\n            {\r\n                path: 'edit',\r\n                component: ClientFormComponent\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: 'roles',\r\n        resolve: {\r\n            data: RoleService\r\n        },\r\n        component: RoleComponent\r\n    },\r\n    {\r\n        path: 'languages',\r\n        component: LanguageComponent\r\n    },\r\n    {\r\n        path: 'settings',\r\n        component: UserSettingComponent\r\n    }\r\n    // ]\r\n    // },\r\n    // {\r\n    //     path: '**',\r\n    //     redirectTo: '404',\r\n    //     pathMatch: 'full'\r\n    // }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers: [ClientService, TenantService, PageService, RoleService]\r\n})\r\nexport class ConfigRoutingModule {\r\n}\r\n","module.exports = \"Hello from config component\\r\\n\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { AppService } from '../../shareds/services/app.service';\r\nimport { IPageId, PAGE_ID } from '../../configs/page-id.config';\r\n\r\n@Component({\r\n    selector: 'app-config',\r\n    templateUrl: './config.component.html'\r\n})\r\n\r\nexport class ConfigComponent implements OnInit {\r\n    constructor( @Inject(PAGE_ID) pageId: IPageId,\r\n        private appService: AppService) {\r\n        this.appService.setupPage(pageId.CONFIG, pageId.CONFIG, 'Cấu hình', 'Quản lý cấu hình');\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { PageComponent } from './page/page.component';\r\nimport { ConfigRoutingModule } from './config-routing.module';\r\nimport { NhSelectModule } from '../../shareds/components/nh-select/nh-select.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n    MatButtonModule, MatCheckboxModule, MatPaginatorModule, MatSlideToggleModule,\r\n    MatTooltipModule\r\n} from '@angular/material';\r\nimport { NhModalModule } from '../../shareds/components/nh-modal/nh-modal.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { GhmPagingModule } from '../../shareds/components/ghm-paging/ghm-paging.module';\r\nimport { PageFormComponent } from './page/page-form.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport { ClientFormComponent } from './client/client-form.component';\r\nimport { LayoutModule } from '../../shareds/layouts/layout.module';\r\nimport { ConfigComponent } from './config.component';\r\nimport { TenantComponent } from './tenant/tenant.component';\r\nimport { TenantFormComponent } from './tenant/tenant-form.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { RoleFormComponent } from './role/role-form/role-form.component';\r\nimport { RoleDetailComponent } from './role/role-detail/role-detail.component';\r\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { NHTreeModule } from '../../shareds/components/nh-tree/nh-tree.module';\r\nimport { UserSettingComponent } from './user-setting/user-setting.component';\r\nimport { NhImageModule } from '../../shareds/components/nh-image/nh-image.module';\r\nimport { GhmSelectPickerModule } from '../../shareds/components/ghm-select-picker/ghm-select-picker.module';\r\nimport { CoreModule } from '../../core/core.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, LayoutModule, ConfigRoutingModule, NhSelectModule, NhImageModule,\r\n        MatCheckboxModule, MatPaginatorModule, MatButtonModule, MatSlideToggleModule,\r\n        NhModalModule, ReactiveFormsModule, FormsModule, MatTooltipModule, NHTreeModule,\r\n        GhmSelectPickerModule, CoreModule, GhmPagingModule, SweetAlert2Module.forRoot({\r\n            buttonsStyling: false,\r\n            customClass: 'modal-content',\r\n            confirmButtonClass: 'btn btn-primary',\r\n            cancelButtonClass: 'btn',\r\n            confirmButtonText: 'Đồng ý',\r\n            showCancelButton: true,\r\n            cancelButtonText: 'Hủy bỏ'\r\n        })\r\n    ],\r\n    exports: [],\r\n    declarations: [PageComponent, PageFormComponent, ClientComponent,\r\n        ClientFormComponent, ConfigComponent, TenantComponent, TenantFormComponent, RoleComponent, RoleFormComponent, RoleDetailComponent,\r\n        LanguageComponent, UserSettingComponent],\r\n    providers: [],\r\n})\r\nexport class ConfigModule {\r\n}\r\n","module.exports = \"hello from language component\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-language',\r\n    templateUrl: './language.component.html'\r\n})\r\n\r\nexport class LanguageComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n}\r\n","export class PageTranslation {\r\n    name: string;\r\n    languageId: string;\r\n    description: string;\r\n}\r\n","import { PageTranslation } from './page-translation.model';\r\n\r\nexport class Page {\r\n    id: number;\r\n    pageId: number;\r\n    name: string;\r\n    clientId: string;\r\n    isActive: boolean;\r\n    url: string;\r\n    icon: string;\r\n    bgColor: string;\r\n    order: number;\r\n    parentId?: number;\r\n    childCount: number;\r\n    idPath: string;\r\n    namePrefix: string;\r\n    pageTranslation: PageTranslation[];\r\n\r\n    constructor(id?: number, name?: string, clientId?: string, isActive?: boolean, url?: string, icon?: string, bgColor?: string,\r\n                idPath?: string, order?: number, parentId?: number, childCount?: number, pageTranslation?: PageTranslation[]) {\r\n        this.id = id;\r\n        this.name = name ? name : '';\r\n        this.clientId = clientId ? clientId : '';\r\n        this.isActive = true;\r\n        this.url = url ? url : '';\r\n        this.icon = icon ? icon : '';\r\n        this.bgColor = bgColor;\r\n        this.order = 0;\r\n        this.parentId = parentId;\r\n        this.childCount = childCount ? childCount : 0;\r\n        this.idPath = '';\r\n        this.namePrefix = '';\r\n        this.pageTranslation = pageTranslation ? pageTranslation : [];\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #pageFormModal size=\\\"md\\\" (onShow)=\\\"onPageModalOpen()\\\"\\r\\n          (onHidden)=\\\"onPageModalClose()\\\">\\r\\n    <nh-modal-header>\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            <i class=\\\"fa fa-file-text-o\\\"></i>\\r\\n            {{isUpdate ? \\\"Cập nhật trang\\\" : \\\"Thêm mới trang\\\"}}\\r\\n        </h4>\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"horizontal-form\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.id\\\">\\r\\n                        <label ghmLabel=\\\"Mã trang\\\" class=\\\"control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                        <input type=\\\"text\\\" id=\\\"pageId\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập mã trang\\\"\\r\\n                               formControlName=\\\"id\\\"\\r\\n                               [attr.disabled]=\\\"isUpdate ? '' : null\\\"/>\\r\\n                        <div class=\\\"help-block\\\" *ngIf=\\\"formErrors.id\\\">{{formErrors.id}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label ghmLabel=\\\"Trang cha\\\" class=\\\"control-label\\\"></label>\\r\\n                        <nh-dropdown-tree\\r\\n                            [title]=\\\"'-- Chọn trang cha --'\\\"\\r\\n                            [data]=\\\"pageTree\\\"\\r\\n                            [width]=\\\"350\\\"\\r\\n                            formControlName=\\\"parentId\\\"\\r\\n                        ></nh-dropdown-tree>\\r\\n                        <div class=\\\"help-block\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.url\\\">\\r\\n                        <label ghmLabel=\\\"Đường dẫn\\\" class=\\\"control-label\\\"></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập đường dẫn\\\" formControlName=\\\"url\\\">\\r\\n                        <div class=\\\"help-block\\\" *ngIf=\\\"formErrors.url\\\">{{formErrors.url}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.icon\\\">\\r\\n                        <label ghmLabel=\\\"Icon\\\" class=\\\"control-label\\\"></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập icon\\\" formControlName=\\\"icon\\\">\\r\\n                        <div class=\\\"help-block\\\" *ngIf=\\\"formErrors.icon\\\">{{formErrors.icon}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.bgColor\\\">\\r\\n                        <label ghmLabel=\\\"Màu nền\\\" class=\\\"control-label\\\"></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập màu nền\\\" formControlName=\\\"bgColor\\\">\\r\\n                        <div class=\\\"help-block\\\" *ngIf=\\\"formErrors.bgColor\\\">{{formErrors.bgColor}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label ghmLabel=\\\"Thứ tự\\\" class=\\\"control-label\\\"></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập thứ tự\\\" formControlName=\\\"order\\\">\\r\\n                        <div class=\\\"help-block\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"isActive\\\">Kích hoạt</mat-slide-toggle>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"tabbable-custom\\\">\\r\\n                        <ul class=\\\"nav nav-tabs \\\">\\r\\n                            <li [class.active]=\\\"item.id === currentLanguage\\\"\\r\\n                                *ngFor=\\\"let item of languages; let i = index\\\">\\r\\n                                <a href=\\\"#tab{{i}}\\\" data-toggle=\\\"tab\\\"> {{ item.name }} </a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                        <div class=\\\"tab-content\\\" formArrayName=\\\"pageTranslations\\\">\\r\\n                            <div class=\\\"tab-pane\\\" attr.id=\\\"{{ 'tab' + i }}\\\"\\r\\n                                 [class.active]=\\\"pageTranslation.value.languageId === currentLanguage\\\"\\r\\n                                 *ngFor=\\\"let pageTranslation of pageTranslations.controls; index as i\\\">\\r\\n                                <div [formGroupName]=\\\"i\\\">\\r\\n                                    <div class=\\\"form-group\\\"\\r\\n                                         [class.has-error]=\\\"translationFormErrors[pageTranslation.value.languageId]?.name\\\">\\r\\n                                        <label ghmLabel=\\\"Tên trang\\\"\\r\\n                                               class=\\\"control-label\\\"\\r\\n                                               [required]=\\\"true\\\"\\r\\n                                        ></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập tên trang\\\"\\r\\n                                               formControlName=\\\"name\\\">\\r\\n                                        <!--<div class=\\\"help-block\\\" *ngIf=\\\"translationFormErrors[pageTranslation.value.languageId].name\\\">-->\\r\\n                                        <!--{{ translationFormErrors[pageTranslation.value.languageId].name }}-->\\r\\n                                        <!--</div>-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\"\\r\\n                                         [class.has-error]=\\\"translationFormErrors[pageTranslation.value.languageId]?.description\\\">\\r\\n                                        <label ghmLabel=\\\"Mô tả\\\"\\r\\n                                               class=\\\"control-label\\\"\\r\\n                                        ></label>\\r\\n                                        <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                                  placeholder=\\\"Nhập nội dung mô tả\\\"\\r\\n                                                  formControlName=\\\"description\\\"\\r\\n                                        ></textarea>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox\\r\\n                class=\\\"cm-mgr-5\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"isCreateAnother\\\"\\r\\n                *ngIf=\\\"!isUpdate\\\"\\r\\n                [(checked)]=\\\"isCreateAnother\\\"\\r\\n                (change)=\\\"isCreateAnother = !isCreateAnother\\\"> Tiếp tục tạo\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary\\\" [loading]=\\\"isSaving\\\">\\r\\n                Lưu lại\\r\\n            </ghm-button>\\r\\n            <ghm-button type=\\\"button\\\" icon=\\\"fa fa-times\\\" classes=\\\"btn btn-default cm-mgl-5\\\" [loading]=\\\"isSaving\\\"\\r\\n                        nh-dismiss=\\\"true\\\">\\r\\n                Hủy bỏ\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import { Component, Input, OnInit, Output, ViewChild, EventEmitter } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Page } from './models/page.model';\r\nimport { PageService } from './page.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { NhModalComponent } from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { LanguageService } from '../../../shareds/services/language.service';\r\nimport { PageTranslation } from './models/page-translation.model';\r\nimport { LanguageViewModel, LanguageSearchViewModel } from '../../../shareds/models/language.viewmodel';\r\nimport { TreeData } from '../../../view-model/tree-data';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport * as _ from 'lodash';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { PageDetailViewModel } from './models/page-detail.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-page-form',\r\n    templateUrl: './page-form.component.html',\r\n    providers: [LanguageService]\r\n})\r\nexport class PageFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('pageFormModal') pageFormModal: NhModalComponent;\r\n    @Input() page = new Page();\r\n    @Output() onPageFormClose = new EventEmitter();\r\n    pageTree: TreeData[] = [];\r\n    model: FormGroup;\r\n    pageTranslation = new PageTranslation();\r\n    pageTranslationFormArray: FormArray;\r\n    translationFormErrors = {};\r\n    translationValidationMessage = [];\r\n    // languageData = [];\r\n    // languages: LanguageSearchViewModel[] = [];\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService,\r\n                private pageService: PageService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n        // this.renderLanguageData();\r\n        this.getPageTree();\r\n    }\r\n\r\n    get pageTranslations(): FormArray {\r\n        return this.model.get('pageTranslations') as FormArray;\r\n    }\r\n\r\n    add() {\r\n        this.pageFormModal.show();\r\n        this.isUpdate = false;\r\n    }\r\n\r\n    edit(page: Page) {\r\n        this.pageFormModal.show();\r\n        this.isUpdate = true;\r\n        this.spinnerService.show('Đang tải dữ liệu...');\r\n        this.pageService.getLanguageDetail(page.id)\r\n            .subscribe((result: IActionResultResponse<PageDetailViewModel>) => {\r\n                if (result.data) {\r\n                    const pageData = result.data;\r\n                    this.model.patchValue({\r\n                        id: pageData.id,\r\n                        parentId: pageData.parentId,\r\n                        url: pageData.url,\r\n                        icon: pageData.icon,\r\n                        bgColor: pageData.bgColor,\r\n                        order: pageData.order\r\n                    });\r\n\r\n                    if (pageData.pageTranslation && pageData.pageTranslation.length > 0) {\r\n                        this.languages.forEach((language: LanguageViewModel, index: number) => {\r\n                            // Need to check this function.\r\n                            const pageTranslationFormGroup = this.pageTranslations.at(index);\r\n                            if (pageTranslationFormGroup) {\r\n                                const pageTranslationInfo = _.find(pageData.pageTranslation, (pageTranslation: PageTranslation) => {\r\n                                    return pageTranslationFormGroup.value.languageId === pageTranslation.languageId;\r\n                                });\r\n                                if (pageTranslationInfo) {\r\n                                    pageTranslationFormGroup.patchValue(pageTranslationInfo);\r\n                                } else {\r\n                                    pageTranslationFormGroup.patchValue({name: '', description: ''});\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    onPageModalOpen() {\r\n        this.utilService.focusElement('pageId');\r\n    }\r\n\r\n    onPageModalClose() {\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n        this.model.patchValue({\r\n            id: '',\r\n            icon: '',\r\n            bgColor: '',\r\n            url: ''\r\n        });\r\n        this.pageTranslations.controls.forEach((pageTranslation: FormGroup) => {\r\n            pageTranslation.patchValue({\r\n                name: '',\r\n                description: ''\r\n            });\r\n        });\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        const inValidPageTranslationModel = _.find(this.pageTranslations.controls, (pageTranslationModel: FormGroup) => {\r\n            const isPageTranslationModelValid = this.utilService.onValueChanged(pageTranslationModel,\r\n                this.translationFormErrors[pageTranslationModel.value.languageId],\r\n                this.translationValidationMessage[pageTranslationModel.value.languageId], true);\r\n            return !isPageTranslationModelValid ? pageTranslationModel : null;\r\n        });\r\n\r\n        if (inValidPageTranslationModel) {\r\n            this.currentLanguage = inValidPageTranslationModel.value.languageId;\r\n        }\r\n        if (isValid && !inValidPageTranslationModel) {\r\n            this.page = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.pageService.update(this.page)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.success(result.message);\r\n                        this.model.patchValue(new Page());\r\n                        this.isUpdate = false;\r\n                        this.isModified = true;\r\n                        this.pageFormModal.dismiss();\r\n                        return;\r\n                    });\r\n            } else {\r\n                this.pageService.insert(this.page)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.success(result.message);\r\n                        this.utilService.focusElement('pageId');\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.resetModel();\r\n                        } else {\r\n                            this.pageFormModal.dismiss();\r\n                        }\r\n                        return;\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    // private renderLanguageData() {\r\n    //     this.languages = this.appService.languages;\r\n    //     this.languageData = this.languages.map((language: LanguageSearchViewModel) => {\r\n    //         if (language.isDefault) {\r\n    //             this.currentLanguage = language.languageId;\r\n    //         }\r\n    //         return {id: language.languageId, name: language.name, isSelected: language.isDefault};\r\n    //     });\r\n    //     this.renderPageTranslation();\r\n    // }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['id', 'icon', 'bgColor', 'url']);\r\n        this.validationMessages = {\r\n            id: {\r\n                required: 'Mã trang không được để trống',\r\n            },\r\n            icon: {\r\n                maxlength: 'Icon không được phép vượt quá 50 ký tự.',\r\n            },\r\n            bgColor: {\r\n                maxlength: 'Mã màu nền không được phép lớn hơn 10 ký tự.'\r\n            },\r\n            url: {\r\n                maxlength: 'Url không được phép vượt quá 500 ký tự.'\r\n            }\r\n        };\r\n\r\n        this.model = this.fb.group({\r\n            'id': [this.page.id, [\r\n                Validators.required\r\n            ]],\r\n            'isActive': [this.page.isActive],\r\n            'url': [this.page.url, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            'icon': [this.page.icon, [\r\n                Validators.maxLength(50)\r\n            ]],\r\n            'order': [this.page.order],\r\n            'parentId': [this.page.parentId],\r\n            'bgColor': [this.page.bgColor, [\r\n                Validators.maxLength(10)\r\n            ]],\r\n            'pageTranslations': this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private buildFormLanguage(language: string): FormGroup {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(['name', 'description']);\r\n        this.translationValidationMessage[language] = {\r\n            name: {\r\n                required: 'Vui lòng nhập tên trang',\r\n                maxLength: 'Tên trang không được phép vượt quá 256 ký tự.'\r\n            },\r\n            description: {\r\n                maxLength: 'Mô tả không được phép vượt quá 500 ký tự.'\r\n            }\r\n        };\r\n        const pageTranslationModel = this.fb.group({\r\n            name: [this.pageTranslation.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            languageId: [language],\r\n            description: [this.pageTranslation.description, [\r\n                Validators.maxLength(500)\r\n            ]]\r\n        });\r\n        pageTranslationModel.valueChanges.subscribe((data: any) => this.utilService.onValueChanged(pageTranslationModel,\r\n            this.translationFormErrors[language],\r\n            this.translationValidationMessage[language]));\r\n        return pageTranslationModel;\r\n    }\r\n\r\n    private getPageTree() {\r\n        this.pageService.getPageTree()\r\n            .subscribe((result: TreeData[]) => {\r\n                this.pageTree = result;\r\n            });\r\n    }\r\n\r\n    private renderPageTranslation() {\r\n        this.pageTranslationFormArray = this.model.get('pageTranslations') as FormArray;\r\n        this.languages.forEach((language: LanguageViewModel) => {\r\n            this.pageTranslationFormArray.push(this.buildFormLanguage(language.id));\r\n        });\r\n    }\r\n\r\n    private resetModel() {\r\n        this.model.patchValue({\r\n            id: null,\r\n            name: '',\r\n            isActive: true,\r\n            url: '',\r\n            icon: '',\r\n            bgColor: '',\r\n            order: 0\r\n        });\r\n\r\n        this.pageTranslations.controls.forEach((pageTranslation: FormControl) => {\r\n            pageTranslation.patchValue({\r\n                name: '',\r\n                description: ''\r\n            });\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row cm-mgb-10\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input class=\\\"form-control cm-mgr-5\\\" placeholder=\\\"Nhập từ khoá tìm kiếm\\\"\\r\\n                       name=\\\"keyword\\\"\\r\\n                       [(ngModel)]=\\\"keyword\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <nh-select\\r\\n                    [class]=\\\"'cm-mgr-5'\\\"\\r\\n                    [data]=\\\"[{id: true, name: 'Kích hoạt'}, {id: false, name: 'Chưa kích hoạt'}]\\\"\\r\\n                    [title]=\\\"'-- Tất cả --'\\\"\\r\\n                    [(value)]=\\\"isActive\\\"\\r\\n                    (onSelectItem)=\\\"search()\\\"></nh-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <ghm-button icon=\\\"fa fa-search\\\" [loading]=\\\"isSearching\\\"></ghm-button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group pull-right\\\" *ngIf=\\\"permission.add\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"add()\\\" *ngIf=\\\"permission.add\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                    Thêm\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <table\\r\\n            class=\\\"table table-striped table-hover table-full-width dataTable no-footer\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center w50\\\">STT</th>\\r\\n                <th class=\\\"center\\\">Tên trang</th>\\r\\n                <th class=\\\"center w100\\\">Icon</th>\\r\\n                <th class=\\\"center\\\">Đường dẫn</th>\\r\\n                <th class=\\\"center w100\\\">Public</th>\\r\\n                <th class=\\\"center w100\\\">Kích hoạt</th>\\r\\n                <th class=\\\"center w150\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Sửa, Xóa</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let page of listItems$ | async; let i = index\\\">\\r\\n                <td class=\\\"center middle\\\">{{(currentPage - 1) * pageSize + i + 1}}</td>\\r\\n                <td class=\\\"middle cursor-pointer\\\" (click)=\\\"edit(page)\\\">\\r\\n                    <a href=\\\"javascritp://\\\">\\r\\n                        <span [innerHtml]=\\\"page.namePrefix\\\"></span>\\r\\n                        {{page.name}}\\r\\n                    </a>\\r\\n                </td>\\r\\n                <td class=\\\"w100 center middle\\\">\\r\\n                    <i [class]=\\\"page.icon\\\"></i>\\r\\n                </td>\\r\\n                <td>\\r\\n                    {{page.url}}\\r\\n                </td>\\r\\n                <td class=\\\"center middle\\\">\\r\\n                    <!--<i *ngIf=\\\"page.isPublic\\\"-->\\r\\n                       <!--class=\\\"fa fa-check color-green size-16\\\"></i>-->\\r\\n                </td>\\r\\n                <td class=\\\"center middle\\\">\\r\\n                    <span class=\\\"badge\\\"\\r\\n                          [class.badge-success]=\\\"page.isActive\\\"\\r\\n                          [class.badge-danger]=\\\"!page.isActive\\\">\\r\\n                        {{ page.isActive ? 'Đã kích hoạt' : 'Chưa kích hoạt' }}\\r\\n                    </span>\\r\\n                </td>\\r\\n                <td class=\\\"center middle w100\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n                    <ghm-button type=\\\"button\\\" classes=\\\"btn btn-primary btn-sm\\\" icon=\\\"fa fa-edit\\\"\\r\\n                                matTooltip=\\\"Update\\\"\\r\\n                                *ngIf=\\\"permission.edit\\\"\\r\\n                                (click)=\\\"edit(page)\\\">\\r\\n                    </ghm-button>\\r\\n                    <ghm-button icon=\\\"fa fa-trash-o\\\" classes=\\\"btn btn-danger btn-sm\\\"\\r\\n                                matTooltip=\\\"Delete\\\"\\r\\n                                *ngIf=\\\"permission.delete\\\"\\r\\n                                [swal]=\\\"{ title: 'Bạn có chắc chắn muốn xóa trang: ' + page.name + ' không?' }\\\"\\r\\n                                (confirm)=\\\"delete(page.id)\\\"></ghm-button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n<app-page-form [page]=\\\"page\\\" (saveSuccessful)=\\\"search()\\\"></app-page-form>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Location } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { Page } from './models/page.model';\r\nimport { PageService } from './page.service';\r\nimport { IPageId, PAGE_ID, PAGE_ID_DI } from '../../../configs/page-id.config';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { PageFormComponent } from './page-form.component';\r\nimport { FilterLink } from '../../../shareds/models/filter-link.model';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { DestroySubscribers } from '../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { CheckPermission } from '../../../shareds/decorator/check-permission.decorator';\r\n\r\n@Component({\r\n    selector: 'app-page-component',\r\n    templateUrl: './page.component.html',\r\n    preserveWhitespaces: false\r\n})\r\n\r\n@DestroySubscribers()\r\n@CheckPermission()\r\nexport class PageComponent extends BaseListComponent<Page> implements OnInit {\r\n    @ViewChild(PageFormComponent) pageFormComponent: PageFormComponent;\r\n    listPageDisplay: Page[] = [];\r\n    isActive?: boolean;\r\n    clientId?: string;\r\n    page = new Page();\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private title: Title,\r\n                private router: Router,\r\n                private route: ActivatedRoute,\r\n                private location: Location,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService,\r\n                private pageService: PageService) {\r\n        super();\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: Page[] }) => {\r\n            return result.data;\r\n        }));\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe((params: any) => {\r\n            this.keyword = params.keyword;\r\n            this.isActive = params.isActive;\r\n        });\r\n        console.log('hello from pages');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_PAGE, 'Cấu hình', 'Cấu hình trang');\r\n        // this.getPermission(this.appService, this.pageId.CONFIG_PAGE);\r\n    }\r\n\r\n    search() {\r\n        this.renderFilterLink();\r\n        this.isSearching = true;\r\n        this.listItems$ = this.pageService.search(this.keyword, this.isActive)\r\n            .pipe(finalize(() => this.isSearching = false));\r\n    }\r\n\r\n    delete(id: number) {\r\n        this.subscribers.deletePage = this.pageService.delete(id)\r\n            .subscribe((result: IResponseResult) => {\r\n                this.toastr.success(result.message);\r\n                this.search();\r\n            });\r\n    }\r\n\r\n    changeActiveStatus(page: Page) {\r\n        page.isActive = !page.isActive;\r\n    }\r\n\r\n    add() {\r\n        this.pageFormComponent.add();\r\n    }\r\n\r\n    edit(page: Page) {\r\n        this.pageFormComponent.edit(page);\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = '/config/pages';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('clientId', this.clientId),\r\n            new FilterLink('isActive', this.isActive),\r\n        ]);\r\n        // this.appService.updateTabItem(`${path}?${query}`);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","export class Role {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    type: number;\r\n    concurrencyStamp: string;\r\n    rolesPagesViewModels?: RolesPagesViewModels[];\r\n}\r\n\r\nexport interface RolesPagesViewModels {\r\n    pageId: number;\r\n    pageName: string;\r\n    permissions: number;\r\n}\r\n","module.exports = \"<nh-modal #roleDetailModal size=\\\"md\\\">\\r\\n    <nh-modal-header>\\r\\n        <i class=\\\"fa fa-user-secret\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        <ng-container i18n=\\\"@@roleDetailModalTitle\\\">Detail Role: \\\"<span class=\\\"bold\\\">{{ role?.name }}</span>\\\"\\r\\n        </ng-container>\\r\\n    </nh-modal-header>\\r\\n\\r\\n    <nh-modal-content>\\r\\n        <form action=\\\"\\\" class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@roleName\\\" ghmLabel=\\\"Role name\\\" class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <div class=\\\"form-control\\\">{{ role?.name }}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\" class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <div class=\\\"form-control height-auto\\\">{{ role?.description }}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@No\\\">No</th>\\r\\n                                <th class=\\\"\\\" i18n=\\\"@@pageName\\\">Page name</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@view\\\">View</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@insert\\\">Add</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@update\\\">Edit</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@delete\\\">Delete</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@export\\\">Export</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@print\\\">Print</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@approve\\\">Approve</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@report\\\">Report</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr *ngFor=\\\"let page of pages$ | async; let i = index\\\">\\r\\n                                <td class=\\\"center middle w50\\\">{{ i + 1 }}</td>\\r\\n                                <td class=\\\"middle\\\">{{ page.pageName }}</td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.view\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.add\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.edit\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.delete\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.export\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.print\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.approve\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.report\\\"></i>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                        <ghm-button type=\\\"button\\\" classes=\\\"btn btn-default\\\"\\r\\n                                    nh-dismiss=\\\"true\\\"\\r\\n                                    i18n=\\\"@@close\\\">\\r\\n                            Close\\r\\n                        </ghm-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form><!-- END form role info -->\\r\\n    </nh-modal-content>\\r\\n</nh-modal>\\r\\n\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Role } from '../models/role.model';\r\nimport { NhModalComponent } from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { RoleService } from '../role.service';\r\nimport { Observable } from 'rxjs';\r\nimport { RolePageViewModel } from '../models/role-page.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-role-detail',\r\n    templateUrl: './role-detail.component.html'\r\n})\r\n\r\nexport class RoleDetailComponent implements OnInit {\r\n    @ViewChild(NhModalComponent) detailModal: NhModalComponent;\r\n    @Input() role: Role = null;\r\n    pages$: Observable<RolePageViewModel[]>;\r\n\r\n    constructor(private roleService: RoleService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    show(role: Role) {\r\n        this.role = role;\r\n        this.pages$ = this.roleService.getRolesPages(this.role.id).pipe();\r\n        this.detailModal.show();\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #roleFormModal size=\\\"md\\\"\\r\\n          (onShown)=\\\"onModalShown()\\\"\\r\\n          (onHidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n        <i class=\\\"fa fa-user-secret\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        <!--<span *ngIf=\\\"isUpdate; else addNewRoleTitleTemplate\\\" i18n=\\\"@@updateRoleTitle\\\">Update role</span>-->\\r\\n        <!--<ng-template #addNewRoleTitleTemplate i18N=\\\"@@addNewRoleTitle\\\">-->\\r\\n            <!--Add new role-->\\r\\n        <!--</ng-template>-->\\r\\n        <span i18n=\\\"@@roleFormTitle\\\">{isUpdate, select, 1 {Update role} 0 {Add new role}}</span>\\r\\n    </nh-modal-header>\\r\\n\\r\\n    <nh-modal-content>\\r\\n        <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n            <div class=\\\"form-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ghm-alert [type]=\\\"message?.type\\\" *ngIf=\\\"message?.content\\\"\\r\\n                                   i18n=\\\"@@roleFormMessage\\\">\\r\\n                            {\\r\\n                            message?.content, select,\\r\\n                            inValid {Please select at least permission for each page.}\\r\\n                            selectOne {Please select at least one page.}\\r\\n                            }\\r\\n                        </ghm-alert>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.name\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@roleName\\\" ghmLabel=\\\"Role name\\\" class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                               i18n-placeholder=\\\"@@enterRoleNamePlaceholder\\\"\\r\\n                               placeholder=\\\"Enter role name.\\\" id=\\\"name\\\"\\r\\n                               formControlName=\\\"name\\\">\\r\\n                        <span class=\\\"help-block\\\"\\r\\n                              i18n=\\\"@@roleNameValidationMessage\\\" *ngIf=\\\"formErrors.name\\\">\\r\\n                                {formErrors.name, sroleelect, required {Role name can not be null} maxlength {Role name not allowed over 256 characters} other {}}\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.description\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\" class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                              i18n-placeholder=\\\"@@enterDescriptionPlaceHolder\\\"\\r\\n                                              placeholder=\\\"Enter description.\\\"\\r\\n                                              formControlName=\\\"description\\\"></textarea>\\r\\n                        <span class=\\\"help-block\\\" i18n=\\\"@@roleDescriptionValidationMessage\\\"\\r\\n                              *ngIf=\\\"formErrors.description\\\">\\r\\n                            {formErrors.description, select, maxlength {Role name not allowed over 256 characters}}\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@pages\\\" ghmLabel=\\\"Pages\\\" class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary cm-mgb-10\\\" i18n=\\\"@@selectPage\\\"\\r\\n                                (click)=\\\"showSelectPage()\\\">Select page\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@No\\\">No</th>\\r\\n                                <th class=\\\"\\\" i18n=\\\"@@pageName\\\">Page name</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@full\\\">Full</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@view\\\">View</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@insert\\\">Add</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@update\\\">Edit</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@delete\\\">Delete</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@export\\\">Export</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@print\\\">Print</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@approve\\\">Approve</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@report\\\">Report</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@actions\\\">Actions</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr *ngFor=\\\"let page of selectedPages; let i = index\\\">\\r\\n                                <td class=\\\"center middle w50\\\">{{ i + 1 }}</td>\\r\\n                                <td class=\\\"middle\\\">{{ page.pageName }}</td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <mat-checkbox [(checked)]=\\\"isFullPermission\\\"\\r\\n                                                  (change)=\\\"changeFullPermission(page)\\\"\\r\\n                                                  color=\\\"primary\\\"></mat-checkbox>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <mat-checkbox [(checked)]=\\\"page.view\\\"\\r\\n                                                  (change)=\\\"changePermission(page, permissionConst.view)\\\"\\r\\n                                                  color=\\\"primary\\\"></mat-checkbox>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <mat-checkbox [(checked)]=\\\"page.add\\\"\\r\\n                                                  (change)=\\\"changePermission(page, permissionConst.add)\\\"\\r\\n                                                  color=\\\"primary\\\"></mat-checkbox>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <mat-checkbox [(checked)]=\\\"page.edit\\\"\\r\\n                                                  (change)=\\\"changePermission(page, permissionConst.edit)\\\"\\r\\n                                                  color=\\\"primary\\\"></mat-checkbox>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <mat-checkbox [(checked)]=\\\"page.delete\\\"\\r\\n                                                  (change)=\\\"changePermission(page, permissionConst.delete)\\\"\\r\\n                                                  color=\\\"primary\\\"></mat-checkbox>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <mat-checkbox [(checked)]=\\\"page.export\\\"\\r\\n                                                  (change)=\\\"changePermission(page, permissionConst.export)\\\"\\r\\n                                                  color=\\\"primary\\\"></mat-checkbox>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <mat-checkbox [(checked)]=\\\"page.print\\\"\\r\\n                                                  (change)=\\\"changePermission(page, permissionConst.print)\\\"\\r\\n                                                  color=\\\"primary\\\"></mat-checkbox>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <mat-checkbox [(checked)]=\\\"page.approve\\\"\\r\\n                                                  (change)=\\\"changePermission(page, permissionConst.approve)\\\"\\r\\n                                                  color=\\\"primary\\\"></mat-checkbox>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <mat-checkbox [(checked)]=\\\"page.report\\\"\\r\\n                                                  (change)=\\\"changePermission(page, permissionConst.report)\\\"\\r\\n                                                  color=\\\"primary\\\"></mat-checkbox>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deletePage(page)\\\">\\r\\n                                        <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                                    </button>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-8 col-sm-offset-4 text-right\\\">\\r\\n                        <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                                      *ngIf=\\\"!isUpdate\\\"\\r\\n                                      i18n=\\\"@@isCreateAnother\\\"\\r\\n                                      class=\\\"cm-mgr-5\\\"\\r\\n                                      color=\\\"primary\\\">\\r\\n                            Create another\\r\\n                        </mat-checkbox>\\r\\n                        <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\" [loading]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                            Save\\r\\n                        </ghm-button>\\r\\n                        <ghm-button type=\\\"button\\\" classes=\\\"btn btn-default\\\"\\r\\n                                    nh-dismiss=\\\"true\\\"\\r\\n                                    [loading]=\\\"isSaving\\\"\\r\\n                                    i18n=\\\"@@cancel\\\">\\r\\n                            Cancel\\r\\n                        </ghm-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form><!-- END form role info -->\\r\\n    </nh-modal-content>\\r\\n</nh-modal>\\r\\n\\r\\n<ghm-select-picker\\r\\n    title=\\\"Chọn trang phân quyền\\\"\\r\\n    allTitle=\\\"Tất cả trang\\\"\\r\\n    selectedTitle=\\\"Trang được chọn\\\"\\r\\n    [source]=\\\"listPages\\\"\\r\\n    (accepted)=\\\"onAcceptedSelectPage($event)\\\"\\r\\n></ghm-select-picker>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Role, RolesPagesViewModels } from '../models/role.model';\r\nimport { BaseFormComponent } from '../../../../base-form.component';\r\nimport { RoleService } from '../role.service';\r\nimport { UtilService } from '../../../../shareds/services/util.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NhModalComponent } from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { RolePageViewModel } from '../models/role-page.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport { GhmSelectPickerComponent } from '../../../../shareds/components/ghm-select-picker/ghm-select-picker.component';\r\nimport { PageService } from '../../page/page.service';\r\nimport { PageActivatedSearchViewModel } from '../../page/models/page-activated-search.viewmodel';\r\nimport { GhmSelectPickerModel } from '../../../../shareds/components/ghm-select-picker/ghm-select-picker.model';\r\nimport { Permission } from '../../../../shareds/constants/permission.const';\r\nimport { IActionResultResponse } from '../../../../interfaces/iaction-result-response.result';\r\nimport { RoleDetailViewModel } from '../models/role-detail.viewmodel';\r\nimport { AppService } from '../../../../shareds/services/app.service';\r\n\r\n@Component({\r\n    selector: 'app-role-form',\r\n    templateUrl: './role-form.component.html'\r\n})\r\n\r\nexport class RoleFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('roleFormModal') roleFormModal: NhModalComponent;\r\n    @ViewChild(GhmSelectPickerComponent) ghmSelectPickerComponent: GhmSelectPickerComponent;\r\n    role = new Role();\r\n    listPages: { id: number, name: string }[] = [];\r\n    selectedPages: RolePageViewModel[] = [];\r\n    permissionConst = Permission;\r\n    isFullPermission = false;\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private pageService: PageService,\r\n                private roleService: RoleService,\r\n                private appService: AppService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    onModalShown() {\r\n        this.utilService.focusElement('name');\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.model.reset(new Role());\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    onAcceptedSelectPage(pages: GhmSelectPickerModel[]) {\r\n        const listNewPages = [];\r\n        _.each(pages, (page: GhmSelectPickerModel) => {\r\n            const existingPage = _.find(this.selectedPages, (selectedPage: RolePageViewModel) => {\r\n                return selectedPage.pageId === page.id;\r\n            });\r\n            if (!existingPage) {\r\n                const newPage = {\r\n                    pageId: page.id,\r\n                    pageName: page.name,\r\n                    view: false,\r\n                    add: false,\r\n                    edit: false,\r\n                    delete: false,\r\n                    export: false,\r\n                    print: false,\r\n                    approve: false,\r\n                    report: false\r\n                };\r\n                this.selectedPages.push(newPage);\r\n                if (this.isUpdate) {\r\n                    listNewPages.push(newPage);\r\n                }\r\n            }\r\n        });\r\n        if (this.isUpdate) {\r\n            this.roleService.addNewRolePage(this.role.id, listNewPages).subscribe();\r\n        }\r\n    }\r\n\r\n    changePermission(page: RolePageViewModel, permission: number) {\r\n        switch (permission) {\r\n            case this.permissionConst.view:\r\n                page.view = !page.view;\r\n                break;\r\n            case this.permissionConst.add:\r\n                page.add = !page.add;\r\n                break;\r\n            case this.permissionConst.edit:\r\n                page.edit = !page.edit;\r\n                break;\r\n            case this.permissionConst.delete:\r\n                page.delete = !page.delete;\r\n                break;\r\n            case this.permissionConst.export:\r\n                page.export = !page.export;\r\n                break;\r\n            case this.permissionConst.report:\r\n                page.report = !page.report;\r\n                break;\r\n            case this.permissionConst.approve:\r\n                page.approve = !page.approve;\r\n                break;\r\n            case this.permissionConst.print:\r\n                page.print = !page.print;\r\n                break;\r\n        }\r\n        if (this.isUpdate) {\r\n            const permissions = this.calculatePermissions(page);\r\n            this.subscribers.updatePermission = this.roleService.updatePermissions(this.role.id, page.pageId, permissions).subscribe();\r\n        }\r\n    }\r\n\r\n    changeFullPermission(page: RolePageViewModel) {\r\n        page.view = true;\r\n        page.add = true;\r\n        page.edit = true;\r\n        page.delete = true;\r\n        page.report = true;\r\n        page.print = true;\r\n        page.approve = true;\r\n        page.export = true;\r\n        if (this.isUpdate) {\r\n            const permissions = this.calculatePermissions(page);\r\n            this.subscribers.updatePermission = this.roleService.updatePermissions(this.role.id, page.pageId, permissions).subscribe();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.roleFormModal.show();\r\n    }\r\n\r\n    edit(role: Role) {\r\n        this.isUpdate = true;\r\n        this.role = role;\r\n        this.subscribers.getRolesPages = this.roleService.getRoleDetail(role.id)\r\n            .subscribe((roleDetail: RoleDetailViewModel) => {\r\n                this.selectedPages = roleDetail.rolePages;\r\n                this.model.patchValue(roleDetail);\r\n            });\r\n        this.roleFormModal.show();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (this.selectedPages.length === 0) {\r\n            this.setMessage('danger', 'selectOne');\r\n            return;\r\n        }\r\n        if (isValid) {\r\n            this.role = this.model.value;\r\n            this.role.rolesPagesViewModels = this.mapPermissionToPermissionValue();\r\n            const isRolePagePermissionValid = this.validatePagePermission(this.role.rolesPagesViewModels);\r\n            if (!isRolePagePermissionValid) {\r\n                this.setMessage('danger', 'inValid');\r\n                return;\r\n            }\r\n\r\n            this.isSaving = true;\r\n            this.resetMessage();\r\n            if (this.isUpdate) {\r\n                this.roleService.update(this.role)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isUpdate = false;\r\n                        this.isModified = true;\r\n                        this.roleFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.roleService.insert(this.role)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (!this.isCreateAnother) {\r\n                            this.model.reset(new Role());\r\n                            this.roleFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    deletePage(page: RolePageViewModel) {\r\n        if (this.isUpdate) {\r\n            this.subscribers.deletePermission = this.roleService.deletePermission(this.role.id, page.pageId)\r\n                .subscribe((result: IActionResultResponse) => this.removePermission(page.pageId));\r\n        } else {\r\n            this.removePermission(page.pageId);\r\n        }\r\n    }\r\n\r\n    showSelectPage() {\r\n        if (!this.listPages || this.listPages.length === 0) {\r\n            this.subscribers.getListPages = this.pageService.getActivatedPages()\r\n                .subscribe((result: PageActivatedSearchViewModel[]) => this.listPages = result);\r\n        }\r\n        this.ghmSelectPickerComponent.show();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'description']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['maxlength']}\r\n        ]);\r\n        this.model = this.fb.group({\r\n            'id': [this.role.id],\r\n            'name': [this.role.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'description': [this.role.description, [\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'concurrencyStamp': [this.role.concurrencyStamp]\r\n        });\r\n        this.subscribers.modelValueChanges =\r\n            this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private mapPermissionToPermissionValue() {\r\n        return this.selectedPages.map((page: RolePageViewModel) => {\r\n            return {\r\n                pageId: page.pageId,\r\n                pageName: page.pageName,\r\n                permissions: this.calculatePermissions(page)\r\n            };\r\n        });\r\n    }\r\n\r\n    private calculatePermissions(page: RolePageViewModel) {\r\n        let permissions = 0;\r\n        if (page.view) {\r\n            permissions += Permission.view;\r\n        }\r\n        if (page.add) {\r\n            permissions += Permission.add;\r\n        }\r\n        if (page.edit) {\r\n            permissions += Permission.edit;\r\n        }\r\n        if (page.delete) {\r\n            permissions += Permission.delete;\r\n        }\r\n        if (page.export) {\r\n            permissions += Permission.export;\r\n        }\r\n        if (page.print) {\r\n            permissions += Permission.print;\r\n        }\r\n        if (page.approve) {\r\n            permissions += Permission.approve;\r\n        }\r\n        if (page.report) {\r\n            permissions += Permission.report;\r\n        }\r\n        return permissions;\r\n    }\r\n\r\n    private validatePagePermission(pagePermissions: RolesPagesViewModels[]): boolean {\r\n        const inValidCount = _.countBy(pagePermissions, (pagePermission: RolesPagesViewModels) => {\r\n            return pagePermission.permissions === 0;\r\n        }).true;\r\n        return !inValidCount || inValidCount === 0;\r\n    }\r\n\r\n    private removePermission(pageId: number) {\r\n        _.remove(this.selectedPages, (selectedPage: RolePageViewModel) => {\r\n            return selectedPage.pageId === pageId;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row cm-mgb-10\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@keywordSearch\\\"\\r\\n                       placeholder=\\\"Enter keyword for search please.\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <ghm-button icon=\\\"fa fa-search\\\" classes=\\\"btn btn-primary\\\" [loading]=\\\"isSearching\\\"></ghm-button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group pull-right\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"add()\\\" i18n=\\\"@@addNew\\\" *ngIf=\\\"permission.add\\\">\\r\\n                    Add new\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <table class=\\\"table table-stripped table-hover\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@roleName\\\">Role name</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@description\\\">Description</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@roleType\\\">Role type</th>\\r\\n                <th class=\\\"center middle w150\\\" i18n=\\\"@@action\\\"\\r\\n                    *ngIf=\\\"permission.view || permission.edit || permission.delete\\\">Action\\r\\n                </th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listItems$ | async; let i = index\\\">\\r\\n                <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n                <td class=\\\"middle\\\"><a href=\\\"javascript://\\\" (click)=\\\"detail(item.id)\\\">{{ item.name }}</a></td>\\r\\n                <td class=\\\"middle\\\">{{ item.description }}</td>\\r\\n                <td class=\\\"middle\\\" i18n=\\\"@@roleType\\\">{item.type, select, 0 {Built in} 1 {Custom}}</td>\\r\\n                <td class=\\\"center middle\\\" *ngIf=\\\"permission.view || permission.edit || permission.delete\\\">\\r\\n                    <ghm-button icon=\\\"fa fa-eye\\\" classes=\\\"btn btn-default btn-sm\\\"\\r\\n                                *ngIf=\\\"item.type !== 0\\\"\\r\\n                                (clicked)=\\\"detail(item)\\\"></ghm-button>\\r\\n                    <ghm-button icon=\\\"fa fa-edit\\\" classes=\\\"btn btn-primary btn-sm\\\"\\r\\n                                *ngIf=\\\"item.type !== 0\\\"\\r\\n                                (clicked)=\\\"edit(item)\\\"></ghm-button>\\r\\n                    <ghm-button icon=\\\"fa fa-trash-o\\\" classes=\\\"btn btn-danger btn-sm\\\"\\r\\n                                *ngIf=\\\"item.type !== 0\\\"\\r\\n                                [swal]=\\\"deleteRole\\\"\\r\\n                                (confirm)=\\\"delete(item.id)\\\"></ghm-button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n                    [isDisabled]=\\\"isSearching\\\" [pageName]=\\\"'quyền'\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-role-form (saveSuccessful)=\\\"search(1)\\\"></app-role-form>\\r\\n<app-role-detail></app-role-detail>\\r\\n\\r\\n<swal\\r\\n    i18n=\\\"@@confirmDeleteRole\\\"\\r\\n    i18n-title\\r\\n    i18n-text\\r\\n    #deleteRole\\r\\n    title=\\\"Are you sure for delete this role?\\\"\\r\\n    text=\\\"You can't recover this role after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { Role } from './models/role.model';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\nimport { RoleService } from './role.service';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { RoleFormComponent } from './role-form/role-form.component';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { CheckPermission } from '../../../shareds/decorator/check-permission.decorator';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RoleDetailComponent } from './role-detail/role-detail.component';\r\n\r\n@Component({\r\n    selector: 'app-role',\r\n    templateUrl: './role.component.html',\r\n    providers: [RoleService]\r\n})\r\n@CheckPermission()\r\nexport class RoleComponent extends BaseListComponent<Role> implements OnInit {\r\n    @ViewChild(RoleFormComponent) roleFormComponent: RoleFormComponent;\r\n    @ViewChild(RoleDetailComponent) roleDetailComponent: RoleDetailComponent;\r\n\r\n    constructor(@Inject(PAGE_ID) private pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private appService: AppService,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private roleService: RoleService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_ROLE, 'Quản lý quyền', 'Danh sách quyền');\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: ISearchResult<Role> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            return data.items;\r\n        }));\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.listItems$ = this.roleService.search(this.keyword, this.currentPage)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((result: ISearchResult<Role>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.spinnerService.show('Đang xóa quyền. Vui lòng đợi...');\r\n        this.roleService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(this.currentPage);\r\n            });\r\n    }\r\n\r\n    add() {\r\n        this.roleFormComponent.add();\r\n    }\r\n\r\n    edit(role: Role) {\r\n        this.roleFormComponent.edit(role);\r\n    }\r\n\r\n    detail(role: Role) {\r\n        this.roleDetailComponent.show(role);\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { Observable } from 'rxjs';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { Role, RolesPagesViewModels } from './models/role.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { RolesPages } from './models/role-page.model';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { RolePageViewModel } from './models/role-page.viewmodel';\r\nimport { Permission } from '../../../shareds/constants/permission.const';\r\nimport { RolePageSearchViewModel } from './models/role-page-search.viewmodel';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { RoleDetailViewModel } from './models/role-detail.viewmodel';\r\n\r\n@Injectable()\r\nexport class RoleService implements Resolve<any> {\r\n    url = 'roles/';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.CORE_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.params;\r\n        return this.search(queryParams.keyword, queryParams.page, queryParams.pageSize);\r\n    }\r\n\r\n    search(keyword: string, page: number, pageSize?: number): Observable<ISearchResult<Role>> {\r\n        return this.http.get(this.url, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<ISearchResult<Role>>;\r\n    }\r\n\r\n    insert(role: Role): Observable<IResponseResult> {\r\n        return this.http.post(this.url, role).pipe(map((result: IResponseResult) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IResponseResult>;\r\n    }\r\n\r\n    update(role: Role): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}/${role.id}`, {\r\n            name: role.name,\r\n            description: role.description,\r\n            concurrencyStamp: role.concurrencyStamp\r\n        }).pipe(map((result: IResponseResult) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    updatePermissions(roleId: string, pageId: number, permissions: number): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}pages/${roleId}/${pageId}/${permissions}`, {})\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    deletePermission(roleId: string, pageId: number): Observable<IActionResultResponse> {\r\n        return this.http.delete(`${this.url}pages/${roleId}/${pageId}`)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    delete(id: string): Observable<IResponseResult> {\r\n        return this.http.delete(`${this.url}${id}`)\r\n            .pipe(map((result: IResponseResult) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    addNewRolePage(roleId: string, rolePagePermission: RolesPagesViewModels[]): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}${roleId}/pages`, rolePagePermission)\r\n            .pipe(map((result: IResponseResult) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    getRolesPages(id: string): Observable<RolePageViewModel[]> {\r\n        return this.http.get(`${this.url}${id}/pages`).pipe(map((result: ISearchResult<RolePageSearchViewModel>) => {\r\n            const data = result.items;\r\n            if (data) {\r\n                const rolePages = [];\r\n                data.forEach((rolePage: RolePageSearchViewModel) => {\r\n                    rolePages.push({\r\n                        pageId: rolePage.pageId,\r\n                        pageName: rolePage.pageName,\r\n                        view: (rolePage.permissions & Permission.view) === Permission.view,\r\n                        add: (rolePage.permissions & Permission.add) === Permission.add,\r\n                        edit: (rolePage.permissions & Permission.edit) === Permission.edit,\r\n                        delete: (rolePage.permissions & Permission.delete) === Permission.delete,\r\n                        export: (rolePage.permissions & Permission.export) === Permission.export,\r\n                        print: (rolePage.permissions & Permission.print) === Permission.print,\r\n                        approve: (rolePage.permissions & Permission.approve) === Permission.approve,\r\n                        report: (rolePage.permissions & Permission.report) === Permission.report,\r\n                    });\r\n                });\r\n                return rolePages;\r\n            }\r\n            return [];\r\n        })) as Observable<RolePageViewModel[]>;\r\n    }\r\n\r\n    getAllPages(): Observable<RolePageViewModel[]> {\r\n        return this.http.get(`${this.url}/pages`)\r\n            .pipe(map((result: ISearchResult<RolesPages>) => {\r\n                const rolesPages = [];\r\n                if (result && result.items) {\r\n                    result.items.forEach((item: RolesPages) => {\r\n                        rolesPages.push({\r\n                            pageId: item.pageId,\r\n                            pageName: item.pageName,\r\n                            view: false,\r\n                            add: false,\r\n                            edit: false,\r\n                            delete: false,\r\n                            export: false,\r\n                            print: false,\r\n                            approve: false,\r\n                            report: false\r\n                        });\r\n                    });\r\n                }\r\n                return rolesPages;\r\n            })) as Observable<RolePageViewModel[]>;\r\n    }\r\n\r\n    getRoleDetail(id: string): Observable<RoleDetailViewModel> {\r\n        return this.http.get(`${this.url}${id}`)\r\n            .pipe(map((result: IActionResultResponse<Role>) => {\r\n                const data = result.data;\r\n                const roleDetail: RoleDetailViewModel = {\r\n                    id: data.id,\r\n                    name: data.name,\r\n                    concurrencyStamp: data.concurrencyStamp,\r\n                    description: data.description,\r\n                    rolePages: []\r\n                };\r\n                if (data.rolesPagesViewModels && data.rolesPagesViewModels.length > 0) {\r\n                    data.rolesPagesViewModels.forEach((rolePage: RolesPagesViewModels) => {\r\n                        roleDetail.rolePages.push({\r\n                            pageId: rolePage.pageId,\r\n                            pageName: rolePage.pageName,\r\n                            view: this.checkPermission(Permission.view, rolePage.permissions),\r\n                            add: this.checkPermission(Permission.add, rolePage.permissions),\r\n                            edit: this.checkPermission(Permission.edit, rolePage.permissions),\r\n                            delete: this.checkPermission(Permission.delete, rolePage.permissions),\r\n                            export: this.checkPermission(Permission.export, rolePage.permissions),\r\n                            print: this.checkPermission(Permission.print, rolePage.permissions),\r\n                            approve: this.checkPermission(Permission.approve, rolePage.permissions),\r\n                            report: this.checkPermission(Permission.report, rolePage.permissions),\r\n                        });\r\n                    });\r\n                }\r\n                return roleDetail;\r\n            })) as Observable<RoleDetailViewModel>;\r\n    }\r\n\r\n    getPages(id: string): Observable<RolePageViewModel[]> {\r\n        return this.http.get(`${this.url}/${id}/pages`)\r\n            .pipe(map((result: ISearchResult<RolesPages>) => {\r\n                const rolesPages = [];\r\n                if (result && result.items) {\r\n                    result.items.forEach((item: RolesPages) => {\r\n                        rolesPages.push({\r\n                            pageId: item.pageId,\r\n                            pageName: item.pageName,\r\n                            view: this.checkPermission(Permission.view, item.permissions),\r\n                            add: this.checkPermission(Permission.add, item.permissions),\r\n                            edit: this.checkPermission(Permission.edit, item.permissions),\r\n                            delete: this.checkPermission(Permission.delete, item.permissions),\r\n                            export: this.checkPermission(Permission.export, item.permissions),\r\n                            print: this.checkPermission(Permission.print, item.permissions),\r\n                            approve: this.checkPermission(Permission.approve, item.permissions),\r\n                            report: this.checkPermission(Permission.report, item.permissions),\r\n                        });\r\n                    });\r\n                }\r\n                return rolesPages;\r\n            })) as  Observable<RolePageViewModel[]>;\r\n    }\r\n\r\n    private checkPermission(permission: number, permissions: number): boolean {\r\n        return (permissions & permission) === permission;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #tenantFormModal size=\\\"md\\\" (onHidden)=\\\"tenantFormModalHidden()\\\"\\r\\n          (onShown)=\\\"tenantFormModalShown()\\\">\\r\\n    <nh-modal-header>\\r\\n        <i class=\\\"fa fa-desktop\\\"></i> {{isUpdate ? 'Cập nhật thông tin tenant' : 'Thêm mới tenant'}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.name\\\">\\r\\n                <label ghmLabel=\\\"Tên khách hàng\\\"\\r\\n                       class=\\\"col-sm-3 control-label\\\"\\r\\n                       [required]=\\\"true\\\"\\r\\n                ></label>\\r\\n                <div class=\\\"col-sm-9\\\">\\r\\n                    <input type=\\\"text\\\" value=\\\"\\\"\\r\\n                           id=\\\"name\\\"\\r\\n                           class=\\\"form-control\\\"\\r\\n                           placeholder=\\\"Nhập tên tenant\\\"\\r\\n                           formControlName=\\\"name\\\"/>\\r\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.name\\\"> {{formErrors.name}} </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.email\\\">\\r\\n                <label ghmLabel=\\\"Email\\\"\\r\\n                       class=\\\"col-sm-3 control-label\\\"\\r\\n                       [required]=\\\"true\\\"\\r\\n                ></label>\\r\\n                <div class=\\\"col-sm-9\\\">\\r\\n                    <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\"\\r\\n                           placeholder=\\\"Nhập email\\\"\\r\\n                           formControlName=\\\"email\\\"/>\\r\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.email\\\"> {{formErrors.email}} </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.phoneNumber\\\">\\r\\n                <label ghmLabel=\\\"Số điện thoại\\\"\\r\\n                       class=\\\"col-sm-3 control-label\\\"\\r\\n                       [required]=\\\"true\\\"\\r\\n                ></label>\\r\\n                <div class=\\\"col-sm-9\\\">\\r\\n                    <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\"\\r\\n                           placeholder=\\\"Nhập số điện thoại\\\"\\r\\n                           formControlName=\\\"phoneNumber\\\"/>\\r\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.phoneNumber\\\"> {{formErrors.phoneNumber}} </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.address\\\">\\r\\n                <label ghmLabel=\\\"Địa chỉ\\\"\\r\\n                       class=\\\"col-sm-3 control-label\\\"\\r\\n                       [required]=\\\"true\\\"\\r\\n                ></label>\\r\\n                <div class=\\\"col-sm-9\\\">\\r\\n                    <textarea type=\\\"text\\\" rows=\\\"3\\\" class=\\\"form-control\\\"\\r\\n                              placeholder=\\\"Nhập địa chỉ\\\"\\r\\n                              formControlName=\\\"address\\\">\\r\\n                    </textarea>\\r\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.address\\\"> {{formErrors.address}} </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label ghmLabel=\\\"Ghi chú\\\"\\r\\n                       class=\\\"col-sm-3 control-label\\\"\\r\\n                ></label>\\r\\n                <div class=\\\"col-sm-9\\\">\\r\\n                    <textarea type=\\\"text\\\" rows=\\\"3\\\" class=\\\"form-control\\\"\\r\\n                              placeholder=\\\"Nhập ghi chú\\\"\\r\\n                              formControlName=\\\"note\\\">\\r\\n                    </textarea>\\r\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formErrors.note\\\">\\r\\n                        {{ formErrors.note }}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label ghmLabel=\\\"Hỗ trợ ngôn ngữ\\\"\\r\\n                       class=\\\"col-sm-3 control-label\\\"\\r\\n                ></label>\\r\\n                <div class=\\\"col-sm-9\\\">\\r\\n                    <nh-select\\r\\n                        title=\\\"-- Chọn ngôn ngữ hỗ trợ --\\\"\\r\\n                        [liveSearch]=\\\"true\\\"\\r\\n                        [data]=\\\"languages\\\"\\r\\n                        [multiple]=\\\"false\\\"\\r\\n                        (onSelectItem)=\\\"onItemSelected($event)\\\"\\r\\n                    ></nh-select>\\r\\n\\r\\n                    <ul class=\\\"list-items cm-mgt-10\\\">\\r\\n                        <li *ngFor=\\\"let language of selectedLanguages\\\">\\r\\n                            <div class=\\\"item-body\\\">\\r\\n                                <a href=\\\"javascript://\\\" (click)=\\\"removeLanguage(language)\\\" class=\\\"text-danger\\\">\\r\\n                                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                </a>\\r\\n                                {{language.name}}\\r\\n                            </div>\\r\\n                            <ul class=\\\"item-action-group\\\">\\r\\n                                <li><a href=\\\"javascript://\\\" (click)=\\\"changeLanguageDefaultStatus(language)\\\"\\r\\n                                       [ngClass]=\\\"language.isDefault ? 'active' : 'inactive'\\\">\\r\\n                                    <i class=\\\"fa fa-check\\\"></i>\\r\\n                                </a></li>\\r\\n                                <li>\\r\\n                                    <a href=\\\"javascript://\\\" (click)=\\\"changeLanguageActiveStatus(language)\\\"\\r\\n                                       [ngClass]=\\\"language.isActive ? 'active' : 'inactive'\\\">\\r\\n                                        <i class=\\\"fa fa-eye\\\" *ngIf=\\\"language.isActive\\\"></i>\\r\\n                                        <i class=\\\"fa fa-eye-slash\\\" *ngIf=\\\"!language.isActive\\\"></i>\\r\\n                                    </a>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-9 col-sm-offset-3\\\">\\r\\n                    <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\"> Kích hoạt</mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <ghm-button classes=\\\"btn btn-primary\\\" [loading]=\\\"isSaving\\\"\\r\\n                        [icon]=\\\"isUpdate ? 'fa fa-save' : 'fa fa-plus'\\\">\\r\\n                {{isUpdate ? 'Lưu lại' : 'Thêm'}}\\r\\n            </ghm-button>\\r\\n            <ghm-button type=\\\"button\\\" classes=\\\"btn btn-default\\\" icon=\\\"fa fa-times\\\" nh-dismiss=\\\"true\\\">\\r\\n                Hủy bỏ\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Tenant, TenantLanguage } from './tenant.model';\r\nimport { TenantService } from './tenant.service';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Page } from '../page/models/page.model';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { NhModalComponent } from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LanguageService } from '../../../shareds/services/language.service';\r\nimport { LanguageSearchViewModel } from '../../../shareds/models/language.viewmodel';\r\nimport { DestroySubscribers } from '../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport * as _ from 'lodash';\r\nimport { NhSelectData } from '../../../shareds/components/nh-select/nh-select.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\n\r\n@Component({\r\n    selector: 'app-tenant-form',\r\n    templateUrl: './tenant-form.component.html',\r\n    providers: [LanguageService]\r\n})\r\n\r\n@DestroySubscribers()\r\nexport class TenantFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('tenantFormModal') tenantFormModal: NhModalComponent;\r\n    tenant = new Tenant();\r\n    languages = [];\r\n    selectedLanguages = [];\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private utilService: UtilService,\r\n                private toastr: ToastrService,\r\n                private tenantService: TenantService,\r\n                private appService: AppService,\r\n                private languageService: LanguageService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    onItemSelected(language: NhSelectData) {\r\n        if (language.id == null) {\r\n            return;\r\n        }\r\n\r\n        const languageInfo = _.find(this.selectedLanguages, (languageItem: LanguageSearchViewModel) => {\r\n            return languageItem.languageId === language.id;\r\n        });\r\n\r\n        if (languageInfo) {\r\n            this.toastr.warning('Ngôn ngữ đã tồn tại trong danh sách được chọn.');\r\n            return;\r\n        }\r\n\r\n        language.data.isActive = true;\r\n        this.selectedLanguages.push(language.data);\r\n        if (this.isUpdate) {\r\n            this.subscribers.addLanguage = this.tenantService.addLanguage(this.tenant.id, {\r\n                languageId: language.id,\r\n                name: language.name,\r\n                isActive: true,\r\n                isDefault: false\r\n            }).subscribe();\r\n        }\r\n    }\r\n\r\n    removeLanguage(language: LanguageSearchViewModel) {\r\n        if (this.isUpdate) {\r\n            this.subscribers.removeLanguage = this.tenantService.removeLanguage(this.tenant.id, language.languageId)\r\n                .subscribe((result: IActionResultResponse) => {\r\n                    this.removeSelectedLanguage(language);\r\n                });\r\n        } else {\r\n            this.removeSelectedLanguage(language);\r\n        }\r\n    }\r\n\r\n    changeLanguageDefaultStatus(language: LanguageSearchViewModel) {\r\n        _.each(this.selectedLanguages, (selectedLanguage: LanguageSearchViewModel) => {\r\n            selectedLanguage.isDefault = false;\r\n        });\r\n        language.isDefault = !language.isDefault;\r\n        if (this.isUpdate) {\r\n            this.tenantService.updateTenantLanguageDefaultStatus(this.tenant.id, language.languageId, language.isDefault)\r\n                .subscribe();\r\n        }\r\n    }\r\n\r\n    changeLanguageActiveStatus(language: LanguageSearchViewModel) {\r\n        language.isActive = !language.isActive;\r\n        if (this.isUpdate) {\r\n            this.tenantService.updateTenantLanguageActiveStatus(this.tenant.id, language.languageId, language.isActive)\r\n                .subscribe();\r\n        }\r\n    }\r\n\r\n    tenantFormModalShown() {\r\n        if (this.languages.length === 0) {\r\n            this.subscribers.getAllLanguages = this.languageService.getAllLanguage()\r\n                .subscribe((result: LanguageSearchViewModel[]) => {\r\n                    this.languages = result.map((language: LanguageSearchViewModel) => {\r\n                        language.isActive = false;\r\n                        return {\r\n                            id: language.languageId,\r\n                            name: language.name,\r\n                            isSelected: false,\r\n                            data: language\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n        this.utilService.focusElement('name');\r\n    }\r\n\r\n    tenantFormModalHidden() {\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        this.tenantFormModal.show();\r\n    }\r\n\r\n    edit(tenant: Tenant) {\r\n        this.isUpdate = true;\r\n        this.tenant = tenant;\r\n        this.model.patchValue(tenant);\r\n        this.subscribers.getLanguage = this.tenantService.getLanguage(tenant.id)\r\n            .subscribe((result: TenantLanguage[]) => this.selectedLanguages = result);\r\n        this.tenantFormModal.show();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (this.selectedLanguages.length === 0) {\r\n            this.toastr.error('Vui lòng chọn ít nhất một ngôn ngữ.');\r\n            return;\r\n        }\r\n\r\n        const defaultLanguage = _.find(this.selectedLanguages, (selectedLanguage: LanguageSearchViewModel) => {\r\n            return selectedLanguage.isDefault;\r\n        });\r\n\r\n        if (!defaultLanguage) {\r\n            this.toastr.error('Vui lòng chọn ít nhất 1 ngôn ngữ mặc định.');\r\n            return;\r\n        }\r\n\r\n        if (isValid) {\r\n            this.tenant = this.model.value;\r\n            this.tenant.languages = this.selectedLanguages.map((selectedLanguage: LanguageSearchViewModel) => {\r\n                return {\r\n                    languageId: selectedLanguage.languageId,\r\n                    isActive: selectedLanguage.isActive,\r\n                    isDefault: selectedLanguage.isDefault\r\n                } as TenantLanguage;\r\n            });\r\n            if (this.isUpdate) {\r\n                this.isSaving = true;\r\n                this.tenantService.update(this.tenant)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.model.patchValue(new Page());\r\n                        this.isUpdate = false;\r\n                        this.tenantFormModal.dismiss();\r\n                        this.isModified = true;\r\n                        return;\r\n                    });\r\n            } else {\r\n                this.tenantService.insert(this.tenant)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.utilService.focusElement('pageId');\r\n                        this.isModified = true;\r\n                        this.model.reset(new Tenant());\r\n                        this.utilService.focusElement('name');\r\n                        return;\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'email', 'phoneNumber', 'address', 'note']);\r\n        this.validationMessages = {\r\n            'name': {\r\n                'required': 'Tên trang không được để trống',\r\n                'maxLength': 'Tên trang không được vượt quá 256 ký tự'\r\n            },\r\n            'email': {\r\n                'required': 'Vui lòng nhập email.',\r\n                'maxLength': 'Email không được phép vượt quá 256'\r\n            },\r\n            'phoneNumber': {\r\n                'required': 'Vui lòng nhập số điện thoại.',\r\n                'maxLength': 'Số điện thoại không được phép vượt quá 50 ký tự.'\r\n            },\r\n            'address': {\r\n                'required': 'Vui lòng nhập địa chỉ.',\r\n                'maxLength': 'Địa chỉ không được phép vượt quá 500 ký tự.'\r\n            },\r\n            'note': {\r\n                'maxLength': 'Nội dung mô tả không được phép vượt quá 500 ký tự..',\r\n            },\r\n        };\r\n\r\n        this.model = this.fb.group({\r\n            'id': [this.tenant.id],\r\n            'name': [this.tenant.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'email': [this.tenant.email, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'phoneNumber': [this.tenant.phoneNumber, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            'address': [this.tenant.address, [\r\n                Validators.required,\r\n                Validators.maxLength(500)\r\n            ]],\r\n            'note': [this.tenant.note, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            'isActive': [this.tenant.isActive],\r\n        });\r\n        this.model.valueChanges.subscribe(data =>\r\n            this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, false));\r\n    }\r\n\r\n    private removeSelectedLanguage(language: LanguageSearchViewModel) {\r\n        _.remove(this.selectedLanguages, (selectedLanguage: LanguageSearchViewModel) => {\r\n            return selectedLanguage.languageId === language.languageId;\r\n        });\r\n    }\r\n\r\n    private resetForm() {\r\n        this.model.reset(new Tenant());\r\n        this.selectedLanguages = [];\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row cm-mgb-10\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <form action=\\\"\\\" class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" placeholder=\\\"Nhập từ khóa tìm kiếm\\\" class=\\\"form-control cm-mgr-5\\\"\\r\\n                       name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <ghm-button icon=\\\"fa fa-search\\\" [loading]=\\\"isSearching\\\"></ghm-button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group pull-right\\\">\\r\\n                <ghm-button type=\\\"button\\\" (clicked)=\\\"add()\\\">\\r\\n                    Thêm\\r\\n                </ghm-button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\">STT</th>\\r\\n                <th class=\\\"center middle\\\">Tên khách hàng</th>\\r\\n                <th class=\\\"center middle w150\\\">Email</th>\\r\\n                <th class=\\\"center middle w100\\\">Số điện thoại</th>\\r\\n                <th class=\\\"center middle w100\\\">Kích hoạt</th>\\r\\n                <th class=\\\"center middle w50\\\" *ngIf=\\\"permission.edit\\\"></th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listItems$ | async; let i = index\\\">\\r\\n                <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n                <td class=\\\"middle\\\">{{ item.name }}</td>\\r\\n                <td class=\\\"middle\\\">{{ item.email }}</td>\\r\\n                <td class=\\\"middle\\\">{{ item.phoneNumber }}</td>\\r\\n                <td class=\\\"middle\\\">\\r\\n                    <span class=\\\"badge\\\"\\r\\n                          [class.badge-danger]=\\\"!isActive\\\"\\r\\n                          [class.badge-success]=\\\"isActive\\\">{{isActive ? 'Đã kích hoạt' : 'chưa kích hoạt'}}</span>\\r\\n                </td>\\r\\n                <td class=\\\"center middle\\\" *ngIf=\\\"permission.edit\\\">\\r\\n                    <ghm-button type=\\\"button\\\" classes=\\\"btn btn-primary btn-sm\\\" icon=\\\"fa fa-edit\\\"\\r\\n                                matTooltip=\\\"Update\\\"\\r\\n                                (click)=\\\"edit(item)\\\">\\r\\n                    </ghm-button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n                    [isDisabled]=\\\"isSearching\\\" [pageName]=\\\"'tenant'\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-tenant-form (saveSuccessful)=\\\"search(1)\\\"></app-tenant-form>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { Tenant } from './tenant.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TenantService } from './tenant.service';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { TenantFormComponent } from './tenant-form.component';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { DestroySubscribers } from '../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport { CheckPermission } from '../../../shareds/decorator/check-permission.decorator';\r\n\r\n@Component({\r\n    selector: 'app-tenant',\r\n    templateUrl: './tenant.component.html'\r\n})\r\n\r\n@DestroySubscribers()\r\n@CheckPermission()\r\nexport class TenantComponent extends BaseListComponent<Tenant> implements OnInit {\r\n    @ViewChild(TenantFormComponent) tenantFormComponent: TenantFormComponent;\r\n    isActive: boolean;\r\n\r\n    constructor(@Inject(PAGE_ID) private pageId: IPageId,\r\n                private toastr: ToastrService,\r\n                private appService: AppService,\r\n                private tenantService: TenantService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_TENANT, 'Quản lý Tenant', 'Danh sách tenant');\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.listItems$ = this.tenantService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((result: ISearchResult<Tenant>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                })\r\n            );\r\n    }\r\n\r\n    add() {\r\n        this.tenantFormComponent.add();\r\n    }\r\n\r\n    edit(tenant: Tenant) {\r\n        this.tenantFormComponent.edit(tenant);\r\n    }\r\n}\r\n","export interface TenantLanguage {\r\n    languageId: string;\r\n    name: string;\r\n    isActive: boolean;\r\n    isDefault: boolean;\r\n}\r\n\r\nexport class Tenant {\r\n    id: string;\r\n    name: string;\r\n    phoneNumber: string;\r\n    logo: string;\r\n    email: string;\r\n    address: string;\r\n    note: string;\r\n    isActive: boolean;\r\n    languages: TenantLanguage[];\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { Tenant, TenantLanguage } from './tenant.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\n\r\n@Injectable()\r\nexport class TenantService {\r\n    url = 'tenants/';\r\n\r\n    constructor(@Inject(APP_CONFIG) appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService) {\r\n        this.url = `${appConfig.CORE_API_URL}${this.url}`;\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page?: number, pageSize: number = 1): Observable<ISearchResult<Tenant>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null && isActive !== undefined ? keyword : '')\r\n                .set('page', page ? page.toString() : '')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '')\r\n        }) as Observable<ISearchResult<Tenant>>;\r\n    }\r\n\r\n    insert(tenant: Tenant): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}`, tenant) as Observable<IResponseResult>;\r\n    }\r\n\r\n    update(tenant: Tenant): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}/${tenant.id}`, {\r\n            name: tenant.name,\r\n            isActive: tenant.isActive,\r\n            phoneNumber: tenant.phoneNumber,\r\n            logo: tenant.logo,\r\n            email: tenant.email,\r\n            address: tenant.address,\r\n            note: tenant.note,\r\n            languages: tenant.languages\r\n        }).pipe(map((result: IActionResultResponse) => {\r\n            this.appService.showActionResultMessage(result);\r\n            return result;\r\n        })) as Observable<IResponseResult>;\r\n    }\r\n\r\n    updateActiveStatus(id: string, isActive?: boolean): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}/${id}/${isActive}`, {})\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    getLanguage(tenantId: string): Observable<TenantLanguage[]> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}${tenantId}/languages`)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<TenantLanguage[]>;\r\n    }\r\n\r\n    addLanguage(tenantId: string, language: TenantLanguage) {\r\n        return this.http.post(`${this.url}${tenantId}/languages`, language)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            }));\r\n    }\r\n\r\n    removeLanguage(tenantId: string, languageId: string) {\r\n        return this.http.delete(`${this.url}${tenantId}/languages/${languageId}`)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            }));\r\n    }\r\n\r\n    updateTenantLanguageActiveStatus(tenantId: string, languageId: string, isActive: boolean): Observable<IActionResultResponse> {\r\n        return this.http.get(`${this.url}${tenantId}/language/${languageId}/active/${isActive}`)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    updateTenantLanguageDefaultStatus(tenantId: string, languageId: string, isDefault: boolean): Observable<IActionResultResponse> {\r\n        return this.http.get(`${this.url}${tenantId}/language/${languageId}/default/${isDefault}`)\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n}\r\n","module.exports = \"<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n<head>\\r\\n    <meta charset=\\\"UTF-8\\\">\\r\\n    <title>Title</title>\\r\\n</head>\\r\\n<body>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-user-setting',\r\n    templateUrl: './user-setting.component.html'\r\n})\r\n\r\nexport class UserSettingComponent implements OnInit {\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"ghm-select-picker-container\\\" *ngIf=\\\"isShow\\\">\\r\\n    <div class=\\\"ghm-select-picker-header\\\" *ngIf=\\\"title\\\">\\r\\n        <h4 class=\\\"bold\\\">{{ title }}</h4>\\r\\n    </div><!-- END: .ghm-select-picker-header -->\\r\\n    <div class=\\\"ghm-select-picker-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" i18n=\\\"@@PleaseSelectAtLeastOneItem\\\" *ngIf=\\\"errorMessage\\\">\\r\\n                    {errorMessage, select, required {Please select at least one item} other {}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"ghm-select-picker-left\\\">\\r\\n            <h4 class=\\\"title\\\">{{allTitle}}</h4>\\r\\n            <ul class=\\\"ghm-select-picker-items\\\">\\r\\n                <li *ngFor=\\\"let item of source\\\" (click)=\\\"selectItem(item)\\\">{{ item.name }}</li>\\r\\n            </ul>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"paging\\\">\\r\\n                <div class=\\\"text-right\\\" class=\\\"col-sm-12\\\" *ngIf=\\\"totalRows > 0\\\">\\r\\n                    <ul class=\\\"pagination\\\">\\r\\n                        <li *ngFor=\\\"let pageNumber of listPages\\\" [class.active]=\\\"pageNumber === currentPage\\\">\\r\\n                            <a href=\\\"javascript://\\\" (click)=\\\"pageClick(pageNumber)\\\">{{pageNumber}}</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div><!-- END: .ghm-select-picker-left -->\\r\\n        <div class=\\\"ghm-select-picker-right\\\">\\r\\n            <h4 class=\\\"title\\\">{{selectedTitle}}</h4>\\r\\n            <ul class=\\\"ghm-select-picker-items\\\">\\r\\n                <li *ngFor=\\\"let item of selectedItems\\\">\\r\\n                    {{ item.name }}\\r\\n                    <a href=\\\"javascript://\\\" class=\\\"ghm-select-picker-item-action\\\" (click)=\\\"removeItem(item.id)\\\">\\r\\n                        <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div><!-- END: .ghm-select-picker-right -->\\r\\n    </div><!-- END: .ghm-select-picker-body -->\\r\\n    <div class=\\\"ghm-select-picker-footer\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" i18n=\\\"@@accept\\\" (click)=\\\"accept()\\\">Accept</button>\\r\\n        <button class=\\\"btn btn-default\\\" i18n=\\\"@@cancel\\\" (click)=\\\"dismiss()\\\">Cancel</button>\\r\\n    </div><!-- END: .ghm-select-picker-footer -->\\r\\n</div><!-- END: .ghm-select-picker-container -->\\r\\n\"","module.exports = \".ghm-select-picker-container {\\n  border: 1px solid #ddd;\\n  width: 50%;\\n  margin: 0px auto;\\n  position: fixed;\\n  top: 20px;\\n  left: 0;\\n  right: 0;\\n  background: white;\\n  z-index: 9999999; }\\n  .ghm-select-picker-container ul {\\n    list-style: none;\\n    padding-left: 0;\\n    margin-bottom: 0;\\n    border: 1px solid #ddd;\\n    height: 250px;\\n    min-height: 250px;\\n    max-height: 250px;\\n    overflow-y: auto; }\\n  .ghm-select-picker-container ul li {\\n      border-bottom: 1px solid #ddd;\\n      padding: 3px 7px; }\\n  .ghm-select-picker-container ul li:last-child {\\n        border-bottom: none; }\\n  .ghm-select-picker-container ul li:hover {\\n        cursor: pointer;\\n        background: #eaeaea; }\\n  .ghm-select-picker-container ul li a.ghm-select-picker-item-action {\\n        float: right;\\n        color: #D91E18; }\\n  .ghm-select-picker-container .ghm-select-picker-header, .ghm-select-picker-container .ghm-select-picker-body, .ghm-select-picker-container .ghm-select-picker-footer {\\n    padding: 10px; }\\n  .ghm-select-picker-container .ghm-select-picker-header {\\n    border-bottom: 1px solid #ddd; }\\n  .ghm-select-picker-container .ghm-select-picker-body {\\n    position: relative;\\n    overflow: hidden; }\\n  .ghm-select-picker-container .ghm-select-picker-body .ghm-select-picker-left {\\n      padding-right: 5px; }\\n  .ghm-select-picker-container .ghm-select-picker-body .ghm-select-picker-right {\\n      padding-left: 5px; }\\n  .ghm-select-picker-container .ghm-select-picker-body .ghm-select-picker-left, .ghm-select-picker-container .ghm-select-picker-body .ghm-select-picker-right {\\n      width: 50%;\\n      display: block;\\n      float: left; }\\n  .ghm-select-picker-container .ghm-select-picker-body .ghm-select-picker-left h4.title, .ghm-select-picker-container .ghm-select-picker-body .ghm-select-picker-right h4.title {\\n        font-size: 14px;\\n        font-weight: bold; }\\n  .ghm-select-picker-container .ghm-select-picker-footer {\\n    border-top: 1px solid #ddd; }\\n\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { GhmSelectPickerModel } from './ghm-select-picker.model';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'ghm-select-picker',\r\n    templateUrl: 'ghm-select-picker.component.html',\r\n    styleUrls: ['./ghm-select-picker.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class GhmSelectPickerComponent implements OnInit, OnChanges {\r\n    @Input() isShow = false;\r\n    @Input() allTitle = '';\r\n    @Input() selectedTitle = '';\r\n    @Input() source: GhmSelectPickerModel[] = [];\r\n    @Input() selectedItems: GhmSelectPickerModel[] = [];\r\n    @Input() paging = false;\r\n    @Input() totalRows = 0;\r\n    @Input() pageSize = 0;\r\n    @Input() title = '';\r\n\r\n    @Output() selectedItem = new EventEmitter();\r\n    @Output() selectedPage = new EventEmitter();\r\n    @Output() removedItem = new EventEmitter();\r\n    @Output() accepted = new EventEmitter();\r\n\r\n    errorMessage = '';\r\n    listPages = [];\r\n    currentPage = 1;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.hasOwnProperty('totalRows') && changes['totalRows'].currentValue !== 0) {\r\n            this.renderPaging();\r\n        }\r\n    }\r\n\r\n    show() {\r\n        this.isShow = true;\r\n    }\r\n\r\n    dismiss() {\r\n        this.isShow = false;\r\n    }\r\n\r\n    pageClick(pageNumber: number) {\r\n        if (this.paging) {\r\n            this.currentPage = pageNumber;\r\n            this.selectedPage.emit();\r\n        }\r\n    }\r\n\r\n    selectItem(item: GhmSelectPickerModel) {\r\n        this.errorMessage = '';\r\n        this.selectedItem.emit(item);\r\n        const existingItem = _.find(this.selectedItems, (selectedItem: GhmSelectPickerModel) => {\r\n            return selectedItem.id === item.id;\r\n        });\r\n        if (existingItem) {\r\n            return;\r\n        }\r\n        this.selectedItems.push(item);\r\n    }\r\n\r\n    removeItem(id: any) {\r\n        _.remove(this.selectedItems, (selectedItem: GhmSelectPickerModel) => {\r\n            return selectedItem.id === id;\r\n        });\r\n        this.removedItem.emit(id);\r\n    }\r\n\r\n    accept() {\r\n        if (!this.selectedItems || this.selectedItems.length === 0) {\r\n            this.errorMessage = 'required';\r\n            return;\r\n        }\r\n        this.accepted.emit(this.selectedItems);\r\n        this.isShow = false;\r\n        this.selectedItems = [];\r\n    }\r\n\r\n    private renderPaging() {\r\n        if (this.paging) {\r\n            const totalPage = Math.ceil(this.totalRows / this.pageSize);\r\n            for (let i = 1; i <= totalPage; i++) {\r\n                this.listPages.push(i);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GhmSelectPickerComponent } from './ghm-select-picker.component';\r\nimport { GhmSelectPickerService } from './ghm-select-picker.service';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [GhmSelectPickerComponent],\r\n    declarations: [GhmSelectPickerComponent],\r\n    providers: [GhmSelectPickerService],\r\n})\r\nexport class GhmSelectPickerModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GhmSelectPickerService {\r\n\r\n    constructor() {\r\n    }\r\n}\r\n","import { Component, OnInit, Input, forwardRef, Inject } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'nh-image',\r\n    template: `\r\n        <img alt=\"\" [class]=\"cssClass\" style=\"width: 40px\"\r\n             src=\"{{ baseUrl + value + '?w='+width+'&h='+height+'&mode=' + mode }}\"\r\n             alt=\"{{ alt }}\"\r\n             (error)=\"onImageError()\"/>\r\n    `,\r\n    providers: [\r\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NhImageComponent), multi: true }\r\n    ],\r\n})\r\n\r\nexport class NhImageComponent implements OnInit, ControlValueAccessor {\r\n    private _value;\r\n\r\n    @Input() alt;\r\n    @Input() cssClass = 'img-circle';\r\n    @Input() mode = 'crop';\r\n    @Input() width = 40;\r\n    @Input() height = 40;\r\n    @Input() errorImageUrl = '/assets/images/noavatar.png';\r\n    @Input() baseUrl = '';\r\n    propagateChange: any = () => {\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    @Input()\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onImageError() {\r\n        this.value = this.errorImageUrl;\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    writeValue(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n}\r\n","/**\r\n * Created by HoangNH on 3/2/2017.\r\n */\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { NhImageComponent } from \"./nh-image.component\";\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [NhImageComponent],\r\n    exports: [NhImageComponent]\r\n})\r\n\r\nexport class NhImageModule { }\r\n","module.exports = \"<div class=\\\"nh-tree-dropdown\\\">\\r\\n    <button class=\\\"nh-tree-label btn btn-default text-ellipsis\\\" type=\\\"button\\\" (click)=\\\"dropdownButtonClick()\\\">\\r\\n        {{ selectTitle }}\\r\\n        <span class=\\\"caret\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"nh-content-wrapper\\\" [hidden]=\\\"!isShow\\\"\\r\\n         [style.width]=\\\"width + 'px'\\\">\\r\\n        <ul class=\\\"nh-tree-default-value\\\">\\r\\n            <li class=\\\"center\\\"><a href=\\\"javascript://\\\" (click)=\\\"selectDefaultNode()\\\">{{ title }}</a></li>\\r\\n        </ul>\\r\\n        <div class=\\\"nh-tree-content\\\">\\r\\n            <nh-tree\\r\\n                [data]=\\\"data\\\"\\r\\n                [isMultiple]=\\\"isMultiple\\\"\\r\\n                [selectedIds]=\\\"value\\\"\\r\\n                (nodeSelected)=\\\"onNodeSelected($event)\\\"\\r\\n                (nodeExpanded)=\\\"onNodeExpanded($event)\\\"\\r\\n            ></nh-tree>\\r\\n        </div>\\r\\n        <div class=\\\"nh-tree-footer\\\" *ngIf=\\\"isMultiple\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"acceptButtonClick()\\\">\\r\\n                {{ acceptText }}\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"cancelButtonClick()\\\">\\r\\n                {{ cancelText }}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","﻿import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    ElementRef,\r\n    OnInit,\r\n    EventEmitter,\r\n    forwardRef,\r\n    ViewEncapsulation,\r\n    HostListener\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport * as _ from 'lodash';\r\nimport { TreeData } from '../../../view-model/tree-data';\r\n\r\n@Component({\r\n    selector: 'nh-dropdown-tree',\r\n    templateUrl: './nh-dropdown-tree.component.html',\r\n    styleUrls: ['./nh-tree.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => NHDropdownTreeComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class NHDropdownTreeComponent implements OnInit, ControlValueAccessor {\r\n    @Input() isMultiple = false;\r\n    @Input() title = '-- Nhập nội dung --';\r\n    @Input() selectedText = '';\r\n    @Input() width = 250;\r\n    @Input() acceptText = 'Đồng ý';\r\n    @Input() cancelText = 'Hủy bỏ';\r\n\r\n    @Output() accepted = new EventEmitter();\r\n    @Output() canceled = new EventEmitter();\r\n    @Output() buttonClicked = new EventEmitter();\r\n    @Output() nodeExpanded = new EventEmitter();\r\n    @Output() nodeSelected = new EventEmitter();\r\n\r\n    isShow = false;\r\n    selectedTexts: string[] = [];\r\n    selectTitle = '-- Nhập nội dung --';\r\n    listSelected: TreeData[] = [];\r\n\r\n    private _value: string | number;\r\n    private _data: TreeData[];\r\n\r\n    constructor(private el: ElementRef) {\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    @Input()\r\n    set value(value: string | number) {\r\n        this._value = value;\r\n        this.setTitle();\r\n    }\r\n\r\n    @Input()\r\n    set data(value: TreeData[]) {\r\n        this._data = value;\r\n        this.setTitle();\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    propagateChange: any = () => {\r\n    };\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    writeValue(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    onClick(event) {\r\n        if (!this.el.nativeElement.contains(event.target)) {\r\n            // or some similar check\r\n            this.isShow = false;\r\n        }\r\n    }\r\n\r\n    acceptButtonClick() {\r\n        this.isShow = false;\r\n        this.accepted.emit(this.listSelected);\r\n        const selectedNodeName = _(this.listSelected)\r\n            .map('text')\r\n            .value()\r\n            .toString();\r\n        this.selectTitle = selectedNodeName ? selectedNodeName : this.title;\r\n    }\r\n\r\n    cancelButtonClick() {\r\n        this.canceled.emit();\r\n        this.isShow = false;\r\n    }\r\n\r\n    expandButtonClick() {\r\n    }\r\n\r\n    dropdownButtonClick() {\r\n        setTimeout(() => {\r\n            this.isShow = !this.isShow;\r\n            if (!this.isMultiple) {\r\n                this.buttonClicked.emit(this.isShow);\r\n            }\r\n        });\r\n    }\r\n\r\n    onNodeSelected(node: TreeData) {\r\n        if (!this.isMultiple) {\r\n            this.isShow = false;\r\n            this.selectTitle = node.text;\r\n            this.propagateChange(node.id);\r\n            this.nodeSelected.emit(node);\r\n        } else {\r\n            if (node.isSelected) {\r\n                const isExists = _.find(this.listSelected, item => {\r\n                    return item.id === node.id;\r\n                });\r\n                if (!isExists) {\r\n                    this.listSelected.push(node);\r\n                }\r\n            } else {\r\n                _.remove(this.listSelected, node);\r\n            }\r\n        }\r\n    }\r\n\r\n    onNodeExpanded(node: TreeData) {\r\n        this.nodeExpanded.emit(node);\r\n    }\r\n\r\n    selectDefaultNode() {\r\n        this.isShow = false;\r\n        this.selectTitle = this.title;\r\n        this.nodeSelected.emit(null);\r\n        this.propagateChange(null);\r\n        if (this.isMultiple) {\r\n            this.accepted.emit(null);\r\n        }\r\n    }\r\n\r\n    private getNodesSelected(data: TreeData[], parentId?: any) {\r\n        const listNodes = _.filter(data, (node: TreeData) => {\r\n            return node.parentId === parentId;\r\n        });\r\n        if (listNodes) {\r\n            _.each(listNodes, (node: TreeData) => {\r\n                if (this.value === node.id) {\r\n                    this.selectedTexts.push(node.text);\r\n                } else {\r\n                    this.getNodesSelected(node.children, node.id);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private getSelectedNode(data: TreeData[]) {\r\n        _.each(data, (node: TreeData) => {\r\n            if (node.id === this.value) {\r\n                this.selectTitle = node.text;\r\n                return false;\r\n            } else {\r\n                this.selectTitle = this.title;\r\n                this.getSelectedNode(node.children);\r\n            }\r\n        });\r\n    }\r\n\r\n    private setTitle() {\r\n        if (this.isMultiple) {\r\n            this.getNodesSelected(this.data, null);\r\n            this.selectTitle = this.selectedTexts && this.selectedTexts.length > 0\r\n                ? this.selectedTexts.join()\r\n                : this.title;\r\n        } else {\r\n            this.getSelectedNode(this.data);\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<ul class=\\\"nh-tree nh-root-tree\\\">\\r\\n    <ng-template #recursiveTree let-data>\\r\\n        <li *ngFor=\\\"let node of data\\\"\\r\\n            [class.selected]=\\\"node.isSelected\\\">\\r\\n            <i class=\\\"nh-tree-icon\\\"\\r\\n               (click)=\\\"expand(node)\\\"\\r\\n               [class.nh-tree-loading]=\\\"node.isLoading && node.childCount && node.childCount > 0\\\"\\r\\n               [class.nh-tree-node-close]=\\\"!node.state.opened && ((node.childCount && node.childCount > 0)\\r\\n                   || (node.children && node.children.length > 0))\\\"\\r\\n               [class.nh-tree-node-open]=\\\"node.state.opened && ((node.childCount && node.childCount > 0)\\r\\n                   || (node.children && node.children.length > 0))\\\"\\r\\n            ></i>\\r\\n            <a href=\\\"javascript://\\\" (click)=\\\"selectNode(node)\\\" [attr.title]=\\\"node.text\\\">\\r\\n                <i class=\\\"nh-tree-icon\\\"\\r\\n                   [ngClass]=\\\"node.icon ? node.icon + ' nh-custom-icon' : 'nh-tree-icon-folder'\\\"></i>\\r\\n                {{ node.text }}\\r\\n            </a>\\r\\n            <ul *ngIf=\\\"node.children.length > 0\\\" class=\\\"sub-tree\\\"\\r\\n                [@toogleTreeSubmenu]=\\\"node.state.opened ? 'sub-tree-open' : 'sub-tree-close'\\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"recursiveTree; context:{ $implicit: node.children }\\\"></ng-container>\\r\\n            </ul>\\r\\n        </li>\\r\\n    </ng-template>\\r\\n    <ng-container *ngTemplateOutlet=\\\"recursiveTree; context:{ $implicit: data }\\\"></ng-container>\\r\\n</ul>\\r\\n\"","﻿import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewEncapsulation,\r\n    OnChanges,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport {\r\n    trigger,\r\n    state,\r\n    style,\r\n    transition,\r\n    animate\r\n} from '@angular/animations';\r\nimport * as _ from 'lodash';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TreeData } from '../../../view-model/tree-data';\r\n\r\n@Component({\r\n    selector: 'nh-tree',\r\n    // template: `\r\n    //     <!-- nh tree -->\r\n    //     <ul [ngClass]=\"!isChildren ? 'nh-tree nh-root-tree' : 'sub-tree'\"\r\n    //         [@toogleTreeSubmenu]=\"isOpen ? 'sub-tree-open' : 'sub-tree-close'\">\r\n    //         <li class=\"nh-tree-node\" *ngFor=\"let node of data\"\r\n    //             [class.selected]=\"node.isSelected\">\r\n    //             <i class=\"nh-tree-icon\"\r\n    //                (click)=\"expand(node)\"\r\n    //                [class.nh-tree-loading]=\"node.isLoading && node.childCount && node.childCount > 0\"\r\n    //                [class.nh-tree-node-close]=\"!node.state.opened && ((node.childCount && node.childCount > 0)\r\n    //                || (node.children && node.children.length > 0))\"\r\n    //                [class.nh-tree-node-open]=\"node.state.opened && ((node.childCount && node.childCount > 0)\r\n    //                || (node.children && node.children.length > 0))\"\r\n    //             ></i>\r\n    //             <!--<i class=\"nh-tree-icon nh-icon-checkbox nh-icon-child-check\" *ngIf=\"isMultiple\"></i>-->\r\n    //             <!-- display when has child -->\r\n    //             <a href=\"javascript://\" (click)=\"selectNode(node)\" [attr.title]=\"node.text\">\r\n    //                 <i class=\"nh-tree-icon\"\r\n    //                    [ngClass]=\"node.icon ? node.icon + ' nh-custom-icon' : 'nh-tree-icon-folder'\"></i> {{ node.text\r\n    //                 }}\r\n    //             </a>\r\n    //             <nh-tree [data]=\"node.children\" [isChildren]=\"true\" [isOpen]=\"node.state.opened\"\r\n    //                      [isMultiple]=\"isMultiple\"\r\n    //                      [lazyLoadURL]=\"lazyLoadURL\"\r\n    //                      [selectedIds]=\"selectedIds\"\r\n    //                      (onSelectNode)=\"onSelectNode.emit($event)\"></nh-tree>\r\n    //         </li>\r\n    //     </ul>\r\n    // `,\r\n    templateUrl: './nh-tree.component.html',\r\n    styleUrls: ['./nh-tree.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [\r\n        trigger('toogleTreeSubmenu', [\r\n            state(\r\n                'sub-tree-open',\r\n                style({\r\n                    height: '*',\r\n                    opacity: '1',\r\n                    display: 'block'\r\n                })\r\n            ),\r\n            state(\r\n                'sub-tree-close',\r\n                style({\r\n                    height: '0',\r\n                    opacity: '0',\r\n                    display: 'none'\r\n                })\r\n            ),\r\n            transition('sub-tree-open => sub-tree-close', [\r\n                animate(\r\n                    150,\r\n                    style({\r\n                        height: '0'\r\n                    })\r\n                )\r\n            ]),\r\n            transition('sub-tree-close => sub-tree-open', [\r\n                animate(\r\n                    150,\r\n                    style({\r\n                        height: '*'\r\n                    })\r\n                )\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class NHTreeComponent implements OnInit, OnChanges {\r\n    // @Input() data: TreeData[];\r\n    @Input() isMultiple = false;\r\n    @Input() isChildren = false;\r\n    @Input() isOpen = true;\r\n    @Input() lazyLoadURL;\r\n    // @Input() selectedIds = [];\r\n\r\n    @Output() nodeSelected = new EventEmitter();\r\n    @Output() nodeExpanded = new EventEmitter();\r\n\r\n    private _data: TreeData[] = [];\r\n    private _selectedIds: string[] | number[] = [];\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    @Input()\r\n    set data(value: TreeData[]) {\r\n        this._data = _.cloneDeep(value);\r\n        setTimeout(() => {\r\n            this.updateSelectedStatus(this.data);\r\n        });\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    @Input()\r\n    set selectedIds(value: string[] | number[]) {\r\n        this._selectedIds = _.cloneDeep(value);\r\n        setTimeout(() => {\r\n            this.updateSelectedStatus(this.data);\r\n        });\r\n    }\r\n\r\n    get selectedIds() {\r\n        return this._selectedIds;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    selectNode(node: TreeData) {\r\n        if (!this.isMultiple) {\r\n            this.resetSelectedNote(this.data, null);\r\n            node.isSelected = true;\r\n        } else {\r\n            node.isSelected = !node.isSelected;\r\n        }\r\n        this.nodeSelected.emit(node);\r\n    }\r\n\r\n    expand(node: TreeData) {\r\n        if (this.lazyLoadURL && node.children.length === 0) {\r\n            node.isLoading = true;\r\n            const childrens = this.http.get(`${this.lazyLoadURL}${node.id}`);\r\n            childrens.subscribe((result: any) => {\r\n                node.isLoading = false;\r\n                node.children = result;\r\n            });\r\n        }\r\n        node.state.opened = !node.state.opened;\r\n        this.nodeExpanded.emit(node);\r\n    }\r\n\r\n    private resetSelectedNote(treeNodes: TreeData[], parentId?: number) {\r\n        if (!treeNodes || treeNodes.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        _.each(treeNodes, (node: TreeData) => {\r\n            node.isSelected = false;\r\n\r\n            if (node.parentId === parentId) {\r\n                _.each(node.children, (item: TreeData) => {\r\n                    item.isSelected = false;\r\n                    this.resetSelectedNote(item.children, item.id);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateSelectedStatus(nodes: TreeData[], parentId: string | number = null) {\r\n        const parentNodes = _.filter(nodes, (node: TreeData) => {\r\n            return node.parentId === parentId;\r\n        });\r\n        if (parentNodes && parentNodes.length > 0) {\r\n            _.each(parentNodes, (nodeItem: TreeData) => {\r\n                nodeItem.isSelected =\r\n                    this.selectedIds &&\r\n                    this.selectedIds.length > 0 &&\r\n                    this.selectedIds\r\n                        .toString()\r\n                        .indexOf(nodeItem.id.toString()) > -1;\r\n\r\n                this.updateSelectedStatus(nodeItem.children, nodeItem.id);\r\n            });\r\n        }\r\n    }\r\n}\r\n","﻿import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n// Component\r\nimport { NHTreeComponent } from \"./nh-tree.component\";\r\nimport { NHDropdownTreeComponent } from \"./nh-dropdown-tree.component\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        NHTreeComponent, NHDropdownTreeComponent\r\n    ],\r\n    exports: [NHTreeComponent, NHDropdownTreeComponent]\r\n})\r\n\r\nexport class NHTreeModule { }\r\n","module.exports = \"ul.nh-tree-default-value {\\n  list-style: none;\\n  border-bottom: 1px solid #ddd;\\n  padding: 6px 0;\\n  margin-bottom: 0; }\\n\\nul.nh-tree {\\n  padding-left: 0;\\n  margin: 0;\\n  list-style-type: none;\\n  list-style-image: none;\\n  width: 100%;\\n  overflow: auto; }\\n\\nul.nh-tree * {\\n    padding: 0;\\n    margin: 0; }\\n\\nul.nh-tree.nh-root-tree > li {\\n    margin-right: 0; }\\n\\nul.nh-tree .nh-tree-icon, ul.nh-tree .nh-tree-node {\\n    background-image: url(\\\"/assets/images/32px.png\\\");\\n    background-repeat: no-repeat; }\\n\\nul.nh-tree li {\\n    display: block;\\n    min-height: 24px;\\n    line-height: 24px;\\n    margin-left: 24px;\\n    min-width: 24px;\\n    white-space: nowrap; }\\n\\nul.nh-tree li.nh-tree-node {\\n      background-position: -292px -4px;\\n      background-repeat: repeat-y; }\\n\\nul.nh-tree li.selected > a {\\n      background-color: #007455;\\n      color: white;\\n      cursor: auto; }\\n\\nul.nh-tree li.selected > a i.nh-custom-icon {\\n        background: #007455;\\n        color: #fff; }\\n\\nul.nh-tree li:last-child {\\n      background: none !important; }\\n\\nul.nh-tree li .nh-tree-icon {\\n      width: 24px;\\n      height: 24px;\\n      line-height: 24px;\\n      display: inline-block;\\n      background-position: -68px -4px;\\n      vertical-align: top; }\\n\\nul.nh-tree li .nh-tree-icon:hover {\\n        cursor: pointer; }\\n\\nul.nh-tree li .nh-tree-icon.nh-tree-loading {\\n        background-image: url(\\\"/assets/images/loading.gif\\\");\\n        background-repeat: no-repeat;\\n        background-position: 3px 5px !important; }\\n\\nul.nh-tree li .nh-tree-node-open {\\n      background-position: -132px -4px !important; }\\n\\nul.nh-tree li .nh-tree-node-close {\\n      background-position: -100px -4px; }\\n\\nul.nh-tree li .nh-tree-icon-folder {\\n      background-position: -260px -4px; }\\n\\nul.nh-tree li .nh-tree-icon-folder-open {\\n      background-position: -260px -4px; }\\n\\nul.nh-tree li .nh-icon-checkbox {\\n      background-position: -166px -4px; }\\n\\nul.nh-tree li .hh-icon-checkbox-checked {\\n      background-position: -230px -4px; }\\n\\nul.nh-tree li .nh-icon-child-check {\\n      background-position: -196px -4px; }\\n\\nul.nh-tree li .nh-custom-icon {\\n      background: #fff; }\\n\\nul.nh-tree li a {\\n      line-height: 24px;\\n      height: 24px;\\n      display: inline-block;\\n      color: #000;\\n      white-space: nowrap;\\n      text-overflow: ellipsis;\\n      padding: 0 4px 0 1px;\\n      margin: 0;\\n      vertical-align: top; }\\n\\nul.nh-tree li a:hover {\\n        background-color: #007455;\\n        color: white;\\n        cursor: auto;\\n        text-decoration: none; }\\n\\nul.nh-tree li a:hover i.nh-custom-icon {\\n          background: #007455;\\n          color: #fff; }\\n\\nul.nh-tree li a:active, ul.nh-tree li a:focus, ul.nh-tree li a:visited {\\n        outline: none;\\n        text-decoration: none; }\\n\\n.nh-tree-dropdown {\\n  position: relative; }\\n\\n.nh-tree-dropdown button {\\n    border-radius: 0; }\\n\\n.nh-tree-dropdown .nh-content-wrapper {\\n    position: absolute;\\n    top: 100%;\\n    left: 0;\\n    border: 1px solid #ddd;\\n    min-width: 250px;\\n    box-shadow: 5px 5px rgba(102, 102, 102, 0.1);\\n    margin-bottom: 10px;\\n    background: white;\\n    z-index: 9999;\\n    overflow-x: auto; }\\n\\n.nh-tree-dropdown .nh-content-wrapper .nh-tree-content {\\n      padding: 10px; }\\n\\n.nh-tree-dropdown .nh-content-wrapper .nh-tree-footer {\\n      border-top: 1px solid #ddd;\\n      padding: 10px; }\\n\"","// creating check permission decorator\r\nimport { Router } from '@angular/router';\r\nimport { IPageId } from '../../configs/page-id.config';\r\nimport { AppService } from '../services/app.service';\r\n\r\nexport function CheckPermission() {\r\n    return function (target: any) {\r\n        target.prototype.ngAfterViewInit = function ngOnInitDecorator(this: {\r\n            router: Router,\r\n            pageId: IPageId,\r\n            appService: AppService,\r\n            permission: any\r\n        }) {\r\n            setTimeout(() => {\r\n                this.permission = this.appService.getPermissionByPageId();\r\n                if (!this.permission.view) {\r\n                    this.router.navigateByUrl('/error/permission');\r\n                }\r\n            });\r\n        };\r\n\r\n        // returning the decorated class\r\n        return target;\r\n    };\r\n}\r\n","export class FilterLink {\r\n    constructor(public key: string,\r\n        public value: any) {\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { APP_CONFIG, IAppConfig } from '../../configs/app.config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { LanguageSearchViewModel } from '../models/language.viewmodel';\r\n\r\n@Injectable()\r\nexport class LanguageService {\r\n    url = 'languages/';\r\n\r\n    constructor(@Inject(APP_CONFIG) appConfig: IAppConfig,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.CORE_API_URL}${this.url}`;\r\n    }\r\n\r\n    getListSupportedLanguage(): Observable<LanguageSearchViewModel[]> {\r\n        if (localStorage) {\r\n            const language = localStorage.getItem('_lang');\r\n            if (!language) {\r\n                return this.http.get(this.url) as Observable<LanguageSearchViewModel[]>;\r\n            } else {\r\n                const languages = JSON.parse(language);\r\n                return new BehaviorSubject(languages) as Observable<LanguageSearchViewModel[]>;\r\n            }\r\n        } else {\r\n            return this.http.get(this.url) as Observable<LanguageSearchViewModel[]>;\r\n        }\r\n    }\r\n\r\n    getAllLanguage(): Observable<LanguageSearchViewModel[]> {\r\n        return this.http.get(this.url + 'all') as Observable<LanguageSearchViewModel[]>;\r\n    }\r\n}\r\n"],"sourceRoot":""}