{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm5/drag-drop.es5.js","webpack:///./src/app/modules/configs/account/account-form/account-form.component.html","webpack:///./src/app/modules/configs/account/account-form/account-form.component.ts","webpack:///./src/app/modules/configs/account/account.component.html","webpack:///./src/app/modules/configs/account/account.component.ts","webpack:///./src/app/modules/configs/account/account.service.ts","webpack:///./src/app/modules/configs/account/models/account.model.ts","webpack:///./src/app/modules/configs/approver/approver.component.css","webpack:///./src/app/modules/configs/approver/approver.component.html","webpack:///./src/app/modules/configs/approver/approver.component.ts","webpack:///./src/app/modules/configs/approver/approver.service.ts","webpack:///./src/app/modules/configs/client/client-form.component.html","webpack:///./src/app/modules/configs/client/client-form.component.ts","webpack:///./src/app/modules/configs/client/client.component.html","webpack:///./src/app/modules/configs/client/client.component.ts","webpack:///./src/app/modules/configs/client/client.model.ts","webpack:///./src/app/modules/configs/client/client.service.ts","webpack:///./src/app/modules/configs/config-routing.module.ts","webpack:///./src/app/modules/configs/config.component.html","webpack:///./src/app/modules/configs/config.component.ts","webpack:///./src/app/modules/configs/config.module.ts","webpack:///./src/app/modules/configs/email/email-form/email-form.component.html","webpack:///./src/app/modules/configs/email/email-form/email-form.component.ts","webpack:///./src/app/modules/configs/email/email-template/email-template-form/email-template-form.component.html","webpack:///./src/app/modules/configs/email/email-template/email-template-form/email-template-form.component.ts","webpack:///./src/app/modules/configs/email/email-template/email-template.component.html","webpack:///./src/app/modules/configs/email/email-template/email-template.component.ts","webpack:///./src/app/modules/configs/email/email-template/email-template.service.ts","webpack:///./src/app/modules/configs/email/email-template/model/email-template-translation.ts","webpack:///./src/app/modules/configs/email/email-template/model/email-template.model.ts","webpack:///./src/app/modules/configs/email/email-type/email-type-form/email-type-form.component.html","webpack:///./src/app/modules/configs/email/email-type/email-type-form/email-type-form.component.ts","webpack:///./src/app/modules/configs/email/email-type/email-type.component.html","webpack:///./src/app/modules/configs/email/email-type/email-type.component.ts","webpack:///./src/app/modules/configs/email/email-type/email-type.model.ts","webpack:///./src/app/modules/configs/email/email-type/email-type.service.ts","webpack:///./src/app/modules/configs/email/email.component.html","webpack:///./src/app/modules/configs/email/email.component.ts","webpack:///./src/app/modules/configs/email/model/email.model.ts","webpack:///./src/app/modules/configs/email/service/email.service.ts","webpack:///./src/app/modules/configs/menus/choice-menu-item/choice-menu-item.component.html","webpack:///./src/app/modules/configs/menus/choice-menu-item/choice-menu-item.component.ts","webpack:///./src/app/modules/configs/menus/menu-form/menu-form.component.html","webpack:///./src/app/modules/configs/menus/menu-form/menu-form.component.ts","webpack:///./src/app/modules/configs/menus/menu-item/menu-item-form/menu-item-form.component.html","webpack:///./src/app/modules/configs/menus/menu-item/menu-item-form/menu-item-form.component.ts","webpack:///./src/app/modules/configs/menus/menu-item/menu-item.component.html","webpack:///./src/app/modules/configs/menus/menu-item/menu-item.component.ts","webpack:///./src/app/modules/configs/menus/menu.component.html","webpack:///./src/app/modules/configs/menus/menu.component.ts","webpack:///./src/app/modules/configs/menus/menu.scss","webpack:///./src/app/modules/configs/menus/menu.service.ts","webpack:///./src/app/modules/configs/menus/models/menu-item-translation.model.ts","webpack:///./src/app/modules/configs/menus/models/menu-item.model.ts","webpack:///./src/app/modules/configs/menus/models/menu.model.ts","webpack:///./src/app/modules/configs/menus/viewmodel/menu-item-select.viewmodel.ts","webpack:///./src/app/modules/configs/page/models/page-translation.model.ts","webpack:///./src/app/modules/configs/page/models/page.model.ts","webpack:///./src/app/modules/configs/page/models/teanant-page.viewmodel.ts","webpack:///./src/app/modules/configs/page/page-form.component.html","webpack:///./src/app/modules/configs/page/page-form.component.ts","webpack:///./src/app/modules/configs/page/page.component.html","webpack:///./src/app/modules/configs/page/page.component.ts","webpack:///./src/app/modules/configs/role/models/role.model.ts","webpack:///./src/app/modules/configs/role/role-detail/role-detail.component.html","webpack:///./src/app/modules/configs/role/role-detail/role-detail.component.ts","webpack:///./src/app/modules/configs/role/role-form/role-form.component.html","webpack:///./src/app/modules/configs/role/role-form/role-form.component.ts","webpack:///./src/app/modules/configs/role/role.component.html","webpack:///./src/app/modules/configs/role/role.component.ts","webpack:///./src/app/modules/configs/role/role.service.ts","webpack:///./src/app/modules/configs/tenant/tenant-form.component.html","webpack:///./src/app/modules/configs/tenant/tenant-form.component.ts","webpack:///./src/app/modules/configs/tenant/tenant.component.html","webpack:///./src/app/modules/configs/tenant/tenant.component.ts","webpack:///./src/app/modules/configs/tenant/tenant.model.ts","webpack:///./src/app/modules/configs/tenant/tenant.service.ts","webpack:///./src/app/modules/configs/user-setting/user-setting.component.html","webpack:///./src/app/modules/configs/user-setting/user-setting.component.ts","webpack:///./src/app/modules/configs/website/branch/branch-form/branch-form.component.html","webpack:///./src/app/modules/configs/website/branch/branch-form/branch-form.component.ts","webpack:///./src/app/modules/configs/website/branch/branch-item/branch-item.component.html","webpack:///./src/app/modules/configs/website/branch/branch-item/branch-item.component.ts","webpack:///./src/app/modules/configs/website/branch/branch.component.html","webpack:///./src/app/modules/configs/website/branch/branch.component.ts","webpack:///./src/app/modules/configs/website/branch/branch.service.ts","webpack:///./src/app/modules/configs/website/branch/model/branch-item.model.ts","webpack:///./src/app/modules/configs/website/branch/model/branch-translation.model.ts","webpack:///./src/app/modules/configs/website/branch/model/branch.model.ts","webpack:///./src/app/modules/configs/website/core-values/core-values-form/core-values-form.component.html","webpack:///./src/app/modules/configs/website/core-values/core-values-form/core-values-form.component.ts","webpack:///./src/app/modules/configs/website/core-values/core-values.component.html","webpack:///./src/app/modules/configs/website/core-values/core-values.component.ts","webpack:///./src/app/modules/configs/website/core-values/core-values.service.ts","webpack:///./src/app/modules/configs/website/core-values/model/core-value.model.ts","webpack:///./src/app/modules/configs/website/core-values/model/core-values.translation.ts","webpack:///./src/app/modules/configs/website/language/language-form/language-form.component.html","webpack:///./src/app/modules/configs/website/language/language-form/language-form.component.ts","webpack:///./src/app/modules/configs/website/language/language.component.html","webpack:///./src/app/modules/configs/website/language/language.component.ts","webpack:///./src/app/modules/configs/website/language/model/language.model.ts","webpack:///./src/app/modules/configs/website/language/service/language.service.ts","webpack:///./src/app/modules/configs/website/model/website-info.model.ts","webpack:///./src/app/modules/configs/website/model/website-info.translation.ts","webpack:///./src/app/modules/configs/website/service/website.service.ts","webpack:///./src/app/modules/configs/website/social-network/social-network.component.html","webpack:///./src/app/modules/configs/website/social-network/social-network.component.ts","webpack:///./src/app/modules/configs/website/social-network/social-network.model.ts","webpack:///./src/app/modules/configs/website/social-network/social-network.service.ts","webpack:///./src/app/modules/configs/website/website-info/website-info.component.html","webpack:///./src/app/modules/configs/website/website-info/website-info.component.ts","webpack:///./src/app/modules/configs/website/website.component.html","webpack:///./src/app/modules/configs/website/website.component.ts","webpack:///./src/app/shareds/components/nh-image/nh-image.component.ts","webpack:///./src/app/shareds/components/nh-image/nh-image.module.ts","webpack:///./src/app/shareds/services/language.service.ts","webpack:///./src/app/validators/datetime.validator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2O;AACxN;AACqB;AACI;AACnB;AACD;AACT;AACO;;AAEtB;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,4BAA4B,EAAE,+BAA+B,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,SAAS,EAAE;AACX,0HAA4D,iBAAiB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oGAAoG,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB,kCAAkC,EAAE,+BAA+B;AAC5H,+BAA+B,wBAAwB,gCAAgC,EAAE,EAAE;AAC3F;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yEAAyE,2BAA2B,EAAE;AACtG;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,yDAAyD,uCAAuC,EAAE;AAClG,yDAAyD,4CAA4C,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,mDAAmD;AACnD,SAAS,6DAAe;AACxB,SAAS,gCAAgC,gIAAkC;AAC3E,MAAM;AACN,kIAA4E,+CAA+C,yQAA+D,EAAE,+CAA+C;AAC3O;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS;AACT,MAAM;AACN;AACA,gBAAgB,4DAAc;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS;AACT,MAAM;AACN;AACA,gBAAgB,4DAAc;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gEAAgE,+CAA+C,EAAE;AACjH;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,iDAAiD,oBAAoB,EAAE;AACvE;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,0FAA0F,EAAE;AAC5F,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0BAA0B,gBAAgB,EAAE,EAAE;AAC7F;AACA;AACA,mEAAmE,sCAAsC,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,aAAa;AAC9E;AACA,mBAAmB,EAAE;AACrB;AACA,uCAAuC;AACvC,sDAAsD;AACtD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8CAA8C;AACjF;AACA;AACA,oCAAoC,oCAAoC,EAAE,sBAAsB;AAChG,iDAAiD,EAAE;AACnD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B,oDAAoD,EAAE;AACtD;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C;AAC1C,SAAS,iEAAmB;AAC5B,SAAS,gCAAgC,+FAAiD,GAAG,+DAAiB,GAAG,+DAAiB,GAAG;AACrI,SAAS,gCAAgC,gIAAkC,GAAG;AAC9E,SAAS,6DAAe;AACxB,SAAS,uEAAyB;AAClC,SAAS,6EAAsB;AAC/B,SAAS,yBAAyB;AAClC,SAAS,gCAAgC,uFAAyC,GAAG;AACrF,SAAS,uFAAqC,+DAAiB;AAC/D,MAAM;AACN;AACA,oBAAoB,8FAAgD;AACpE,4BAA4B,4FAA8C;AAC1E,gCAAgC,gGAAkD;AAClF,gBAAgB,oFAAsC;AACtD,oBAAoB,wFAA0C;AAC9D,+BAA+B,2FAA6C;AAC5E,mBAAmB,wFAA0C;AAC7D,iBAAiB,sFAAwC;AACzD,mBAAmB,wFAA0C;AAC7D,kBAAkB,uFAAyC;AAC3D,mBAAmB,wFAA0C;AAC7D,iBAAiB,sFAAwC;AACzD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE;AAChC,iCAAiC,EAAE;AACnC,6BAA6B,EAAE,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB,EAAE;AAClD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,gEAAgE,YAAY,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wDAAwD,kCAAkC,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,uEAAuE,kCAAkC,EAAE;AAC3G,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,sCAAsC,qDAAqD,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC,8CAA8C,EAAE,8DAA8D,EAAE;AAClJ,qCAAqC,+BAA+B,EAAE;AACtE,kCAAkC,UAAU,6EAA6E,EAAE,EAAE;AAC7H;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wDAAwD,mDAAmD,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,6DAA6D;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C;AAC9C,SAAS,iEAAmB;AAC5B,SAAS,yBAAyB;AAClC,SAAS,uFAAqC,+DAAiB;AAC/D,MAAM;AACN;AACA,uBAAuB,2JAAuD,gBAAgB,EAAE,KAAK;AACrG,uBAAuB,+FAAiD;AA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","file":"modules-configs-config-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgZone, Inject, ContentChildren, ElementRef, EventEmitter, forwardRef, Input, Output, Optional, Directive, ContentChild, InjectionToken, SkipSelf, ViewContainerRef, TemplateRef, NgModule, defineInjectable, inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { supportsPassiveEventListeners } from '@angular/cdk/platform';\nimport { Subject, Observable, Subscription } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { take } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[/** @type {?} */ (key)] = source[/** @type {?} */ (key)];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    var userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Event options that can be used to bind an active event.\n  @type {?} */\nvar activeEventOptions = supportsPassiveEventListeners() ? { passive: false } : false;\n// unsupported: template constraints.\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\nvar DragDropRegistry = /** @class */ (function () {\n    function DragDropRegistry(_ngZone, _document) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Listener used to prevent `touchmove` events while the element is being dragged.\n         * This gets bound once, ahead of time, because WebKit won't preventDefault on a\n         * dynamically-added `touchmove` listener. See https://bugs.webkit.org/show_bug.cgi?id=184250.\n         */\n        this._preventScrollListener = function (event) {\n            if (_this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    DragDropRegistry.prototype.registerDropContainer = /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    function (drop) {\n        if (!this._dropInstances.has(drop)) {\n            if (this.getDropContainer(drop.id)) {\n                throw Error(\"Drop instance with id \\\"\" + drop.id + \"\\\" has already been registered.\");\n            }\n            this._dropInstances.add(drop);\n        }\n    };\n    /** Adds a drag item instance to the registry. */\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.registerDragItem = /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        var _this = this;\n        this._dragInstances.add(drag);\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(function () {\n                // The event handler has to be explicitly active, because\n                // newer browsers make it passive by default.\n                _this._document.addEventListener('touchmove', _this._preventScrollListener, activeEventOptions);\n            });\n        }\n    };\n    /** Removes a drop container from the registry. */\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    DragDropRegistry.prototype.removeDropContainer = /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    function (drop) {\n        this._dropInstances.delete(drop);\n    };\n    /** Removes a drag item instance from the registry. */\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.removeDragItem = /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventScrollListener, /** @type {?} */ (activeEventOptions));\n        }\n    };\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    DragDropRegistry.prototype.startDragging = /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    function (drag, event) {\n        var _this = this;\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            var isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            var moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            var upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We need to disable the native interactions on the entire body, because\n            // the user can start marking text if they drag too far in Safari.\n            toggleNativeDragInteractions(this._document.body, false);\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, { handler: function (e) { return _this.pointerMove.next(e); }, options: activeEventOptions })\n                .set(upEvent, { handler: function (e) { return _this.pointerUp.next(e); } })\n                .forEach(function (config, name) {\n                _this._ngZone.runOutsideAngular(function () {\n                    _this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    };\n    /** Stops dragging a drag item instance. */\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.stopDragging = /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n            toggleNativeDragInteractions(this._document.body, true);\n        }\n    };\n    /** Gets whether a drag item instance is currently being dragged. */\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.isDragging = /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        return this._activeDragInstances.has(drag);\n    };\n    /** Gets a drop container by its id. */\n    /**\n     * Gets a drop container by its id.\n     * @param {?} id\n     * @return {?}\n     */\n    DragDropRegistry.prototype.getDropContainer = /**\n     * Gets a drop container by its id.\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        return Array.from(this._dropInstances).find(function (instance) { return instance.id === id; });\n    };\n    /**\n     * @return {?}\n     */\n    DragDropRegistry.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._dragInstances.forEach(function (instance) { return _this.removeDragItem(instance); });\n        this._dropInstances.forEach(function (instance) { return _this.removeDropContainer(instance); });\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    };\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @return {?}\n     */\n    DragDropRegistry.prototype._clearGlobalListeners = /**\n     * Clears out the global event listeners from the `document`.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._globalListeners.forEach(function (config, name) {\n            _this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    };\n    DragDropRegistry.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    DragDropRegistry.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ DragDropRegistry.ngInjectableDef = defineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(inject(NgZone), inject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n    return DragDropRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nvar CdkDragHandle = /** @class */ (function () {\n    function CdkDragHandle(element) {\n        this.element = element;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    CdkDragHandle.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDragHandle]',\n                    host: {\n                        'class': 'cdk-drag-handle'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDragHandle.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    return CdkDragHandle;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nvar CdkDragPlaceholder = /** @class */ (function () {\n    function CdkDragPlaceholder(templateRef) {\n        this.templateRef = templateRef;\n    }\n    CdkDragPlaceholder.decorators = [\n        { type: Directive, args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDragPlaceholder.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    CdkDragPlaceholder.propDecorators = {\n        data: [{ type: Input }]\n    };\n    return CdkDragPlaceholder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nvar CdkDragPreview = /** @class */ (function () {\n    function CdkDragPreview(templateRef) {\n        this.templateRef = templateRef;\n    }\n    CdkDragPreview.decorators = [\n        { type: Directive, args: [{\n                    selector: 'ng-template[cdkDragPreview]'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDragPreview.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    CdkDragPreview.propDecorators = {\n        data: [{ type: Input }]\n    };\n    return CdkDragPreview;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n  @type {?} */\nvar CDK_DROP_LIST_CONTAINER = new InjectionToken('CDK_DROP_LIST_CONTAINER');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    /** @type {?} */\n    var multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    var computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    var transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    var property = transitionedProperties.find(function (prop) { return prop === 'transform' || prop === 'all'; });\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    /** @type {?} */\n    var propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    var rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    var rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    var value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(function (part) { return part.trim(); });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that can be used to configure the behavior of `CdkDrag`.\n  @type {?} */\nvar CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG', {\n    providedIn: 'root',\n    factory: CDK_DRAG_CONFIG_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nvar CdkDrag = /** @class */ (function () {\n    function CdkDrag(element, /** Droppable container that the draggable is a part of. */\n    dropContainer, document, _ngZone, _viewContainerRef, _viewportRuler, _dragDropRegistry, _config, _dir) {\n        var _this = this;\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        this._config = _config;\n        this._dir = _dir;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Amount of subscriptions to the move event. Used to avoid\n         * hitting the zone if the consumer didn't subscribe to it.\n         */\n        this._moveEventSubscriptions = 0;\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = Observable.create(function (observer) {\n            /** @type {?} */\n            var subscription = _this._moveEvents.subscribe(observer);\n            _this._moveEventSubscriptions++;\n            return function () {\n                subscription.unsubscribe();\n                _this._moveEventSubscriptions--;\n            };\n        });\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = function (event) {\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (_this._handles.length) {\n                /** @type {?} */\n                var targetHandle = _this._handles.find(function (handle) {\n                    /** @type {?} */\n                    var element = handle.element.nativeElement;\n                    /** @type {?} */\n                    var target = event.target;\n                    return !!target && (target === element || element.contains(/** @type {?} */ (target)));\n                });\n                if (targetHandle) {\n                    _this._initializeDragSequence(targetHandle.element.nativeElement, event);\n                }\n            }\n            else {\n                _this._initializeDragSequence(_this._rootElement, event);\n            }\n        };\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = function (event) {\n            /** @type {?} */\n            var pointerPosition = _this._getConstrainedPointerPosition(event);\n            if (!_this._hasStartedDragging) {\n                /** @type {?} */\n                var distanceX = Math.abs(pointerPosition.x - _this._pickupPositionOnPage.x);\n                /** @type {?} */\n                var distanceY = Math.abs(pointerPosition.y - _this._pickupPositionOnPage.y);\n                /** @type {?} */\n                var minimumDistance = _this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (distanceX + distanceY >= minimumDistance) {\n                    _this._hasStartedDragging = true;\n                    _this._ngZone.run(function () { return _this._startDragSequence(); });\n                }\n                return;\n            }\n            _this._hasMoved = true;\n            event.preventDefault();\n            _this._updatePointerDirectionDelta(pointerPosition);\n            if (_this.dropContainer) {\n                _this._updateActiveDropContainer(pointerPosition);\n            }\n            else {\n                /** @type {?} */\n                var activeTransform = _this._activeTransform;\n                activeTransform.x =\n                    pointerPosition.x - _this._pickupPositionOnPage.x + _this._passiveTransform.x;\n                activeTransform.y =\n                    pointerPosition.y - _this._pickupPositionOnPage.y + _this._passiveTransform.y;\n                _this._setTransform(_this._rootElement, activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (_this._moveEventSubscriptions > 0) {\n                _this._ngZone.run(function () {\n                    _this._moveEvents.next({\n                        source: _this,\n                        pointerPosition: pointerPosition,\n                        event: event,\n                        delta: _this._pointerDirectionDelta\n                    });\n                });\n            }\n        };\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = function () {\n            if (!_this._isDragging()) {\n                return;\n            }\n            _this._removeSubscriptions();\n            _this._dragDropRegistry.stopDragging(_this);\n            if (!_this._hasStartedDragging) {\n                return;\n            }\n            if (!_this.dropContainer) {\n                // Convert the active transform into a passive one. This means that next time\n                // the user starts dragging the item, its position will be calculated relatively\n                // to the new passive transform.\n                _this._passiveTransform.x = _this._activeTransform.x;\n                _this._passiveTransform.y = _this._activeTransform.y;\n                _this._ngZone.run(function () { return _this.ended.emit({ source: _this }); });\n                return;\n            }\n            _this._animatePreviewToPlaceholder().then(function () { return _this._cleanupDragArtifacts(); });\n        };\n        this._document = document;\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    CdkDrag.prototype.getPlaceholderElement = /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._placeholder;\n    };\n    /** Returns the root draggable element. */\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    CdkDrag.prototype.getRootElement = /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    function () {\n        return this._rootElement;\n    };\n    /**\n     * @return {?}\n     */\n    CdkDrag.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n            /** @type {?} */\n            var rootElement = _this._rootElement = _this._getRootElement();\n            rootElement.addEventListener('mousedown', _this._pointerDown);\n            rootElement.addEventListener('touchstart', _this._pointerDown);\n            toggleNativeDragInteractions(rootElement, false);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CdkDrag.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._rootElement.removeEventListener('mousedown', this._pointerDown);\n        this._rootElement.removeEventListener('touchstart', this._pointerDown);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this._isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._removeElement(this._rootElement);\n        }\n        this._nextSibling = null;\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this._moveEvents.complete();\n    };\n    /** Checks whether the element is currently being dragged. */\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    CdkDrag.prototype._isDragging = /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._dragDropRegistry.isDragging(this);\n    };\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    CdkDrag.prototype._initializeDragSequence = /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    function (referenceElement, event) {\n        /** @type {?} */\n        var isDragging = this._isDragging();\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || (!this._isTouchEvent(event) && event.button !== 0)) {\n            return;\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        this._initialContainer = this.dropContainer;\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        // If we have a custom preview template, the element won't be visible anyway so we avoid the\n        // extra `getBoundingClientRect` calls and just move the preview next to the cursor.\n        this._pickupPositionInElement = this._previewTemplate ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        var pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragDropRegistry.startDragging(this, event);\n    };\n    /**\n     * Starts the dragging sequence.\n     * @return {?}\n     */\n    CdkDrag.prototype._startDragSequence = /**\n     * Starts the dragging sequence.\n     * @return {?}\n     */\n    function () {\n        // Emit the event on the item before the one on the container.\n        this.started.emit({ source: this });\n        if (this.dropContainer) {\n            /** @type {?} */\n            var element = this._rootElement;\n            // Grab the `nextSibling` before the preview and placeholder\n            // have been created so we don't get the preview by accident.\n            this._nextSibling = element.nextSibling;\n            /** @type {?} */\n            var preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            var placeholder = this._placeholder = this._createPlaceholderElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(/** @type {?} */ ((element.parentNode)).replaceChild(placeholder, element));\n            this._document.body.appendChild(preview);\n            this.dropContainer.start();\n        }\n    };\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @return {?}\n     */\n    CdkDrag.prototype._cleanupDragArtifacts = /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        if (this._nextSibling) {\n            /** @type {?} */ ((this._nextSibling.parentNode)).insertBefore(this._rootElement, this._nextSibling);\n        }\n        else {\n            this._initialContainer.element.nativeElement.appendChild(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(function () {\n            /** @type {?} */\n            var currentIndex = _this.dropContainer.getItemIndex(_this);\n            _this.ended.emit({ source: _this });\n            _this.dropped.emit({\n                item: _this,\n                currentIndex: currentIndex,\n                previousIndex: _this._initialContainer.getItemIndex(_this),\n                container: _this.dropContainer,\n                previousContainer: _this._initialContainer\n            });\n            _this.dropContainer.drop(_this, currentIndex, _this._initialContainer);\n            _this.dropContainer = _this._initialContainer;\n        });\n    };\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @param {?} __0\n     * @return {?}\n     */\n    CdkDrag.prototype._updateActiveDropContainer = /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var x = _a.x, y = _a.y;\n        /** @type {?} */\n        var newContainer = this.dropContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left it's\n        // initial container, check whether the it's allowed to return into its original container.\n        // This handles the case where two containers are connected one way and the user tries to\n        // undo dragging an item into a new container.\n        if (!newContainer && this.dropContainer !== this._initialContainer &&\n            this._initialContainer._canReturnItem(this, x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer) {\n            this._ngZone.run(function () {\n                // Notify the old container that the item has left.\n                _this.exited.emit({ item: _this, container: _this.dropContainer });\n                _this.dropContainer.exit(_this);\n                // Notify the new container that the item has entered.\n                _this.entered.emit({ item: _this, container: /** @type {?} */ ((newContainer)) });\n                _this.dropContainer = /** @type {?} */ ((newContainer));\n                _this.dropContainer.enter(_this, x, y);\n            });\n        }\n        this.dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._setTransform(this._preview, x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    };\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @return {?}\n     */\n    CdkDrag.prototype._createPreviewElement = /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var preview;\n        if (this._previewTemplate) {\n            /** @type {?} */\n            var viewRef = this._viewContainerRef.createEmbeddedView(this._previewTemplate.templateRef, this._previewTemplate.data);\n            preview = viewRef.rootNodes[0];\n            this._previewRef = viewRef;\n            this._setTransform(preview, this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n        }\n        else {\n            /** @type {?} */\n            var element = this._rootElement;\n            /** @type {?} */\n            var elementRect = element.getBoundingClientRect();\n            preview = /** @type {?} */ (element.cloneNode(true));\n            preview.style.width = elementRect.width + \"px\";\n            preview.style.height = elementRect.height + \"px\";\n            this._setTransform(preview, elementRect.left, elementRect.top);\n        }\n        extendStyles(preview.style, {\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._dir ? this._dir.value : 'ltr');\n        return preview;\n    };\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @return {?}\n     */\n    CdkDrag.prototype._createPlaceholderElement = /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var placeholder;\n        if (this._placeholderTemplate) {\n            this._placeholderRef = this._viewContainerRef.createEmbeddedView(this._placeholderTemplate.templateRef, this._placeholderTemplate.data);\n            placeholder = this._placeholderRef.rootNodes[0];\n        }\n        else {\n            placeholder = /** @type {?} */ (this._rootElement.cloneNode(true));\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    };\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    CdkDrag.prototype._getPointerPositionInElement = /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    function (referenceElement, event) {\n        /** @type {?} */\n        var elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        var handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        var referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        var point = this._isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        var x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        var y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    };\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    CdkDrag.prototype._animatePreviewToPlaceholder = /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    function () {\n        var _this = this;\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        var placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._setTransform(this._preview, placeholderRect.left, placeholderRect.top);\n        /** @type {?} */\n        var duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(function () {\n            return new Promise(function (resolve) {\n                /** @type {?} */\n                var handler = /** @type {?} */ ((function (event) {\n                    if (!event || (event.target === _this._preview && event.propertyName === 'transform')) {\n                        _this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }));\n                /** @type {?} */\n                var timeout = setTimeout(/** @type {?} */ (handler), duration * 1.5);\n                _this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    };\n    /**\n     * Sets the `transform` style on an element.\n     * @param {?} element Element on which to set the transform.\n     * @param {?} x Desired position of the element along the X axis.\n     * @param {?} y Desired position of the element along the Y axis.\n     * @return {?}\n     */\n    CdkDrag.prototype._setTransform = /**\n     * Sets the `transform` style on an element.\n     * @param {?} element Element on which to set the transform.\n     * @param {?} x Desired position of the element along the X axis.\n     * @param {?} y Desired position of the element along the Y axis.\n     * @return {?}\n     */\n    function (element, x, y) {\n        element.style.transform = \"translate3d(\" + x + \"px, \" + y + \"px, 0)\";\n    };\n    /**\n     * Helper to remove an element from the DOM and to do all the necessary null checks.\n     * @param {?} element Element to be removed.\n     * @return {?}\n     */\n    CdkDrag.prototype._removeElement = /**\n     * Helper to remove an element from the DOM and to do all the necessary null checks.\n     * @param {?} element Element to be removed.\n     * @return {?}\n     */\n    function (element) {\n        if (element && element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    };\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @param {?} event\n     * @return {?}\n     */\n    CdkDrag.prototype._getPointerPositionOnPage = /**\n     * Determines the point of the page that was touched by the user.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var point = this._isTouchEvent(event) ? event.touches[0] : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    };\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @param {?} event\n     * @return {?}\n     */\n    CdkDrag.prototype._getConstrainedPointerPosition = /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        var dropContainerLock = this.dropContainer ? this.dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            point.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            point.x = this._pickupPositionOnPage.x;\n        }\n        return point;\n    };\n    /**\n     * Determines whether an event is a touch event.\n     * @param {?} event\n     * @return {?}\n     */\n    CdkDrag.prototype._isTouchEvent = /**\n     * Determines whether an event is a touch event.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        return event.type.startsWith('touch');\n    };\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @return {?}\n     */\n    CdkDrag.prototype._destroyPreview = /**\n     * Destroys the preview element and its ViewRef.\n     * @return {?}\n     */\n    function () {\n        if (this._preview) {\n            this._removeElement(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = /** @type {?} */ ((null));\n    };\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @return {?}\n     */\n    CdkDrag.prototype._destroyPlaceholder = /**\n     * Destroys the placeholder element and its ViewRef.\n     * @return {?}\n     */\n    function () {\n        if (this._placeholder) {\n            this._removeElement(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = /** @type {?} */ ((null));\n    };\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    CdkDrag.prototype._updatePointerDirectionDelta = /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    function (pointerPositionOnPage) {\n        var x = pointerPositionOnPage.x, y = pointerPositionOnPage.y;\n        /** @type {?} */\n        var delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        var positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        /** @type {?} */\n        var changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        var changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    };\n    /**\n     * Gets the root draggable element, based on the `rootElementSelector`.\n     * @return {?}\n     */\n    CdkDrag.prototype._getRootElement = /**\n     * Gets the root draggable element, based on the `rootElementSelector`.\n     * @return {?}\n     */\n    function () {\n        if (this.rootElementSelector) {\n            /** @type {?} */\n            var selector = this.rootElementSelector;\n            /** @type {?} */\n            var currentElement = /** @type {?} */ (this.element.nativeElement.parentElement);\n            while (currentElement) {\n                // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n                if (currentElement.matches ? currentElement.matches(selector) :\n                    (/** @type {?} */ (currentElement)).msMatchesSelector(selector)) {\n                    return currentElement;\n                }\n                currentElement = currentElement.parentElement;\n            }\n        }\n        return this.element.nativeElement;\n    };\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @return {?}\n     */\n    CdkDrag.prototype._removeSubscriptions = /**\n     * Unsubscribes from the global subscriptions.\n     * @return {?}\n     */\n    function () {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n    };\n    CdkDrag.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    host: {\n                        'class': 'cdk-drag',\n                        '[class.cdk-drag-dragging]': '_hasStartedDragging && _isDragging()',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDrag.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST_CONTAINER,] }, { type: Optional }, { type: SkipSelf }] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: NgZone },\n        { type: ViewContainerRef },\n        { type: ViewportRuler },\n        { type: DragDropRegistry },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    CdkDrag.propDecorators = {\n        _handles: [{ type: ContentChildren, args: [CdkDragHandle,] }],\n        _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview,] }],\n        _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder,] }],\n        data: [{ type: Input, args: ['cdkDragData',] }],\n        lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n        rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n        started: [{ type: Output, args: ['cdkDragStarted',] }],\n        ended: [{ type: Output, args: ['cdkDragEnded',] }],\n        entered: [{ type: Output, args: ['cdkDragEntered',] }],\n        exited: [{ type: Output, args: ['cdkDragExited',] }],\n        dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n        moved: [{ type: Output, args: ['cdkDragMoved',] }]\n    };\n    return CdkDrag;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    var from = clamp(fromIndex, array.length - 1);\n    /** @type {?} */\n    var to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    var target = array[from];\n    /** @type {?} */\n    var delta = to < from ? -1 : 1;\n    for (var i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    var from = clamp(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    var to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Counter used to generate unique ids for drop zones.\n  @type {?} */\nvar _uniqueIdCounter = 0;\n/** *\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n  @type {?} */\nvar DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nvar CdkDropList = /** @class */ (function () {\n    function CdkDropList(element, _dragDropRegistry, _dir) {\n        this.element = element;\n        this._dragDropRegistry = _dragDropRegistry;\n        this._dir = _dir;\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this.orientation = 'vertical';\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = \"cdk-drop-list-\" + _uniqueIdCounter++;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = function () { return true; };\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Whether an item in the container is being dragged.\n         */\n        this._dragging = false;\n        /**\n         * Cache of the dimensions of all the items and the sibling containers.\n         */\n        this._positionCache = {\n            items: /** @type {?} */ ([]),\n            siblings: /** @type {?} */ ([]),\n            self: /** @type {?} */ ({})\n        };\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: /** @type {?} */ (null), delta: 0 };\n    }\n    /**\n     * @return {?}\n     */\n    CdkDropList.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._dragDropRegistry.registerDropContainer(this);\n    };\n    /**\n     * @return {?}\n     */\n    CdkDropList.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._dragDropRegistry.removeDropContainer(this);\n    };\n    /** Starts dragging an item. */\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    CdkDropList.prototype.start = /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    function () {\n        this._dragging = true;\n        this._activeDraggables = this._draggables.toArray();\n        this._cachePositions();\n    };\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     */\n    /**\n     * Drops an item into this container.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @return {?}\n     */\n    CdkDropList.prototype.drop = /**\n     * Drops an item into this container.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @return {?}\n     */\n    function (item, currentIndex, previousContainer) {\n        this._reset();\n        this.dropped.emit({\n            item: item,\n            currentIndex: currentIndex,\n            previousIndex: previousContainer.getItemIndex(item),\n            container: this,\n            // TODO(crisbeto): reconsider whether to make this null if the containers are the same.\n            previousContainer: previousContainer\n        });\n    };\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     */\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype.enter = /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY) {\n        this.entered.emit({ item: item, container: this });\n        this.start();\n        /** @type {?} */\n        var newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n        /** @type {?} */\n        var currentIndex = this._activeDraggables.indexOf(item);\n        /** @type {?} */\n        var newPositionReference = this._activeDraggables[newIndex];\n        /** @type {?} */\n        var placeholder = item.getPlaceholderElement();\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            this._activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            var element = newPositionReference.getRootElement(); /** @type {?} */\n            ((element.parentElement)).insertBefore(placeholder, element);\n            this._activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            this.element.nativeElement.appendChild(placeholder);\n            this._activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cachePositions();\n    };\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    CdkDropList.prototype.exit = /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    function (item) {\n        this._reset();\n        this.exited.emit({ item: item, container: this });\n    };\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    CdkDropList.prototype.getItemIndex = /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    function (item) {\n        if (!this._dragging) {\n            return this._draggables.toArray().indexOf(item);\n        }\n        /** @type {?} */\n        var items = this.orientation === 'horizontal' && this._dir && this._dir.value === 'rtl' ?\n            this._positionCache.items.slice().reverse() : this._positionCache.items;\n        return findIndex(items, function (currentItem) { return currentItem.drag === item; });\n    };\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDeta Direction in which the pointer is moving along each axis.\n     */\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta\n     * @return {?}\n     */\n    CdkDropList.prototype._sortItem = /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta\n     * @return {?}\n     */\n    function (item, pointerX, pointerY, pointerDelta) {\n        var _this = this;\n        // Don't sort the item if it's out of range.\n        if (!this._isPointerNearDropContainer(pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        var siblings = this._positionCache.items;\n        /** @type {?} */\n        var newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        var isHorizontal = this.orientation === 'horizontal';\n        /** @type {?} */\n        var currentIndex = findIndex(siblings, function (currentItem) { return currentItem.drag === item; });\n        /** @type {?} */\n        var siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        var currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        var newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        var delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        /** @type {?} */\n        var itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        /** @type {?} */\n        var siblingOffset = isHorizontal ? currentPosition.width * delta :\n            currentPosition.height * delta;\n        /** @type {?} */\n        var oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach(function (sibling, index) {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            var isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            var offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            var elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                elementToOffset.style.transform = \"translate3d(\" + sibling.offset + \"px, 0, 0)\";\n                _this._adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = \"translate3d(0, \" + sibling.offset + \"px, 0)\";\n                _this._adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n    };\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype._getSiblingContainerFromPosition = /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, x, y) {\n        /** @type {?} */\n        var result = this._positionCache.siblings\n            .find(function (sibling) { return isInsideClientRect(sibling.clientRect, x, y); });\n        return result && result.drop.enterPredicate(item, result.drop) ? result.drop : null;\n    };\n    /**\n     * Checks whether an item that started in this container can be returned to it,\n     * after it was moved out into another container.\n     * @param item Item that is being checked.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    /**\n     * Checks whether an item that started in this container can be returned to it,\n     * after it was moved out into another container.\n     * @param {?} item Item that is being checked.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype._canReturnItem = /**\n     * Checks whether an item that started in this container can be returned to it,\n     * after it was moved out into another container.\n     * @param {?} item Item that is being checked.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, x, y) {\n        return isInsideClientRect(this._positionCache.self, x, y) && this.enterPredicate(item, this);\n    };\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @return {?}\n     */\n    CdkDropList.prototype._cachePositions = /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var isHorizontal = this.orientation === 'horizontal';\n        this._positionCache.items = this._activeDraggables\n            .map(function (drag) {\n            /** @type {?} */\n            var elementToMeasure = _this._dragDropRegistry.isDragging(drag) ?\n                // If the element is being dragged, we have to measure the\n                // placeholder, because the element is hidden.\n                drag.getPlaceholderElement() :\n                drag.getRootElement();\n            /** @type {?} */\n            var clientRect = elementToMeasure.getBoundingClientRect();\n            return {\n                drag: drag,\n                offset: 0,\n                // We need to clone the `clientRect` here, because all the values on it are readonly\n                // and we need to be able to update them. Also we can't use a spread here, because\n                // the values on a `ClientRect` aren't own properties. See:\n                // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n                clientRect: {\n                    top: clientRect.top,\n                    right: clientRect.right,\n                    bottom: clientRect.bottom,\n                    left: clientRect.left,\n                    width: clientRect.width,\n                    height: clientRect.height\n                }\n            };\n        })\n            .sort(function (a, b) {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        });\n        this._positionCache.siblings = coerceArray(this.connectedTo)\n            .map(function (drop) { return typeof drop === 'string' ? /** @type {?} */ ((_this._dragDropRegistry.getDropContainer(drop))) : drop; })\n            .filter(function (drop) { return drop && drop !== _this; })\n            .map(function (drop) { return ({ drop: drop, clientRect: drop.element.nativeElement.getBoundingClientRect() }); });\n        this._positionCache.self = this.element.nativeElement.getBoundingClientRect();\n    };\n    /**\n     * Resets the container to its initial state.\n     * @return {?}\n     */\n    CdkDropList.prototype._reset = /**\n     * Resets the container to its initial state.\n     * @return {?}\n     */\n    function () {\n        this._dragging = false;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(function (item) { return item.getRootElement().style.transform = ''; });\n        this._activeDraggables = [];\n        this._positionCache.items = [];\n        this._positionCache.siblings = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n    };\n    /**\n     * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n     * @param {?} clientRect `ClientRect` that should be updated.\n     * @param {?} top Amount to add to the `top` position.\n     * @param {?} left Amount to add to the `left` position.\n     * @return {?}\n     */\n    CdkDropList.prototype._adjustClientRect = /**\n     * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n     * @param {?} clientRect `ClientRect` that should be updated.\n     * @param {?} top Amount to add to the `top` position.\n     * @param {?} left Amount to add to the `left` position.\n     * @return {?}\n     */\n    function (clientRect, top, left) {\n        clientRect.top += top;\n        clientRect.bottom = clientRect.top + clientRect.height;\n        clientRect.left += left;\n        clientRect.right = clientRect.left + clientRect.width;\n    };\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    CdkDropList.prototype._getItemIndexFromPointerPosition = /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY, delta) {\n        var _this = this;\n        /** @type {?} */\n        var isHorizontal = this.orientation === 'horizontal';\n        return findIndex(this._positionCache.items, function (_a, _, array) {\n            var drag = _a.drag, clientRect = _a.clientRect;\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                var direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === _this._previousSwap.drag && direction === _this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        });\n    };\n    /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @param {?} pointerX Coordinates along the X axis.\n     * @param {?} pointerY Coordinates along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype._isPointerNearDropContainer = /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @param {?} pointerX Coordinates along the X axis.\n     * @param {?} pointerY Coordinates along the Y axis.\n     * @return {?}\n     */\n    function (pointerX, pointerY) {\n        var _a = this._positionCache.self, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        /** @type {?} */\n        var xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n        /** @type {?} */\n        var yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n        return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n            pointerX > left - xThreshold && pointerX < right + xThreshold;\n    };\n    CdkDropList.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    providers: [\n                        { provide: CDK_DROP_LIST_CONTAINER, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[id]': 'id',\n                        '[class.cdk-drop-list-dragging]': '_dragging'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDropList.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: DragDropRegistry },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    CdkDropList.propDecorators = {\n        _draggables: [{ type: ContentChildren, args: [forwardRef(function () { return CdkDrag; }),] }],\n        connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n        data: [{ type: Input, args: ['cdkDropListData',] }],\n        orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n        id: [{ type: Input }],\n        lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n        enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n        dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n        entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n        exited: [{ type: Output, args: ['cdkDropListExited',] }]\n    };\n    return CdkDropList;\n}());\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.find` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (var i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    var top = clientRect.top, bottom = clientRect.bottom, left = clientRect.left, right = clientRect.right;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar DragDropModule = /** @class */ (function () {\n    function DragDropModule() {\n    }\n    DragDropModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        CdkDropList,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    exports: [\n                        CdkDropList,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                },] },\n    ];\n    return DragDropModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { CdkDropList, CDK_DROP_LIST_CONTAINER, CDK_DRAG_CONFIG_FACTORY, CDK_DRAG_CONFIG, CdkDrag, CdkDragHandle, moveItemInArray, transferArrayItem, CdkDragPreview, CdkDragPlaceholder, DragDropModule, DragDropRegistry };\n//# sourceMappingURL=drag-drop.es5.js.map\n","module.exports = \"<nh-modal #accountFormModal size=\\\"md\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header class=\\\"uppercase\\\">\\r\\n        {isUpdate, select, 0 {Add new account} 1 {Update account}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors?.userName\\\">\\r\\n                <label\\r\\n                    i18n-ghmLabel=\\\"@@userName\\\"\\r\\n                    ghmLabel=\\\"Username\\\"\\r\\n                    class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                           i18n-placeholder=\\\"@@enterUserNamePlaceholder\\\"\\r\\n                           placeholder=\\\"Enter username.\\\"\\r\\n                           formControlName=\\\"userName\\\" autocomplete=\\\"off\\\">\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors?.userName,\\r\\n                        select,\\r\\n                        required {Please enter username.}\\r\\n                        maxlength {Username must not exceed 50 characters.}\\r\\n                        pattern {Username must be number from 0 to 9 or characters from a to z.}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 *ngIf=\\\"!isUpdate\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.password\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@password\\\"\\r\\n                       ghmLabel=\\\"Password\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\"\\r\\n                           i18n-placeholder=\\\"@@enterPasswordPlaceholder\\\"\\r\\n                           placeholder=\\\"Enter password\\\"\\r\\n                           formControlName=\\\"password\\\" autocomplete=\\\"off\\\">\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors?.password,\\r\\n                        select,\\r\\n                        required {Please enter password.} maxlength {Password must not exceed 50 characters.}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 *ngIf=\\\"!isUpdate\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.confirmPassword\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@confirmPassword\\\"\\r\\n                       ghmLabel=\\\"Confirm password\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\"\\r\\n                           i18n-placeholder=\\\"@@enterConfirmPlaceholder\\\"\\r\\n                           placeholder=\\\"Enter confirm password\\\"\\r\\n                           formControlName=\\\"confirmPassword\\\" autocomplete=\\\"off\\\">\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors?.confirmPassword,\\r\\n                        select,\\r\\n                        required {Please confirm password.} maxlength {Confirm password must not exceed 50 characters.}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.fullName\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@fullName\\\"\\r\\n                       ghmLabel=\\\"Fullname\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                           i18n-placeholder=\\\"@@enterFullNamePlaceholder\\\"\\r\\n                           placeholder=\\\"Enter fullname\\\"\\r\\n                           formControlName=\\\"fullName\\\" autocomplete=\\\"off\\\">\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors?.fullName,\\r\\n                        select,\\r\\n                        required {Please enter fullname.} maxlength {Fullname must not exceed 50 characters.}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.phoneNumber\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@phoneNumber\\\"\\r\\n                       ghmLabel=\\\"Phone number\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                           i18n-placeholder=\\\"@@enterPhoneNumberPlaceholder\\\"\\r\\n                           placeholder=\\\"Enter phone number\\\"\\r\\n                           formControlName=\\\"phoneNumber\\\" autocomplete=\\\"off\\\">\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors?.phoneNumber,\\r\\n                        select,\\r\\n                        required {Please enter phone number.}\\r\\n                        maxlength {Phone number must not exceed 50 characters.}\\r\\n                        pattern {Invalid phone number.}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.email\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@email\\\"\\r\\n                       ghmLabel=\\\"Email\\\"\\r\\n                       class=\\\"col-sm-4 control-label\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                           i18n-placeholder=\\\"@@enterEmailPlaceholder\\\"\\r\\n                           placeholder=\\\"Enter email.\\\"\\r\\n                           formControlName=\\\"email\\\" autocomplete=\\\"off\\\">\\r\\n                    <span class=\\\"help-block\\\">\\r\\n                        {\\r\\n                        formErrors?.email,\\r\\n                        select,\\r\\n                        required {Please enter email.}\\r\\n                        maxlength {Email must not exceed 500 characters.}\\r\\n                        pattern {Invalid email.}\\r\\n                        }\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                    <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"isActive\\\">\\r\\n                        {model.value.isActive, select, 0 {InActive} 1 {Active}}\\r\\n                    </mat-slide-toggle>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer class=\\\"text-right\\\">\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\"\\r\\n                          i18n=\\\"@@createAnother\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <button class=\\\"btn btn-primary cm-mgr-5\\\" i18n=\\\"@@saveFormButton\\\">\\r\\n                {isUpdate, select, 0 {Add} 1 {Save}}\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn default\\\" nh-dismiss=\\\"true\\\" i18n=\\\"@@close\\\">\\r\\n                Close\\r\\n            </button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Account } from '../models/account.model';\r\nimport { BaseFormComponent } from '../../../../base-form.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NhModalComponent } from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ActionResultViewModel } from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport { AccountService } from '../account.service';\r\n\r\n@Component({\r\n    selector: 'app-account-form',\r\n    templateUrl: './account-form.component.html'\r\n})\r\n\r\nexport class AccountFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('accountFormModal') accountFormModal: NhModalComponent;\r\n    account: Account = new Account();\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private accountService: AccountService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.model.reset(new Account());\r\n        this.isUpdate = false;\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n            this.clearFormError(this.formErrors);\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.accountFormModal.open();\r\n    }\r\n\r\n    edit(id: string, account: Account) {\r\n        this.id = id;\r\n        this.account = account;\r\n        this.isUpdate = true;\r\n        this.model.patchValue(account as any);\r\n        this.accountFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        if (this.isUpdate) {\r\n            this.model.patchValue({\r\n                password: '1',\r\n                confirmPassword: '1'\r\n            });\r\n        }\r\n        const isValid = this.validateModel();\r\n        if (isValid) {\r\n            this.isSaving = true;\r\n            this.account = this.model.value;\r\n            if (this.isUpdate) {\r\n                this.accountService.update(this.id, this.account)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.toastr.success(result.message);\r\n                        this.isModified = true;\r\n                        this.accountFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.accountService.insert(this.account)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.toastr.success(result.message);\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.model.reset();\r\n                        } else {\r\n                            this.accountFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.renderFormError(['userName', 'fullName', 'email', 'phoneNumber', 'password', 'confirmPassword']);\r\n        this.validationMessages = this.renderFormErrorMessage([\r\n            {'userName': ['required', 'maxlength', 'pattern']},\r\n            {'fullName': ['required', 'maxlength']},\r\n            {'email': ['required', 'maxlength', 'pattern']},\r\n            {'phoneNumber': ['required', 'maxlength', 'pattern']},\r\n            {'password': ['required']},\r\n            {'confirmPassword': ['required']}\r\n        ]);\r\n        this.model = this.fb.group({\r\n            userName: [this.account.userName, [\r\n                Validators.required,\r\n                Validators.maxLength(50),\r\n                Validators.pattern('^[a-z0-9]+([-_\\\\.][a-z0-9]+)*[a-z0-9]$')\r\n            ]],\r\n            fullName: [this.account.fullName, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            email: [this.account.email, [\r\n                Validators.required,\r\n                Validators.maxLength(500),\r\n                Validators.pattern('^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$')\r\n            ]],\r\n            password: [this.account.password, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            confirmPassword: [this.account.confirmPassword, [\r\n                Validators.required,\r\n                Validators.maxLength(50)\r\n            ]],\r\n            phoneNumber: [this.account.phoneNumber, [\r\n                Validators.required,\r\n                Validators.maxLength(50),\r\n                Validators.pattern('^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')\r\n            ]],\r\n            isActive: [this.account.isActive],\r\n        });\r\n\r\n        this.subscribers.modelValueChanges = this.model.valueChanges.subscribe(() => this.validateModel(false));\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listAccountTitle\\\">List account.</span>\\r\\n    <small i18n=\\\"@@configModuleTitle\\\">Configs</small>\\r\\n</h1>\\r\\n\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n               i18n-placeholder=\\\"@@enterUserNameOrEmailOrPhoneNumberPlaceholder\\\"\\r\\n               placeholder=\\\"Enter username or email or phone number.\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: true, name: 'Đã kích hoạt'},{id: false, name: 'Chưa kích hoạt'}]\\\"\\r\\n            [title]=\\\"'-- Tất cả trạng thái --'\\\"\\r\\n            [(value)]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"onStatusSelected($event)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn btn-light\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5 pull-right\\\">\\r\\n        <button class=\\\"btn blue cm-mgr-5\\\" *ngIf=\\\"permission.add\\\"\\r\\n                type=\\\"button\\\" (click)=\\\"add()\\\" i18n=\\\"@@add\\\">\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n<table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n        <th class=\\\"middle center w150\\\" i18n=\\\"@@userName\\\">Username</th>\\r\\n        <th class=\\\"middle w250\\\" i18n=\\\"@@fullName\\\">Fullname</th>\\r\\n        <th class=\\\"middle w200\\\" i18n=\\\"@@email\\\">Email</th>\\r\\n        <th class=\\\"middle w200\\\" i18n=\\\"@@phoneNumber\\\">Phone number</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@isActive\\\">Is Active</th>\\r\\n        <th class=\\\"middle text-right w150\\\" i18n=\\\"@@actions\\\">Actions</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let account of listItems$ | async; let i = index\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"center middle\\\">{{ account.userName }}</td>\\r\\n        <td class=\\\"middle\\\">{{ account.fullName }}</td>\\r\\n        <td class=\\\"middle\\\">{{ account.email }}</td>\\r\\n        <td class=\\\"middle\\\">{{ account.phoneNumber }}</td>\\r\\n        <td class=\\\"middle\\\">\\r\\n                <span class=\\\"badge\\\" [class.badge-danger]=\\\"!account.isActive\\\"\\r\\n                      [class.badge-success]=\\\"account.isActive\\\">\\r\\n                    {account.isActive, select, 0 {InActive} 1 {Activated}}\\r\\n                </span>\\r\\n        </td>\\r\\n        <td class=\\\"middle text-right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn blue btn-outline btn-sm\\\" (click)=\\\"edit(account)\\\">\\r\\n                <i class=\\\"fa fa-edit\\\"></i>\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn red btn-outline btn-sm\\\" [swal]=\\\"confirmDelete\\\"\\r\\n                    (confirm)=\\\"delete(account.id)\\\">\\r\\n                <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n            </button>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            [pageShow]=\\\"6\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\"\\r\\n            [pageSize]=\\\"pageSize\\\"\\r\\n            (pageClick)=\\\"search($event)\\\"\\r\\n></ghm-paging>\\r\\n<swal\\r\\n    #confirmDelete\\r\\n    i18n-title=\\\"@@titleConfirmDeleteAccount\\\"\\r\\n    i18n-text=\\\"@@textConfirmDeleteAccount\\\"\\r\\n    title=\\\"Are you sure want to delete this account?\\\"\\r\\n    text=\\\"Warning: After delete you can not recover this account.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n    i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n    confirmButtonText=\\\"Accept\\\"\\r\\n    cancelButtonText=\\\"Cancel\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n<app-account-form (saveSuccessful)=\\\"search(1)\\\"></app-account-form>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { AccountViewModel } from './view-models/account.viewmodel';\r\nimport { AccountFormComponent } from './account-form/account-form.component';\r\nimport { Account } from './models/account.model';\r\nimport { AccountService } from './account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\nimport { ActionResultViewModel } from '../../../shareds/view-models/action-result.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-account',\r\n    templateUrl: './account.component.html',\r\n    providers: [AccountService]\r\n})\r\n\r\nexport class AccountComponent extends BaseListComponent<AccountViewModel> implements OnInit {\r\n    @ViewChild(AccountFormComponent) accountFormComponent: AccountFormComponent;\r\n    isActive: boolean;\r\n\r\n    constructor(\r\n        @Inject(PAGE_ID) public pageId: IPageId,\r\n        private toastr: ToastrService,\r\n        private accountService: AccountService) {\r\n        super();\r\n        this.search(1);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_ACCOUNT, 'Quản lý tài khoản', 'Cấu hình');\r\n    }\r\n\r\n    onStatusSelected(status: any) {\r\n        this.isActive = status ? status.id : null;\r\n        this.search(1);\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.isActive = null;\r\n        this.keyword = '';\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.listItems$ = this.accountService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(\r\n                finalize(() => this.isSearching = false),\r\n                map((result: SearchResultViewModel<AccountViewModel>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                })\r\n            );\r\n    }\r\n\r\n    add() {\r\n        // console.log(this.accountFormComponent);\r\n        this.accountFormComponent.add();\r\n    }\r\n\r\n    edit(account: AccountViewModel) {\r\n        this.accountFormComponent.edit(account.id, new Account(\r\n            account.userName, account.fullName, account.email, account.phoneNumber, account.isActive, account.concurrencyStamp\r\n        ));\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.subscribers.deleteAccount = this.accountService.delete(id)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                this.search(1);\r\n            });\r\n    }\r\n}\r\n\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\nimport { AccountViewModel } from './view-models/account.viewmodel';\r\nimport { ActionResultViewModel } from '../../../shareds/view-models/action-result.viewmodel';\r\nimport { Account } from './models/account.model';\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n    url = 'api/v1/core/accounts';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private http: HttpClient) {\r\n        this.url = `${this.appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page: number = 1,\r\n           pageSize: number = 10): Observable<SearchResultViewModel<AccountViewModel>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null && isActive !== undefined ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '')\r\n        }) as  Observable<SearchResultViewModel<AccountViewModel>>;\r\n    }\r\n\r\n    insert(account: Account): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}`, account)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, account: Account): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/${id}`, account)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}/${id}`)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n}\r\n","export class Account {\r\n    userName: string;\r\n    fullName: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    isActive: boolean;\r\n    concurrencyStamp: string;\r\n\r\n    constructor(userName?: string, fullName?: string, email?: string, phoneNumber?: string,\r\n                isActive?: boolean, concurrencyStamp?: string) {\r\n        this.userName = userName;\r\n        this.fullName = fullName;\r\n        this.email = email;\r\n        this.phoneNumber = phoneNumber;\r\n        this.isActive = isActive != null && isActive !== undefined ? isActive : true;\r\n        this.concurrencyStamp = concurrencyStamp;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listApproverTitle\\\">List approver.</span>\\r\\n    <small i18n=\\\"@@configModuleTitle\\\">Configs</small>\\r\\n</h1>\\r\\n\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n               i18n-placeholder=\\\"@@enterUserNameOrEmailOrPhoneNumberPlaceholder\\\"\\r\\n               placeholder=\\\"Enter username or email or phone number.\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n                i18n-title=\\\"@@pleaseSelectTypeTitle\\\"\\r\\n                title=\\\"-- Please select type --\\\"\\r\\n                [data]=\\\"approverConfigTypes\\\"\\r\\n                (onSelectItem)=\\\"onSelectApproverConfigType($event, true)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn blue\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn btn-light\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <!--<div class=\\\"form-group cm-mgl-5 pull-right\\\">-->\\r\\n        <!--<button class=\\\"btn blue cm-mgr-5\\\" *ngIf=\\\"permission.add\\\"-->\\r\\n                <!--type=\\\"button\\\" (click)=\\\"add()\\\" i18n=\\\"@@add\\\">-->\\r\\n            <!--Add-->\\r\\n        <!--</button>-->\\r\\n    <!--</div>-->\\r\\n</form>\\r\\n<table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@user\\\">User</th>\\r\\n        <th class=\\\"middle center\\\" i18n=\\\"@@type\\\">Type</th>\\r\\n        <th class=\\\"middle center w50\\\" i18n=\\\"@@actions\\\">Actions</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listItems$ | async; let i = index\\\">\\r\\n        <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            <div class=\\\"media\\\">\\r\\n                <div class=\\\"media-left\\\">\\r\\n                    <a href=\\\"#\\\">\\r\\n                        <img class=\\\"media-object avatar-md\\\"\\r\\n                             ghmImage\\r\\n                             [src]=\\\"item.avatar\\\" alt=\\\"{{ item.fullName }}\\\">\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\\\"media-body\\\">\\r\\n                    <h4 class=\\\"media-heading\\\">{{ item.fullName }}</h4>\\r\\n                    <span>{{ item.userName }}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td class=\\\"center middle\\\">\\r\\n            <span class=\\\"badge\\\"\\r\\n                  [class.badge-primary]=\\\"item.type === 0\\\"\\r\\n                  [class.badge-red]=\\\"item.type === 1\\\"\\r\\n                  [class.badge-success]=\\\"item.type === 2\\\">\\r\\n                {item.type, select, 0 {News} 1 {Event} 2 {Product}}\\r\\n            </span>\\r\\n        </td>\\r\\n        <td class=\\\"middle text-right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn red btn-outline\\\"\\r\\n                    i18n-matTooltip=\\\"@@delete\\\"\\r\\n                    matTooltip=\\\"Delete\\\"\\r\\n                    [swal]=\\\"confirmDelete\\\"\\r\\n                    (confirm)=\\\"delete(item.userId, item.type)\\\">\\r\\n                <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n            </button>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n    <tr>\\r\\n        <td></td>\\r\\n        <td>\\r\\n            <ghm-user-suggestion\\r\\n                    (userSelected)=\\\"onUserSelected($event)\\\"\\r\\n            ></ghm-user-suggestion>\\r\\n        </td>\\r\\n        <td>\\r\\n            <nh-select\\r\\n                    i18n-title=\\\"@@pleaseSelectTypeTitle\\\"\\r\\n                    title=\\\"-- Please select type --\\\"\\r\\n                    [data]=\\\"approverConfigTypes\\\"\\r\\n                    (onSelectItem)=\\\"onSelectApproverConfigType($event)\\\"></nh-select>\\r\\n        </td>\\r\\n        <td class=\\\"center\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn blue\\\"\\r\\n                    i18n-matTooltip=\\\"@@save\\\"\\r\\n                    matTooltip=\\\"Save\\\"\\r\\n                    (click)=\\\"save()\\\">\\r\\n                <i class=\\\"fa fa-save\\\"></i>\\r\\n            </button>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tfoot>\\r\\n</table>\\r\\n\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            [pageShow]=\\\"6\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\"\\r\\n            [pageSize]=\\\"pageSize\\\"\\r\\n            (pageClick)=\\\"search($event)\\\"\\r\\n></ghm-paging>\\r\\n\\r\\n<swal\\r\\n        #confirmDelete\\r\\n        i18n-title=\\\"@@confirmDeleteApproveConfigTitle\\\"\\r\\n        i18n-text=\\\"@@confirmDeleteApproveConfigText\\\"\\r\\n        title=\\\"Are you sure for delete this approver?\\\"\\r\\n        text=\\\"You can't recover this approver after delete.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\">\\r\\n</swal>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApproverService } from './approver.service';\r\nimport { ActionResultViewModel } from '../../../shareds/view-models/action-result.viewmodel';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\nimport { ApproverViewModel } from './view-models/approver.viewmodel';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SuggestionViewModel } from '../../../shareds/view-models/SuggestionViewModel';\r\n\r\n@Component({\r\n    selector: 'app-approver',\r\n    templateUrl: './approver.component.html',\r\n    styleUrls: ['./approver.component.css']\r\n})\r\nexport class ApproverComponent extends BaseListComponent<ApproverViewModel> implements OnInit {\r\n    approverConfigTypes: SuggestionViewModel<number>[] = [];\r\n    hasError = false;\r\n    userId: string;\r\n    type: number;\r\n    typeSearch: number;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private toastr: ToastrService,\r\n        private approverService: ApproverService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subscribers.getTypes = this.approverService.getTypes()\r\n            .subscribe((result: SuggestionViewModel<number>[]) => this.approverConfigTypes = result);\r\n        this.listItems$ = this.route.data.pipe(\r\n            map((result: { data: SearchResultViewModel<ApproverViewModel> }) => {\r\n                const data = result.data;\r\n                if (data) {\r\n                    this.totalRows = data.totalRows;\r\n                    return data.items;\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    onSelectApproverConfigType(item: SuggestionViewModel<number>, isSearch = false) {\r\n        if (isSearch) {\r\n            this.typeSearch = item.id;\r\n            this.search(1);\r\n        } else {\r\n            this.type = item.id;\r\n        }\r\n    }\r\n\r\n    onUserSelected(user: any) {\r\n        this.userId = user.id;\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.listItems$ = this.approverService.search(this.keyword, this.typeSearch, this.currentPage, this.pageSize)\r\n            .pipe(\r\n                finalize(() => this.isSearching = false),\r\n                map((result: SearchResultViewModel<ApproverViewModel>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                }));\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.search(1);\r\n    }\r\n\r\n    save() {\r\n        if (!this.userId || this.type == null || this.type === undefined) {\r\n            this.hasError = true;\r\n        } else {\r\n            this.hasError = false;\r\n            this.approverService.insert(this.userId, this.type)\r\n                .subscribe((result: ActionResultViewModel) => {\r\n                    this.toastr.show(result.message);\r\n                    this.search(1);\r\n                });\r\n        }\r\n    }\r\n\r\n    delete(userId: string, type: number) {\r\n        this.approverService.delete(userId, type)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n            });\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { ApproverViewModel } from './view-models/approver.viewmodel';\r\nimport { ActionResultViewModel } from '../../../shareds/view-models/action-result.viewmodel';\r\nimport { SuggestionViewModel } from '../../../shareds/view-models/SuggestionViewModel';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApproverService implements Resolve<any> {\r\n    url = 'api/v1/core/approver-configs';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private http: HttpClient) {\r\n        this.url = `${this.appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const params = route.queryParams;\r\n        return this.search(params.keyword, params.isActive);\r\n    }\r\n\r\n    search(keyword: string, type?: number, page: number = 1,\r\n           pageSize: number = 20): Observable<SearchResultViewModel<ApproverViewModel>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('type', type != null && type !== undefined ? type.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<SearchResultViewModel<ApproverViewModel>>;\r\n    }\r\n\r\n    insert(userId: string, type: number): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .post(`${this.url}/${userId}/${type}`, {})\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(userId: string, type: number): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}/${userId}/${type}`)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getTypes(): Observable<SuggestionViewModel<number>[]> {\r\n        return this.http.get(`${this.url}/types`) as Observable<SuggestionViewModel<number>[]>;\r\n    }\r\n}\r\n","module.exports = \"<form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n    <div class=\\\"m-portlet\\\">\\r\\n        <div class=\\\"m-portlet__head\\\">\\r\\n            <div class=\\\"m-portlet__head-caption\\\">\\r\\n                <div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"m-portlet__head-icon m--hide\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"flaticon-computer\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                    <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                        {{isUpdate ? \\\"Cập nhật thông tin Client\\\" : \\\"Thêm mới Client\\\"}}\\r\\n                    </h3>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"m-portlet__body\\\">\\r\\n            <pre>{{model.value|json}}</pre>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Client ID\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <div type=\\\"text\\\" value=\\\"\\\"\\r\\n                                 class=\\\"form-control disabled\\\"\\r\\n                                 placeholder=\\\"Nhập mã trang\\\">\\r\\n                                {{model.value.clientId}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div><!-- END: clientId -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Client Name\\\" class=\\\"col-3 col-form-label\\\" [required]=\\\"true\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter client name\\\"\\r\\n                                   formControlName=\\\"clientName\\\">\\r\\n                        </div>\\r\\n                    </div><!-- END: clientName -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Refresh token usage\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <nh-select\\r\\n                                title=\\\"-- Select refresh token usage --\\\"\\r\\n                                [data]=\\\"[{id: 0, name: 'Reuse'}, {id: 1, name: 'One time only'}]\\\"\\r\\n                                formControlName=\\\"refreshTokenUsage\\\"\\r\\n                            ></nh-select>\\r\\n                        </div>\\r\\n                    </div><!-- END: Refresh token usage -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Refresh Token Expiration\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <nh-select\\r\\n                                title=\\\"-- Select refresh token expiration --\\\"\\r\\n                                [data]=\\\"[{id: 0, name: 'Sliding'}, {id: 1, name: 'Absolute'}]\\\"\\r\\n                                formControlName=\\\"refreshTokenExpiration\\\"\\r\\n                            ></nh-select>\\r\\n                        </div>\\r\\n                    </div><!-- END: Refresh Token Expiration -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Allowed Grant Types\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <nh-select\\r\\n                                title=\\\"-- Select grant types --\\\"\\r\\n                                [data]=\\\"listGrantTypes\\\"\\r\\n                                formControlName=\\\"clientAllowedGrantTypes\\\"\\r\\n                            ></nh-select>\\r\\n                        </div>\\r\\n                    </div><!-- END: Allowed Grant Types -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Allowed Scopes\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <textarea type=\\\"text\\\" class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                      placeholder=\\\"Please enter allowed scope separate by comma.\\\"\\r\\n                                      formControlName=\\\"clientAllowedScopes\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div><!-- END: Allowed Scopes -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Allowed Cors Origins\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <textarea class=\\\"form-control\\\"\\r\\n                                      rows=\\\"3\\\"\\r\\n                                      placeholder=\\\"Please enter allowed cors origin separate by comma.\\\"\\r\\n                                      formControlName=\\\"clientAllowedCorsOrigins\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div><!-- END: Refresh Token Expiration -->\\r\\n                </div><!-- END: first-col -->\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <mat-slide-toggle formControlName=\\\"enabled\\\"> Enabled</mat-slide-toggle>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <mat-slide-toggle formControlName=\\\"allowOfflineAccess\\\"> Allowed Offline Access\\r\\n                            </mat-slide-toggle>\\r\\n                        </div>\\r\\n                    </div><!-- END: Allowed Offline Access -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <mat-slide-toggle formControlName=\\\"requireClientSecret\\\"> Require Client Secret\\r\\n                            </mat-slide-toggle>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Client Secret\\\" class=\\\"col-3 col-form-label\\\"\\r\\n                               [required]=\\\"model.value.requireClientSecret\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input [attr.type]=\\\"isShowSecret ? 'text' : 'password'\\\" class=\\\"form-control\\\"\\r\\n                                       placeholder=\\\"Enter secret\\\"\\r\\n                                       formControlName=\\\"clientSecret\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" matTooltip=\\\"Show secret\\\"\\r\\n                                            matTooltipPosition=\\\"above\\\" (click)=\\\"toggleShowSecret()\\\">\\r\\n                                        <!--<i class=\\\"flaticon-medical\\\"></i>-->\\r\\n                                        <i class=\\\"fa fa-eye\\\" *ngIf=\\\"isShowSecret\\\"></i>\\r\\n                                        <i class=\\\"fa fa-eye-slash\\\" *ngIf=\\\"!isShowSecret\\\"></i>\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div><!-- END: clientSecret -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Absolute Refresh Token Lifetime\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                               placeholder=\\\"Enter absolute refresh token lifetime\\\"\\r\\n                                               formControlName=\\\"absoluteRefreshTokenLifetime\\\">\\r\\n                                        <div class=\\\"input-group-append\\\">\\r\\n                                            <span class=\\\"input-group-text\\\"\\r\\n                                                  id=\\\"absoluteRefreshTokenLifetime\\\">seconds</span>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <span class=\\\"m-form__help\\\">\\r\\n                                Maximum lifetime of a refresh token in seconds. Defaults to 2592000 seconds / 30 days\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div><!-- END: AbsoluteRefreshTokenLifetime -->\\r\\n                    <div class=\\\"form-group m-form__group\\\">\\r\\n                        <label ghmLabel=\\\"Sliding Refresh Token Lifetime\\\" class=\\\"col-3 col-form-label\\\"></label>\\r\\n                        <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                           placeholder=\\\"Enter sliding refresh token lifetime\\\"\\r\\n                                           formControlName=\\\"slidingRefreshTokenLifetime\\\">\\r\\n                                    <div class=\\\"input-group-append\\\">\\r\\n                                        <span class=\\\"input-group-text\\\" id=\\\"slidingRefreshTokenLifeTime\\\">seconds</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <span class=\\\"m-form__help\\\">\\r\\n                                Sliding lifetime of a refresh token in seconds. Defaults to 1296000 seconds / 15 days\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div><!-- END: SlidingRefreshTokenLifetime -->\\r\\n                </div><!-- END: second-col -->\\r\\n            </div>\\r\\n        </div><!-- END .m-portlet__body -->\\r\\n        <div class=\\\"m-portlet__foot m-portlet__foot--fit\\\">\\r\\n            <div class=\\\"m-form__actions m-form__actions\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\">\\r\\n                    Lưu lại\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" mat-raised-button routerLink=\\\"/config/client\\\">\\r\\n                    Hủy bỏ\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Client } from './client.model';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ClientService } from './client.service';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-client-form',\r\n    templateUrl: './client-form.component.html'\r\n})\r\n\r\nexport class ClientFormComponent extends BaseFormComponent implements OnInit {\r\n    model: FormGroup;\r\n    client: Client = new Client();\r\n    isShowSecret = false;\r\n\r\n    listGrantTypes = [];\r\n    listPostRedirectLogoutUris: string[] = [];\r\n    listIdentityProviderRestrictions: string[] = [];\r\n\r\n    constructor(private router: Router,\r\n                private route: ActivatedRoute,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private spinnerService: SpinnerService,\r\n                private clientService: ClientService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('here');\r\n        this.renderListGrantTypes();\r\n        this.buildForm();\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            if (params.clientId) {\r\n                this.isUpdate = true;\r\n                this.clientService.getDetail(params.clientId)\r\n                    .subscribe(client => {\r\n                        this.model.patchValue(client);\r\n                    });\r\n            } else {\r\n                this.isUpdate = false;\r\n                this.getClientId();\r\n            }\r\n        });\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (isValid) {\r\n            this.client = this.model.value;\r\n            this.spinnerService.show('Đang lưu thông tin client. Vui lòng đợi...');\r\n            if (this.isUpdate) {\r\n                this.clientService.update(this.client)\r\n                    .pipe(finalize(() => this.spinnerService.hide()))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.show(result.message, result.title);\r\n                        this.router.navigateByUrl('/config/client');\r\n                    });\r\n            } else {\r\n                this.clientService.insert(this.client)\r\n                    .pipe(finalize(() => this.spinnerService.hide()))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.toastr.show(result.message, result.title);\r\n                        this.model.reset(new Client());\r\n                        this.getClientId();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleShowSecret() {\r\n        this.isShowSecret = !this.isShowSecret;\r\n    }\r\n\r\n    private getClientId() {\r\n        this.spinnerService.show('Đang tạo mã Client. Vui lòng đợi...');\r\n        this.clientService.getCientId()\r\n            .pipe(finalize(() => this.spinnerService.hide()))\r\n            .subscribe(clientId => this.model.patchValue({clientId: clientId}));\r\n    }\r\n\r\n    private renderListGrantTypes() {\r\n        this.listGrantTypes = [\r\n            {id: 'Implicit', name: 'Implicit'},\r\n            {id: 'ImplicitAndClientCredentials', name: 'ImplicitAndClientCredentials'},\r\n            {id: 'Code', name: 'Code'},\r\n            {id: 'CodeAndClientCredentials', name: 'CodeAndClientCredentials'},\r\n            {id: 'Hybrid', name: 'Hybrid'},\r\n            {id: 'HybridAndClientCredentials', name: 'HybridAndClientCredentials'},\r\n            {id: 'ClientCredentials', name: 'ClientCredentials'},\r\n            {id: 'ResourceOwnerPassword', name: 'ResourceOwnerPassword'},\r\n            {id: 'ResourceOwnerPasswordAndClientCredentials', name: 'ResourceOwnerPasswordAndClientCredentials'},\r\n        ];\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['']);\r\n\r\n        this.validationMessages = {};\r\n\r\n        this.model = this.fb.group({\r\n            'clientId': [this.client.clientId],\r\n            'clientName': [this.client.clientName, [\r\n                Validators.required,\r\n                Validators.maxLength(450)\r\n            ]],\r\n            'absoluteRefreshTokenLifetime': [this.client.absoluteRefreshTokenLifetime],\r\n            'accessTokenLifetime': [this.client.accessTokenLifetime],\r\n            'accessTokenType': [this.client.accessTokenType],\r\n            'allowAccessTokensViaBrowser': [this.client.allowAccessTokensViaBrowser],\r\n            'allowOfflineAccess': [this.client.allowOfflineAccess],\r\n            'allowPlainTextPkce': [this.client.allowPlainTextPkce],\r\n            'allowRememberConsent': [this.client.allowRememberConsent],\r\n            'alwaysIncludeUserClaimsInIdToken': [this.client.alwaysIncludeUserClaimsInIdToken],\r\n            'alwaysSendClientClaims': [this.client.alwaysSendClientClaims],\r\n            'authorizationCodeLifetime': [this.client.authorizationCodeLifetime],\r\n            'backChannelLogoutSessionRequired': [this.client.backChannelLogoutSessionRequired],\r\n            'backChannelLogoutUri': [this.client.backChannelLogoutUri],\r\n            'clientAllowedGrantTypes': [this.client.clientAllowedGrantTypes, [\r\n                Validators.required\r\n            ]],\r\n            'clientClaimsPrefix': [this.client.clientClaimsPrefix],\r\n            'clientUri': [this.client.clientUri],\r\n            'consentLifetime': [this.client.consentLifetime],\r\n            'enableLocalLogin': [this.client.enableLocalLogin],\r\n            'enabled': [this.client.enabled],\r\n            'frontChannelLogoutSessionRequired': [this.client.frontChannelLogoutSessionRequired],\r\n            'frontChannelLogoutUri': [this.client.frontChannelLogoutUri],\r\n            'identityTokenLifetime': [this.client.identityTokenLifetime],\r\n            'includeJwtId': [this.client.includeJwtId],\r\n            'logoUri': [this.client.logoUri],\r\n            'pairWiseSubjectSalt': [this.client.pairWiseSubjectSalt],\r\n            'protocolType': [this.client.protocolType],\r\n            'refreshTokenExpiration': [this.client.refreshTokenExpiration],\r\n            'refreshTokenUsage': [this.client.refreshTokenUsage],\r\n            'requireClientSecret': [this.client.requireClientSecret],\r\n            'requireConsent': [this.client.requireConsent],\r\n            'requirePkce': [this.client.requirePkce],\r\n            'slidingRefreshTokenLifetime': [this.client.slidingRefreshTokenLifetime],\r\n            'updateAccessTokenClaimsOnRefresh': [this.client.updateAccessTokenClaimsOnRefresh],\r\n            'clientAllowedScopes': [this.client.clientAllowedScopes],\r\n            'clientAllowedCorsOrigins': [this.client.clientAllowedCorsOrigins],\r\n            'clientSecret': [this.client.clientSecret]\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet\\\">\\r\\n    <div class=\\\"m-portlet__head\\\">\\r\\n        <div class=\\\"m-portlet__head-caption\\\">\\r\\n            <div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"m-portlet__head-icon m--hide\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"flaticon-computer\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                <h3 class=\\\"m-portlet__head-text\\\">\\r\\n                    Danh sách Client.\\r\\n                </h3>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"m-portlet__body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search()\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input class=\\\"form-control\\\" placeholder=\\\"Nhập từ khoá tìm kiếm\\\"\\r\\n                               (keyup)=\\\"keyword = searchBox.value\\\" #searchBox>\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"form-group\\\">-->\\r\\n                        <!--<nh-select-->\\r\\n                            <!--[data]=\\\"[{id: 1, name: 'Kích hoạt'}, {id: 0, name: 'Chưa kích hoạt'}]\\\"-->\\r\\n                            <!--[title]=\\\"'&#45;&#45; Tất cả trạng thái &#45;&#45;'\\\"-->\\r\\n                            <!--[(value)]=\\\"moduleIdSearch\\\"-->\\r\\n                            <!--(onSelectItem)=\\\"search(1)\\\"></nh-select>-->\\r\\n                    <!--</div>-->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">\\r\\n                            <i class=\\\"fa fa-search\\\"></i>\\r\\n                            Tìm kiếm\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group pull-right\\\">\\r\\n                        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n                            <i class=\\\"fa fa-plus\\\"></i>\\r\\n                            Thêm mới\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n            <!--<div class=\\\"col-sm-12\\\">-->\\r\\n            <!--<table-->\\r\\n            <!--class=\\\"table table-striped table-bordered table-hover table-full-width dataTable no-footer table-main\\\">-->\\r\\n            <!--<thead>-->\\r\\n            <!--<tr>-->\\r\\n            <!--<th class=\\\"center w50\\\">STT</th>-->\\r\\n            <!--<th class=\\\"center\\\">Tên trang</th>-->\\r\\n            <!--<th class=\\\"center\\\">Module</th>-->\\r\\n            <!--<th class=\\\"center\\\">Icon</th>-->\\r\\n            <!--<th class=\\\"center w100\\\">Thứ tự</th>-->\\r\\n            <!--<th class=\\\"center\\\">Đường dẫn</th>-->\\r\\n            <!--<th class=\\\"center w100\\\">Public</th>-->\\r\\n            <!--<th class=\\\"center w100\\\">Kích hoạt</th>-->\\r\\n            <!--<th class=\\\"center w150\\\" *ngIf=\\\"isHasUpdatePermission || isHasDeletePermission\\\">Sửa, Xóa</th>-->\\r\\n            <!--</tr>-->\\r\\n            <!--</thead>-->\\r\\n            <!--<tbody>-->\\r\\n            <!--<ng-template ngFor let-parent let-parentIndex=\\\"index\\\" [ngForOf]=\\\"listPages\\\">-->\\r\\n            <!--<tr>-->\\r\\n            <!--<td colspan=\\\"9\\\" class=\\\"bg-info bold middle color-white\\\">{{parent.modulesName}}</td>-->\\r\\n            <!--</tr>-->\\r\\n            <!--<tr *ngFor=\\\"let page of parent.listPage; let i = index\\\">-->\\r\\n            <!--<td class=\\\"center middle\\\">{{(currentPage - 1) * pageSize + i + 1}}</td>-->\\r\\n            <!--<td class=\\\"middle\\\">{{page.name}}</td>-->\\r\\n            <!--<td class=\\\"middle\\\">{{page.modulesName}}</td>-->\\r\\n            <!--<td class=\\\"w100 center middle\\\">-->\\r\\n            <!--<i [class]=\\\"page.icon\\\"></i>-->\\r\\n            <!--</td>-->\\r\\n            <!--<td class=\\\"middle\\\">-->\\r\\n            <!--<span *ngIf=\\\"!isHasUpdatePermission\\\">{{page.order}}</span>-->\\r\\n            <!--<input *ngIf=\\\"isHasUpdatePermission\\\" type=\\\"text\\\" class=\\\"form-control text-right\\\"-->\\r\\n            <!--value=\\\"{{page.order}}\\\"-->\\r\\n            <!--(blur)=\\\"onOrderBlur(page, $event)\\\"/>-->\\r\\n            <!--</td>-->\\r\\n            <!--<td class=\\\"middle\\\">{{page.url}}</td>-->\\r\\n            <!--<td class=\\\"center middle\\\">-->\\r\\n            <!--<i *ngIf=\\\"!isHasUpdatePermission && page.isPubclic\\\"-->\\r\\n            <!--class=\\\"fa fa-check color-green size-16\\\"></i>-->\\r\\n            <!--&lt;!&ndash;<mat-checkbox color=\\\"primary\\\" *ngIf=\\\"isHasUpdatePermission\\\" [checked]=\\\"page.isPublic\\\"&ndash;&gt;-->\\r\\n            <!--&lt;!&ndash;(change)=\\\"changePublicStatus(page)\\\"></mat-checkbox>&ndash;&gt;-->\\r\\n            <!--</td>-->\\r\\n            <!--<td class=\\\"center middle\\\">-->\\r\\n            <!--<i *ngIf=\\\"!isHasUpdatePermission && page.isActive\\\"-->\\r\\n            <!--class=\\\"fa fa-check color-green size-16\\\"></i>-->\\r\\n            <!--<mat-checkbox color=\\\"primary\\\" *ngIf=\\\"isHasUpdatePermission\\\" [checked]=\\\"page.isActive\\\"-->\\r\\n            <!--(change)=\\\"changeActiveStatus(page)\\\"></mat-checkbox>-->\\r\\n            <!--</td>-->\\r\\n            <!--<td class=\\\"center middle w100\\\" *ngIf=\\\"isHasUpdatePermission || isHasDeletePermission\\\">-->\\r\\n            <!--<a *ngIf=\\\"isHasUpdatePermission\\\" mat-mini-fab color=\\\"primary\\\" href=\\\"javascript://\\\"-->\\r\\n            <!--(click)=\\\"setUpdate(page)\\\">-->\\r\\n            <!--<i class=\\\"fa fa-pencil\\\"></i>-->\\r\\n            <!--</a>-->\\r\\n            <!--<a *ngIf=\\\"isHasDeletePermission\\\" mat-mini-fab color=\\\"warn\\\"-->\\r\\n            <!--class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"delete(page)\\\">-->\\r\\n            <!--<i class=\\\"fa fa-trash-o\\\"></i>-->\\r\\n            <!--</a>-->\\r\\n            <!--</td>-->\\r\\n            <!--</tr>-->\\r\\n            <!--&lt;!&ndash; /ko &ndash;&gt;-->\\r\\n            <!--</ng-template>-->\\r\\n            <!--</tbody>-->\\r\\n            <!--</table>-->\\r\\n            <!--</div>-->\\r\\n            <!--</div>-->\\r\\n            <!--<ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"-->\\r\\n            <!--[isDisabled]=\\\"isSearching\\\" [pageName]=\\\"'trang'\\\"></ghm-paging>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { Page } from '../page/models/page.model';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\n\r\n@Component({\r\n    selector: 'app-client',\r\n    templateUrl: './client.component.html'\r\n})\r\nexport class ClientComponent extends BaseListComponent<Page> implements OnInit {\r\n    isActive?: boolean;\r\n\r\n    constructor( @Inject(PAGE_ID) pageId: IPageId) {\r\n        super();\r\n        this.appService.setupPage(pageId.CONFIG, pageId.CONFIG_CLIENT, 'Cấu hình', 'Cấu hình');\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    search() {\r\n\r\n    }\r\n\r\n    addNew() {\r\n    }\r\n}\r\n","export class Client {\r\n    clientId: string;\r\n    clientName?: string;\r\n    absoluteRefreshTokenLifetime: number;\r\n    accessTokenLifetime: number;\r\n    accessTokenType: number;\r\n    allowAccessTokensViaBrowser: boolean;\r\n    allowOfflineAccess: boolean;\r\n    allowPlainTextPkce: boolean;\r\n    allowRememberConsent: boolean;\r\n    alwaysIncludeUserClaimsInIdToken: boolean;\r\n    alwaysSendClientClaims: boolean;\r\n    authorizationCodeLifetime: number;\r\n    backChannelLogoutSessionRequired: boolean;\r\n    backChannelLogoutUri?: string;\r\n    clientAllowedGrantTypes?: string;\r\n    clientClaimsPrefix?: string;\r\n    clientUri?: string;\r\n    consentLifetime?: boolean;\r\n    enableLocalLogin: boolean;\r\n    enabled: boolean;\r\n    frontChannelLogoutSessionRequired: boolean;\r\n    frontChannelLogoutUri?: string;\r\n    identityTokenLifetime: number;\r\n    includeJwtId: boolean;\r\n    logoUri?: string;\r\n    pairWiseSubjectSalt?: string;\r\n    protocolType?: string;\r\n    refreshTokenExpiration: number;\r\n    refreshTokenUsage: number;\r\n    requireClientSecret: boolean;\r\n    requireConsent: boolean;\r\n    requirePkce: boolean;\r\n    slidingRefreshTokenLifetime: number;\r\n    updateAccessTokenClaimsOnRefresh: boolean;\r\n    clientAllowedScopes: string;\r\n    clientAllowedCorsOrigins: string;\r\n    clientSecret: string;\r\n\r\n    constructor() {\r\n        this.enabled = true;\r\n        this.requireConsent = false;\r\n        this.requirePkce = false;\r\n        this.requireClientSecret = false;\r\n        this.allowPlainTextPkce = false;\r\n        this.allowOfflineAccess = true;\r\n        this.allowAccessTokensViaBrowser = false;\r\n        this.frontChannelLogoutSessionRequired = true;\r\n        this.backChannelLogoutSessionRequired = true;\r\n        this.enableLocalLogin = false;\r\n\r\n        // Token\r\n        this.identityTokenLifetime = 300;\r\n        this.accessTokenLifetime = 3600;\r\n        this.authorizationCodeLifetime = 300;\r\n        this.absoluteRefreshTokenLifetime = 2592000;\r\n        this.slidingRefreshTokenLifetime = 1296000;\r\n        this.refreshTokenUsage = this.TOKEN_USAGE.oneTimeOnly;\r\n        this.refreshTokenExpiration = this.TOKEN_EXPIRATION.absolute;\r\n        this.updateAccessTokenClaimsOnRefresh = true;\r\n        this.accessTokenType = this.ACCESS_TOKEN_TYPE.jwt;\r\n        this.includeJwtId = false;\r\n        this.clientClaimsPrefix = 'ghm_client';\r\n        this.requireConsent = false;\r\n        this.allowRememberConsent = true;\r\n        this.alwaysIncludeUserClaimsInIdToken = false;\r\n        this.alwaysSendClientClaims = false;\r\n    }\r\n\r\n    ACCESS_TOKEN_TYPE = {\r\n        jwt: 0,\r\n        reference: 1\r\n    };\r\n\r\n    TOKEN_USAGE = {\r\n        reuse: 0,\r\n        oneTimeOnly: 1\r\n    };\r\n\r\n    TOKEN_EXPIRATION = {\r\n        sliding: 0,\r\n        absolute: 1\r\n    };\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Client } from './client.model';\r\nimport { Observable } from 'rxjs';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class ClientService implements Resolve<any> {\r\n    url: string;\r\n\r\n    constructor(private http: HttpClient,\r\n        @Inject(APP_CONFIG) public appConfig: IAppConfig) {\r\n        this.url = `${appConfig.CORE_API_URL}client/`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.queryParams;\r\n        const keyword = queryParams.keyword;\r\n        const enabled = queryParams.enabled;\r\n        const page = queryParams.page;\r\n        const pageSize = queryParams.pageSize;\r\n        return this.search(keyword, enabled, page, pageSize);\r\n    }\r\n\r\n    search(keyword: string, enabled?: boolean, page: number = 1, pageSize: number = 20) {\r\n        return this.http.get(`${this.url}search`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('enabled', enabled != null && enabled !== undefined ? enabled.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<ISearchResult<Client>>;\r\n    }\r\n\r\n    getCientId(): Observable<string> {\r\n        return this.http.get(`${this.url}get-client-id`) as Observable<string>;\r\n    }\r\n\r\n    getDetail(clientId: string): Observable<Client> {\r\n        return this.http.get(`${this.url}get-detail`, {\r\n            params: new HttpParams()\r\n                .set('clientId', clientId)\r\n        }) as Observable<Client>;\r\n    }\r\n\r\n    insert(client: Client): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}insert`, client) as Observable<IResponseResult>;\r\n    }\r\n\r\n    update(client: Client): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}update`, client) as Observable<IResponseResult>;\r\n    }\r\n\r\n    delete(clientId: string): Observable<IResponseResult> {\r\n        return this.http.delete(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('clientId', clientId)\r\n        }) as Observable<IResponseResult>;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PageComponent } from './page/page.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport { ClientFormComponent } from './client/client-form.component';\r\nimport { ClientService } from './client/client.service';\r\nimport { TenantComponent } from './tenant/tenant.component';\r\nimport { TenantService } from './tenant/tenant.service';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { LanguageComponent } from './website/language/language.component';\r\nimport { PageService } from './page/page.service';\r\nimport { RoleService } from './role/role.service';\r\nimport { UserSettingComponent } from './user-setting/user-setting.component';\r\nimport { RoleFormComponent } from './role/role-form/role-form.component';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { MenuComponent } from './menus/menu.component';\r\nimport { MenuService } from './menus/menu.service';\r\nimport { WebsiteComponent } from './website/website.component';\r\nimport { EmailComponent } from './email/email.component';\r\nimport { EmailService } from './email/service/email.service';\r\nimport { MenuFormComponent } from './menus/menu-form/menu-form.component';\r\nimport { ApproverComponent } from './approver/approver.component';\r\nimport { ApproverService } from './approver/approver.service';\r\n\r\nconst routes: Routes = [\r\n    // {\r\n    //     path: '',\r\n    //     component: LayoutComponent,\r\n    //     canActivate: [AuthGuardService],\r\n    //     children: [\r\n    {\r\n        path: '',\r\n        component: RoleComponent\r\n    },\r\n    {\r\n        path: 'tenants',\r\n        component: TenantComponent,\r\n    },\r\n    {\r\n        path: 'pages',\r\n        component: PageComponent,\r\n        resolve: {\r\n            data: PageService\r\n        }\r\n    },\r\n    {\r\n        path: 'clients',\r\n        resolve: {\r\n            data: ClientService\r\n        },\r\n        component: ClientComponent,\r\n        children: [\r\n            {\r\n                path: 'add-new',\r\n                component: ClientFormComponent\r\n            },\r\n            {\r\n                path: 'edit',\r\n                component: ClientFormComponent\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: 'roles',\r\n        resolve: {\r\n            data: RoleService\r\n        },\r\n        component: RoleComponent\r\n    },\r\n    {\r\n        path: 'roles/add',\r\n        component: RoleFormComponent\r\n    },\r\n    {\r\n        path: 'roles/:id',\r\n        component: RoleFormComponent\r\n    },\r\n    {\r\n        path: 'languages',\r\n        component: LanguageComponent\r\n    },\r\n    {\r\n        path: 'settings',\r\n        component: UserSettingComponent\r\n    },\r\n    {\r\n        path: 'accounts',\r\n        component: AccountComponent\r\n    },\r\n    {\r\n        path: 'menus',\r\n        component: MenuComponent,\r\n        resolve: {\r\n            data: MenuService\r\n        }\r\n    },\r\n    {\r\n        path: 'menus/add',\r\n        component: MenuFormComponent,\r\n    },\r\n    {\r\n        path: 'website',\r\n        component: WebsiteComponent\r\n    },\r\n    {\r\n        path: 'emails',\r\n        component: EmailComponent,\r\n        resolve: {\r\n            data: EmailService\r\n        }\r\n    },\r\n    {\r\n        path: 'menus/edit/:id',\r\n        component: MenuFormComponent,\r\n    },\r\n    {\r\n        path: 'approver',\r\n        component: ApproverComponent,\r\n        resolve: {\r\n            data: ApproverService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n    providers: [ClientService, TenantService, PageService, RoleService, MenuService, EmailService, ApproverService]\r\n})\r\nexport class ConfigRoutingModule {\r\n}\r\n","module.exports = \"Hello from config component\\r\\n\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { AppService } from '../../shareds/services/app.service';\r\nimport { IPageId, PAGE_ID } from '../../configs/page-id.config';\r\n\r\n@Component({\r\n    selector: 'app-config',\r\n    templateUrl: './config.component.html'\r\n})\r\n\r\nexport class ConfigComponent implements OnInit {\r\n    constructor( @Inject(PAGE_ID) pageId: IPageId,\r\n        private appService: AppService) {\r\n        this.appService.setupPage(pageId.CONFIG, pageId.CONFIG, 'Cấu hình', 'Quản lý cấu hình');\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {PageComponent} from './page/page.component';\r\nimport {ConfigRoutingModule} from './config-routing.module';\r\nimport {NhSelectModule} from '../../shareds/components/nh-select/nh-select.module';\r\nimport {CommonModule} from '@angular/common';\r\nimport {\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatPaginatorModule,\r\n    MatSlideToggleModule,\r\n    MatTabsModule,\r\n    MatTooltipModule\r\n} from '@angular/material';\r\nimport {NhModalModule} from '../../shareds/components/nh-modal/nh-modal.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {GhmPagingModule} from '../../shareds/components/ghm-paging/ghm-paging.module';\r\nimport {PageFormComponent} from './page/page-form.component';\r\nimport {ClientComponent} from './client/client.component';\r\nimport {ClientFormComponent} from './client/client-form.component';\r\nimport {LayoutModule} from '../../shareds/layouts/layout.module';\r\nimport {ConfigComponent} from './config.component';\r\nimport {TenantComponent} from './tenant/tenant.component';\r\nimport {TenantFormComponent} from './tenant/tenant-form.component';\r\nimport {RoleComponent} from './role/role.component';\r\nimport {RoleFormComponent} from './role/role-form/role-form.component';\r\nimport {RoleDetailComponent} from './role/role-detail/role-detail.component';\r\nimport {SweetAlert2Module} from '@toverux/ngx-sweetalert2';\r\nimport {LanguageComponent} from './website/language/language.component';\r\nimport {NHTreeModule} from '../../shareds/components/nh-tree/nh-tree.module';\r\nimport {UserSettingComponent} from './user-setting/user-setting.component';\r\nimport {NhImageModule} from '../../shareds/components/nh-image/nh-image.module';\r\nimport {GhmSelectPickerModule} from '../../shareds/components/ghm-select-picker/ghm-select-picker.module';\r\nimport {CoreModule} from '../../core/core.module';\r\nimport {NhUserPickerModule} from '../../shareds/components/nh-user-picker/nh-user-picker.module';\r\nimport {AccountComponent} from './account/account.component';\r\nimport {AccountFormComponent} from './account/account-form/account-form.component';\r\nimport {MenuFormComponent} from './menus/menu-form/menu-form.component';\r\nimport {MenuComponent} from './menus/menu.component';\r\nimport {MenuItemComponent} from './menus/menu-item/menu-item.component';\r\nimport {EmailComponent} from './email/email.component';\r\nimport {EmailFormComponent} from './email/email-form/email-form.component';\r\nimport {WebsiteInfoComponent} from './website/website-info/website-info.component';\r\nimport {SocialNetworkComponent} from './website/social-network/social-network.component';\r\nimport {WebsiteComponent} from './website/website.component';\r\nimport {GhmFileExplorerModule} from '../../shareds/components/ghm-file-explorer/ghm-file-explorer.module';\r\nimport {BranchComponent} from './website/branch/branch.component';\r\nimport {BranchFormComponent} from './website/branch/branch-form/branch-form.component';\r\nimport {BranchItemComponent} from './website/branch/branch-item/branch-item.component';\r\nimport {LanguageFormComponent} from './website/language/language-form/language-form.component';\r\nimport {DatetimeFormatModule} from '../../shareds/pipe/datetime-format/datetime-format.module';\r\nimport {EmailTemplateComponent} from './email/email-template/email-template.component';\r\nimport {EmailTemplateFormComponent} from './email/email-template/email-template-form/email-template-form.component';\r\nimport {NhDateModule} from '../../shareds/components/nh-datetime-picker/nh-date.module';\r\nimport {TinymceModule} from '../../shareds/components/tinymce/tinymce.module';\r\nimport {MenuItemFormComponent} from './menus/menu-item/menu-item-form/menu-item-form.component';\r\nimport {ApproverComponent} from './approver/approver.component';\r\nimport {GhmUserSuggestionModule} from '../../shareds/components/ghm-user-suggestion/ghm-user-suggestion.module';\r\nimport {NhSuggestionModule} from '../../shareds/components/nh-suggestion/nh-suggestion.module';\r\nimport {NhDropdownModule} from '../../shareds/directives/nh-dropdown/nh-dropdown.module';\r\nimport {ChoiceMenuItemComponent} from './menus/choice-menu-item/choice-menu-item.component';\r\nimport {NewsModule} from '../news/news.module';\r\nimport {EmailTypeFormComponent} from './email/email-type/email-type-form/email-type-form.component';\r\nimport {EmailTypeComponent} from './email/email-type/email-type.component';\r\nimport {CoreValuesComponent} from './website/core-values/core-values.component';\r\nimport {CoreValuesFormComponent} from './website/core-values/core-values-form/core-values-form.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {AppService} from '../../shareds/services/app.service';\r\nimport {GhmSelectModule} from '../../shareds/components/ghm-select/ghm-select.module';\r\nimport {ProductModule} from '../warehouse/product/product.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, LayoutModule, ConfigRoutingModule, NhSelectModule, NhImageModule, NhUserPickerModule, TinymceModule,\r\n        MatCheckboxModule, MatPaginatorModule, MatButtonModule, MatSlideToggleModule, DatetimeFormatModule, NhDateModule, NhDropdownModule,\r\n        NhModalModule, ReactiveFormsModule, FormsModule, MatTooltipModule, NHTreeModule, GhmFileExplorerModule, GhmUserSuggestionModule,\r\n        MatTabsModule, NhSuggestionModule, MatIconModule, NewsModule, DragDropModule, GhmSelectModule, ProductModule,\r\n        GhmSelectPickerModule, CoreModule, GhmPagingModule, SweetAlert2Module.forRoot({\r\n            buttonsStyling: false,\r\n            customClass: 'modal-content',\r\n            confirmButtonClass: 'btn blue cm-mgr-5',\r\n            cancelButtonClass: 'btn',\r\n            // confirmButtonText: 'Đồng ý',\r\n            showCancelButton: true,\r\n            // cancelButtonText: 'Hủy bỏ'\r\n        })\r\n    ],\r\n    exports: [],\r\n    declarations: [PageComponent, PageFormComponent, ClientComponent, AccountComponent, AccountFormComponent,\r\n        ClientFormComponent, ConfigComponent, TenantComponent, TenantFormComponent, RoleComponent, RoleFormComponent, RoleDetailComponent,\r\n        LanguageComponent, UserSettingComponent, MenuFormComponent, MenuComponent, MenuItemComponent, WebsiteInfoComponent,\r\n        SocialNetworkComponent, EmailComponent, EmailFormComponent, WebsiteComponent, BranchComponent, BranchFormComponent,\r\n        BranchItemComponent, LanguageFormComponent, EmailTemplateComponent, EmailTemplateFormComponent, MenuItemFormComponent,\r\n        ApproverComponent, ChoiceMenuItemComponent, EmailTypeFormComponent, EmailTypeComponent, CoreValuesComponent, CoreValuesFormComponent\r\n    ],\r\n    providers: [],\r\n})\r\nexport class ConfigModule {\r\n}\r\n","module.exports = \"<nh-modal #emailFormModal size=\\\"lg\\\">\\r\\n    <nh-modal-header [showCloseButton]=\\\"true\\\" class=\\\"uppercase\\\">\\r\\n        <i class=\\\"fa fa-email\\\"></i> {isUpdate, select, 0 {Add new email} 1 {Update email} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form action=\\\"\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.mailTypeId\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@mailType\\\" ghmLabel=\\\"Email type\\\" class=\\\"col-sm-3 control-label\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-9\\\">\\r\\n                    <ghm-select [data]=\\\"listEmailType\\\"\\r\\n                               i18n-title=\\\"@@pleaseSelectEmailType\\\"\\r\\n                               title=\\\"-- Please select email type --\\\"\\r\\n                               formControlName=\\\"mailTypeId\\\"\\r\\n                               (onSelectItem)=\\\"selectEmailType($event)\\\"></ghm-select>\\r\\n                    <span class=\\\"help-block\\\">{ formErrors?.mailTypeId, select,\\r\\n                        required {Email type is required}\\r\\n                        maxLength {Email is over 256 character}\\r\\n                        pattern {Email is invalid} }</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n                 [class.has-error]=\\\"formErrors?.owner\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@owner\\\" ghmLabel=\\\"Account Name\\\" class=\\\"col-sm-3 control-label\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-9\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@accountNamePlaceHolder\\\"\\r\\n                           id=\\\"name\\\"\\r\\n                           placeholder=\\\"Please enter account name\\\"\\r\\n                           formControlName=\\\"owner\\\"/>\\r\\n                    <span class=\\\"help-block\\\">{ formErrors?.owner, select, required {Account name is required} maxlength {Account name not allowed\\r\\n                                                    over 256 characters} }</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@email\\\" class=\\\"col-sm-3 control-label\\\" ghmLabel=\\\"Email\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-9\\\" [class.has-error]=\\\"formErrors.email\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@emailPlaceHolder\\\"\\r\\n                           placeholder=\\\"Please enter email address\\\"\\r\\n                           formControlName=\\\"email\\\"/>\\r\\n                    <span class=\\\"help-block\\\">{ formErrors?.email, select, required {Email is required} maxlength {Email not allowed\\r\\n                                                    over 50 characters} }</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@password\\\" class=\\\"col-sm-3 control-label\\\" ghmLabel=\\\"Password\\\"></label>\\r\\n                <div class=\\\"col-sm-9\\\" [class.has-error]=\\\"formErrors.password\\\">\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@passwordPlaceHolder\\\"\\r\\n                           formControlName=\\\"password\\\"/>\\r\\n                    <span class=\\\"help-block\\\">{ formErrors?.password, select, required {Password is required} maxlength {Password not allowed\\r\\n                                                    over 50 characters} }</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                <div class=\\\"col-sm-9 col-sm-offset-3\\\">\\r\\n                    <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                        {model.value.isActive, select, 0 {InActive} 1 {Active}}\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <div class=\\\"pull-right cm-mgb-10\\\">\\r\\n                <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                              *ngIf=\\\"!isUpdate\\\"\\r\\n                              i18n=\\\"@@isCreateAnother\\\"\\r\\n                              class=\\\"cm-mgr-5\\\"\\r\\n                              color=\\\"primary\\\">\\r\\n                    Create another\\r\\n                </mat-checkbox>\\r\\n                <button class=\\\"btn blue cm-mgr-5\\\" type=\\\"submit\\\"\\r\\n                        [disabled]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n                <button class=\\\"btn default\\\" type=\\\"button\\\" (click)=\\\"closeModal()\\\"\\r\\n                        [disabled]=\\\"isSaving || formErrors.length > 0\\\" i18n=\\\"@@cancel\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n            </div>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {NhModalComponent} from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {BaseFormComponent} from '../../../../base-form.component';\r\nimport {EmailService} from '../service/email.service';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {Email} from '../model/email.model';\r\nimport {EmailDetailViewModel} from '../viewmodel/email-detail.viewmodel';\r\nimport {NumberValidator} from '../../../../validators/number.validator';\r\nimport {EmailTypeService} from '../email-type/email-type.service';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {EmailType} from '../email-type/email-type.model';\r\nimport {Pattern} from '../../../../shareds/constants/pattern.const';\r\nimport {EmailSearchViewModel} from '../viewmodel/email-search.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-config-email-form',\r\n    templateUrl: './email-form.component.html',\r\n    providers: [NumberValidator, EmailService, EmailTypeService]\r\n})\r\n\r\nexport class EmailFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('emailFormModal') emailFormModal: NhModalComponent;\r\n    @Output() onSaveSuccess = new EventEmitter();\r\n    listEmailType;\r\n    email = new Email();\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private emailService: EmailService,\r\n                private emailTypeService: EmailTypeService,\r\n                private numberValidator: NumberValidator) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n        this.emailTypeService.search(1, 1000).subscribe((result: SearchResultViewModel<EmailType>) => {\r\n            this.listEmailType = result.items;\r\n        });\r\n    }\r\n\r\n    onFormModalShown() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onFormModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.onSaveSuccess.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.utilService.focusElement('name');\r\n        this.isUpdate = false;\r\n        this.renderForm();\r\n        this.emailFormModal.open();\r\n    }\r\n\r\n    edit(email: EmailSearchViewModel) {\r\n        this.utilService.focusElement('name');\r\n        this.isUpdate = true;\r\n        this.id = email.id;\r\n        this.getDetail(email);\r\n        this.emailFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (isValid) {\r\n            this.email = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.emailService.update(this.id, this.email)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.emailFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.emailService.insert(this.email)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.utilService.focusElement('name');\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.saveSuccessful.emit();\r\n                            this.emailFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    getDetail(email: EmailSearchViewModel) {\r\n        this.emailService\r\n            .getDetail(email.id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<EmailDetailViewModel>) => {\r\n                    const emailDetail = result.data;\r\n                    if (emailDetail) {\r\n                        this.model.patchValue({\r\n                            owner: emailDetail.owner,\r\n                            email: emailDetail.email,\r\n                            password: emailDetail.password,\r\n                            isActive: emailDetail.isActive,\r\n                            mailTypeId: emailDetail.mailTypeId,\r\n                            concurrencyStamp: emailDetail.concurrencyStamp,\r\n                        });\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    closeModal() {\r\n        this.emailFormModal.dismiss();\r\n    }\r\n\r\n    selectEmailType(value) {\r\n        if (value) {\r\n            this.model.patchValue({mailTypeId: value.id});\r\n        }\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['owner', 'email', 'password', 'mailTypeId']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'owner': ['required', 'maxLength']},\r\n            {'email': ['required', 'maxLength']},\r\n            {'password': ['required', 'maxLength']},\r\n            {'mailTypeId': ['required']}\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            mailTypeId: [this.email.mailTypeId, [Validators.required]],\r\n            email: [this.email.email,\r\n                [Validators.required, Validators.maxLength(50),\r\n                    Validators.pattern(Pattern.email)]],\r\n            owner: [this.email.owner, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            password: [this.email.password, [Validators.maxLength(50), Validators.required]],\r\n            isActive: [this.email.isActive],\r\n            concurrencyStamp: [this.email.concurrencyStamp]\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            mailTypeId: '',\r\n            owner: '',\r\n            email: '',\r\n            password: '',\r\n            isActive: '',\r\n            concurrencyStamp: '',\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #emailTemplateFormModal size=\\\"full-screen\\\"\\r\\n          (show)=\\\"onFormModalShown()\\\"\\r\\n          (hidden)=\\\"onFormModalHidden()\\\">\\r\\n    <nh-modal-header [showCloseButton]=\\\"true\\\" class=\\\"uppercase\\\">\\r\\n        <i class=\\\"fa fa-email\\\"></i> {isUpdate, select, 0 {Add new email template} 1 {Update email template} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"tab-content\\\" formArrayName=\\\"modelTranslations\\\">\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"languages && languages.length > 1\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                           class=\\\"col-sm-2 control-label\\\"></label>\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <nh-select [data]=\\\"languages\\\"\\r\\n                                   i18n-title=\\\"@@pleaseSelectLanguage\\\"\\r\\n                                   title=\\\"-- Please select language --\\\"\\r\\n                                   name=\\\"language\\\"\\r\\n                                   [(value)]=\\\"currentLanguage\\\"\\r\\n                                   (onSelectItem)=\\\"currentLanguage = $event.id\\\"></nh-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@mailGroup\\\" class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Mail Group\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-10\\\" [class.has-error]=\\\"formErrors.mailTempGroupId\\\">\\r\\n                        <nh-select [data]=\\\"[]\\\"\\r\\n                                   i18n-title=\\\"@@mailGroupTitle\\\"\\r\\n                                   [title]=\\\"'-- Select mail group --'\\\"></nh-select>\\r\\n                        <span class=\\\"help-block\\\">{ formErrors?.mailTempGroupId, select, required {Mail Group is required} isValid {Mail Group is invalid} }</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.title\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@title\\\" ghmLabel=\\\"Title\\\" class=\\\"col-sm-2 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-10\\\" [class.has-error]=\\\"formErrors.port\\\">\\r\\n                        <input class=\\\"form-control\\\" i18n-placeholder=\\\"@@titlePlaceholder\\\"\\r\\n                               placeholder=\\\"Please enter title\\\" formControlName=\\\"title\\\">\\r\\n                        <span class=\\\"help-block\\\">{translationFormErrors[modelTranslation.value.languageId]?.title, select, required {Title is required} maxlength {Description not allowed\\r\\n                                                    over 500 characters}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group cm-mg-0\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.contentMail\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\" i18n-ghmlabel=\\\"@@content\\\" ghmLabel=\\\"Content\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <tinymce [elementId]=\\\"'content'+ i\\\" formControlName=\\\"contentMail\\\"\\r\\n                                 [(ngModel)]=\\\"modelTranslation.value.contentMail\\\" [height]=\\\"350\\\"></tinymce>\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                                {translationFormErrors[modelTranslation.value.languageId]?.contentMail, select, required {Content is required}}\\r\\n                            </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\" class=\\\"col-sm-2 control-label\\\"></label>\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                    <textarea type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@description\\\"\\r\\n                              placeholder=\\\"Please enter description\\\"\\r\\n                              formControlName=\\\"description\\\" rows=\\\"3\\\"></textarea>\\r\\n                        <span class=\\\"help-block\\\">{ translationFormErrors[modelTranslation.value.languageId]?.description, select, maxlength {Description not allowed\\r\\n                                                    over 500 characters} }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                    <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\r\\n                        <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                            {model.value.isActive, select, 0 {InActive} 1 {Active}}\\r\\n                        </mat-checkbox>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                    <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\r\\n                        <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isDefault\\\" i18n=\\\"@@isDefault\\\">\\r\\n                            {model.value.isDefault, select, 0 {Not Default} 1 {Default}}\\r\\n                        </mat-checkbox>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@duration\\\" class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"Duration\\\"></label>\\r\\n                    <div class=\\\"col-sm-4\\\" [class.has-error]=\\\"formErrors.startTime\\\">\\r\\n                        <nh-date formControlName=\\\"startTime\\\"\\r\\n                                 [type]=\\\"'inputButton'\\\"\\r\\n                                 [format]=\\\"'DD/MM/YYYY'\\\"\\r\\n                                 [title]=\\\"'Start date'\\\"></nh-date>\\r\\n                        <span class=\\\"help-block\\\">{formErrors?.startTime, select, isValid {Start Time is invalid}}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-4\\\" [class.has-error]=\\\"formErrors.endTime\\\">\\r\\n                        <nh-date formControlName=\\\"endTime\\\"\\r\\n                                 [type]=\\\"'inputButton'\\\"\\r\\n                                 [format]=\\\"'DD/MM/YYYY'\\\"\\r\\n                                 [title]=\\\"'Start date'\\\"></nh-date>\\r\\n                        <span class=\\\"help-block\\\">{formErrors?.endTime, select, isValid {Start Time is invalid}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <div class=\\\"pull-right cm-mgb-10\\\">\\r\\n                <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                              *ngIf=\\\"!isUpdate\\\"\\r\\n                              i18n=\\\"@@isCreateAnother\\\"\\r\\n                              class=\\\"cm-mgr-5\\\"\\r\\n                              color=\\\"primary\\\">\\r\\n                    Create another\\r\\n                </mat-checkbox>\\r\\n                <button class=\\\"btn blue cm-mgr-5\\\" type=\\\"submit\\\"\\r\\n                        [disabled]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n                <button class=\\\"btn default\\\" type=\\\"button\\\" (click)=\\\"closeModal()\\\"\\r\\n                        [disabled]=\\\"isSaving || formErrors.length > 0\\\" i18n=\\\"@@cancel\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n            </div>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport * as _ from 'lodash';\r\nimport {NumberValidator} from '../../../../../validators/number.validator';\r\nimport {DateTimeValidator} from '../../../../../validators/datetime.validator';\r\nimport {EmailTemplate} from '../model/email-template.model';\r\nimport {EmailTemplateTranslation} from '../model/email-template-translation';\r\nimport {EmailTemplateService} from '../email-template.service';\r\nimport {EmailTemplateDetailViewModel} from '../viewmodel/email-template-detail.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-config-email-template-form',\r\n    templateUrl: './email-template-form.component.html',\r\n    providers: [NumberValidator, DateTimeValidator, EmailTemplateService]\r\n})\r\n\r\nexport class EmailTemplateFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('emailTemplateFormModal') emailTemplateFormModal: NhModalComponent;\r\n    @Output() onSaveSuccess = new EventEmitter();\r\n\r\n    emailTemplate = new EmailTemplate();\r\n    modelTranslation = new EmailTemplateTranslation();\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private numberValidator: NumberValidator,\r\n                private datetimeValidator: DateTimeValidator,\r\n                private utilService: UtilService,\r\n                private emailTemplateService: EmailTemplateService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n    }\r\n\r\n    onFormModalShown() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onFormModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.onSaveSuccess.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.renderForm();\r\n        this.emailTemplateFormModal.open();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n        this.emailTemplateFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.emailTemplate = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.emailTemplateService.update(this.id, this.emailTemplate)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.emailTemplateFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.emailTemplateService.insert(this.emailTemplate)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.emailTemplateFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    getDetail(id: string) {\r\n        this.emailTemplateService\r\n            .getDetail(id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<EmailTemplateDetailViewModel>) => {\r\n                    const emailTemplateDetail = result.data;\r\n                    if (emailTemplateDetail) {\r\n                        this.model.patchValue({\r\n                            mailTempGroupId: emailTemplateDetail.mailTempGroupId,\r\n                            concurrencyStamp: emailTemplateDetail.concurrencyStamp,\r\n                            isActive: emailTemplateDetail.isActive,\r\n                            isDefault: emailTemplateDetail.isDefault,\r\n                            startTime: emailTemplateDetail.startTime,\r\n                            endTime: emailTemplateDetail.endTime,\r\n                        });\r\n                        if (emailTemplateDetail.emailTemplateTranslations && emailTemplateDetail.emailTemplateTranslations.length > 0) {\r\n                            this.modelTranslations.controls.forEach(\r\n                                (model: FormGroup) => {\r\n                                    const detail = _.find(\r\n                                        emailTemplateDetail.emailTemplateTranslations,\r\n                                        (emailTemplateTranslation: EmailTemplateTranslation) => {\r\n                                            return (\r\n                                                emailTemplateTranslation.languageId === model.value.languageId\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    if (detail) {\r\n                                        model.patchValue(detail);\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    closeModal() {\r\n        this.emailTemplateFormModal.dismiss();\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['mailTempGroupId', 'startTime', 'endTime']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'mailTempGroupId': ['required', 'inValid']},\r\n            {'startTime': ['isValid']},\r\n            {'endTime': ['isValid']}\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            mailTempGroupId: [this.emailTemplate.mailTempGroupId,\r\n                [Validators.required, this.numberValidator.isValid]],\r\n            isActive: [this.emailTemplate.isActive],\r\n            isDefault: [this.emailTemplate.isDefault],\r\n            startTime: [this.emailTemplate.startTime],\r\n            endTime: [this.emailTemplate.endTime],\r\n            concurrencyStamp: [this.emailTemplate.concurrencyStamp],\r\n            modelTranslations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['title', 'contentMail', 'description']\r\n        );\r\n        this.translationValidationMessage[language] = this.utilService.renderFormErrorMessage([\r\n            {title: ['required, maxLength']},\r\n            {description: ['maxLength']},\r\n            {contentMail: ['required']}\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            title: [this.modelTranslation.title, [Validators.required, Validators.maxLength(256)]],\r\n            description: [this.modelTranslation.description,\r\n                [Validators.maxLength(500)]],\r\n            contentMail: [this.modelTranslation.contentMail, [Validators.required]]\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslationModel(false)\r\n        );\r\n        return translationModel;\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            account: '',\r\n            startTime: '',\r\n            endTime: '',\r\n            isDefault: false,\r\n            isActive: true,\r\n            concurrencyStamp: '',\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                contentMail: '',\r\n                description: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n             <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@template\\\">\\r\\n                              <i class=\\\"fa fa-envelope-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                               Email Template\\r\\n             </span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n            <div class=\\\"form-group cm-mgr-5\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập tiêu đề tin cần tìm.\\\"\\r\\n                       [(ngModel)]=\\\"keyword\\\" name=\\\"keyword\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mgr-5\\\">\\r\\n                <ghm-select [data]=\\\"listStatus\\\"\\r\\n                           i18n-title=\\\"@@selectStatus\\\"\\r\\n                           [title]=\\\"'-- Select status --'\\\"\\r\\n                           [(ngModel)]=\\\"status\\\"\\r\\n                           name=\\\"status\\\"\\r\\n                           (onSelectItem)=\\\"search(1)\\\"></ghm-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mgr-5\\\">\\r\\n                <ghm-button [loading]=\\\"isSearching\\\"\\r\\n                            [classes]=\\\"'btn blue'\\\"\\r\\n                            icon=\\\"fa fa-search\\\"></ghm-button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mgl-5\\\">\\r\\n                <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n                    <i class=\\\"fa fa-refresh\\\"></i>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group pull-right\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn blue\\\" (click)=\\\"add()\\\" i18n=\\\"@@add\\\">\\r\\n                    Add\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n        <table class=\\\"table table-hover table-stripped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th class=\\\"center middle w100\\\" i18n=\\\"@@image\\\">Mail Type</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@titleNews\\\">Title</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@smtpServer\\\">Note</th>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@smtpServer\\\">Status</th>\\r\\n                <th class=\\\"center middle w100\\\" i18n=\\\"@@action\\\">Action</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listEmailTemplate; let i = index\\\">\\r\\n                <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n                <td class=\\\"middle center\\\">\\r\\n                </td>\\r\\n                <td class=\\\"middle\\\"></td>\\r\\n                <td class=\\\"middle\\\"> {{ item.title}}</td>\\r\\n                <td class=\\\"center middle\\\"> {{ item.description}}</td>\\r\\n                <td>\\r\\n                 <span class=\\\"badge\\\" [class.badge-danger]=\\\"!item.isActive\\\"\\r\\n                       [class.badge-success]=\\\"item.isActive\\\">\\r\\n                              {item.activeStatus, select, active {Activated} inActive {InActive}}</span>\\r\\n                </td>\\r\\n                <td class=\\\"center middle\\\">\\r\\n                    <nh-dropdown>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                            <mat-icon>more_horiz</mat-icon>\\r\\n                        </button>\\r\\n                        <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                            <li>\\r\\n                                <a *ngIf=\\\"permission.edit\\\"\\r\\n                                   (click)=\\\"edit(item)\\\"\\r\\n                                   i18n=\\\"@@edit\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                    Edit\\r\\n                                </a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a [swal]=\\\"confirmDeleteEmailTemplate\\\"\\r\\n                                   (confirm)=\\\"delete(item.id)\\\" i18n=\\\"@@delete\\\">\\r\\n                                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                    Delete\\r\\n                                </a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </nh-dropdown>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [pageSize]=\\\"pageSize\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\"\\r\\n                    (pageClick)=\\\"search($event)\\\"\\r\\n                    [isDisabled]=\\\"isSearching\\\" i18n-pageName=\\\"@@emailTemplate\\\" pageName=\\\"Email template\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n<app-config-email-template-form></app-config-email-template-form>\\r\\n<swal\\r\\n        #confirmDeleteEmailTemplate\\r\\n        i18n=\\\"@@confirmDeleteEmailTemplate\\\"\\r\\n        i18n-title=\\\"@@confirmTitleDeleteEmailTemplate\\\"\\r\\n        i18n-text=\\\"@@confirmTextDeleteEmailTemplate\\\"\\r\\n        title=\\\"Are you sure for delete this email template?\\\"\\r\\n        text=\\\"You can't recover this video after email template.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\"\\r\\n        [showCancelButton]=\\\"true\\\"\\r\\n        [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {EmailTemplateSearchViewModel} from './viewmodel/email-template-search.viewmodel';\r\nimport {BaseListComponent} from '../../../../base-list.component';\r\nimport {EmailTemplateFormComponent} from './email-template-form/email-template-form.component';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {EmailTemplateService} from './email-template.service';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {IPageId, PAGE_ID} from '../../../../configs/page-id.config';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'app-config-email-template',\r\n    templateUrl: './email-template.component.html',\r\n    providers: [EmailTemplateService]\r\n})\r\n\r\nexport class EmailTemplateComponent extends BaseListComponent<EmailTemplateSearchViewModel> implements OnInit {\r\n    @ViewChild(EmailTemplateFormComponent) emailTemplateFormComponent: EmailTemplateFormComponent;\r\n    listStatus = [\r\n        {id: true, name: 'Active'},\r\n        {id: false, name: 'InActive'}];\r\n    status;\r\n    listEmailTemplate: EmailTemplateSearchViewModel[];\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                @Inject(PAGE_ID) public pageId: IPageId,\r\n                private emailTemplateService: EmailTemplateService,\r\n                private router: Router,\r\n                private utilService: UtilService,\r\n                private route: ActivatedRoute) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.WEBSITE_CONFIG, this.pageId.CONFIG_EMAIL);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.emailTemplateService.search(this.currentPage, this.pageSize).pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<EmailTemplateSearchViewModel>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listEmailTemplate = result.items;\r\n                return result.items;\r\n            });\r\n    }\r\n\r\n    add() {\r\n        this.emailTemplateFormComponent.add();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.emailTemplateFormComponent.edit(id);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.emailTemplateService.delete(id).subscribe((result: ActionResultViewModel) => {\r\n            _.remove(this.listEmailTemplate, (item: EmailTemplateSearchViewModel) => {\r\n                return item.id === id;\r\n            });\r\n        });\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.search(1);\r\n    }\r\n}\r\n","import {Inject} from '@angular/core';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {SpinnerService} from '../../../../core/spinner/spinner.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Observable} from 'rxjs';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {EmailTemplate} from './model/email-template.model';\r\nimport {EmailTemplateDetailViewModel} from './viewmodel/email-template-detail.viewmodel';\r\nimport {EmailTemplateSearchViewModel} from './viewmodel/email-template-search.viewmodel';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\n\r\nexport class EmailTemplateService {\r\n    url = '/email-templates';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService) {\r\n        this.url = `${this.appConfig.WEBSITE_API_URL}${this.url}`;\r\n    }\r\n\r\n    search(page: number = 1, pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<EmailTemplateSearchViewModel>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', page ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }).pipe(map((result: SearchResultViewModel<EmailTemplateSearchViewModel>) => {\r\n            result.items.forEach((item: EmailTemplateSearchViewModel) => {\r\n                item.activeStatus = item.isActive\r\n                    ? 'active'\r\n                    : 'inActive';\r\n            });\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<EmailTemplateSearchViewModel>>;\r\n    }\r\n\r\n    insert(emailTemplate: EmailTemplate): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, {\r\n            mailTempGroupId: emailTemplate.mailTempGroupId,\r\n            concurrencyStamp: emailTemplate.concurrencyStamp,\r\n            isActive: emailTemplate.isActive,\r\n            isDefault: emailTemplate.isDefault,\r\n            startTime: emailTemplate.startTime,\r\n            endTime: emailTemplate.endTime,\r\n            emailTemplateTranslation: emailTemplate.modelTranslations,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, emailTemplate: EmailTemplate): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${id}`, {\r\n            mailTempGroupId: emailTemplate.mailTempGroupId,\r\n            concurrencyStamp: emailTemplate.concurrencyStamp,\r\n            isActive: emailTemplate.isActive,\r\n            isDefault: emailTemplate.isDefault,\r\n            startTime: emailTemplate.startTime,\r\n            endTime: emailTemplate.endTime,\r\n            emailTemplateTranslation: emailTemplate.modelTranslations,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<EmailTemplateDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}${id}`, {})\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel<EmailTemplateDetailViewModel>>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}${id}`).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n\r\n","export class EmailTemplateTranslation {\r\n    languageId: string;\r\n    title: string;\r\n    contentMail: string;\r\n    description: string;\r\n}\r\n","import {EmailTemplateTranslation} from './email-template-translation';\r\n\r\nexport class EmailTemplate {\r\n    mailTempGroupId;\r\n    concurrencyStamp: string;\r\n    isActive: boolean;\r\n    isDefault: boolean;\r\n    startTime: Date;\r\n    endTime: Date;\r\n    modelTranslations: EmailTemplateTranslation[];\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n        this.isDefault = false;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #emailTypeFormModal size=\\\"lg\\\">\\r\\n    <nh-modal-header [showCloseButton]=\\\"true\\\" class=\\\"uppercase\\\">\\r\\n        <i class=\\\"fa fa-email\\\"></i> {isUpdate, select, 0 {Add new email} 1 {Update email} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form action=\\\"\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@smtp\\\" class=\\\"col-sm-3 control-label\\\" ghmLabel=\\\"Name\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-9\\\" [class.has-error]=\\\"formErrors.name\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@name\\\"\\r\\n                           id=\\\"name\\\"\\r\\n                           placeholder=\\\"Please enter email type\\\"\\r\\n                           formControlName=\\\"name\\\"/>\\r\\n                    <span class=\\\"help-block\\\">{ formErrors?.name, select, required {Email type is required} maxlength {Email type not allowed\\r\\n                                                    over 256 characters} }</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@smtp\\\" class=\\\"col-sm-3 control-label\\\" ghmLabel=\\\"SMTP Server\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-9\\\" [class.has-error]=\\\"formErrors.host\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@smtpServerPlaceHolder\\\"\\r\\n                           placeholder=\\\"Please enter smtp server\\\"\\r\\n                           formControlName=\\\"host\\\"/>\\r\\n                    <span class=\\\"help-block\\\">{ formErrors?.host, select, required {SMTP Server is required} maxlength {SMTP Server not allowed\\r\\n                                                    over 256 characters} }</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@port\\\" ghmLabel=\\\"Port\\\" class=\\\"col-sm-3 control-label\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <div class=\\\"col-sm-9\\\" [class.has-error]=\\\"formErrors.port\\\">\\r\\n                    <input class=\\\"form-control\\\" i18n-placeholder=\\\"@@portPlaceholder\\\"\\r\\n                           placeholder=\\\"Please enter port\\\" formControlName=\\\"port\\\">\\r\\n                    <span class=\\\"help-block\\\">{formErrors?.port, select, required {PORT is required} isValid {Port is inValid}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                <div class=\\\"col-sm-9 col-sm-offset-3\\\">\\r\\n                    <mat-checkbox color=\\\"primary\\\" formControlName=\\\"ssl\\\" i18n=\\\"@@ssl\\\">\\r\\n                        {model.value.ssl, select, 0 {TSL} 1 {SSI}}\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <div class=\\\"pull-right cm-mgb-10\\\">\\r\\n                <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                              *ngIf=\\\"!isUpdate\\\"\\r\\n                              i18n=\\\"@@isCreateAnother\\\"\\r\\n                              class=\\\"cm-mgr-5\\\"\\r\\n                              color=\\\"primary\\\">\\r\\n                    Create another\\r\\n                </mat-checkbox>\\r\\n                <button class=\\\"btn blue cm-mgr-5\\\" type=\\\"submit\\\"\\r\\n                        [disabled]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n                <button class=\\\"btn default\\\" type=\\\"button\\\" (click)=\\\"closeModal()\\\"\\r\\n                        [disabled]=\\\"isSaving || formErrors.length > 0\\\" i18n=\\\"@@cancel\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n            </div>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\"","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {NumberValidator} from '../../../../../validators/number.validator';\r\nimport {EmailTypeService} from '../email-type.service';\r\nimport {EmailType} from '../email-type.model';\r\n\r\n@Component({\r\n    selector: 'app-config-email-type-form',\r\n    templateUrl: './email-type-form.component.html',\r\n    providers: [NumberValidator, EmailTypeService]\r\n})\r\n\r\nexport class EmailTypeFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('emailTypeFormModal') emailTypeFormModal: NhModalComponent;\r\n    @Output() onSaveSuccess = new EventEmitter();\r\n\r\n    emailType = new EmailType();\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private emailTypeService: EmailTypeService,\r\n                private numberValidator: NumberValidator) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    onFormModalShown() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onFormModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.onSaveSuccess.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.utilService.focusElement('name');\r\n        this.isUpdate = false;\r\n        this.buildForm();\r\n        this.emailTypeFormModal.open();\r\n    }\r\n\r\n    edit(emailType: EmailType) {\r\n        this.utilService.focusElement('name');\r\n        this.isUpdate = true;\r\n        this.id = emailType.id;\r\n        this.model.patchValue({\r\n            host: emailType.host,\r\n            name: emailType.name,\r\n            port: emailType.port,\r\n            ssl: emailType.ssl,\r\n            concurrencyStamp: emailType.concurrencyStamp,\r\n        });\r\n        this.emailTypeFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (isValid) {\r\n            this.emailType = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.emailTypeService.update(this.id, this.emailType)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.emailTypeFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.emailTypeService.insert(this.emailType)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.utilService.focusElement('name');\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.saveSuccessful.emit();\r\n                            this.emailTypeFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.emailTypeFormModal.dismiss();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'port', 'host', 'ssl']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxLength']},\r\n            {'port': ['required', 'invalid']},\r\n            {'host': ['required', 'maxLength']},\r\n            {'ssl': ['required', 'isValid']},\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            name: [this.emailType.name,\r\n                [Validators.required, Validators.maxLength(256)]],\r\n            host: [this.emailType.host, [\r\n                Validators.required,\r\n                Validators.maxLength(256)]\r\n            ],\r\n            port: [this.emailType.port, [\r\n                Validators.required,\r\n                this.numberValidator.isValid\r\n            ]],\r\n            ssl: [this.emailType.ssl],\r\n            concurrencyStamp: [this.emailType.concurrencyStamp]\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            host: '',\r\n            name: '',\r\n            port: 0,\r\n            ssl: '',\r\n            concurrencyStamp: '',\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                description: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n    }\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n             <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@emailType\\\">\\r\\n                              <i class=\\\"fa fa-envelope-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                               Email type\\r\\n             </span>\\r\\n        </div>\\r\\n        <div class=\\\"actions\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn blue btn-circle\\\" (click)=\\\"add()\\\" i18n=\\\"@@add\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i>  Add\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <table class=\\\"table table-hover table-stripped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th class=\\\"center middle\\\" i18n=\\\"@@image\\\">Mail Type</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@titleNews\\\">Host</th>\\r\\n                <th class=\\\"middle center\\\" i18n=\\\"@@smtpServer\\\">Port</th>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@smtpServer\\\">Ssl?</th>\\r\\n                <th class=\\\"center middle w100\\\" i18n=\\\"@@action\\\">Action</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listEmailType; let i = index\\\">\\r\\n                <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n                <td class=\\\"middle center\\\">\\r\\n                    {{item.name}}\\r\\n                </td>\\r\\n                <td class=\\\"middle\\\">{{item.host}}</td>\\r\\n                <td class=\\\"middle center\\\"> {{ item.port}}</td>\\r\\n                <td>\\r\\n                </td>\\r\\n                <td class=\\\"center middle\\\">\\r\\n                    <nh-dropdown>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                            <mat-icon>more_horiz</mat-icon>\\r\\n                        </button>\\r\\n                        <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                            <li>\\r\\n                                <a *ngIf=\\\"permission.edit\\\"\\r\\n                                   (click)=\\\"edit(item)\\\"\\r\\n                                   i18n=\\\"@@edit\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                    Edit\\r\\n                                </a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a [swal]=\\\"confirmDeleteEmailType\\\"\\r\\n                                   (confirm)=\\\"delete(item.id)\\\" i18n=\\\"@@delete\\\">\\r\\n                                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                    Delete\\r\\n                                </a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </nh-dropdown>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [pageSize]=\\\"pageSize\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\"\\r\\n                    (pageClick)=\\\"search($event)\\\"\\r\\n                    [isDisabled]=\\\"isSearching\\\" i18n-pageName=\\\"@@emailTemplate\\\" pageName=\\\"Email template\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n<app-config-email-type-form (onSaveSuccess)=\\\"search(1)\\\"></app-config-email-type-form>\\r\\n<swal\\r\\n        #confirmDeleteEmailType\\r\\n        i18n=\\\"@@confirmDeleteEmailType\\\"\\r\\n        i18n-title=\\\"@@confirmTitleDeleteEmailType\\\"\\r\\n        i18n-text=\\\"@@confirmTextDeleteEmailType\\\"\\r\\n        title=\\\"Are you sure for delete this email type?\\\"\\r\\n        text=\\\"You can't recover this video after email type.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\"\\r\\n        [showCancelButton]=\\\"true\\\"\\r\\n        [focusCancel]=\\\"true\\\">\\r\\n</swal>\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseListComponent} from '../../../../base-list.component';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {IPageId, PAGE_ID} from '../../../../configs/page-id.config';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {EmailTypeFormComponent} from './email-type-form/email-type-form.component';\r\nimport {EmailType} from './email-type.model';\r\nimport {EmailTypeService} from './email-type.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'app-config-email-type',\r\n    templateUrl: './email-type.component.html',\r\n    providers: [EmailTypeService]\r\n})\r\n\r\nexport class EmailTypeComponent extends BaseListComponent<EmailType> implements OnInit {\r\n    @ViewChild(EmailTypeFormComponent) emailTypeFormComponent: EmailTypeFormComponent;\r\n    listEmailType: EmailType[];\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                @Inject(PAGE_ID) public pageId: IPageId,\r\n                private emailTypeService: EmailTypeService,\r\n                private router: Router,\r\n                private utilService: UtilService,\r\n                private route: ActivatedRoute) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.WEBSITE_CONFIG, this.pageId.CONFIG_EMAIL);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.emailTypeService.search(this.currentPage, this.pageSize).pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<EmailType>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listEmailType = result.items;\r\n                return result.items;\r\n            });\r\n    }\r\n\r\n    add() {\r\n        this.emailTypeFormComponent.add();\r\n    }\r\n\r\n    edit(emailType) {\r\n        this.emailTypeFormComponent.edit(emailType);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.emailTypeService.delete(id).subscribe((result: ActionResultViewModel) => {\r\n            _.remove(this.listEmailType, (item: EmailType) => {\r\n                return item.id === id;\r\n            });\r\n        });\r\n    }\r\n}","export class EmailType {\r\n    id: string;\r\n    name: string;\r\n    ssl: boolean;\r\n    host: string;\r\n    port: number;\r\n    concurrencyStamp: string;\r\n\r\n    constructor() {\r\n        this.ssl = true;\r\n    }\r\n}\r\n","import {Inject} from '@angular/core';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {SpinnerService} from '../../../../core/spinner/spinner.service';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {Observable} from 'rxjs';\r\nimport {EmailType} from './email-type.model';\r\n\r\nexport class EmailTypeService {\r\n    url = 'mail-types/';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService) {\r\n        this.url = `${this.appConfig.WEBSITE_API_URL}${this.url}`;\r\n    }\r\n\r\n    search(page: number = 1, pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<EmailType>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', page ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }).pipe(map((result: SearchResultViewModel<EmailType>) => {\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<EmailType>>;\r\n    }\r\n\r\n    insert(emailType: EmailType): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, emailType\r\n        ).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, emailType: EmailType): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${id}`, emailType\r\n        ).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}${id}`).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@configMail\\\">Config Mail</span>\\r\\n    <small i18n=\\\"@@configModuleTitle\\\">Config</small>\\r\\n</h1>\\r\\n\\r\\n<div class=\\\"tabbable-custom\\\">\\r\\n    <ul class=\\\"nav nav-tabs \\\">\\r\\n        <li class=\\\"active\\\">\\r\\n            <a href=\\\"#emailSend\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"true\\\" i18n=\\\"@@emailSend\\\" (click)=\\\"search(1)\\\">Email Send </a>\\r\\n        </li>\\r\\n        <li class=\\\"\\\">\\r\\n            <a href=\\\"#emailType\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\" i18n=\\\"@@emailType\\\"\\r\\n               (click)=\\\"searchEmailType()\\\">Email Type</a>\\r\\n        </li>\\r\\n        <li class=\\\"\\\">\\r\\n            <a href=\\\"#emailTemplate\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\" i18n=\\\"@@emailTemplate\\\"\\r\\n               (click)=\\\"searchEmailTemplate()\\\">Email Template</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n    <div class=\\\"tab-content\\\">\\r\\n        <div class=\\\"tab-pane active\\\" id=\\\"emailSend\\\">\\r\\n            <div class=\\\"portlet light\\\">\\r\\n                <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n                    <div class=\\\"caption\\\">\\r\\n                         <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@email\\\">\\r\\n                               <i class=\\\"fa fa-envelope-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                               Email\\r\\n                         </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"actions\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn blue btn-circle\\\" (click)=\\\"add()\\\" i18n=\\\"@@add\\\">\\r\\n                          <i class=\\\"fa fa-plus\\\"></i>  Add\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"portlet-body\\\">\\r\\n                    <table class=\\\"table table-hover table-stripped\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                            <th class=\\\"w150\\\" i18n=\\\"@@account\\\">Account</th>\\r\\n                            <th class=\\\"middle\\\" i18n=\\\"@@smtpServer\\\">SMTP Server</th>\\r\\n                            <th class=\\\"center middle w50\\\" i18n=\\\"@@port\\\">Port</th>\\r\\n                            <th class=\\\"center middle w100\\\" i18n=\\\"@@action\\\">Action</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let item of listEmail; let i = index\\\">\\r\\n                            <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n                            <td class=\\\"middle\\\"> {{ item.mailName}}</td>\\r\\n                            <td class=\\\"middle\\\">\\r\\n                                {{item.mailTypeName}}\\r\\n                            </td>\\r\\n                            <td class=\\\"middle center\\\"> {{ item.port }}</td>\\r\\n                            <td class=\\\"center middle\\\">\\r\\n                                <nh-dropdown>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                                        <mat-icon>more_horiz</mat-icon>\\r\\n                                    </button>\\r\\n                                    <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                                        <li>\\r\\n                                            <a *ngIf=\\\"permission.edit\\\"\\r\\n                                               (click)=\\\"edit(item)\\\"\\r\\n                                               i18n=\\\"@@edit\\\">\\r\\n                                                <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                                Edit\\r\\n                                            </a>\\r\\n                                        </li>\\r\\n                                        <li>\\r\\n                                            <a [swal]=\\\"confirmDeleteNews\\\"\\r\\n                                               (confirm)=\\\"delete(item.id)\\\" i18n=\\\"@@delete\\\">\\r\\n                                                <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                                Delete\\r\\n                                            </a>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </nh-dropdown>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <ghm-paging [totalRows]=\\\"totalRows\\\" [pageSize]=\\\"pageSize\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\"\\r\\n                                (pageClick)=\\\"search($event)\\\"\\r\\n                                [isDisabled]=\\\"isSearching\\\" i18n-pageName=\\\"@@news\\\" pageName=\\\"News\\\"></ghm-paging>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"emailType\\\">\\r\\n            <app-config-email-type></app-config-email-type>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"emailTemplate\\\">\\r\\n            <app-config-email-template></app-config-email-template>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-config-email-form (onSaveSuccess)=\\\"search(1)\\\"></app-config-email-form>\\r\\n<swal\\r\\n        #confirmDeleteNews\\r\\n        i18n=\\\"@@confirmDeleteEmail\\\"\\r\\n        i18n-title=\\\"@@confirmTitleDeleteEmail\\\"\\r\\n        i18n-text=\\\"@@confirmTextDeleteEmail\\\"\\r\\n        title=\\\"Are you sure for delete this email?\\\"\\r\\n        text=\\\"You can't recover this video after email.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\"\\r\\n        [showCancelButton]=\\\"true\\\"\\r\\n        [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n\\r\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseListComponent} from '../../../base-list.component';\r\nimport {EmailSearchViewModel} from './viewmodel/email-search.viewmodel';\r\nimport {EmailService} from './service/email.service';\r\nimport {APP_CONFIG, IAppConfig} from '../../../configs/app.config';\r\nimport {IPageId, PAGE_ID} from '../../../configs/page-id.config';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Location} from '@angular/common';\r\nimport {UtilService} from '../../../shareds/services/util.service';\r\nimport {FilterLink} from '../../../shareds/models/filter-link.model';\r\nimport {EmailFormComponent} from './email-form/email-form.component';\r\nimport {ActionResultViewModel} from '../../../shareds/view-models/action-result.viewmodel';\r\nimport {EmailTemplateComponent} from './email-template/email-template.component';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {SearchResultViewModel} from '../../../shareds/view-models/search-result.viewmodel';\r\nimport {EmailTypeComponent} from './email-type/email-type.component';\r\nimport * as _ from 'lodash';\r\nimport {EmailDetailViewModel} from './viewmodel/email-detail.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-config-email',\r\n    templateUrl: './email.component.html',\r\n    providers: [EmailService]\r\n})\r\nexport class EmailComponent extends BaseListComponent<EmailSearchViewModel> implements OnInit {\r\n    @ViewChild(EmailFormComponent) emailFormComponent: EmailFormComponent;\r\n    @ViewChild(EmailTemplateComponent) emailTemplateComponent: EmailTemplateComponent;\r\n    @ViewChild(EmailTypeComponent) emailTypeComponent: EmailTypeComponent;\r\n    listEmail;\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                @Inject(PAGE_ID) public pageId: IPageId,\r\n                private emailService: EmailService,\r\n                private router: Router,\r\n                private location: Location,\r\n                private utilService: UtilService,\r\n                private route: ActivatedRoute) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.WEBSITE_CONFIG, this.pageId.CONFIG_EMAIL);\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderFilterLink();\r\n        this.emailService.search(this.currentPage, this.pageSize).pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<EmailSearchViewModel>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listEmail = result.items;\r\n            });\r\n    }\r\n\r\n    add() {\r\n        this.emailFormComponent.add();\r\n    }\r\n\r\n    edit(email: EmailSearchViewModel) {\r\n        this.emailFormComponent.edit(email);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.emailService.delete(id).subscribe((result: ActionResultViewModel) => {\r\n            _.remove(this.listEmail, (item: EmailSearchViewModel) => {\r\n                return item.id === id;\r\n            });\r\n        });\r\n    }\r\n\r\n    searchEmailTemplate() {\r\n        this.emailTemplateComponent.search(1);\r\n    }\r\n\r\n    searchEmailType() {\r\n        this.emailTypeComponent.search(1);\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = 'config/emails';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","export class Email {\r\n    email: string;\r\n    password: string;\r\n    isActive: boolean;\r\n    owner: string;\r\n    mailTypeId: string;\r\n    concurrencyStamp: string;\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n    }\r\n}\r\n","import {Inject} from '@angular/core';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {SpinnerService} from '../../../../core/spinner/spinner.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Observable} from 'rxjs';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {Email} from '../model/email.model';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {EmailDetailViewModel} from '../viewmodel/email-detail.viewmodel';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {ActivatedRouteSnapshot} from '@angular/router';\r\nimport {EmailSearchViewModel} from '../viewmodel/email-search.viewmodel';\r\n\r\nexport class EmailService {\r\n    url = '/mails';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService) {\r\n        this.url = `${this.appConfig.WEBSITE_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.queryParams;\r\n        const page = queryParams.page;\r\n        const pageSize = queryParams.pageSize;\r\n        return this.search(page, pageSize);\r\n    }\r\n\r\n    search(page: number = 1, pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<EmailSearchViewModel>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', page ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }).pipe(map((result: SearchResultViewModel<EmailSearchViewModel>) => {\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<EmailSearchViewModel>>;\r\n    }\r\n\r\n    insert(email: Email): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, email).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, email: Email): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}`, email).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<EmailDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${id}`, {})\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel<EmailDetailViewModel>>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/${id}`).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #choiceMenuItemModal [size]=\\\"'lg'\\\">\\r\\n    <nh-modal-header class=\\\"uppercase\\\">\\r\\n        <span i18n=\\\"@@choiceMenuItem\\\">Choice menu item into menu</span>\\r\\n    </nh-modal-header>\\r\\n    <nh-modal-content>\\r\\n        <app-new-select *ngIf=\\\"type === subjectType.news\\\" (onAccept)=\\\"acceptSelectListGroup($event)\\\"\\r\\n                        (onCancel)=\\\"choiceMenuItemModal.dismiss()\\\"></app-new-select>\\r\\n        <app-category-select *ngIf=\\\"type === subjectType.newsCategory\\\" (onAccept)=\\\"acceptSelectListGroup($event)\\\"\\r\\n                             (onCancel)=\\\"choiceMenuItemModal.dismiss()\\\"></app-category-select>\\r\\n        <app-product-select *ngIf=\\\"type === subjectType.product\\\" (onAccept)=\\\"acceptSelectListGroup($event)\\\"\\r\\n            (onCancel)=\\\"choiceMenuItemModal.dismiss()\\\"></app-product-select>\\r\\n        <app-product-category-select *ngIf=\\\"type === subjectType.productCategory\\\" (onAccept)=\\\"acceptSelectListGroup($event)\\\"\\r\\n                            (onCancel)=\\\"choiceMenuItemModal.dismiss()\\\"></app-product-category-select>\\r\\n    </nh-modal-content>\\r\\n</nh-modal>\\r\\n\"","import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\r\nimport {NhModalComponent} from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {SubjectType} from '../models/menu-item.model';\r\n\r\n@Component({\r\n    selector: 'app-menu-choice-menu-item',\r\n    templateUrl: './choice-menu-item.component.html'\r\n})\r\nexport class ChoiceMenuItemComponent {\r\n    @ViewChild('choiceMenuItemModal') choiceMenuItemModal: NhModalComponent;\r\n    @Output() acceptSelect = new EventEmitter();\r\n    subjectType = SubjectType;\r\n    type;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    show() {\r\n        this.choiceMenuItemModal.open();\r\n    }\r\n\r\n    acceptSelectListGroup(value) {\r\n        this.acceptSelect.emit(value);\r\n        this.choiceMenuItemModal.dismiss();\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n   <span class=\\\"uppercase\\\">\\r\\n        {isUpdate, select, 0 {Add menu} 1 {Update menu} other {}}\\r\\n    </span>\\r\\n</h1>\\r\\n<div class=\\\"col-sm-6 cm-pdl-0\\\">\\r\\n    <div class=\\\"portlet light bordered cm-pd-15\\\">\\r\\n        <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n            <div class=\\\"caption\\\">\\r\\n                  <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@menuGroup\\\">\\r\\n                        Menu group\\r\\n                  </span>\\r\\n            </div>\\r\\n            <div class=\\\"actions cm-pdb-0\\\">\\r\\n                <a class=\\\"btn btn-circle btn-icon-only btn-no-border btn-no-background\\\"\\r\\n                   (click)=\\\"isShowMenuGroup = !isShowMenuGroup\\\"\\r\\n                   href=\\\"javascript:;\\\">\\r\\n                    <i class=\\\"fa fa-chevron-down\\\" *ngIf=\\\"!isShowMenuGroup\\\"></i>\\r\\n                    <i class=\\\"fa fa-chevron-up\\\" *ngIf=\\\"isShowMenuGroup\\\"></i>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"portlet-body cm-pdt-0\\\" *ngIf=\\\"isShowMenuGroup\\\">\\r\\n            <form action=\\\"\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n                <div class=\\\"form-body\\\">\\r\\n                    <div class=\\\"form-group cm-mg-0\\\"\\r\\n                         [class.has-error]=\\\"formErrors?.name\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@menuGroupName\\\" ghmLabel=\\\"Menu group name\\\" class=\\\"control-label\\\"\\r\\n                               [required]=\\\"true\\\"></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@bannerMenuGroupPlaceHolder\\\"\\r\\n                               placeholder=\\\"Please enter menu group name\\\"\\r\\n                               formControlName=\\\"name\\\"/>\\r\\n                        <span class=\\\"help-block\\\">{ formErrors?.name, select, required {Menu group name is required} maxLength {Menu name not allowed\\r\\n                                                    over 256 characters}}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group cm-mg-0\\\"\\r\\n                         [class.has-error]=\\\"formErrors?.position\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@position\\\" class=\\\"control-label\\\" ghmLabel=\\\"Position\\\"\\r\\n                               [required]=\\\"true\\\"></label>\\r\\n                        <ghm-select\\r\\n                                i18n-title=\\\"@@position\\\"\\r\\n                                title=\\\"-- Please select position --\\\"\\r\\n                                [data]=\\\"positions\\\"\\r\\n                                formControlName=\\\"position\\\"></ghm-select>\\r\\n                        <span class=\\\"help-block\\\">{formErrors?.position, select, required {Position is required} isValid {Position is invalid}}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group cm-mg-0\\\"\\r\\n                         [class.has-error]=\\\"formErrors?.icon\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@icon\\\" ghmLabel=\\\"Icon\\\" class=\\\"control-label\\\"\\r\\n                               [required]=\\\"true\\\"></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@iconPlaceHolder\\\"\\r\\n                               placeholder=\\\"Please enter icon\\\"\\r\\n                               formControlName=\\\"icon\\\"/>\\r\\n                        <span class=\\\"help-block\\\">{formErrors?.icon, select, maxLength {Icon not allowed\\r\\n                                                    over 100 characters}}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group cm-mg-0\\\"\\r\\n                         [class.has-error]=\\\"formErrors?.effectType\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@effect\\\" class=\\\"control-label\\\" ghmLabel=\\\"Effect\\\"></label>\\r\\n                        <ghm-select\\r\\n                            i18n-title=\\\"@@effectType\\\"\\r\\n                            title=\\\"-- Please select effect type --\\\"\\r\\n                            [data]=\\\"effectTypes\\\"\\r\\n                            formControlName=\\\"effectType\\\"></ghm-select>\\r\\n                        <span class=\\\"help-block\\\">{ formErrors?.effectType, select, isValid {Effect type is invalid}}</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group cm-mg-0\\\"\\r\\n                         [class.has-error]=\\\"formErrors?.description\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\"\\r\\n                               class=\\\"control-label\\\"></label>\\r\\n                        <textarea type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@description\\\"\\r\\n                                  placeholder=\\\"Please enter description\\\"\\r\\n                                  formControlName=\\\"description\\\" rows=\\\"3\\\"></textarea>\\r\\n                        <span class=\\\"help-block\\\">{ formErrors?.description, select, maxlength {Description not allowed\\r\\n                                                        over 500 characters}}\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group cm-mg-0\\\">\\r\\n                    <mat-checkbox formControlName=\\\"isActive\\\" color=\\\"primary\\\">\\r\\n                        {model.value?.isActive, select, 0 {InActive} 1 {Active}}\\r\\n                    </mat-checkbox>\\r\\n                </div>\\r\\n                <div class=\\\"form-actions\\\">\\r\\n                    <button class=\\\"btn blue cm-mgr-5\\\" type=\\\"submit\\\"\\r\\n                            [disabled]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                        Save\\r\\n                    </button>\\r\\n                    <button class=\\\"btn default\\\" type=\\\"button\\\" routerLink=\\\"/config/menus\\\"\\r\\n                            [disabled]=\\\"isSaving || formErrors.length > 0\\\" i18n=\\\"@@cancel\\\">\\r\\n                        Cancel\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"portlet-title cm-mgt-10\\\">\\r\\n            <div class=\\\"caption\\\">\\r\\n                  <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@menuItem\\\">\\r\\n                       Menu item\\r\\n                   </span>\\r\\n            </div>\\r\\n            <div class=\\\"actions cm-pdb-0\\\">\\r\\n                <a class=\\\"btn btn-circle btn-icon-only btn-no-border btn-no-background\\\"\\r\\n                   (click)=\\\"isShowMenuItem = !isShowMenuItem\\\">\\r\\n                    <i class=\\\"fa fa-chevron-down\\\" *ngIf=\\\"!isShowMenuItem\\\"></i>\\r\\n                    <i class=\\\"fa fa-chevron-up\\\" *ngIf=\\\"isShowMenuItem\\\"></i>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"portlet-body cm-pd-0\\\" *ngIf=\\\"isShowMenuItem\\\">\\r\\n            <app-config-menu-item-form\\r\\n                [menuId]=\\\"id\\\"\\r\\n                [menuItemTree]=\\\"listMenuItem\\\"\\r\\n                (onSaveSuccess)=\\\"renderMenuTree()\\\"\\r\\n                (onCloseForm)=\\\"isShowMenuItem = false\\\"></app-config-menu-item-form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"col-sm-6 cm-pdr-0\\\">\\r\\n    <div class=\\\"portlet light bordered cm-pd-15\\\">\\r\\n        <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n            <div class=\\\"caption\\\">\\r\\n                  <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@menuPreview\\\">\\r\\n                        Menu Preview\\r\\n                  </span>\\r\\n            </div>\\r\\n            <div class=\\\"actions cm-pdb-0\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"portlet-body\\\">\\r\\n            <app-menu-item [listMenuItem]=\\\"listMenuItem\\\"\\r\\n                           (onEditItem)=\\\"editMenuItem($event)\\\"\\r\\n                           (onDelete)=\\\"deleteMenuItem($event)\\\"></app-menu-item>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import {AfterViewInit, Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {MenuService} from '../menu.service';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {Menu} from '../models/menu.model';\r\nimport {MenuDetailViewModel} from '../viewmodel/menu-detail.viewmodel';\r\nimport {NumberValidator} from '../../../../validators/number.validator';\r\nimport {EffectType} from '../../../banners/models/banner.model';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {BaseFormComponent} from '../../../../base-form.component';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {IPageId, PAGE_ID} from '../../../../configs/page-id.config';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {TreeData} from '../../../../view-model/tree-data';\r\nimport {MenuItemFormComponent} from '../menu-item/menu-item-form/menu-item-form.component';\r\nimport {Positions} from '../../../../shareds/constants/position.const';\r\n\r\n@Component({\r\n    selector: 'app-menu-form',\r\n    templateUrl: './menu-form.component.html',\r\n    providers: [NumberValidator]\r\n})\r\n\r\nexport class MenuFormComponent extends BaseFormComponent implements OnInit, AfterViewInit {\r\n    @ViewChild(MenuItemFormComponent) menuItemFormComponent: MenuItemFormComponent;\r\n    menu = new Menu();\r\n    listMenuItem: TreeData[] = [];\r\n    isShowMenuGroup = true;\r\n    isShowMenuItem = true;\r\n    effectTypes = [{\r\n        id: EffectType.fade,\r\n        name: 'Fade'\r\n    }, {\r\n        id: EffectType.slideDown,\r\n        name: 'slideDown'\r\n    }, {\r\n        id: EffectType.slideLeft,\r\n        name: 'SlideLeft'\r\n    }, {\r\n        id: EffectType.slideRight,\r\n        name: 'SlideRight'\r\n    }, {\r\n        id: EffectType.slideUp,\r\n        name: 'SlideUp'\r\n    }];\r\n\r\n    positions = [{\r\n        id: Positions.top,\r\n        name: 'Top'\r\n    }, {\r\n        id: Positions.right,\r\n        name: 'Right'\r\n    }, {\r\n        id: Positions.bottom,\r\n        name: 'Bottom'\r\n    }, {\r\n        id: Positions.left,\r\n        name: 'Left'\r\n    }, {\r\n        id: Positions.middle,\r\n        name: 'Middle'\r\n    }];\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                @Inject(PAGE_ID) public pageId: IPageId,\r\n                private router: Router,\r\n                private route: ActivatedRoute,\r\n                private utilService: UtilService,\r\n                private fb: FormBuilder,\r\n                private numberValidator: NumberValidator,\r\n                private menuService: MenuService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.WEBSITE, this.pageId.MENU, 'Quản lý Menu', 'Danh sách menu');\r\n        this.subscribers.routerParam = this.route.params.subscribe((params: any) => {\r\n            const id = params['id'];\r\n            if (id) {\r\n                this.id = id;\r\n                this.isShowMenuItem = false;\r\n                this.isUpdate = true;\r\n                this.getDetail(id);\r\n            }\r\n        });\r\n        this.renderForm();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.id) {\r\n            this.renderMenuTree();\r\n        }\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (isValid) {\r\n            this.menu = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.menuService.update(this.id, this.menu)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.router.navigate(['/config/menus']);\r\n                    });\r\n            } else {\r\n                this.menuService.insert(this.menu)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.isModified = true;\r\n                        this.resetForm();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    getDetail(id: string) {\r\n        this.menuService\r\n            .getDetail(id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<MenuDetailViewModel>) => {\r\n                    const menuDetail = result.data;\r\n                    if (menuDetail) {\r\n                        this.model.patchValue(menuDetail);\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    renderMenuTree() {\r\n        if (this.id) {\r\n            this.menuService.getTreeMenuItem(this.id).subscribe((result: TreeData[]) => {\r\n                this.listMenuItem = result;\r\n            });\r\n        }\r\n    }\r\n\r\n    editMenuItem(value: TreeData) {\r\n        if (value) {\r\n            this.isShowMenuItem = true;\r\n            setTimeout(() => {\r\n                this.menuItemFormComponent.edit(value.id);\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    deleteMenuItem(value: TreeData) {\r\n        if (value) {\r\n            this.menuService.deleteMenuItem(this.id, value.id).subscribe(() => {\r\n                this.renderMenuTree();\r\n            });\r\n        }\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'position', 'description', 'effectType']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxLength']},\r\n            {position: ['required', 'isValid']},\r\n            {icon: ['maxLength']},\r\n            {effectType: ['isValid']},\r\n            {description: ['maxLength']},\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            name: [this.menu.name,\r\n                [Validators.required,\r\n                    Validators.maxLength(256)]],\r\n            position: [this.menu.position,\r\n                [Validators.required,\r\n                    this.numberValidator.isValid]],\r\n            icon: [this.menu.icon, [Validators.maxLength(100)]],\r\n            effectType: [this.menu.effectType, [this.numberValidator.isValid]],\r\n            description: [this.menu.description, [Validators.maxLength(500)]],\r\n            isActive: [this.menu.isActive],\r\n            concurrencyStamp: [this.menu.concurrencyStamp],\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            id: null,\r\n            name: '',\r\n            icon: '',\r\n            description: '',\r\n            effectType: '',\r\n            isActive: true,\r\n            position: Positions.top,\r\n            concurrencyStamp: '',\r\n        });\r\n\r\n        this.listMenuItem = [];\r\n        this.clearFormError(this.formErrors);\r\n    }\r\n}\r\n","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"model\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <div class=\\\"form-body\\\" formArrayName=\\\"modelTranslations\\\">\\r\\n        <div class=\\\"form-group cm-mg-0\\\" *ngIf=\\\"languages && languages.length > 1\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                   class=\\\"control-label\\\"></label>\\r\\n            <nh-select [data]=\\\"languages\\\"\\r\\n                       i18n-title=\\\"@@pleaseSelectLanguage\\\"\\r\\n                       title=\\\"-- Please select language --\\\"\\r\\n                       name=\\\"language\\\"\\r\\n                       [(value)]=\\\"currentLanguage\\\"\\r\\n                       (onSelectItem)=\\\"currentLanguage = $event.id\\\"></nh-select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group cm-mg-0\\\"\\r\\n             [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n             *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n             [formGroupName]=\\\"i\\\"\\r\\n             [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@menuName\\\" ghmLabel=\\\"Menu Name\\\" class=\\\"control-label\\\"\\r\\n                   [required]=\\\"true\\\"></label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@menuNamePlaceHolder\\\"\\r\\n                   placeholder=\\\"Please enter menu name\\\" formControlName=\\\"name\\\"/>\\r\\n            <span class=\\\"help-block\\\">{translationFormErrors[modelTranslation.value.languageId]?.name, select, required {Menu name is required} maxlength {Menu name not allowed\\r\\n                                                    over 256 characters}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group cm-mg-0\\\"\\r\\n             [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n             *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n             [formGroupName]=\\\"i\\\"\\r\\n             [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.namePath\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@seoLink\\\" ghmLabel=\\\"SeoLink\\\" class=\\\"control-label\\\"></label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@menuNamePathPlaceHolder\\\"\\r\\n                   placeholder=\\\"Please enter seolink\\\" formControlName=\\\"namePath\\\"/>\\r\\n        </div>\\r\\n        <div class=\\\"form-group cm-mg-0\\\" [formGroup]=\\\"model\\\"\\r\\n             [class.has-error]=\\\"formErrors.parentId\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@parent\\\" class=\\\"control-label\\\" ghmLabel=\\\"Parent Menu\\\"></label>\\r\\n            <nh-dropdown-tree [data]=\\\"menuItemTree\\\"\\r\\n                              i18n-title=\\\"@@selectMenuItem\\\"\\r\\n                              [title]=\\\"'-- Select menu item --'\\\"\\r\\n                              formControlName=\\\"parentId\\\"\\r\\n                              (accepted)=\\\"onAcceptSelectMenuParent($event)\\\">\\r\\n            </nh-dropdown-tree>\\r\\n            <span class=\\\"help-block\\\">{formErrors?.parentId, select, isValid {Parent  is inValid}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"form-group cm-mg-0\\\" [formGroup]=\\\"model\\\"\\r\\n             [class.has-error]=\\\"formErrors.subjectType\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@subjectType\\\" class=\\\"control-label\\\" ghmLabel=\\\"Subject Type\\\"\\r\\n                   [required]=\\\"true\\\"></label>\\r\\n            <ghm-select [data]=\\\"subjectTypes\\\"\\r\\n                       i18n-title=\\\"@@subjectTypeTitle\\\"\\r\\n                       [title]=\\\"'-- Select subject type --'\\\"\\r\\n                       (itemSelected)=\\\"selectSubjectType($event)\\\"\\r\\n                       formControlName=\\\"subjectType\\\">\\r\\n            </ghm-select>\\r\\n            {{formErrors?.subjectType}}\\r\\n            <span class=\\\"help-block\\\">{formErrors?.subjectType, select, required {SubjectType is required} isValid {Subject type in inValid}}</span>\\r\\n        </div>\\r\\n        <ng-container *ngIf=\\\"!listMenuItemSelect || listMenuItemSelect.length === 0 ; else tableMenuItem\\\">\\r\\n            <div class=\\\"form-group cm-mg-0\\\" [formGroup]=\\\"model\\\"\\r\\n                 [class.has-error]=\\\"formErrors.url\\\">\\r\\n                <label i18n-ghmlabel=\\\"@@url\\\" ghmLabel=\\\"Url\\\">\\r\\n                </label>\\r\\n                <input class=\\\"form-control\\\" i18n-placeholder=\\\"@@urlPlaceHolder\\\"\\r\\n                       placeholder=\\\"Please enter url\\\" formControlName=\\\"url\\\">\\r\\n                <span class=\\\"help-block\\\">{formErrors?.url, select, maxLength {Url  not allowed over 500 characters} pattern {Url in inValid}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mg-0\\\" [formGroup]=\\\"model\\\"\\r\\n                 [class.has-error]=\\\"formErrors.order\\\">\\r\\n                <label i18n-ghmlabel=\\\"@@order\\\" ghmLabel=\\\"Order\\\" [required]=\\\"true\\\">\\r\\n                </label>\\r\\n                <input class=\\\"form-control\\\" i18n-placeholder=\\\"@@orderPlaceHolder\\\"\\r\\n                       placeholder=\\\"Please enter order\\\" formControlName=\\\"order\\\">\\r\\n                <span class=\\\"help-block\\\">{formErrors?.order, select, required {Order is required} isValid {Order is inValid} greaterThan {Order must greater than 0}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mg-0\\\" [formGroup]=\\\"model\\\"\\r\\n                 [class.has-error]=\\\"formErrors.icon\\\">\\r\\n                <label i18n-ghmlabel=\\\"@@icon\\\" ghmLabel=\\\"Icon\\\"></label>\\r\\n                <input class=\\\"form-control\\\" i18n-placeholder=\\\"@@iconPlaceHolder\\\"\\r\\n                       placeholder=\\\"Please enter icon\\\" formControlName=\\\"icon\\\">\\r\\n                <span\\r\\n                        class=\\\"help-block\\\">{formErrors?.icon, select, maxLength {Icon not allowed over 150 characters}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mg-0 display-block\\\" [formGroup]=\\\"model\\\"\\r\\n                 [class.has-error]=\\\"formErrors.image\\\">\\r\\n                <div class=\\\"fileinput fileinput-new\\\">\\r\\n                    <div class=\\\"fileinput-new thumbnail\\\">\\r\\n                        <nh-image [errorImageUrl]=\\\"'/assets/images/no-image.png'\\\"\\r\\n                                  [cssClass]=\\\"'w100 cm-mgb-5'\\\"\\r\\n                                  [value]=\\\"model.value.image\\\"></nh-image>\\r\\n                        <span class=\\\"help-block\\\">{formErrors?.image, select, maxLength {Image  not allowed over 500 characters}}</span>\\r\\n                        <ghm-file-explorer [buttonText]=\\\"'Select image'\\\"\\r\\n                                           (itemSelected)=\\\"selectImage($event)\\\"></ghm-file-explorer>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mg-0\\\"\\r\\n                 [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                 *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                 [formGroupName]=\\\"i\\\"\\r\\n                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\" class=\\\"control-label\\\"\\r\\n                       [required]=\\\"true\\\"></label>\\r\\n                <textarea type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@descriptionPlaceHolder\\\"\\r\\n                          placeholder=\\\"Please enter description\\\" formControlName=\\\"description\\\"></textarea>\\r\\n                <span class=\\\"help-block\\\">{translationFormErrors[modelTranslation.value.languageId]?.description, select,  maxlength {Description not allowed\\r\\n                                                    over 500 characters}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group cm-mg-0\\\" [formGroup]=\\\"model\\\">\\r\\n                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\">\\r\\n                    {model.value?.isActive, select, 0 {InActive} 1 {Active}}\\r\\n                </mat-checkbox>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <div class=\\\"form-actions\\\">\\r\\n        <button class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\">\\r\\n            Save\\r\\n        </button>\\r\\n        <button class=\\\"btn default\\\" i18n=\\\"@@cancel\\\" (click)=\\\"closeForm()\\\">\\r\\n            Cancel\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<app-menu-choice-menu-item (acceptSelect)=\\\"selectMenuItem($event)\\\"></app-menu-choice-menu-item>\\r\\n\\r\\n<ng-template #tableMenuItem>\\r\\n    <span class=\\\"caption-subject font-default-sharp bold uppercase\\\"> List News Select </span>\\r\\n    <table class=\\\"table table-hover table-stripped\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th class=\\\"middle\\\" i18n=\\\"@@titleNews\\\">Name</th>\\r\\n            <th class=\\\"center middle w100\\\" i18n=\\\"@@isHot\\\">Icon</th>\\r\\n            <th class=\\\"center middle w100\\\" i18n=\\\"@@isHomePage\\\">Order</th>\\r\\n            <th class=\\\"center middle w50\\\">\\r\\n                <button class=\\\"btn btn-sm blue\\\" (click)=\\\"addMenuItem()\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                </button>\\r\\n            </th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let item of listMenuItemSelect; let i = index\\\">\\r\\n            <td class=\\\"middle\\\">\\r\\n                <div class=\\\"media cursor-pointer\\\" title=\\\"{{item.name}}\\\">\\r\\n                    <div class=\\\"media-left middle\\\" *ngIf=\\\"item.image\\\">\\r\\n                        <img ghmImage=\\\"\\\" [src]=\\\"item.image\\\" [isUrlAbsolute]=\\\"true\\\" class=\\\"media-object w50\\\"\\r\\n                             alt=\\\"{{item.name}}\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"media-body middle\\\">\\r\\n                        <h4 class=\\\"media-heading\\\">{{ item.name }}</h4>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n            <td class=\\\"middle center\\\">\\r\\n                <input class=\\\"form-control\\\" [(ngModel)]=\\\"item.icon\\\">\\r\\n            </td>\\r\\n            <td class=\\\"middle center\\\">\\r\\n                <input type=\\\"number\\\" class=\\\"form-control center\\\" [(ngModel)]=\\\"item.order\\\">\\r\\n            </td>\\r\\n            <td class=\\\"middle center\\\">\\r\\n                <button class=\\\"btn btn-sm btn-outline red\\\" (click)=\\\"removeListMenuItem(i)\\\"><i class=\\\"fa fa-trash\\\"></i>\\r\\n                </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</ng-template>\\r\\n\"","import {Component, EventEmitter, Inject, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {MenuService} from '../../menu.service';\r\nimport {MenuItem, SubjectType} from '../../models/menu-item.model';\r\nimport {MenuItemTranslation} from '../../models/menu-item-translation.model';\r\nimport {NumberValidator} from '../../../../../validators/number.validator';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {MenuItemDetailViewModel} from '../../viewmodel/menu-item-detail.viewmodel';\r\nimport {TreeData} from '../../../../../view-model/tree-data';\r\nimport {ExplorerItem} from '../../../../../shareds/components/ghm-file-explorer/explorer-item.model';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport * as _ from 'lodash';\r\nimport {ChoiceMenuItemComponent} from '../../choice-menu-item/choice-menu-item.component';\r\nimport {MenuItemSelectViewModel} from '../../viewmodel/menu-item-select.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-config-menu-item-form',\r\n    templateUrl: './menu-item-form.component.html',\r\n    providers: [MenuService, NumberValidator, UtilService]\r\n})\r\n\r\nexport class MenuItemFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild(ChoiceMenuItemComponent) choiceMenuItemComponent: ChoiceMenuItemComponent;\r\n    @Input() menuItemTree: TreeData[] = [];\r\n    @Input() menuId: string;\r\n    @Output() onSaveSuccess = new EventEmitter();\r\n    @Output() onCloseForm = new EventEmitter();\r\n    menuItem = new MenuItem();\r\n    modelTranslation = new MenuItemTranslation();\r\n    subjectTypes = [\r\n        {id: SubjectType.custom, name: 'Custom'},\r\n        {id: SubjectType.news, name: 'News'},\r\n        {id: SubjectType.newsCategory, name: 'News Category'},\r\n        {id: SubjectType.product, name: 'Product'},\r\n        {id: SubjectType.productCategory, name: 'Product Category'},\r\n    ];\r\n\r\n    listMenuItemSelect: MenuItemSelectViewModel[] = [];\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private numberValidator: NumberValidator,\r\n                private utilService: UtilService,\r\n                private menuService: MenuService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n    }\r\n\r\n    edit(id: number) {\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n    }\r\n\r\n    selectImage(file: ExplorerItem) {\r\n        if (file.isImage) {\r\n            this.model.patchValue({image: file.absoluteUrl});\r\n        } else {\r\n            this.toastr.error('Please select file image');\r\n        }\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.menuItem = this.model.value;\r\n            this.menuItem.listMenuItemSelected = this.listMenuItemSelect;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.menuService.updateMenuItem(this.menuId, this.id, this.menuItem)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.onSaveSuccess.emit();\r\n                    });\r\n            } else {\r\n                console.log(this.model.value);\r\n                this.menuService.insertMenuItem(this.menuId, this.menuItem)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: ActionResultViewModel) => {\r\n                        this.onSaveSuccess.emit();\r\n                        this.resetForm();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    getDetail(id: number) {\r\n        this.menuService\r\n            .getDetailMenuItem(this.menuId, id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<MenuItemDetailViewModel>) => {\r\n                    const menuItemDetail = result.data;\r\n                    if (menuItemDetail) {\r\n                        this.model.patchValue({\r\n                            subjectType: menuItemDetail.subjectType,\r\n                            subjectId: menuItemDetail.subjectId,\r\n                            parentId: menuItemDetail.parentId,\r\n                            isActive: menuItemDetail.isActive,\r\n                            image: menuItemDetail.image,\r\n                            icon: menuItemDetail.icon,\r\n                            url: menuItemDetail.url,\r\n                            order: menuItemDetail.order,\r\n                            concurrencyStamp: menuItemDetail.concurrencyStamp,\r\n                        });\r\n                    }\r\n\r\n                    if (menuItemDetail.menuItemTranslations && menuItemDetail.menuItemTranslations.length > 0) {\r\n                        this.modelTranslations.controls.forEach(\r\n                            (model: FormGroup) => {\r\n                                const detail = _.find(\r\n                                    menuItemDetail.menuItemTranslations,\r\n                                    (menuItemTranslation: MenuItemTranslation) => {\r\n                                        return (\r\n                                            menuItemTranslation.languageId === model.value.languageId\r\n                                        );\r\n                                    }\r\n                                );\r\n                                if (detail) {\r\n                                    model.patchValue(detail);\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    onAcceptSelectMenuParent(value: TreeData) {\r\n        this.model.patchValue({parentId: value ? value.id : null});\r\n    }\r\n\r\n    closeForm() {\r\n        this.onCloseForm.emit();\r\n    }\r\n\r\n    selectSubjectType(value) {\r\n            this.choiceMenuItemComponent.type = value.id;\r\n            this.choiceMenuItemComponent.show();\r\n    }\r\n\r\n    selectMenuItem(values) {\r\n        if (values && values.length > 0) {\r\n            _.each(values, (value, index) => {\r\n                const existsItem = _.find(this.listMenuItemSelect, (menuItem: MenuItemSelectViewModel) => {\r\n                    return menuItem.id === value.id;\r\n                });\r\n                if (!existsItem) {\r\n                    this.listMenuItemSelect.push(new MenuItemSelectViewModel(value.id, value.name, index, '', value.image));\r\n                    this.renderOrderMenuItem();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    removeListMenuItem(index: number) {\r\n        _.pullAt(this.listMenuItemSelect, [index]);\r\n        if (this.listMenuItemSelect && this.listMenuItemSelect.length > 0) {\r\n            this.renderOrderMenuItem();\r\n        }\r\n    }\r\n\r\n    renderOrderMenuItem() {\r\n        _.forEach(this.listMenuItemSelect, (item: MenuItemSelectViewModel, i: number) => {\r\n            item.order = i + 1;\r\n        });\r\n    }\r\n\r\n    addMenuItem() {\r\n            this.choiceMenuItemComponent.type = this.model.value.subjectType;\r\n            this.choiceMenuItemComponent.show();\r\n    }\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['subjectId', 'subjectType', 'parentId', 'image', 'icon', 'url', 'order',]);\r\n        this.validationMessages = this.renderFormErrorMessage([\r\n            {'subjectType': ['required', 'isValid']},\r\n            {'subjectId': ['isValid']},\r\n            {'parentId': ['isValid']},\r\n            {'image': ['maxLength']},\r\n            {'icon': ['maxLength']},\r\n            {'url': ['maxLength']},\r\n            {'order': ['required', 'isValid', 'greaterThan']}]);\r\n        this.model = this.fb.group({\r\n            subjectType: [this.menuItem.subjectType, [this.numberValidator.isValid]],\r\n            subjectId: [this.menuItem.subjectId, [this.numberValidator.isValid]],\r\n            parentId: [this.menuItem.parentId, [this.numberValidator.isValid]],\r\n            isActive: [this.menuItem.isActive],\r\n            image: [this.menuItem.image, [Validators.maxLength(500)]],\r\n            icon: [this.menuItem.icon, [Validators.maxLength(150)]],\r\n            url: [this.menuItem.url, [Validators.maxLength(500)]],\r\n            order: [this.menuItem.order, [this.numberValidator.isValid, this.numberValidator.greaterThan(0)]],\r\n            concurrencyStamp: [this.menuItem.concurrencyStamp],\r\n            modelTranslations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name',  'namePath']\r\n        );\r\n        this.translationValidationMessage[language] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxLength']},\r\n            {'namePath': ['maxLength']},\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256)]\r\n            ],\r\n            description: [this.modelTranslation.description,\r\n                [Validators.maxLength(500)]],\r\n            namePath: [this.modelTranslation.namePath, [Validators.maxLength(256)]]\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslationModel(false)\r\n        );\r\n        return translationModel;\r\n    };\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            subjectType: null,\r\n            subjectId: null,\r\n            parentId: null,\r\n            isActive: true,\r\n            image: '',\r\n            icon: '',\r\n            url: '',\r\n            concurrencyStamp: '',\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: ''\r\n            });\r\n        });\r\n        this.listMenuItemSelect = [];\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"menu-list-container\\\">\\r\\n    <ul *ngFor=\\\"let item of listMenuItem\\\">\\r\\n        <li>\\r\\n            <div class=\\\"item\\\">\\r\\n                <i class=\\\"fa\\\" [class.fa-user]=\\\"item.subjectType === 0\\\" [class.fa-list]=\\\"item.subjectType === 1\\\"\\r\\n                   [class.fa-files-o]=\\\"item.subjectType === 2\\\"></i>\\r\\n                   {{item.text}}\\r\\n                <ul class=\\\"options\\\">\\r\\n                    <li>\\r\\n                        <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"item.isActive\\\"></i>\\r\\n                    </li>\\r\\n                    <li (click)=\\\"edit(item)\\\">\\r\\n                        <button class=\\\"btn blue btn-sm\\\">\\r\\n                            <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                        </button>\\r\\n                    </li>\\r\\n                    <li (confirm)=\\\"delete(item)\\\"\\r\\n                        [swal]=\\\"confirmDeleteMenuItem\\\">\\r\\n                        <button class=\\\"btn red btn-sm cm-mgr-5\\\">\\r\\n                            <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                        </button>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <app-menu-item [listMenuItem]=\\\"item.children\\\" (onEditItem)=\\\"onEditItem.emit($event)\\\"\\r\\n                           (onDelete)=\\\"onDelete.emit($event)\\\">\\r\\n            </app-menu-item>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\\r\\n<swal #confirmDeleteMenuItem\\r\\n    i18n=\\\"@@confirmDeleteMenu\\\"\\r\\n    i18n-title\\r\\n    i18n-text\\r\\n    title=\\\"Are you sure for delete this menu?\\\"\\r\\n    text=\\\"You can't recover this menu after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {MenuService} from '../menu.service';\r\nimport {TreeData} from '../../../../view-model/tree-data';\r\n\r\n@Component({\r\n    selector: 'app-menu-item',\r\n    templateUrl: './menu-item.component.html',\r\n    styleUrls: ['../menu.scss'],\r\n    providers: [MenuService]\r\n})\r\n\r\nexport class MenuItemComponent implements OnInit {\r\n    @Input() listMenuItem = [];\r\n    @Output() onEditItem = new EventEmitter();\r\n    @Output() onDelete = new EventEmitter();\r\n\r\n    constructor(private menuService: MenuService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    edit(item) {\r\n        this.onEditItem.emit(item);\r\n    }\r\n\r\n    delete(item) {\r\n       this.onDelete.emit(item);\r\n    }\r\n\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listMenuPageTitle\\\">Menu</span>\\r\\n    <small i18n=\\\"@@menuModuleTitle\\\">Menu management</small>\\r\\n</h1>\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@searchPlaceHolder\\\"\\r\\n               placeholder=\\\"Enter keyword for search please.\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <ghm-select\\r\\n                [data]=\\\"[{id: false, name: 'inActive'},{id: true, name: 'Active'}]\\\"\\r\\n                i18n-title=\\\"@@selectStatus\\\"\\r\\n                [title]=\\\"'-- Select status --'\\\"\\r\\n                [(ngModel)]=\\\"isActive\\\"\\r\\n                name=\\\"isActive\\\"\\r\\n                (itemSelected)=\\\"search(1)\\\"></ghm-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <button class=\\\"btn blue\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-spinner fa-spin\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn blue\\\" routerLink=\\\"/config/menus/add\\\" i18n=\\\"@@add\\\">\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<table class=\\\"table table-hover table-stripped\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <th class=\\\"center middle w50 visible-lg\\\" i18n=\\\"@@no\\\">No</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@name\\\">Name</th>\\r\\n        <th class=\\\"middle\\\" i18n=\\\"@@position\\\">Position</th>\\r\\n        <th class=\\\"middle visible-lg\\\" i18n=\\\"@@description\\\">Description</th>\\r\\n        <th class=\\\"center middle w50\\\" i18n=\\\"@@status\\\">Status</th>\\r\\n        <th class=\\\"center middle w50\\\" i18n=\\\"@@action\\\">Action</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of listItems$ | async; let i = index\\\">\\r\\n        <td class=\\\"center middle visible-lg\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            <a href=\\\"javascript://\\\" (click)=\\\"edit(item.id)\\\">{{item.name}}</a>\\r\\n        </td>\\r\\n        <td class=\\\"middle\\\">\\r\\n            <b> {item.position, select, 0 {Top} 1 {Right} 2 {Bottom} 3 {Left} 4 {Middle}} </b>\\r\\n        </td>\\r\\n        <td class=\\\"middle visible-lg\\\">{{ item.description }}</td>\\r\\n        <td class=\\\"center middle\\\">\\r\\n                  <span class=\\\"badge\\\" [class.badge-danger]=\\\"!item.isActive\\\"\\r\\n                        [class.badge-success]=\\\"item.isActive\\\">\\r\\n                    {item.isActive, select, 1 {Activated} 0 {InActive}}\\r\\n                </span>\\r\\n        </td>\\r\\n        <td class=\\\"middle center\\\">\\r\\n            <nh-dropdown>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\" matTooltip=\\\"Menu\\\">\\r\\n                    <mat-icon>more_horiz</mat-icon>\\r\\n                </button>\\r\\n                <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.edit\\\"\\r\\n                           (click)=\\\"edit(item.id)\\\" i18n=\\\"@@edit\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                            Edit\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"permission.delete\\\"\\r\\n                           [swal]=\\\"confirmDeleteMenu\\\"\\r\\n                           (confirm)=\\\"delete(item.id)\\\" i18n=\\\"@@delete\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                            Delete\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nh-dropdown>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\" i18n-pageName=\\\"@@menu\\\" [pageName]=\\\"'Menu'\\\"></ghm-paging>\\r\\n<swal\\r\\n        #confirmDeleteMenu\\r\\n        i18n=\\\"@@confirmDeleteMenu\\\"\\r\\n        i18n-title\\r\\n        i18n-text\\r\\n        title=\\\"Are you sure for delete this menu?\\\"\\r\\n        text=\\\"You can't recover this menu after delete.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        [showCancelButton]=\\\"true\\\"\\r\\n        [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n\"","import {AfterViewInit, ChangeDetectorRef, Component, HostListener, Inject, OnInit} from '@angular/core';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\nimport {HelperService} from '../../../shareds/services/helper.service';\r\nimport {APP_CONFIG, IAppConfig} from '../../../configs/app.config';\r\nimport {IPageId, PAGE_ID} from '../../../configs/page-id.config';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UtilService} from '../../../shareds/services/util.service';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {SearchResultViewModel} from '../../../shareds/view-models/search-result.viewmodel';\r\nimport {IResponseResult} from '../../../interfaces/iresponse-result';\r\nimport {FilterLink} from '../../../shareds/models/filter-link.model';\r\nimport {BaseListComponent} from '../../../base-list.component';\r\nimport {MenuSearchViewModel} from './viewmodel/menu-search.viewmodel';\r\nimport {MenuService} from './menu.service';\r\n\r\n@Component({\r\n    selector: 'app-menu',\r\n    templateUrl: './menu.component.html',\r\n    providers: [\r\n        Location, {provide: LocationStrategy, useClass: PathLocationStrategy},\r\n        HelperService, MenuService]\r\n})\r\n\r\nexport class MenuComponent extends BaseListComponent<MenuSearchViewModel> implements OnInit, AfterViewInit {\r\n    isActive: boolean;\r\n    height;\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                @Inject(PAGE_ID) public pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private utilService: UtilService,\r\n                private location: Location,\r\n                private cdr: ChangeDetectorRef,\r\n                private menuService: MenuService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.WEBSITE, this.pageId.MENU, 'Quản lý Menu', 'Danh sách menu');\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: SearchResultViewModel<MenuSearchViewModel> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            return data.items;\r\n        }));\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.isActive = params.isActive ? Boolean(params.isActive) : null;\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.height = window.innerHeight - 270;\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event) {\r\n        this.height = window.innerHeight - 270;\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderLink();\r\n        this.listItems$ = this.menuService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((result: SearchResultViewModel<MenuSearchViewModel>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                }));\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.isActive = null;\r\n        this.keyword = '';\r\n        this.search(1);\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.router.navigate([`/config/menus/edit/${id}`]);\r\n    }\r\n\r\n    detail(id: string) {\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.menuService.delete(id)\r\n            .subscribe((result: IResponseResult) => {\r\n                this.search(this.currentPage);\r\n            });\r\n    }\r\n\r\n    private renderLink() {\r\n        const path = '/config/menus';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","module.exports = \".menu-list-container {\\n  margin-top: 15px; }\\n  .menu-list-container ul {\\n    list-style: none; }\\n  .menu-list-container ul > li {\\n      display: block; }\\n  .menu-list-container ul > li div.item {\\n        background-color: rgba(52, 152, 219, 0.5);\\n        color: white;\\n        position: relative;\\n        width: 100%;\\n        padding: 10px 110px 10px 10px;\\n        margin-bottom: 10px; }\\n  .menu-list-container ul > li div.item ul.options {\\n          position: absolute;\\n          right: 0px;\\n          top: 6px;\\n          width: 111px;\\n          padding-left: 0;\\n          text-align: right; }\\n  .menu-list-container ul > li div.item ul.options li {\\n            display: inline-block;\\n            margin-left: 5px; }\\n\"","import {Inject} from '@angular/core';\r\nimport {APP_CONFIG, IAppConfig} from '../../../configs/app.config';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {SpinnerService} from '../../../core/spinner/spinner.service';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {ActivatedRouteSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {ActionResultViewModel} from '../../../shareds/view-models/action-result.viewmodel';\r\nimport {finalize, map} from 'rxjs/internal/operators';\r\nimport {MenuSearchViewModel} from './viewmodel/menu-search.viewmodel';\r\nimport {SearchResultViewModel} from '../../../shareds/view-models/search-result.viewmodel';\r\nimport {Menu} from './models/menu.model';\r\nimport {MenuDetailViewModel} from './viewmodel/menu-detail.viewmodel';\r\nimport {MenuItem} from './models/menu-item.model';\r\nimport {MenuItemDetailViewModel} from './viewmodel/menu-item-detail.viewmodel';\r\nimport {TreeData} from '../../../view-model/tree-data';\r\nimport {MenuItemSearchViewModel} from './viewmodel/menu-item-search.viewmodel';\r\n\r\nexport class MenuService {\r\n    url = 'menus/';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private toastr: ToastrService,\r\n                private spinnerService: SpinnerService,\r\n                private http: HttpClient) {\r\n        this.url = `${this.appConfig.WEBSITE_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.queryParams;\r\n        const keyword = queryParams.keyword;\r\n        const isActive = queryParams.isActive;\r\n        const page = queryParams.page;\r\n        const pageSize = queryParams.pageSize;\r\n        return this.search(keyword, isActive, page, pageSize);\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page: number = 1, pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<MenuSearchViewModel>> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null && isActive !== undefined ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }).pipe(map((result: SearchResultViewModel<MenuSearchViewModel>) => {\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<MenuSearchViewModel>>;\r\n    }\r\n\r\n    insert(menu: Menu): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`,\r\n            menu\r\n        ).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, menu: Menu): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${id}`, menu\r\n        ).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}${id}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<MenuDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}${id}`, {})\r\n            .pipe(finalize(() => this.spinnerService.hide()), map((result: ActionResultViewModel) => {\r\n                return result;\r\n            })) as Observable<ActionResultViewModel<MenuDetailViewModel>>;\r\n    }\r\n\r\n    insertMenuItem(menuId: string, menuItem: MenuItem): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${menuId}/items`, {\r\n            subjectId: menuItem.subjectId,\r\n            subjectType: menuItem.subjectType,\r\n            icon: menuItem.icon,\r\n            image: menuItem.image,\r\n            order: menuItem.order,\r\n            url: menuItem.url,\r\n            isActive: menuItem.isActive,\r\n            parentId: menuItem.parentId,\r\n            concurrencyStamp: menuItem.concurrencyStamp,\r\n            menuItemTranslations: menuItem.modelTranslations,\r\n            listMenuItemSelected: menuItem.listMenuItemSelected\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateMenuItem(menuId: string, menuItemId: number, menuItem: MenuItem): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${menuId}/items/${menuItemId}`, {\r\n            subjectId: menuItem.subjectId,\r\n            subjectType: menuItem.subjectType,\r\n            icon: menuItem.icon,\r\n            image: menuItem.image,\r\n            url: menuItem.url,\r\n            order: menuItem.order,\r\n            isActive: menuItem.isActive,\r\n            parentId: menuItem.parentId,\r\n            concurrencyStamp: menuItem.concurrencyStamp,\r\n            menuItemTranslations: menuItem.modelTranslations,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetailMenuItem(menuId: string, menuItemId: number): Observable<ActionResultViewModel<MenuItemDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}${menuId}/items/${menuItemId}`, {})\r\n            .pipe(finalize(() => this.spinnerService.hide()), map((result: ActionResultViewModel<MenuItemDetailViewModel>) => {\r\n                return result;\r\n            })) as Observable<ActionResultViewModel<MenuItemDetailViewModel>>;\r\n\r\n    }\r\n\r\n    deleteMenuItem(menuId: string, menuItemId: number): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}${menuId}/items/${menuItemId}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getTreeMenuItem(menuId: string): Observable<TreeData[]> {\r\n        return this.http.get(`${this.url}${menuId}/items/trees`, {})\r\n            .pipe(map((result: TreeData[]) => {\r\n                return result;\r\n            })) as Observable<TreeData[]>;\r\n    }\r\n\r\n    searchMenuItem(keyword: string, menuId: string, page: number = 1, pageSize: number = this.appConfig.PAGE_SIZE): Observable<SearchResultViewModel<MenuItemSearchViewModel>> {\r\n        return this.http.get(`${this.url}${menuId}/items`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<SearchResultViewModel<MenuItemSearchViewModel>>;\r\n    }\r\n}\r\n","export class MenuItemTranslation {\r\n    menuItemId: number;\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n    namePath: string;\r\n}\r\n","import {MenuItemTranslation} from './menu-item-translation.model';\r\nimport {MenuItemSelectViewModel} from '../viewmodel/menu-item-select.viewmodel';\r\n\r\nexport const SubjectType = {\r\n    custom: 0,\r\n    news: 1,\r\n    product: 2,\r\n    newsCategory: 3,\r\n    productCategory: 4\r\n};\r\n\r\nexport class MenuItem {\r\n    subjectId: string;\r\n    subjectType: number;\r\n    icon: string;\r\n    image: string;\r\n    url: string;\r\n    isActive: boolean;\r\n    parentId?: number;\r\n    order: number;\r\n    concurrencyStamp: string;\r\n    modelTranslations: MenuItemTranslation[];\r\n    listMenuItemSelected: MenuItemSelectViewModel[];\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n        this.order = 0;\r\n    }\r\n}\r\n","\r\nimport {Positions} from '../../../../shareds/constants/position.const';\r\n\r\nexport class Menu {\r\n    name: string;\r\n    description: string;\r\n    icon: string;\r\n    effectType: number;\r\n    isActive: boolean;\r\n    position: number;\r\n    concurrencyStamp: string;\r\n\r\n    constructor() {\r\n        this.isActive = true;\r\n        this.position = Positions.top;\r\n    }\r\n}\r\n","export class MenuItemSelectViewModel {\r\n    id: any;\r\n    name: string;\r\n    order: number;\r\n    icon: string;\r\n    image: string;\r\n\r\n    constructor(id?: any, name?: string, order?: number, icon?: string, image?: string) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.order = order;\r\n        this.icon = icon;\r\n        this.image = image;\r\n    }\r\n}\r\n","export class PageTranslation {\r\n    name: string;\r\n    languageId: string;\r\n    description: string;\r\n}\r\n","import { PageTranslation } from './page-translation.model';\r\n\r\nexport class Page {\r\n    id: number;\r\n    isActive: boolean;\r\n    url: string;\r\n    icon: string;\r\n    bgColor: string;\r\n    order: number;\r\n    parentId?: number;\r\n    pageTranslations: PageTranslation[];\r\n\r\n    constructor(id?: number, isActive?: boolean, url?: string, icon?: string, bgColor?: string, order?: number, parentId?: number) {\r\n        this.id = id;\r\n        this.isActive = true;\r\n        this.url = url ? url : '';\r\n        this.icon = icon ? icon : '';\r\n        this.bgColor = bgColor;\r\n        this.order = 0;\r\n        this.parentId = parentId;\r\n    }\r\n}\r\n","export class TenantPage {\r\n    tenantId: string;\r\n    pageId: number;\r\n}\r\n","module.exports = \"<nh-modal #pageFormModal size=\\\"md\\\"\\r\\n          (show)=\\\"onModalShown()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n            <i class=\\\"fa fa-file-text-o\\\"></i>\\r\\n            {{isUpdate ? \\\"Cập nhật trang\\\" : \\\"Thêm mới trang\\\"}}\\r\\n        </h4>\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"horizontal-form\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content class=\\\"form-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <div class=\\\"tabbable-custom\\\">\\r\\n                        <ul class=\\\"nav nav-tabs \\\" *ngIf=\\\"languages.length > 0\\\">\\r\\n                            <li [class.active]=\\\"item.id === currentLanguage\\\"\\r\\n                                *ngFor=\\\"let item of languages; let i = index\\\">\\r\\n                                <a href=\\\"javascript://\\\" (click)=\\\"currentLanguage = item.id\\\">\\r\\n                                    {{ item.name }}\\r\\n                                </a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                        <div class=\\\"tab-content\\\">\\r\\n                            <div class=\\\"tab-pane active\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-6\\\">\\r\\n                                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.id\\\">\\r\\n                                            <label ghmLabel=\\\"Mã trang\\\" class=\\\"control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                                            <input type=\\\"text\\\" id=\\\"pageId\\\" class=\\\"form-control\\\"\\r\\n                                                   autocomplete=\\\"off\\\"\\r\\n                                                   placeholder=\\\"Nhập mã trang\\\"\\r\\n                                                   formControlName=\\\"id\\\"\\r\\n                                                   [attr.disabled]=\\\"isUpdate ? '' : null\\\"/>\\r\\n                                            <div class=\\\"help-block\\\" *ngIf=\\\"formErrors.id\\\">{{formErrors.id}}</div>\\r\\n                                        </div>\\r\\n                                        <span formArrayName=\\\"modelTranslations\\\">\\r\\n                                            <div class=\\\"form-group\\\"\\r\\n                                                 *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                                 [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                                 [formGroupName]=\\\"i\\\"\\r\\n                                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                                                <label ghmLabel=\\\"Tên trang\\\"\\r\\n                                                       class=\\\"control-label\\\"\\r\\n                                                       [required]=\\\"true\\\"\\r\\n                                                ></label>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập tên trang\\\"\\r\\n                                                       formControlName=\\\"name\\\">\\r\\n                                            </div>\\r\\n                                        </span>\\r\\n                                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.url\\\">\\r\\n                                            <label ghmLabel=\\\"Đường dẫn\\\" class=\\\"control-label\\\"></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập đường dẫn\\\"\\r\\n                                                   formControlName=\\\"url\\\">\\r\\n                                            <div class=\\\"help-block\\\" *ngIf=\\\"formErrors.url\\\">{{formErrors.url}}</div>\\r\\n                                        </div>\\r\\n                                        <span formArrayName=\\\"modelTranslations\\\">\\r\\n                                            <div class=\\\"form-group\\\"\\r\\n                                                 *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                                                 [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                                                 [formGroupName]=\\\"i\\\"\\r\\n                                                 [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                                                <label ghmLabel=\\\"Mô tả\\\"\\r\\n                                                       class=\\\"control-label\\\"\\r\\n                                                ></label>\\r\\n                                                <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                                          placeholder=\\\"Nhập nội dung mô tả\\\"\\r\\n                                                          formControlName=\\\"description\\\"\\r\\n                                                ></textarea>\\r\\n                                            </div>\\r\\n                                        </span>\\r\\n                                    </div><!-- END: left col -->\\r\\n                                    <div class=\\\"col-sm-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label ghmLabel=\\\"Trang cha\\\" class=\\\"control-label\\\"></label>\\r\\n                                            <nh-dropdown-tree\\r\\n                                                [title]=\\\"'-- Chọn trang cha --'\\\"\\r\\n                                                [data]=\\\"pageTree\\\"\\r\\n                                                [width]=\\\"350\\\"\\r\\n                                                formControlName=\\\"parentId\\\"\\r\\n                                            ></nh-dropdown-tree>\\r\\n                                            <div class=\\\"help-block\\\"></div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.icon\\\">\\r\\n                                            <label ghmLabel=\\\"Icon\\\" class=\\\"control-label\\\"></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập icon\\\"\\r\\n                                                   formControlName=\\\"icon\\\">\\r\\n                                            <div class=\\\"help-block\\\" *ngIf=\\\"formErrors.icon\\\">{{formErrors.icon}}</div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.bgColor\\\">\\r\\n                                            <label ghmLabel=\\\"Màu nền\\\" class=\\\"control-label\\\"></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập màu nền\\\"\\r\\n                                                   formControlName=\\\"bgColor\\\">\\r\\n                                            <div class=\\\"help-block\\\" *ngIf=\\\"formErrors.bgColor\\\">{{formErrors.bgColor}}\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label ghmLabel=\\\"Thứ tự\\\" class=\\\"control-label\\\"></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nhập thứ tự\\\"\\r\\n                                                   formControlName=\\\"order\\\">\\r\\n                                            <div class=\\\"help-block\\\"></div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <mat-slide-toggle color=\\\"primary\\\" formControlName=\\\"isActive\\\">Kích hoạt\\r\\n                                            </mat-slide-toggle>\\r\\n                                        </div>\\r\\n                                    </div><!-- END: right col -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer class=\\\"text-right\\\">\\r\\n            <mat-checkbox\\r\\n                class=\\\"cm-mgr-5\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                name=\\\"isCreateAnother\\\"\\r\\n                *ngIf=\\\"!isUpdate\\\"\\r\\n                [(checked)]=\\\"isCreateAnother\\\"\\r\\n                (change)=\\\"isCreateAnother = !isCreateAnother\\\"> Tiếp tục tạo\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary\\\" [loading]=\\\"isSaving\\\">\\r\\n                Lưu lại\\r\\n            </ghm-button>\\r\\n            <ghm-button type=\\\"button\\\" icon=\\\"fa fa-times\\\" classes=\\\"btn btn-light cm-mgl-5\\\" [loading]=\\\"isSaving\\\"\\r\\n                        nh-dismiss=\\\"true\\\">\\r\\n                Hủy bỏ\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import { Component, Input, OnInit, Output, ViewChild, EventEmitter } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Page } from './models/page.model';\r\nimport { PageService } from './page.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { BaseFormComponent } from '../../../base-form.component';\r\nimport { NhModalComponent } from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { LanguageService } from '../../../shareds/services/language.service';\r\nimport { PageTranslation } from './models/page-translation.model';\r\nimport { LanguageViewModel } from '../../../shareds/models/language.viewmodel';\r\nimport { TreeData } from '../../../view-model/tree-data';\r\nimport * as _ from 'lodash';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { IActionResultResponse } from '../../../interfaces/iaction-result-response.result';\r\nimport { PageDetailViewModel } from './models/page-detail.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-page-form',\r\n    templateUrl: './page-form.component.html',\r\n    providers: [LanguageService]\r\n})\r\n\r\nexport class PageFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('pageFormModal') pageFormModal: NhModalComponent;\r\n    @Input() page = new Page();\r\n    @Output() onPageFormClose = new EventEmitter();\r\n    pageTree: TreeData[] = [];\r\n    model: FormGroup;\r\n    pageTranslation = new PageTranslation();\r\n    pageTranslationFormArray: FormArray;\r\n    translationFormErrors = {};\r\n    translationValidationMessage = [];\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private pageService: PageService) {\r\n        super();\r\n    }\r\n\r\n    get pageTranslations(): FormArray {\r\n        return this.model.get('pageTranslations') as FormArray;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n        this.getPageTree();\r\n    }\r\n\r\n    add() {\r\n        this.pageFormModal.open();\r\n        this.isUpdate = false;\r\n    }\r\n\r\n    edit(page: Page) {\r\n        this.pageFormModal.open();\r\n        this.isUpdate = true;\r\n        this.pageService.getLanguageDetail(page.id)\r\n            .subscribe((result: IActionResultResponse<PageDetailViewModel>) => {\r\n                if (result.data) {\r\n                    const pageData = result.data;\r\n                    this.model.patchValue({\r\n                        id: pageData.id,\r\n                        parentId: pageData.parentId,\r\n                        url: pageData.url,\r\n                        icon: pageData.icon,\r\n                        bgColor: pageData.bgColor,\r\n                        order: pageData.order\r\n                    });\r\n                    if (pageData.pageTranslation && pageData.pageTranslation.length > 0) {\r\n                        this.languages.forEach((language: LanguageViewModel, index: number) => {\r\n                            const pageTranslationFormGroup = this.modelTranslations.at(index);\r\n                            if (pageTranslationFormGroup) {\r\n                                const pageTranslationInfo = _.find(pageData.pageTranslation, (pageTranslation: PageTranslation) => {\r\n                                    return pageTranslationFormGroup.value.languageId === pageTranslation.languageId;\r\n                                });\r\n                                if (pageTranslationInfo) {\r\n                                    pageTranslationFormGroup.patchValue(pageTranslationInfo);\r\n                                } else {\r\n                                    pageTranslationFormGroup.patchValue({name: '', description: ''});\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    onModalShown() {\r\n        this.utilService.focusElement('pageId');\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.resetModel();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.page = this.model.value;\r\n            this.page.pageTranslations = this.modelTranslations.getRawValue();\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.pageService\r\n                    .update(this.page)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.isModified = true;\r\n                        this.pageFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.pageService\r\n                    .insert(this.page)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.utilService.focusElement('pageId');\r\n                        this.isModified = true;\r\n                        this.getPageTree();\r\n                        if (this.isCreateAnother) {\r\n                            this.resetModel();\r\n                        } else {\r\n                            this.pageFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    // private renderLanguageData() {\r\n    //     this.languages = this.appService.languages;\r\n    //     this.languageData = this.languages.map((language: LanguageSearchViewModel) => {\r\n    //         if (language.isDefault) {\r\n    //             this.currentLanguage = language.languageId;\r\n    //         }\r\n    //         return {id: language.languageId, name: language.name, isSelected: language.isDefault};\r\n    //     });\r\n    //     this.renderPageTranslation();\r\n    // }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private resetModel() {\r\n        this.model.patchValue({\r\n            id: null,\r\n            name: '',\r\n            isActive: true,\r\n            url: '',\r\n            icon: '',\r\n            bgColor: '',\r\n            order: 0\r\n        });\r\n        this.modelTranslations.controls.forEach((pageTranslation: FormControl) => {\r\n            pageTranslation.patchValue({\r\n                name: '',\r\n                description: ''\r\n            });\r\n        });\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['id', 'icon', 'bgColor', 'url']);\r\n        this.validationMessages = {\r\n            id: {\r\n                required: 'Mã trang không được để trống',\r\n            },\r\n            icon: {\r\n                maxlength: 'Icon không được phép vượt quá 50 ký tự.',\r\n            },\r\n            bgColor: {\r\n                maxlength: 'Mã màu nền không được phép lớn hơn 10 ký tự.'\r\n            },\r\n            url: {\r\n                maxlength: 'Url không được phép vượt quá 500 ký tự.'\r\n            }\r\n        };\r\n\r\n        this.model = this.fb.group({\r\n            'id': [this.page.id, [\r\n                Validators.required\r\n            ]],\r\n            'isActive': [this.page.isActive],\r\n            'url': [this.page.url, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            'icon': [this.page.icon, [\r\n                Validators.maxLength(50)\r\n            ]],\r\n            'order': [this.page.order],\r\n            'parentId': [this.page.parentId],\r\n            'bgColor': [this.page.bgColor, [\r\n                Validators.maxLength(10)\r\n            ]],\r\n            'modelTranslations': this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    // private buildFormLanguage(language: string): FormGroup {\r\n    //     this.translationFormErrors[language] = this.utilService.renderFormError(['name', 'description']);\r\n    //     this.translationValidationMessage[language] = {\r\n    //         name: {\r\n    //             required: 'Vui lòng nhập tên trang',\r\n    //             maxLength: 'Tên trang không được phép vượt quá 256 ký tự.'\r\n    //         },\r\n    //         description: {\r\n    //             maxLength: 'Mô tả không được phép vượt quá 500 ký tự.'\r\n    //         }\r\n    //     };\r\n    //\r\n    // }\r\n\r\n    private getPageTree() {\r\n        this.pageService.getPageTree()\r\n            .subscribe((result: TreeData[]) => {\r\n                this.pageTree = result;\r\n            });\r\n    }\r\n\r\n    private renderPageTranslation() {\r\n        this.pageTranslationFormArray = this.model.get('pageTranslations') as FormArray;\r\n        this.languages.forEach((language: LanguageViewModel) => {\r\n            this.pageTranslationFormArray.push(this.buildFormLanguage(language.id));\r\n        });\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(['name', 'description']);\r\n        this.translationValidationMessage[language] = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['maxlength']},\r\n        ]);\r\n        const pageTranslationModel = this.fb.group({\r\n            name: [this.pageTranslation.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            languageId: [language],\r\n            description: [this.pageTranslation.description, [\r\n                Validators.maxLength(500)\r\n            ]]\r\n        });\r\n        pageTranslationModel.valueChanges.subscribe((data: any) => this.utilService.onValueChanged(pageTranslationModel,\r\n            this.translationFormErrors[language],\r\n            this.translationValidationMessage[language]));\r\n        return pageTranslationModel;\r\n    };\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listPageTitle\\\">List pages</span>\\r\\n    <small i18n=\\\"@@ConfigModuleTitle\\\">Config module</small>\\r\\n</h1>\\r\\n\\r\\n<div class=\\\"row cm-mgb-10\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input class=\\\"form-control cm-mgr-5\\\" placeholder=\\\"Nhập từ khoá tìm kiếm\\\"\\r\\n                       name=\\\"keyword\\\"\\r\\n                       [(ngModel)]=\\\"keyword\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <nh-select\\r\\n                        [class]=\\\"'cm-mgr-5'\\\"\\r\\n                        [data]=\\\"[{id: true, name: 'Kích hoạt'}, {id: false, name: 'Chưa kích hoạt'}]\\\"\\r\\n                        [title]=\\\"'-- Tất cả --'\\\"\\r\\n                        [(value)]=\\\"isActive\\\"\\r\\n                        (onSelectItem)=\\\"search()\\\"></nh-select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <ghm-button classes=\\\"btn blue\\\" icon=\\\"fa fa-search\\\" [loading]=\\\"isSearching\\\"></ghm-button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group pull-right\\\" *ngIf=\\\"permission.add\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn blue\\\" (click)=\\\"add()\\\" *ngIf=\\\"permission.add\\\"\\r\\n                        i18n=\\\"@@add\\\">\\r\\n                    Add\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <table class=\\\"table table-striped table-hover table-full-width dataTable no-footer\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center w50\\\">STT</th>\\r\\n                <th>Tên trang</th>\\r\\n                <th class=\\\"w100\\\">Icon</th>\\r\\n                <th>Đường dẫn</th>\\r\\n                <th class=\\\"w100\\\">Public</th>\\r\\n                <th class=\\\"w100\\\">Kích hoạt</th>\\r\\n                <th class=\\\"text-right w150\\\" *ngIf=\\\"permission.edit || permission.delete\\\">Sửa, Xóa</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let page of listItems$ | async; let i = index\\\">\\r\\n                <td class=\\\"center middle\\\">{{(currentPage - 1) * pageSize + i + 1}}</td>\\r\\n                <td class=\\\"middle cursor-pointer\\\" (click)=\\\"edit(page)\\\">\\r\\n                    <a href=\\\"javascritp://\\\">\\r\\n                        <span [innerHtml]=\\\"page.namePrefix\\\"></span>\\r\\n                        {{page.name}}\\r\\n                    </a>\\r\\n                </td>\\r\\n                <td class=\\\"w100 center middle\\\">\\r\\n                    <i [class]=\\\"page.icon\\\"></i>\\r\\n                </td>\\r\\n                <td>\\r\\n                    {{page.url}}\\r\\n                </td>\\r\\n                <td class=\\\"center middle\\\">\\r\\n                    <!--<i *ngIf=\\\"page.isPublic\\\"-->\\r\\n                    <!--class=\\\"fa fa-check color-green size-16\\\"></i>-->\\r\\n                </td>\\r\\n                <td class=\\\"center middle\\\">\\r\\n                    <span class=\\\"badge\\\"\\r\\n                          [class.badge-success]=\\\"page.isActive\\\"\\r\\n                          [class.badge-danger]=\\\"!page.isActive\\\">\\r\\n                        {{ page.isActive ? 'Đã kích hoạt' : 'Chưa kích hoạt' }}\\r\\n                    </span>\\r\\n                </td>\\r\\n                <td class=\\\"text-right middle w100\\\" *ngIf=\\\"permission.edit || permission.delete\\\">\\r\\n                    <ghm-button type=\\\"button\\\" classes=\\\"btn blue btn-outline btn-sm\\\" icon=\\\"fa fa-edit\\\"\\r\\n                                matTooltip=\\\"Update\\\"\\r\\n                                *ngIf=\\\"permission.edit\\\"\\r\\n                                (click)=\\\"edit(page)\\\">\\r\\n                    </ghm-button>\\r\\n                    <ghm-button icon=\\\"fa fa-trash-o\\\" classes=\\\"btn red btn-outline btn-sm\\\"\\r\\n                                matTooltip=\\\"Delete\\\"\\r\\n                                *ngIf=\\\"permission.delete\\\"\\r\\n                                [swal]=\\\"{ title: 'Bạn có chắc chắn muốn xóa trang: ' + page.name + ' không?' }\\\"\\r\\n                                (confirm)=\\\"delete(page.id)\\\"></ghm-button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n<app-page-form [page]=\\\"page\\\" (saveSuccessful)=\\\"search()\\\"></app-page-form>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Location } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilService } from '../../../shareds/services/util.service';\r\nimport { Page } from './models/page.model';\r\nimport { PageService } from './page.service';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { PageFormComponent } from './page-form.component';\r\nimport { FilterLink } from '../../../shareds/models/filter-link.model';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { map } from 'rxjs/operators';\r\nimport { PageSearchViewModel } from './models/page-search.viewmodel';\r\nimport { finalize } from 'rxjs/internal/operators';\r\n\r\n@Component({\r\n    selector: 'app-page-component',\r\n    templateUrl: './page.component.html',\r\n    preserveWhitespaces: false\r\n})\r\n\r\nexport class PageComponent extends BaseListComponent<PageSearchViewModel> implements OnInit {\r\n    @ViewChild(PageFormComponent) pageFormComponent: PageFormComponent;\r\n    isActive?: boolean;\r\n    clientId?: string;\r\n    page = new Page();\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                private title: Title,\r\n                private router: Router,\r\n                private route: ActivatedRoute,\r\n                private location: Location,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private spinnerService: SpinnerService,\r\n                private pageService: PageService) {\r\n        super();\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: PageSearchViewModel[] }) => {\r\n            return result.data;\r\n        }));\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe((params: any) => {\r\n            this.keyword = params.keyword;\r\n            this.isActive = params.isActive;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_PAGE, 'Cấu hình', 'Cấu hình trang');\r\n    }\r\n\r\n    search() {\r\n        this.renderFilterLink();\r\n        this.isSearching = true;\r\n        this.listItems$ = this.pageService.search(this.keyword, this.isActive)\r\n            .pipe(finalize(() => this.isSearching = false));\r\n    }\r\n\r\n    delete(id: number) {\r\n        this.subscribers.deletePage = this.pageService.delete(id)\r\n            .subscribe((result: IResponseResult) => {\r\n                this.toastr.success(result.message);\r\n                this.search();\r\n            });\r\n    }\r\n\r\n    changeActiveStatus(page: Page) {\r\n        page.isActive = !page.isActive;\r\n    }\r\n\r\n    add() {\r\n        this.pageFormComponent.add();\r\n    }\r\n\r\n    edit(page: Page) {\r\n        this.pageFormComponent.edit(page);\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = '/config/pages';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('clientId', this.clientId),\r\n            new FilterLink('isActive', this.isActive),\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","import { NhUserPicker } from '../../../../shareds/components/nh-user-picker/nh-user-picker.model';\r\n\r\nexport class Role {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    type: number;\r\n    concurrencyStamp: string;\r\n    rolesPagesViewModels?: RolesPagesViewModels[];\r\n    users: NhUserPicker[];\r\n}\r\n\r\nexport interface RolesPagesViewModels {\r\n    pageId: number;\r\n    pageName: string;\r\n    idPath: string;\r\n    permissions: number;\r\n}\r\n","module.exports = \"<nh-modal #roleDetailModal size=\\\"md\\\">\\r\\n    <nh-modal-header>\\r\\n        <i class=\\\"fa fa-user-secret\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        <ng-container i18n=\\\"@@roleDetailModalTitle\\\">Detail Role: \\\"<span class=\\\"bold\\\">{{ role?.name }}</span>\\\"\\r\\n        </ng-container>\\r\\n    </nh-modal-header>\\r\\n\\r\\n    <nh-modal-content>\\r\\n        <form action=\\\"\\\" class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@roleName\\\" ghmLabel=\\\"Role name\\\" class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <div class=\\\"form-control\\\">{{ role?.name }}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\" class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <div class=\\\"form-control height-auto\\\">{{ role?.description }}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@No\\\">No</th>\\r\\n                                <th class=\\\"\\\" i18n=\\\"@@pageName\\\">Page name</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@view\\\">View</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@insert\\\">Add</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@update\\\">Edit</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@delete\\\">Delete</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@export\\\">Export</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@print\\\">Print</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@approve\\\">Approve</th>\\r\\n                                <th class=\\\"center\\\" i18n=\\\"@@report\\\">Report</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr *ngFor=\\\"let page of pages$ | async; let i = index\\\">\\r\\n                                <td class=\\\"center middle w50\\\">{{ i + 1 }}</td>\\r\\n                                <td class=\\\"middle\\\">{{ page.pageName }}</td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.view\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.add\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.edit\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.delete\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.export\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.print\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.approve\\\"></i>\\r\\n                                </td>\\r\\n                                <td class=\\\"center middle w50\\\">\\r\\n                                    <i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"page.report\\\"></i>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                        <ghm-button type=\\\"button\\\" classes=\\\"btn btn-default\\\"\\r\\n                                    nh-dismiss=\\\"true\\\"\\r\\n                                    i18n=\\\"@@close\\\">\\r\\n                            Close\\r\\n                        </ghm-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form><!-- END form role info -->\\r\\n    </nh-modal-content>\\r\\n</nh-modal>\\r\\n\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Role } from '../models/role.model';\r\nimport { NhModalComponent } from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { RoleService } from '../role.service';\r\nimport { Observable } from 'rxjs';\r\nimport { RolePageViewModel } from '../models/role-page.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-role-detail',\r\n    templateUrl: './role-detail.component.html'\r\n})\r\n\r\nexport class RoleDetailComponent implements OnInit {\r\n    @ViewChild(NhModalComponent) detailModal: NhModalComponent;\r\n    @Input() role: Role = null;\r\n    pages$: Observable<RolePageViewModel[]>;\r\n\r\n    constructor(private roleService: RoleService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    show(role: Role) {\r\n        this.role = role;\r\n        this.pages$ = this.roleService.getRolesPages(this.role.id).pipe();\r\n        this.detailModal.open();\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@roleFormPageTitle\\\">{isUpdate, select, 0 {Add new role} 1 {Update role}}</span>\\r\\n    <small i18n=\\\"@@configModuleTitle\\\">Configs</small>\\r\\n</h1>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n            <div class=\\\"form-body\\\">\\r\\n                <div class=\\\"portlet light bordered\\\">\\r\\n                    <div class=\\\"portlet-title\\\">\\r\\n                        <div class=\\\"caption font-red-sunglo\\\">\\r\\n                            <i class=\\\"icon-share font-red-sunglo\\\"></i>\\r\\n                            <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@roleInfo\\\"> Role info </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"portlet-body\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                <ghm-alert [type]=\\\"message?.type\\\" *ngIf=\\\"message?.content\\\"\\r\\n                                           i18n=\\\"@@roleFormMessage\\\">\\r\\n                                    {\\r\\n                                    message?.content, select,\\r\\n                                    inValid {Please select at least permission for each page.}\\r\\n                                    selectOne {Please select at least one page.}\\r\\n                                    }\\r\\n                                </ghm-alert>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.name\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@roleName\\\" ghmLabel=\\\"Role name\\\" class=\\\"col-sm-4 control-label\\\"\\r\\n                                   [required]=\\\"true\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       i18n-placeholder=\\\"@@enterRoleNamePlaceholder\\\"\\r\\n                                       placeholder=\\\"Enter role name.\\\" id=\\\"name\\\"\\r\\n                                       formControlName=\\\"name\\\">\\r\\n                                <span class=\\\"help-block\\\"\\r\\n                                      i18n=\\\"@@roleNameValidationMessage\\\" *ngIf=\\\"formErrors.name\\\">\\r\\n                                {formErrors.name, sroleelect, required {Role name can not be null} maxlength {Role name not allowed over 256 characters} other {}}\\r\\n                        </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.description\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\" class=\\\"col-sm-4 control-label\\\"\\r\\n                                   [required]=\\\"true\\\"></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\r\\n                                              i18n-placeholder=\\\"@@enterDescriptionPlaceHolder\\\"\\r\\n                                              placeholder=\\\"Enter description.\\\"\\r\\n                                              formControlName=\\\"description\\\"></textarea>\\r\\n                                <span class=\\\"help-block\\\" i18n=\\\"@@roleDescriptionValidationMessage\\\"\\r\\n                                      *ngIf=\\\"formErrors.description\\\">\\r\\n                            {formErrors.description, select, maxlength {Role name not allowed over 256 characters}}\\r\\n                        </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--<div class=\\\"form-group\\\">-->\\r\\n                <!--<label i18n-ghmLabel=\\\"@@pages\\\" ghmLabel=\\\"Pages\\\" class=\\\"col-sm-4 control-label\\\"></label>-->\\r\\n                <!--<div class=\\\"col-sm-8\\\">-->\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-primary cm-mgb-10\\\" i18n=\\\"@@selectPage\\\"-->\\r\\n                <!--(click)=\\\"showSelectPage()\\\">Select page-->\\r\\n                <!--</button>-->\\r\\n                <!--</div>-->\\r\\n                <!--</div>-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"portlet light bordered\\\">\\r\\n                            <div class=\\\"portlet-title\\\">\\r\\n                                <div class=\\\"caption font-red-sunglo\\\">\\r\\n                                    <i class=\\\"icon-share font-red-sunglo\\\"></i>\\r\\n                                    <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@pages\\\"> Pages</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"actions\\\">\\r\\n                                    <a href=\\\"javascript:;\\\" class=\\\"btn btn-circle blue btn-outline\\\" i18n=\\\"@@add\\\"\\r\\n                                       (click)=\\\"showSelectPage()\\\">\\r\\n                                        Add\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"portlet-body\\\">\\r\\n                                <div class=\\\"table-responsive\\\">\\r\\n                                    <table class=\\\"table table-striped\\\">\\r\\n                                        <thead>\\r\\n                                        <tr>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@No\\\">No</th>\\r\\n                                            <th class=\\\"\\\" i18n=\\\"@@pageName\\\">Page name</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@full\\\">Full</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@view\\\">View</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@insert\\\">Add</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@update\\\">Edit</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@delete\\\">Delete</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@export\\\">Export</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@print\\\">Print</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@approve\\\">Approve</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@report\\\">Report</th>\\r\\n                                            <th class=\\\"center\\\" i18n=\\\"@@actions\\\">Actions</th>\\r\\n                                        </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                        <tr *ngFor=\\\"let page of selectedPages; let i = index\\\">\\r\\n                                            <td class=\\\"center middle w50\\\">{{ i + 1 }}</td>\\r\\n                                            <td class=\\\"middle\\\">\\r\\n                                                <span [innerHTML]=\\\"page.pageName\\\"></span>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <mat-checkbox [(checked)]=\\\"page.full\\\"\\r\\n                                                              (change)=\\\"changeFullPermission(page)\\\"\\r\\n                                                              color=\\\"primary\\\"></mat-checkbox>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <mat-checkbox [(checked)]=\\\"page.view\\\"\\r\\n                                                              (change)=\\\"changePermission(page, permissionConst.view)\\\"\\r\\n                                                              color=\\\"primary\\\"></mat-checkbox>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <mat-checkbox [(checked)]=\\\"page.add\\\"\\r\\n                                                              (change)=\\\"changePermission(page, permissionConst.add)\\\"\\r\\n                                                              color=\\\"primary\\\"></mat-checkbox>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <mat-checkbox [(checked)]=\\\"page.edit\\\"\\r\\n                                                              (change)=\\\"changePermission(page, permissionConst.edit)\\\"\\r\\n                                                              color=\\\"primary\\\"></mat-checkbox>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <mat-checkbox [(checked)]=\\\"page.delete\\\"\\r\\n                                                              (change)=\\\"changePermission(page, permissionConst.delete)\\\"\\r\\n                                                              color=\\\"primary\\\"></mat-checkbox>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <mat-checkbox [(checked)]=\\\"page.export\\\"\\r\\n                                                              (change)=\\\"changePermission(page, permissionConst.export)\\\"\\r\\n                                                              color=\\\"primary\\\"></mat-checkbox>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <mat-checkbox [(checked)]=\\\"page.print\\\"\\r\\n                                                              (change)=\\\"changePermission(page, permissionConst.print)\\\"\\r\\n                                                              color=\\\"primary\\\"></mat-checkbox>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <mat-checkbox [(checked)]=\\\"page.approve\\\"\\r\\n                                                              (change)=\\\"changePermission(page, permissionConst.approve)\\\"\\r\\n                                                              color=\\\"primary\\\"></mat-checkbox>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <mat-checkbox [(checked)]=\\\"page.report\\\"\\r\\n                                                              (change)=\\\"changePermission(page, permissionConst.report)\\\"\\r\\n                                                              color=\\\"primary\\\"></mat-checkbox>\\r\\n                                            </td>\\r\\n                                            <td class=\\\"center middle w50\\\">\\r\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\"\\r\\n                                                        (click)=\\\"deletePage(page)\\\">\\r\\n                                                    <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div><!-- END: list pages -->\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"portlet light bordered\\\">\\r\\n                            <div class=\\\"portlet-title\\\">\\r\\n                                <div class=\\\"caption font-red-sunglo\\\">\\r\\n                                    <i class=\\\"icon-share font-red-sunglo\\\"></i>\\r\\n                                    <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@users\\\"> Users</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"actions\\\">\\r\\n                                    <a href=\\\"javascript:;\\\" class=\\\"btn btn-circle blue btn-outline\\\" i18n=\\\"@@add\\\"\\r\\n                                       (click)=\\\"showUsers()\\\">\\r\\n                                        Add\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"portlet-body\\\">\\r\\n                                <ul class=\\\"wrapper-list-users cm-pdl-0\\\">\\r\\n                                    <li class=\\\"user-item\\\" *ngFor=\\\"let user of listSelectedUsers\\\">\\r\\n                                        <div class=\\\"avatar-wrapper\\\">\\r\\n                                            <img class=\\\"avatar-sm rounded-avatar\\\"\\r\\n                                                 ghmImage\\r\\n                                                 [src]=\\\"user.avatar\\\"\\r\\n                                                 alt=\\\"{{ user.fullName }}\\\">\\r\\n                                        </div><!-- END: .avatar-wrapper -->\\r\\n                                        <div class=\\\"user-info\\\">\\r\\n                                            <svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" focusable=\\\"false\\\"\\r\\n                                                 role=\\\"presentation\\\"\\r\\n                                                 (click)=\\\"removeUser(user.id)\\\">\\r\\n                                                <path\\r\\n                                                        d=\\\"M12 10.586L6.707 5.293a1 1 0 0 0-1.414 1.414L10.586 12l-5.293 5.293a1 1 0 0 0 1.414 1.414L12 13.414l5.293 5.293a1 1 0 0 0 1.414-1.414L13.414 12l5.293-5.293a1 1 0 1 0-1.414-1.414L12 10.586z\\\"\\r\\n                                                        fill=\\\"currentColor\\\">\\r\\n                                                </path>\\r\\n                                            </svg>\\r\\n                                            <span class=\\\"full-name\\\">{{ user.fullName }}</span>\\r\\n                                            <div class=\\\"description\\\"> {{ user.description }}</div>\\r\\n                                        </div><!-- END: .info -->\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div><!-- END: list users -->\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-8 col-sm-offset-4 text-right\\\">\\r\\n                        <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                                      *ngIf=\\\"!isUpdate\\\"\\r\\n                                      i18n=\\\"@@isCreateAnother\\\"\\r\\n                                      class=\\\"cm-mgr-5\\\"\\r\\n                                      color=\\\"primary\\\">\\r\\n                            Create another\\r\\n                        </mat-checkbox>\\r\\n                        <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\" [loading]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                            Save\\r\\n                        </ghm-button>\\r\\n                        <ghm-button type=\\\"button\\\" classes=\\\"btn btn-default\\\"\\r\\n                                    (click)=\\\"closeForm()\\\"\\r\\n                                    i18n=\\\"@@cancel\\\">\\r\\n                            Cancel\\r\\n                        </ghm-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form><!-- END form role info -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ghm-select-picker\\r\\n        title=\\\"Chọn trang phân quyền\\\"\\r\\n        allTitle=\\\"Tất cả trang\\\"\\r\\n        selectedTitle=\\\"Trang được chọn\\\"\\r\\n        [source]=\\\"listPages\\\"\\r\\n        (accepted)=\\\"onAcceptedSelectPage($event)\\\"\\r\\n></ghm-select-picker>\\r\\n\\r\\n<nh-user-picker\\r\\n        i18n-title=\\\"@@selectParticipant\\\"\\r\\n        i18n-allTitle=\\\"@@listUser\\\"\\r\\n        i18n-selectedTitle=\\\"@@listSelectedUser\\\"\\r\\n        title=\\\"Select participant\\\"\\r\\n        allTitle=\\\"List user\\\"\\r\\n        selectedTitle=\\\"List selected user\\\"\\r\\n        [selectedItems]=\\\"listSelectedUsers\\\"\\r\\n        (accepted)=\\\"onAcceptSelectUsers($event)\\\"\\r\\n></nh-user-picker>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Role, RolesPagesViewModels } from '../models/role.model';\r\nimport { BaseFormComponent } from '../../../../base-form.component';\r\nimport { RoleService } from '../role.service';\r\nimport { UtilService } from '../../../../shareds/services/util.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NhModalComponent } from '../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { RolePageViewModel } from '../models/role-page.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport { GhmSelectPickerComponent } from '../../../../shareds/components/ghm-select-picker/ghm-select-picker.component';\r\nimport { PageService } from '../../page/page.service';\r\nimport { PageActivatedSearchViewModel } from '../../page/models/page-activated-search.viewmodel';\r\nimport { GhmSelectPickerModel } from '../../../../shareds/components/ghm-select-picker/ghm-select-picker.model';\r\nimport { Permission } from '../../../../shareds/constants/permission.const';\r\nimport { RoleDetailViewModel } from '../models/role-detail.viewmodel';\r\nimport { NhUserPicker } from '../../../../shareds/components/nh-user-picker/nh-user-picker.model';\r\nimport { ActionResultViewModel } from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NhUserPickerComponent } from '../../../../shareds/components/nh-user-picker/nh-user-picker.component';\r\n\r\n@Component({\r\n    selector: 'app-role-form',\r\n    templateUrl: './role-form.component.html'\r\n})\r\n\r\nexport class RoleFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('roleFormModal') roleFormModal: NhModalComponent;\r\n    @ViewChild(GhmSelectPickerComponent) ghmSelectPickerComponent: GhmSelectPickerComponent;\r\n    @ViewChild(NhUserPickerComponent) userPickerComponent: NhUserPickerComponent;\r\n    role = new Role();\r\n    listPages: { id: number, name: string }[] = [];\r\n    selectedPages: RolePageViewModel[] = [];\r\n    permissionConst = Permission;\r\n    listSelectedUsers: NhUserPicker[] = [];\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private pageService: PageService,\r\n                private roleService: RoleService) {\r\n        super();\r\n        this.subscribers.routeParams = this.route.params.subscribe((params) => {\r\n            if (params.id) {\r\n                this.isUpdate = true;\r\n                this.id = params.id;\r\n                this.roleService.getRoleDetail(this.id)\r\n                    .subscribe((roleDetail: RoleDetailViewModel) => {\r\n                        this.selectedPages = roleDetail.rolePages;\r\n                        this.model.patchValue(roleDetail);\r\n                        this.listSelectedUsers = roleDetail.users;\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    onAcceptedSelectPage(pages: GhmSelectPickerModel[]) {\r\n        // const listNewPages = [];\r\n        _.each(pages, (page: GhmSelectPickerModel) => {\r\n            const existingPage = _.find(this.selectedPages, (selectedPage: RolePageViewModel) => {\r\n                return selectedPage.pageId === page.id;\r\n            });\r\n            if (!existingPage) {\r\n                const newPage = {\r\n                    pageId: page.id,\r\n                    pageName: page.name,\r\n                    full: false,\r\n                    view: false,\r\n                    add: false,\r\n                    edit: false,\r\n                    delete: false,\r\n                    export: false,\r\n                    print: false,\r\n                    approve: false,\r\n                    report: false\r\n                };\r\n                this.selectedPages.push(newPage);\r\n            }\r\n        });\r\n    }\r\n\r\n    onAcceptSelectUsers(users: NhUserPicker[]) {\r\n        this.listSelectedUsers = users;\r\n        // if (this.isUpdate) {\r\n        //     this.roleService.updateUsers(this.id, this.listSelectedUsers)\r\n        //         .subscribe((result: ActionResultViewModel) => {\r\n        //             this.toastr.success(result.message);\r\n        //         });\r\n        // }\r\n    }\r\n\r\n    showUsers() {\r\n        this.userPickerComponent.show();\r\n    }\r\n\r\n    closeForm() {\r\n        this.router.navigateByUrl('/config/roles');\r\n    }\r\n\r\n    removeUser(userId: string) {\r\n        this.roleService.removeUser(this.id, userId)\r\n            .subscribe((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                _.remove(this.listSelectedUsers, (selectedUser: NhUserPicker) => {\r\n                    return selectedUser.id === userId;\r\n                });\r\n            });\r\n    }\r\n\r\n    changePermission(page: RolePageViewModel, permission: number) {\r\n        switch (permission) {\r\n            case this.permissionConst.view:\r\n                page.view = !page.view;\r\n                break;\r\n            case this.permissionConst.add:\r\n                page.add = !page.add;\r\n                break;\r\n            case this.permissionConst.edit:\r\n                page.edit = !page.edit;\r\n                break;\r\n            case this.permissionConst.delete:\r\n                page.delete = !page.delete;\r\n                break;\r\n            case this.permissionConst.export:\r\n                page.export = !page.export;\r\n                break;\r\n            case this.permissionConst.report:\r\n                page.report = !page.report;\r\n                break;\r\n            case this.permissionConst.approve:\r\n                page.approve = !page.approve;\r\n                break;\r\n            case this.permissionConst.print:\r\n                page.print = !page.print;\r\n                break;\r\n        }\r\n        const permissions = this.calculatePermissions(page);\r\n        page.full = this.roleService.checkHasFullPermission(permissions);\r\n        // if (this.isUpdate) {\r\n        //     this.subscribers.updatePermission = this.roleService.updatePermissions(this.id, page.pageId, permissions).subscribe();\r\n        // }\r\n    }\r\n\r\n    changeFullPermission(page: RolePageViewModel) {\r\n        page.full = !page.full;\r\n        page.view = page.full;\r\n        page.add = page.full;\r\n        page.edit = page.full;\r\n        page.delete = page.full;\r\n        page.report = page.full;\r\n        page.print = page.full;\r\n        page.approve = page.full;\r\n        page.export = page.full;\r\n        // if (this.isUpdate) {\r\n        //     const permissions = this.calculatePermissions(page);\r\n        //     this.subscribers.updatePermission = this.roleService.updatePermissions(this.id, page.pageId, permissions).subscribe();\r\n        // }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.roleFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (this.selectedPages.length === 0) {\r\n            this.setMessage('danger', 'selectOne');\r\n            return;\r\n        }\r\n        if (isValid) {\r\n            this.role = this.model.value;\r\n            this.role.rolesPagesViewModels = this.mapPermissionToPermissionValue();\r\n            this.role.users = this.listSelectedUsers;\r\n            const isRolePagePermissionValid = this.validatePagePermission(this.role.rolesPagesViewModels);\r\n            if (!isRolePagePermissionValid) {\r\n                this.setMessage('danger', 'inValid');\r\n                return;\r\n            }\r\n\r\n            this.isSaving = true;\r\n            this.resetMessage();\r\n            if (this.isUpdate) {\r\n                this.roleService\r\n                    .update(this.id, this.role)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isUpdate = false;\r\n                        this.isModified = true;\r\n                        this.closeForm();\r\n                    });\r\n            } else {\r\n                this.roleService\r\n                    .insert(this.role)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.model.reset(new Role());\r\n                        if (!this.isCreateAnother) {\r\n                            this.closeForm();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    deletePage(page: RolePageViewModel) {\r\n        // if (this.isUpdate) {\r\n        //     this.subscribers.deletePermission = this.roleService.deletePermission(this.id, page.pageId)\r\n        //         .subscribe((result: ActionResultViewModel) => this.removePermission(page.pageId));\r\n        // } else {\r\n        this.removePermission(page.pageId);\r\n        // }\r\n    }\r\n\r\n    showSelectPage() {\r\n        if (!this.listPages || this.listPages.length === 0) {\r\n            this.subscribers.getListPages = this.pageService.getActivatedPages()\r\n                .subscribe((result: PageActivatedSearchViewModel[]) => this.listPages = result);\r\n        }\r\n        this.ghmSelectPickerComponent.show();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'description']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'name': ['required', 'maxlength']},\r\n            {'description': ['maxlength']}\r\n        ]);\r\n        this.model = this.fb.group({\r\n            'name': [this.role.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'description': [this.role.description, [\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'concurrencyStamp': [this.role.concurrencyStamp]\r\n        });\r\n        this.subscribers.modelValueChanges =\r\n            this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private mapPermissionToPermissionValue() {\r\n        return this.selectedPages.map((page: RolePageViewModel) => {\r\n            return {\r\n                pageId: page.pageId,\r\n                pageName: page.pageName,\r\n                idPath: '',\r\n                permissions: this.calculatePermissions(page)\r\n            };\r\n        });\r\n    }\r\n\r\n    private calculatePermissions(page: RolePageViewModel) {\r\n        let permissions = 0;\r\n        if (page.view) {\r\n            permissions += Permission.view;\r\n        }\r\n        if (page.add) {\r\n            permissions += Permission.add;\r\n        }\r\n        if (page.edit) {\r\n            permissions += Permission.edit;\r\n        }\r\n        if (page.delete) {\r\n            permissions += Permission.delete;\r\n        }\r\n        if (page.export) {\r\n            permissions += Permission.export;\r\n        }\r\n        if (page.print) {\r\n            permissions += Permission.print;\r\n        }\r\n        if (page.approve) {\r\n            permissions += Permission.approve;\r\n        }\r\n        if (page.report) {\r\n            permissions += Permission.report;\r\n        }\r\n        return permissions;\r\n    }\r\n\r\n    private validatePagePermission(pagePermissions: RolesPagesViewModels[]): boolean {\r\n        const inValidCount = _.countBy(pagePermissions, (pagePermission: RolesPagesViewModels) => {\r\n            return pagePermission.permissions === 0;\r\n        }).true;\r\n        return !inValidCount || inValidCount === 0;\r\n    }\r\n\r\n    private removePermission(pageId: number) {\r\n        _.remove(this.selectedPages, (selectedPage: RolePageViewModel) => {\r\n            return selectedPage.pageId === pageId;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@rolePageTitle\\\">Roles</span>\\r\\n    <small i18n=\\\"@@configModuleTitle\\\">Configs</small>\\r\\n</h1>\\r\\n\\r\\n<div class=\\\"row cm-mgb-10\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@keywordSearch\\\"\\r\\n                       placeholder=\\\"Enter keyword for search please.\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <ghm-button icon=\\\"fa fa-search\\\" classes=\\\"btn btn-primary\\\" [loading]=\\\"isSearching\\\"></ghm-button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group pull-right\\\">\\r\\n                <a *ngIf=\\\"permission.add\\\"\\r\\n                   class=\\\"btn btn-primary\\\"\\r\\n                   routerLink=\\\"/config/roles/add\\\"\\r\\n                   i18n=\\\"@@add\\\">\\r\\n                    Add\\r\\n                </a>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <table class=\\\"table table-stripped table-hover\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@roleName\\\">Role name</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@description\\\">Description</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@roleType\\\">Role type</th>\\r\\n                <th class=\\\"text-right middle w150\\\" i18n=\\\"@@action\\\"\\r\\n                    *ngIf=\\\"permission.view || permission.edit || permission.delete\\\">Action\\r\\n                </th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listItems$ | async; let i = index\\\">\\r\\n                <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n                <td class=\\\"middle\\\"><a href=\\\"javascript://\\\" (click)=\\\"detail(item.id)\\\">{{ item.name }}</a></td>\\r\\n                <td class=\\\"middle\\\">{{ item.description }}</td>\\r\\n                <td class=\\\"middle\\\" i18n=\\\"@@roleType\\\">{item.type, select, 0 {Built in} 1 {Custom}}</td>\\r\\n                <td class=\\\"text-right middle\\\" *ngIf=\\\"permission.view || permission.edit || permission.delete\\\">\\r\\n                    <!--<ghm-button icon=\\\"fa fa-eye\\\" classes=\\\"btn dark btn-outlet btn-sm\\\"-->\\r\\n                                <!--*ngIf=\\\"item.type !== 0\\\"-->\\r\\n                                <!--(clicked)=\\\"detail(item)\\\"></ghm-button>-->\\r\\n                    <a *ngIf=\\\"permission.edit && item.type !== 0\\\"\\r\\n                       class=\\\"btn blue btn-outline btn-sm\\\"\\r\\n                       routerLink=\\\"/config/roles/{{ item.id }}\\\">\\r\\n                        <i class=\\\"fa fa-edit\\\"></i>\\r\\n                    </a>\\r\\n                    <!--<ghm-button icon=\\\"fa fa-edit\\\" classes=\\\"btn blue btn-outline btn-sm\\\"-->\\r\\n                    <!--*ngIf=\\\"item.type !== 0\\\"-->\\r\\n                    <!--(clicked)=\\\"edit(item)\\\"></ghm-button>-->\\r\\n                    <ghm-button icon=\\\"fa fa-trash-o\\\" classes=\\\"btn red btn-outline btn-sm\\\"\\r\\n                                *ngIf=\\\"item.type !== 0\\\"\\r\\n                                [swal]=\\\"deleteRole\\\"\\r\\n                                (confirm)=\\\"delete(item.id)\\\"></ghm-button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n                    [isDisabled]=\\\"isSearching\\\" [pageName]=\\\"'quyền'\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--<app-role-form (saveSuccessful)=\\\"search(1)\\\"></app-role-form>-->\\r\\n<!--<app-role-detail></app-role-detail>-->\\r\\n<app-role-detail></app-role-detail>\\r\\n<swal\\r\\n    i18n=\\\"@@confirmDeleteRole\\\"\\r\\n    i18n-title\\r\\n    i18n-text\\r\\n    #deleteRole\\r\\n    title=\\\"Are you sure for delete this role?\\\"\\r\\n    text=\\\"You can't recover this role after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { Role } from './models/role.model';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\nimport { RoleService } from './role.service';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RoleDetailComponent } from './role-detail/role-detail.component';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-role',\r\n    templateUrl: './role.component.html',\r\n    providers: [RoleService]\r\n})\r\nexport class RoleComponent extends BaseListComponent<Role> implements OnInit {\r\n    @ViewChild(RoleDetailComponent) roleDetailComponent: RoleDetailComponent;\r\n\r\n    constructor(@Inject(PAGE_ID) private pageId: IPageId,\r\n                private route: ActivatedRoute,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private roleService: RoleService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_ROLE, 'Quản lý quyền', 'Danh sách quyền');\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: SearchResultViewModel<Role> }) => {\r\n            const data = result.data;\r\n            this.totalRows = data.totalRows;\r\n            return data.items;\r\n        }));\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage\r\n        this.isSearching = true;\r\n        this.listItems$ = this.roleService.search(this.keyword, this.currentPage)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((result: SearchResultViewModel<Role>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.spinnerService.show('Đang xóa quyền. Vui lòng đợi...');\r\n        this.roleService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(this.currentPage);\r\n            });\r\n    }\r\n\r\n    detail(role: Role) {\r\n        this.roleDetailComponent.show(role);\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { Observable } from 'rxjs';\r\nimport { Role, RolesPagesViewModels } from './models/role.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { RolesPages } from './models/role-page.model';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { RolePageViewModel } from './models/role-page.viewmodel';\r\nimport { Permission } from '../../../shareds/constants/permission.const';\r\nimport { RolePageSearchViewModel } from './models/role-page-search.viewmodel';\r\nimport { RoleDetailViewModel } from './models/role-detail.viewmodel';\r\nimport { NhUserPicker } from '../../../shareds/components/nh-user-picker/nh-user-picker.model';\r\nimport { ActionResultViewModel } from '../../../shareds/view-models/action-result.viewmodel';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\n\r\n@Injectable()\r\nexport class RoleService implements Resolve<any> {\r\n    url = 'api/v1/core/roles';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object) {\r\n        const queryParams = route.params;\r\n        return this.search(queryParams.keyword, queryParams.page, queryParams.pageSize);\r\n    }\r\n\r\n    search(keyword: string, page: number, pageSize?: number): Observable<SearchResultViewModel<Role>> {\r\n        return this.http.get(this.url, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n        }) as Observable<SearchResultViewModel<Role>>;\r\n    }\r\n\r\n    insert(role: Role): Observable<IResponseResult> {\r\n        return this.http.post(this.url, {\r\n            name: role.name,\r\n            description: role.description,\r\n            type: role.type,\r\n            concurrencyStamp: role.concurrencyStamp,\r\n            userIds: role.users.map((user: NhUserPicker) => {\r\n                return user.id;\r\n            }),\r\n            rolePagePermissions: role.rolesPagesViewModels\r\n        }).pipe(map((result: IResponseResult) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<IResponseResult>;\r\n    }\r\n\r\n    update(id: string, role: Role): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}/${id}`, {\r\n            name: role.name,\r\n            description: role.description,\r\n            type: role.type,\r\n            concurrencyStamp: role.concurrencyStamp,\r\n            userIds: role.users.map((user: NhUserPicker) => {\r\n                return user.id;\r\n            }),\r\n            rolePagePermissions: role.rolesPagesViewModels\r\n        }).pipe(map((result: IResponseResult) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    updatePermissions(roleId: string, pageId: number, permissions: number): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.post(`${this.url}/pages/${roleId}/${pageId}/${permissions}`, {})\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    deletePermission(roleId: string, pageId: number): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/pages/${roleId}/${pageId}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<IResponseResult> {\r\n        return this.http.delete(`${this.url}/${id}`)\r\n            .pipe(map((result: IResponseResult) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    addNewRolePage(roleId: string, rolePagePermission: RolesPagesViewModels[]): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}/${roleId}/pages`, rolePagePermission)\r\n            .pipe(map((result: IResponseResult) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as  Observable<IResponseResult>;\r\n    }\r\n\r\n    updateUsers(id: string, users: NhUserPicker[]): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .post(`${this.url}/${id}/users`, users.map((user: NhUserPicker) => {\r\n                return user.id;\r\n            }))\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getRolesPages(id: string): Observable<RolePageViewModel[]> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${id}/pages`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: SearchResultViewModel<RolePageSearchViewModel>) => {\r\n                    const data = result.items;\r\n                    if (data) {\r\n                        const rolePages = [];\r\n                        data.forEach((rolePageSearch: RolePageSearchViewModel) => {\r\n                            const rolePage: RolePageViewModel = {\r\n                                pageId: rolePageSearch.pageId,\r\n                                pageName: rolePageSearch.pageName,\r\n                                full: this.checkHasFullPermission(rolePageSearch.permissions),\r\n                                view: this.checkPermission(Permission.view, rolePageSearch.permissions),\r\n                                add: this.checkPermission(Permission.add, rolePageSearch.permissions),\r\n                                edit: this.checkPermission(Permission.edit, rolePageSearch.permissions),\r\n                                delete: this.checkPermission(Permission.delete, rolePageSearch.permissions),\r\n                                export: this.checkPermission(Permission.export, rolePageSearch.permissions),\r\n                                print: this.checkPermission(Permission.print, rolePageSearch.permissions),\r\n                                approve: this.checkPermission(Permission.approve, rolePageSearch.permissions),\r\n                                report: this.checkPermission(Permission.report, rolePageSearch.permissions),\r\n                            };\r\n                            rolePages.push(rolePage);\r\n                        });\r\n                        return rolePages;\r\n                    }\r\n                    return [];\r\n                })) as Observable<RolePageViewModel[]>;\r\n    }\r\n\r\n    getAllPages(): Observable<RolePageViewModel[]> {\r\n        return this.http.get(`${this.url}/pages`)\r\n            .pipe(map((result: SearchResultViewModel<RolesPages>) => {\r\n                const rolesPages = [];\r\n                if (result && result.items) {\r\n                    result.items.forEach((item: RolesPages) => {\r\n                        rolesPages.push({\r\n                            pageId: item.pageId,\r\n                            pageName: item.pageName,\r\n                            view: false,\r\n                            add: false,\r\n                            edit: false,\r\n                            delete: false,\r\n                            export: false,\r\n                            print: false,\r\n                            approve: false,\r\n                            report: false\r\n                        });\r\n                    });\r\n                }\r\n                return rolesPages;\r\n            })) as Observable<RolePageViewModel[]>;\r\n    }\r\n\r\n    getRoleDetail(id: string): Observable<RoleDetailViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${id}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: ActionResultViewModel<Role>) => {\r\n                    const data = result.data;\r\n                    const roleDetail: RoleDetailViewModel = {\r\n                        id: data.id,\r\n                        name: data.name,\r\n                        concurrencyStamp: data.concurrencyStamp,\r\n                        description: data.description,\r\n                        rolePages: [],\r\n                        users: data.users.map((user: any) => {\r\n                            return {\r\n                                id: user.userId,\r\n                                fullName: user.fullName,\r\n                                avatar: user.avatar,\r\n                                description: user.userName\r\n                            } as NhUserPicker;\r\n                        })\r\n                    };\r\n                    if (data.rolesPagesViewModels && data.rolesPagesViewModels.length > 0) {\r\n                        data.rolesPagesViewModels.forEach((rolePage: RolesPagesViewModels) => {\r\n                            const idPathArray = rolePage.idPath.split('.');\r\n                            if (idPathArray.length > 1) {\r\n                                for (let i = 1; i < idPathArray.length; i++) {\r\n                                    rolePage.pageName = '&nbsp;&nbsp;&nbsp;&nbsp;' + rolePage.pageName;\r\n                                }\r\n                            }\r\n\r\n                            roleDetail.rolePages.push({\r\n                                pageId: rolePage.pageId,\r\n                                pageName: rolePage.pageName,\r\n                                full: this.checkHasFullPermission(rolePage.permissions),\r\n                                view: this.checkPermission(Permission.view, rolePage.permissions),\r\n                                add: this.checkPermission(Permission.add, rolePage.permissions),\r\n                                edit: this.checkPermission(Permission.edit, rolePage.permissions),\r\n                                delete: this.checkPermission(Permission.delete, rolePage.permissions),\r\n                                export: this.checkPermission(Permission.export, rolePage.permissions),\r\n                                print: this.checkPermission(Permission.print, rolePage.permissions),\r\n                                approve: this.checkPermission(Permission.approve, rolePage.permissions),\r\n                                report: this.checkPermission(Permission.report, rolePage.permissions),\r\n                            });\r\n                        });\r\n                    }\r\n                    return roleDetail;\r\n                })) as Observable<RoleDetailViewModel>;\r\n    }\r\n\r\n    getPages(id: string): Observable<RolePageViewModel[]> {\r\n        return this.http.get(`${this.url}/${id}/pages`)\r\n            .pipe(map((result: SearchResultViewModel<RolesPages>) => {\r\n                const rolesPages = [];\r\n                if (result && result.items) {\r\n                    result.items.forEach((item: RolesPages) => {\r\n                        rolesPages.push({\r\n                            pageId: item.pageId,\r\n                            pageName: item.pageName,\r\n                            full: this.checkHasFullPermission(item.permissions),\r\n                            view: this.checkPermission(Permission.view, item.permissions),\r\n                            add: this.checkPermission(Permission.add, item.permissions),\r\n                            edit: this.checkPermission(Permission.edit, item.permissions),\r\n                            delete: this.checkPermission(Permission.delete, item.permissions),\r\n                            export: this.checkPermission(Permission.export, item.permissions),\r\n                            print: this.checkPermission(Permission.print, item.permissions),\r\n                            approve: this.checkPermission(Permission.approve, item.permissions),\r\n                            report: this.checkPermission(Permission.report, item.permissions),\r\n                        });\r\n                    });\r\n                }\r\n                return rolesPages;\r\n            })) as  Observable<RolePageViewModel[]>;\r\n    }\r\n\r\n    removeUser(roleId: string, userId: string): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}/${roleId}/users/${userId}`)\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    checkHasFullPermission(permissions: number): boolean {\r\n        return Permission.full === permissions;\r\n    }\r\n\r\n    private checkPermission(permission: number, permissions: number): boolean {\r\n        return (permissions & permission) === permission;\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #tenantFormModal size=\\\"md\\\"\\r\\n          (hidden)=\\\"tenantFormModalHidden()\\\"\\r\\n          (shown)=\\\"tenantFormModalShown()\\\">\\r\\n    <nh-modal-header>\\r\\n        <i class=\\\"fa fa-desktop\\\"></i>\\r\\n        <span class=\\\"cm-mgl-5\\\">{isUpdate, select, 0 {Add new tenant} 1 {Update tenant info}}</span>\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <mat-tab-group [selectedIndex]=\\\"0\\\"\\r\\n                           (selectedTabChange)=\\\"onTabChange($event)\\\">\\r\\n                <mat-tab i18n-label=\\\"@@tenantInfo\\\" label=\\\"Tenant info\\\">\\r\\n                    <div class=\\\"col-sm-12 cm-mgt-10\\\">\\r\\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.userId\\\">\\r\\n                            <label ghmLabel=\\\"Tài khoản\\\" class=\\\"col-sm-3\\r\\n                            control-label\\\" [required]=true>\\r\\n                            </label>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                                <nh-suggestion\\r\\n                                        [loading]=\\\"isSearching\\\"\\r\\n                                        [sources]=\\\"listUserAccount\\\"\\r\\n                                        (itemSelected)=\\\"onUserSeleceted($event)\\\"\\r\\n                                ></nh-suggestion>\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.userId\\\"> {{formErrors.userId}} </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.name\\\">\\r\\n                            <label ghmLabel=\\\"Tên khách hàng\\\"\\r\\n                                   class=\\\"col-sm-3 control-label\\\"\\r\\n                                   [required]=\\\"true\\\"\\r\\n                            ></label>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                                <input type=\\\"text\\\" value=\\\"\\\"\\r\\n                                       id=\\\"name\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       placeholder=\\\"Nhập tên tenant\\\"\\r\\n                                       formControlName=\\\"name\\\"/>\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.name\\\"> {{formErrors.name}} </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.email\\\">\\r\\n                            <label ghmLabel=\\\"Email\\\"\\r\\n                                   class=\\\"col-sm-3 control-label\\\"\\r\\n                                   [required]=\\\"true\\\"\\r\\n                            ></label>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                                <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\"\\r\\n                                       placeholder=\\\"Nhập email\\\"\\r\\n                                       formControlName=\\\"email\\\"/>\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.email\\\"> {{formErrors.email}} </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.phoneNumber\\\">\\r\\n                            <label ghmLabel=\\\"Số điện thoại\\\"\\r\\n                                   class=\\\"col-sm-3 control-label\\\"\\r\\n                                   [required]=\\\"true\\\"\\r\\n                            ></label>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                                <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\"\\r\\n                                       placeholder=\\\"Nhập số điện thoại\\\"\\r\\n                                       formControlName=\\\"phoneNumber\\\"/>\\r\\n                                <span class=\\\"help-block\\\"\\r\\n                                      *ngIf=\\\"formErrors.phoneNumber\\\"> {{formErrors.phoneNumber}} </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"formErrors.address\\\">\\r\\n                            <label ghmLabel=\\\"Địa chỉ\\\"\\r\\n                                   class=\\\"col-sm-3 control-label\\\"\\r\\n                                   [required]=\\\"true\\\"\\r\\n                            ></label>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                    <textarea type=\\\"text\\\" rows=\\\"3\\\" class=\\\"form-control\\\"\\r\\n                              placeholder=\\\"Nhập địa chỉ\\\"\\r\\n                              formControlName=\\\"address\\\">\\r\\n                    </textarea>\\r\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.address\\\"> {{formErrors.address}} </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label ghmLabel=\\\"Ghi chú\\\"\\r\\n                                   class=\\\"col-sm-3 control-label\\\"\\r\\n                            ></label>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                    <textarea type=\\\"text\\\" rows=\\\"3\\\" class=\\\"form-control\\\"\\r\\n                              placeholder=\\\"Nhập ghi chú\\\"\\r\\n                              formControlName=\\\"note\\\">\\r\\n                    </textarea>\\r\\n                                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formErrors.note\\\">\\r\\n                                    {{ formErrors.note }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label i18n-ghmLabel=\\\"@@supportedLanguages\\\" ghmLabel=\\\"Supported languages\\\"\\r\\n                                   class=\\\"col-sm-3 control-label\\\"\\r\\n                            ></label>\\r\\n                            <div class=\\\"col-sm-9\\\">\\r\\n                                <nh-suggestion\\r\\n                                        [multiple]=\\\"true\\\"\\r\\n                                        [loading]=\\\"isSearching\\\"\\r\\n                                        [sources]=\\\"languageSuggestions\\\"\\r\\n                                        (itemSelected)=\\\"onLanguageSelected($event)\\\"\\r\\n                                        (itemRemoved)=\\\"onLanguageRemoved($event)\\\"\\r\\n                                        (searched)=\\\"onSearchLanguage($event)\\\"></nh-suggestion>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"col-sm-9 col-sm-offset-3\\\">\\r\\n                                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\"> Kích hoạt</mat-checkbox>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-tab><!-- END: tenant info -->\\r\\n                <mat-tab i18n-label=\\\"@@pages\\\" label=\\\"Pages\\\">\\r\\n                    <div class=\\\"cm-mgt-15 cm-mgr-20\\\">\\r\\n                        <div class=\\\"item\\\" *ngFor=\\\"let item of listPageView\\\">\\r\\n                            <mat-checkbox [checked]=\\\"item.isSelected\\\">\\r\\n\\r\\n                            </mat-checkbox>\\r\\n                            <label class=\\\"cm-mgl-10\\\">{{item.name}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-tab><!-- END: Tenant pages -->\\r\\n            </mat-tab-group>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer class=\\\"text-right\\\">\\r\\n            <button class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\" [class.disabled]=\\\"isSaving\\\">\\r\\n                Save\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\"\\r\\n                    nh-dismiss\\r\\n                    i18n=\\\"@@cancel\\\"\\r\\n                    [class.disabled]=\\\"isSaving\\\">\\r\\n                Cancel\\r\\n            </button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Tenant, TenantLanguage} from './tenant.model';\r\nimport {TenantService} from './tenant.service';\r\nimport {BaseFormComponent} from '../../../base-form.component';\r\nimport {UtilService} from '../../../shareds/services/util.service';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {Page} from '../page/models/page.model';\r\nimport {IResponseResult} from '../../../interfaces/iresponse-result';\r\nimport {NhModalComponent} from '../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {LanguageService} from '../../../shareds/services/language.service';\r\nimport {LanguageSearchViewModel} from '../../../shareds/models/language.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport {NhSelect, NhSelectData} from '../../../shareds/components/nh-select/nh-select.component';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {IActionResultResponse} from '../../../interfaces/iaction-result-response.result';\r\nimport {SearchResultViewModel} from '../../../shareds/view-models/search-result.viewmodel';\r\nimport {MatTabChangeEvent} from '@angular/material';\r\nimport {LanguageComponent} from '../website/language/language.component';\r\nimport {SuggestionViewModel} from '../../../shareds/view-models/SuggestionViewModel';\r\nimport {ActionResultViewModel} from '../../../shareds/view-models/action-result.viewmodel';\r\nimport {Pattern} from '../../../shareds/constants/pattern.const';\r\nimport {AppService} from '../../../shareds/services/app.service';\r\nimport {PageService} from '../page/page.service';\r\nimport {PageSearchViewModel} from '../page/models/page-search.viewmodel';\r\nimport {TenantPage} from '../page/models/teanant-page.viewmodel';\r\nimport {AccountService} from '../account/account.service';\r\nimport {AccountViewModel} from '../account/view-models/account.viewmodel';\r\nimport {NhSuggestion} from '../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\n\r\n@Component({\r\n    selector: 'app-tenant-form',\r\n    templateUrl: './tenant-form.component.html',\r\n    providers: [LanguageService, AccountService]\r\n})\r\n\r\nexport class TenantFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('tenantFormModal') tenantFormModal: NhModalComponent;\r\n    isSearching = false;\r\n    tenant = new Tenant();\r\n    languages = [];\r\n    languageSuggestions: SuggestionViewModel<string>[] = [];\r\n    selectedLanguages: TenantLanguage[] = [];\r\n\r\n    languageId: string;\r\n    isActive = false;\r\n    isDefault = false;\r\n    listPageView: PageSearchViewModel[] = [];\r\n    listPage: PageSearchViewModel[] = [];\r\n    listUserAccount: NhSuggestion[] = [];\r\n    constructor(private fb: FormBuilder,\r\n                private utilService: UtilService,\r\n                private toastr: ToastrService,\r\n                private tenantService: TenantService,\r\n                private pageService: PageService,\r\n                private accountService: AccountService,\r\n                private languageService: LanguageService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n        this.pageService.search('', true).subscribe((result: PageSearchViewModel[]) => {\r\n            this.listPageView = _.filter(result, (item: PageSearchViewModel) => {\r\n               return item.parentId === null;\r\n            });\r\n            _.each(this.listPageView, (item: PageSearchViewModel) => {\r\n               item.isSelected = true;\r\n            });\r\n            this.listPage = result;\r\n        });\r\n        this.accountService.search('').subscribe((result: SearchResultViewModel<AccountViewModel>) => {\r\n           _.each(result.items, (item: AccountViewModel) => {\r\n               const nhSuggestion = new NhSuggestion();\r\n               nhSuggestion.id = item.id;\r\n               nhSuggestion.name = item.userName;\r\n               this.listUserAccount.push(nhSuggestion);\r\n           });\r\n        });\r\n    }\r\n\r\n    onItemSelected(language: NhSelectData) {\r\n        if (language.id == null) {\r\n            return;\r\n        }\r\n\r\n        const languageInfo = _.find(this.selectedLanguages, (languageItem: LanguageSearchViewModel) => {\r\n            return languageItem.languageId === language.id;\r\n        });\r\n\r\n        if (languageInfo) {\r\n            this.toastr.warning('Ngôn ngữ đã tồn tại trong danh sách được chọn.');\r\n            return;\r\n        }\r\n\r\n        language.data.isActive = true;\r\n        this.selectedLanguages.push(language.data);\r\n        if (this.isUpdate) {\r\n            this.subscribers.addLanguage = this.tenantService.addLanguage(this.tenant.id, {\r\n                languageId: language.id,\r\n                name: language.name,\r\n                isActive: true,\r\n                isDefault: false\r\n            }).subscribe();\r\n        }\r\n    }\r\n\r\n    onTabChange(event: MatTabChangeEvent) {\r\n        if (event.index === 1) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    onSearchLanguage(event) {\r\n        this.isSearching = true;\r\n        this.subscribers.suggestions = this.languageService.suggestion(event)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SuggestionViewModel<string>[]) => {\r\n                this.languageSuggestions = result;\r\n            });\r\n    }\r\n\r\n    onLanguageSelected(event) {\r\n        if (event) {\r\n            _.each(event, (item: any) => {\r\n                const selectedLanguage = _.find(this.selectedLanguages, (language: any) => {\r\n                    return language.languageId === item.id;\r\n                });\r\n                if (!selectedLanguage) {\r\n                    this.selectedLanguages.push({\r\n                        languageId: item.id,\r\n                        name: item.name,\r\n                        isDefault: false,\r\n                        isActive: true\r\n                    });\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onLanguageRemoved(event) {\r\n        if (event) {\r\n            _.remove(this.selectedLanguages, (language: any) => {\r\n                return language.languageId === event[0].id;\r\n            });\r\n        }\r\n    }\r\n\r\n    removeLanguage(language: TenantLanguage) {\r\n        if (this.isUpdate) {\r\n            this.subscribers.removeLanguage = this.tenantService.removeLanguage(this.tenant.id, language.languageId)\r\n                .subscribe((result: IActionResultResponse) => {\r\n                    this.removeSelectedLanguage(language);\r\n                });\r\n        } else {\r\n            this.removeSelectedLanguage(language);\r\n        }\r\n    }\r\n\r\n    changeLanguageDefaultStatus(language: LanguageSearchViewModel) {\r\n        _.each(this.selectedLanguages, (selectedLanguage: LanguageSearchViewModel) => {\r\n            selectedLanguage.isDefault = false;\r\n        });\r\n        language.isDefault = !language.isDefault;\r\n        if (this.isUpdate) {\r\n            this.tenantService.updateTenantLanguageDefaultStatus(this.tenant.id, language.languageId, language.isDefault)\r\n                .subscribe();\r\n        }\r\n    }\r\n\r\n    changeLanguageActiveStatus(language: LanguageSearchViewModel) {\r\n        language.isActive = !language.isActive;\r\n        if (this.isUpdate) {\r\n            this.tenantService.updateTenantLanguageActiveStatus(this.tenant.id, language.languageId, language.isActive)\r\n                .subscribe();\r\n        }\r\n    }\r\n\r\n    changeIsDefault() {\r\n        this.isDefault = !this.isDefault;\r\n    }\r\n\r\n    changeIsActive() {\r\n        this.isActive = !this.isActive;\r\n    }\r\n\r\n    // saveLanguage() {\r\n    //     if (!this.languageId) {\r\n    //         this.toastr.error('Please select at least language');\r\n    //         return;\r\n    //     }\r\n    //\r\n    //     if (this.isUpdate) {\r\n    //         this.tenantService.saveLanguage(this.languageId, this.isDefault, this.isActive)\r\n    //             .subscribe((result: ActionResultViewModel) => {\r\n    //                 this.toastr.success(result.message);\r\n    //             });\r\n    //     } else {\r\n    //         this.selectedLanguages.push({\r\n    //             languageId: this.languageId,\r\n    //             name: this.\r\n    //             isDefault: this.isDefault,\r\n    //             isActive: this.isActive\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    tenantFormModalShown() {\r\n        if (this.languages.length === 0) {\r\n            this.subscribers.getAllLanguages = this.languageService.getAllLanguage()\r\n                .subscribe((result: LanguageSearchViewModel[]) => {\r\n                    this.languages = result.map((language: LanguageSearchViewModel) => {\r\n                        language.isActive = false;\r\n                        return {\r\n                            id: language.languageId,\r\n                            name: language.name,\r\n                            selected: false,\r\n                            data: language\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n        this.utilService.focusElement('name');\r\n    }\r\n\r\n    tenantFormModalHidden() {\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        this.tenantFormModal.open();\r\n    }\r\n\r\n    edit(tenant: Tenant) {\r\n        this.isUpdate = true;\r\n        this.tenant = tenant;\r\n        this.model.patchValue(tenant);\r\n        this.subscribers.getLanguage = this.tenantService.getLanguage(tenant.id)\r\n            .subscribe((result: TenantLanguage[]) => this.selectedLanguages = result);\r\n        this.tenantFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (this.selectedLanguages.length === 0) {\r\n            this.toastr.error('Vui lòng chọn ít nhất một ngôn ngữ.');\r\n            return;\r\n        }\r\n\r\n        // const defaultLanguage = _.find(this.selectedLanguages, (selectedLanguage: LanguageSearchViewModel) => {\r\n        //     return selectedLanguage.isDefault;\r\n        // });\r\n        // if (!defaultLanguage) {\r\n        //     this.toastr.error('Vui lòng chọn ít nhất 1 ngôn ngữ mặc định.');\r\n        //     return;\r\n        // }\r\n        if (isValid) {\r\n            this.tenant = this.model.value;\r\n            this.tenant.pages = [];\r\n            _.each(this.listPageView, (tenantPage: PageSearchViewModel) => {\r\n               if (tenantPage.isSelected) {\r\n                   _.each(this.listPage, (pages: PageSearchViewModel) => {\r\n                       if ((pages.id === tenantPage.id || pages.parentId === tenantPage.id) && pages.id !== 5 && pages.id !== 2) {\r\n                           const page = new TenantPage();\r\n                           page.pageId = pages.id;\r\n                           this.tenant.pages.push(page);\r\n                       }\r\n                   });\r\n               }\r\n            });\r\n            this.selectedLanguages[0].isDefault = true;\r\n            this.tenant.languages = this.selectedLanguages;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.tenantService.update(this.tenant)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.model.patchValue(new Page());\r\n                        this.isUpdate = false;\r\n                        this.isModified = true;\r\n                        this.tenantFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.tenantService.insert(this.tenant)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe((result: IResponseResult) => {\r\n                        this.utilService.focusElement('pageId');\r\n                        this.isModified = true;\r\n                        this.model.reset(new Tenant());\r\n                        this.utilService.focusElement('name');\r\n                        this.tenantFormModal.dismiss();\r\n                        return;\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['name', 'email', 'phoneNumber', 'address', 'note', 'userId']);\r\n        this.validationMessages = {\r\n            'name': {\r\n                'required': 'Tên trang không được để trống',\r\n                'maxLength': 'Tên trang không được vượt quá 256 ký tự'\r\n            },\r\n            'email': {\r\n                'required': 'Vui lòng nhập email.',\r\n                'maxLength': 'Email không được phép vượt quá 256',\r\n                'pattern': 'Email không đúng định dạng.'\r\n            },\r\n            'phoneNumber': {\r\n                'required': 'Vui lòng nhập số điện thoại.',\r\n                'maxLength': 'Số điện thoại không được phép vượt quá 50 ký tự.',\r\n                'pattern': 'Số điện thoại không đúng định dạng.'\r\n            },\r\n            'address': {\r\n                'required': 'Vui lòng nhập địa chỉ.',\r\n                'maxLength': 'Địa chỉ không được phép vượt quá 500 ký tự.'\r\n            },\r\n            'note': {\r\n                'maxLength': 'Nội dung mô tả không được phép vượt quá 500 ký tự..',\r\n            },\r\n            'userId': {\r\n                'required': 'Vui long chọn tài khoản'\r\n            }\r\n        };\r\n\r\n        this.model = this.fb.group({\r\n            'id': [this.tenant.id],\r\n            'name': [this.tenant.name, [\r\n                Validators.required,\r\n                Validators.maxLength(256)\r\n            ]],\r\n            'email': [this.tenant.email, [\r\n                Validators.required,\r\n                Validators.maxLength(256),\r\n                Validators.pattern(Pattern.email)\r\n            ]],\r\n            'phoneNumber': [this.tenant.phoneNumber, [\r\n                Validators.required,\r\n                Validators.maxLength(50),\r\n                Validators.pattern(Pattern.phoneNumber)\r\n            ]],\r\n            'address': [this.tenant.address, [\r\n                Validators.required,\r\n                Validators.maxLength(500)\r\n            ]],\r\n            'note': [this.tenant.note, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            'isActive': [this.tenant.isActive],\r\n            'userId': [this.tenant.userId, [\r\n                Validators.required\r\n            ]]\r\n        });\r\n        this.model.valueChanges.subscribe(data =>\r\n            this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, false));\r\n    }\r\n\r\n    private removeSelectedLanguage(language: TenantLanguage) {\r\n        _.remove(this.selectedLanguages, (selectedLanguage: TenantLanguage) => {\r\n            return selectedLanguage.languageId === language.languageId;\r\n        });\r\n    }\r\n\r\n    private resetForm() {\r\n        this.model.reset(new Tenant());\r\n        this.selectedLanguages = [];\r\n    }\r\n    onUserSeleceted(value: any) {\r\n        this.model.patchValue({'userId': value.id});\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listTenantTitle\\\">Tenants</span>\\r\\n    <small i18n=\\\"@@ConfigModuleTitle\\\">Config module</small>\\r\\n</h1>\\r\\n\\r\\n<div class=\\\"row cm-mgb-10\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <form action=\\\"\\\" class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\"\\r\\n                       i18n-placeholder=\\\"@@enterKeywordPlaceholder\\\"\\r\\n                       placeholder=\\\"Enter keyword\\\" class=\\\"form-control cm-mgr-5\\\"\\r\\n                       name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <ghm-button classes=\\\"btn blue\\\" icon=\\\"fa fa-search\\\"\\r\\n                            i18n-matTooltip=\\\"@@search\\\"\\r\\n                            matTooltip=\\\"Search\\\"\\r\\n                            [loading]=\\\"isSearching\\\"></ghm-button>\\r\\n            </div>\\r\\n            <div class=\\\"form-group pull-right\\\">\\r\\n                <ghm-button classes=\\\"btn blue\\\" type=\\\"button\\\" (clicked)=\\\"add()\\\" i18n=\\\"@@add\\\">\\r\\n                    Add\\r\\n                </ghm-button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th class=\\\"center middle w250\\\" i18n=\\\"@@email\\\">Tenant Id</th>\\r\\n                <th class=\\\"center middle w350\\\"  i18n=\\\"@@tenantName\\\">Tenant name</th>\\r\\n                <th class=\\\"center middle w150\\\" i18n=\\\"@@email\\\">Email</th>\\r\\n                <th class=\\\"center middle w100\\\" i18n=\\\"@@phoneNumber\\\">Phone number</th>\\r\\n                <th class=\\\"center middle w100\\\" i18n=\\\"@@status\\\">Status</th>\\r\\n                <th class=\\\"center middle w50\\\" *ngIf=\\\"permission.edit\\\" i18n=\\\"@@actions\\\">Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listItems$ | async; let i = index\\\">\\r\\n                <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n                <td class=\\\"center middle\\\">{{item.id}}</td>\\r\\n                <td class=\\\"middle\\\">{{ item.name }}</td>\\r\\n                <td class=\\\"middle\\\">{{ item.email }}</td>\\r\\n                <td class=\\\"middle\\\">{{ item.phoneNumber }}</td>\\r\\n                <td class=\\\"middle center\\\">\\r\\n                    <span class=\\\"badge\\\"\\r\\n                          [class.badge-danger]=\\\"!item.isActive\\\"\\r\\n                          [class.badge-success]=\\\"item.isActive\\\">\\r\\n                        {item.isActive, select, 0 {InActive} 1 {Activated}}\\r\\n                    </span>\\r\\n                </td>\\r\\n                <td class=\\\"center middle\\\" *ngIf=\\\"permission.edit\\\">\\r\\n                    <ghm-button type=\\\"button\\\" classes=\\\"btn blue btn-outline btn-sm\\\"\\r\\n                                icon=\\\"fa fa-edit\\\"\\r\\n                                i18n-matTooltip=\\\"@@edit\\\"\\r\\n                                matTooltip=\\\"Edit\\\"\\r\\n                                (click)=\\\"edit(item)\\\">\\r\\n                    </ghm-button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n                    [isDisabled]=\\\"isSearching\\\" [pageName]=\\\"'tenant'\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<app-tenant-form (saveSuccessful)=\\\"search(1)\\\"></app-tenant-form>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { IPageId, PAGE_ID } from '../../../configs/page-id.config';\r\nimport { BaseListComponent } from '../../../base-list.component';\r\nimport { Tenant } from './tenant.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TenantService } from './tenant.service';\r\nimport { ISearchResult } from '../../../interfaces/isearch.result';\r\nimport { TenantFormComponent } from './tenant-form.component';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-tenant',\r\n    templateUrl: './tenant.component.html'\r\n})\r\n\r\nexport class TenantComponent extends BaseListComponent<Tenant> implements OnInit {\r\n    @ViewChild(TenantFormComponent) tenantFormComponent: TenantFormComponent;\r\n    isActive: boolean;\r\n\r\n    constructor(@Inject(PAGE_ID) private pageId: IPageId,\r\n                private toastr: ToastrService,\r\n                private tenantService: TenantService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.CONFIG, this.pageId.CONFIG_TENANT, 'Quản lý Tenant', 'Danh sách tenant');\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.listItems$ = this.tenantService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((result: SearchResultViewModel<Tenant>) => {\r\n                    this.totalRows = result.totalRows;\r\n                    return result.items;\r\n                })\r\n            );\r\n    }\r\n\r\n    add() {\r\n        this.tenantFormComponent.add();\r\n    }\r\n\r\n    edit(tenant: Tenant) {\r\n        this.tenantFormComponent.edit(tenant);\r\n    }\r\n}\r\n","import {Page} from '../page/models/page.model';\r\nimport {TenantPage} from '../page/models/teanant-page.viewmodel';\r\n\r\nexport interface TenantLanguage {\r\n    languageId: string;\r\n    name: string;\r\n    isActive: boolean;\r\n    isDefault: boolean;\r\n}\r\n\r\nexport class Tenant {\r\n    id: string;\r\n    name: string;\r\n    phoneNumber: string;\r\n    logo: string;\r\n    email: string;\r\n    address: string;\r\n    note: string;\r\n    isActive: boolean;\r\n    languages: TenantLanguage[];\r\n    pages: TenantPage[];\r\n    userId: string;\r\n    constructor() {\r\n        this.isActive = true;\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { Tenant, TenantLanguage } from './tenant.model';\r\nimport { Observable } from 'rxjs';\r\nimport { IResponseResult } from '../../../interfaces/iresponse-result';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\nimport { SpinnerService } from '../../../core/spinner/spinner.service';\r\nimport { SearchResultViewModel } from '../../../shareds/view-models/search-result.viewmodel';\r\nimport { ActionResultViewModel } from '../../../shareds/view-models/action-result.viewmodel';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class TenantService {\r\n    url = 'api/v1/core/tenants';\r\n\r\n    constructor(@Inject(APP_CONFIG) appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private appService: AppService) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    search(keyword: string, isActive?: boolean, page?: number, pageSize: number = 1): Observable<SearchResultViewModel<Tenant>> {\r\n        return this.http.get(this.url, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null && isActive !== undefined ? keyword : '')\r\n                .set('page', page ? page.toString() : '')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '')\r\n        }) as Observable<SearchResultViewModel<Tenant>>;\r\n    }\r\n\r\n    insert(tenant: Tenant): Observable<IResponseResult> {\r\n        this.spinnerService.show();\r\n        return this.http.post(this.url, tenant).pipe(finalize(() => this.spinnerService.hide()),\r\n            map((result: ActionResultViewModel) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n        })) as Observable<IResponseResult>;\r\n    }\r\n\r\n    update(tenant: Tenant): Observable<IResponseResult> {\r\n        return this.http.post(`${this.url}/${tenant.id}`, {\r\n            name: tenant.name,\r\n            isActive: tenant.isActive,\r\n            phoneNumber: tenant.phoneNumber,\r\n            logo: tenant.logo,\r\n            email: tenant.email,\r\n            address: tenant.address,\r\n            note: tenant.note,\r\n            languages: tenant.languages\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.appService.showActionResultMessage(result);\r\n            return result;\r\n        })) as Observable<IResponseResult>;\r\n    }\r\n\r\n    updateActiveStatus(id: string, isActive?: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/${id}/${isActive}`, {})\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getLanguage(tenantId: string): Observable<TenantLanguage[]> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/${tenantId}/languages`)\r\n            .pipe(finalize(() => this.spinnerService.hide()),\r\n                map((result: SearchResultViewModel<TenantLanguage>) => {\r\n                    return result.items;\r\n                })\r\n            ) as Observable<TenantLanguage[]>;\r\n    }\r\n\r\n    addLanguage(tenantId: string, language: TenantLanguage) {\r\n        return this.http.post(`${this.url}/${tenantId}/languages`, language)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            }));\r\n    }\r\n\r\n    removeLanguage(tenantId: string, languageId: string) {\r\n        return this.http.delete(`${this.url}/${tenantId}/languages/${languageId}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            }));\r\n    }\r\n\r\n    updateTenantLanguageActiveStatus(tenantId: string, languageId: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.get(`${this.url}/${tenantId}/language/${languageId}/active/${isActive}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateTenantLanguageDefaultStatus(tenantId: string, languageId: string, isDefault: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.get(`${this.url}/${tenantId}/language/${languageId}/default/${isDefault}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.appService.showActionResultMessage(result);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    saveLanguage(languageId: string, isDefault: boolean, isActive: boolean): Observable<ActionResultViewModel> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .post(`${this.url}/languages`, {\r\n                languageId: languageId,\r\n                isDefalt: isDefault,\r\n                isActive: isActive\r\n            })\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@userSettings\\\">User settings</span>\\r\\n    <small i18n=\\\"@@configModuleTitle\\\">Configs</small>\\r\\n</h1>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"portlet box green-meadow\\\">\\r\\n            <div class=\\\"portlet-title\\\">\\r\\n                <div class=\\\"caption\\\">\\r\\n                    <i class=\\\"fa fa-th\\\"></i>\\r\\n                    <span i18n=\\\"@@configTheme\\\"> Config theme </span>\\r\\n                </div>\\r\\n                <!--<div class=\\\"tools\\\">-->\\r\\n                <!--<a href=\\\"javascript:;\\\" class=\\\"collapse\\\" data-original-title=\\\"\\\" title=\\\"\\\"> </a>-->\\r\\n                <!--<a href=\\\"#portlet-config\\\" data-toggle=\\\"modal\\\" class=\\\"config\\\" data-original-title=\\\"\\\" title=\\\"\\\"> </a>-->\\r\\n                <!--<a href=\\\"\\\" class=\\\"fullscreen\\\" data-original-title=\\\"\\\" title=\\\"\\\"> </a>-->\\r\\n                <!--<a href=\\\"javascript:;\\\" class=\\\"reload\\\" data-original-title=\\\"\\\" title=\\\"\\\"> </a>-->\\r\\n                <!--</div>-->\\r\\n            </div>\\r\\n            <div class=\\\"portlet-body\\\">\\r\\n                <form class=\\\"form-horizontal config-theme-wrapper\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"col-sm-12\\\" ghmLabel=\\\"Theme color:\\\" i18n-ghmLabel=\\\"@@themeColor\\\"></label>\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <ul class=\\\"theme-color-wrapper\\\">\\r\\n                                <li *ngFor=\\\"let theme of themes\\\"\\r\\n                                    (click)=\\\"chooseTheme(theme)\\\"\\r\\n                                    class=\\\"color-{{ theme }}\\\"\\r\\n                                    [class.active]=\\\"theme === currentTheme\\\"\\r\\n                                    mat-raised-button\\r\\n                                    matTooltip=\\\"{{ theme }}\\\"\\r\\n                                ></li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from '../../../shareds/services/app.service';\r\n\r\n@Component({\r\n    selector: 'app-user-setting',\r\n    templateUrl: './user-setting.component.html'\r\n})\r\n\r\nexport class UserSettingComponent implements OnInit {\r\n    themes = ['default', 'blue', 'darkblue', 'grey', 'light', 'light2'];\r\n    currentTheme: string;\r\n\r\n    constructor(private appService: AppService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.currentTheme = this.appService.theme$.getValue();\r\n    }\r\n\r\n    chooseTheme(themeName: string) {\r\n        this.appService.changeTheme(themeName);\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"<form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n    <div formArrayName=\\\"modelTranslations\\\">\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"languages && languages.length > 1\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                   class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n                <nh-select [data]=\\\"languages\\\"\\r\\n                           i18n-title=\\\"@@pleaseSelectLanguage\\\"\\r\\n                           title=\\\"-- Please select language --\\\"\\r\\n                           name=\\\"language\\\"\\r\\n                           [(value)]=\\\"currentLanguage\\\"\\r\\n                           (onSelectItem)=\\\"currentLanguage = $event.id\\\"></nh-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n             [class.has-error]=\\\"formErrors?.logo\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@logo\\\" ghmLabel=\\\"Logo\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <div class=\\\"fileinput fileinput-new\\\">\\r\\n                    <div class=\\\"fileinput-new thumbnail\\\">\\r\\n                        <img ghmImage [errorImageUrl]=\\\"'/assets/images/no-image.png'\\\" class=\\\"w150 cm-mgb-5\\\"\\r\\n                             [src]=\\\"model.value.logo\\\" [isUrlAbsolute]=\\\"true\\\">\\r\\n                        <ghm-file-explorer i18n-buttonText=\\\"@@selectImage\\\" [buttonText]=\\\"'Select image'\\\"\\r\\n                                           (itemSelected)=\\\"onImageSelected($event)\\\"></ghm-file-explorer>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <span class=\\\"help-block\\\">{ formErrors?.logo, select,  maxLength {Logo time not allowed\\r\\n                                                    over 500 characters} }</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\"\\r\\n             [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n             *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n             [formGroupName]=\\\"i\\\"\\r\\n             [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@name\\\" ghmLabel=\\\"Name\\\" class=\\\"col-sm-3 control-label\\\"\\r\\n                   [required]=\\\"true\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@namePlaceHolder\\\"\\r\\n                       id=\\\"{{'name ' + currentLanguage}}\\\"\\r\\n                       placeholder=\\\"Please enter name \\\"\\r\\n                       formControlName=\\\"name\\\"/>\\r\\n                <span class=\\\"help-block\\\">{ translationFormErrors[modelTranslation.value.languageId]?.name, select, required {Name is required} maxLength {Name not allowed\\r\\n                                                    over 256 characters} }</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n             *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n             [formGroupName]=\\\"i\\\"\\r\\n             [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.adsress\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@address\\\" ghmLabel=\\\"Address\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@address\\\"\\r\\n                       placeholder=\\\"Please enter address\\\"\\r\\n                       formControlName=\\\"address\\\"/>\\r\\n                <span class=\\\"help-block\\\">{ translationFormErrors[modelTranslation.value.languageId]?.address, select, maxLength {Address not allowed\\r\\n                                                    over 500 characters}}\\r\\n                 </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n             [class.has-error]=\\\"formErrors?.workTime\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@workTime\\\" ghmLabel=\\\"Work Time\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@workTimePlaceHolder\\\"\\r\\n                       placeholder=\\\"Please enter work time\\\"\\r\\n                       formControlName=\\\"workTime\\\"/>\\r\\n                <span class=\\\"help-block\\\">{ formErrors?.workTime, select,  maxLength {Work time not allowed\\r\\n                                                    over 256 characters} }</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n             [class.has-error]=\\\"formErrors?.googleMap\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@googleMap\\\" ghmLabel=\\\"GoogleMap\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@googleMapPlaceHolder\\\"\\r\\n                       placeholder=\\\"Please enter link google map\\\"\\r\\n                       formControlName=\\\"googleMap\\\"/>\\r\\n                <span class=\\\"help-block\\\">{ formErrors?.googleMap, select,  maxLength {Link google map not allowed\\r\\n                                                    over 500 characters}}</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n             [class.has-error]=\\\"formErrors?.website\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@website\\\" ghmLabel=\\\"Website\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@websitePlaceHolder\\\"\\r\\n                       placeholder=\\\"Please enter website\\\"\\r\\n                       formControlName=\\\"website\\\"/>\\r\\n                <span class=\\\"help-block\\\">{ formErrors?.website, select,  maxLength {Website not allowed\\r\\n                                                    over 500 characters} pattern {Website is invalid}}</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group cm-mg-0\\\" [formGroup]=\\\"model\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@isOffice\\\" ghmLabel=\\\"Is Office\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isOffice\\\" i18n=\\\"@@isOffice\\\">\\r\\n                    {model.value.isOffice, select, 0 {Not Office} 1 {Office} null {Not Office}}\\r\\n                </mat-checkbox>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@contact\\\" ghmLabel=\\\"Contact Infomation\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <app-config-branch-item [listBranchItem]=\\\"listBranchItem\\\"></app-config-branch-item>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-9 col-sm-offset-3\\\">\\r\\n                <button class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\">Save</button>\\r\\n                <button class=\\\"btn default\\\" i18n=\\\"@@cancel\\\" type=\\\"button\\\" (click)=\\\"closeForm()\\\">Cancel</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {BranchDetailViewModel} from '../viewmodel/branch-detail.viewmodel';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {BranchService} from '../branch.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {BranchItem, ContactType} from '../model/branch-item.model';\r\nimport {BranchTranslation} from '../model/branch-translation.model';\r\nimport {Branch} from '../model/branch.model';\r\nimport {finalize} from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport {Pattern} from '../../../../../shareds/constants/pattern.const';\r\nimport {ExplorerItem} from '../../../../../shareds/components/ghm-file-explorer/explorer-item.model';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-config-website-branch-form',\r\n    templateUrl: './branch-form.component.html',\r\n    providers: [BranchService]\r\n})\r\n\r\nexport class BranchFormComponent extends BaseFormComponent implements OnInit {\r\n    @Output() onCloseForm = new EventEmitter();\r\n    @Output() onSaveSuccess = new EventEmitter();\r\n    branch = new Branch();\r\n    listBranchItem: BranchItem[] = [];\r\n    modelTranslation = new BranchTranslation();\r\n\r\n    constructor(private utilService: UtilService,\r\n                private toastr: ToastrService,\r\n                private fb: FormBuilder,\r\n                private branchService: BranchService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n        this.inertDefaultBranchItem();\r\n    }\r\n\r\n    add() {\r\n        this.utilService.focusElement('name ' + this.currentLanguage);\r\n        this.isUpdate = false;\r\n        this.renderForm();\r\n        this.resetForm();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.utilService.focusElement('name ' + this.currentLanguage);\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.branch = this.model.value;\r\n            this.branch.branchItems = _.filter(this.listBranchItem, (item: BranchItem) => {\r\n                return item.contactValue;\r\n            });\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.branchService.update(this.id, this.branch)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.onSaveSuccess.emit();\r\n                    });\r\n            } else {\r\n                this.branchService.insert(this.branch)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.utilService.focusElement('name ' + this.currentLanguage);\r\n                        this.isModified = true;\r\n                        this.onSaveSuccess.emit();\r\n                        this.resetForm();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    getDetail(id: string) {\r\n        this.branchService.getDetail(id).subscribe((result: ActionResultViewModel<BranchDetailViewModel>) => {\r\n            const branchDetail = result.data;\r\n            if (branchDetail) {\r\n                this.model.patchValue({\r\n                    id: branchDetail.id,\r\n                    googleMap: branchDetail.link,\r\n                    website: branchDetail.website,\r\n                    workTime: branchDetail.workTime,\r\n                    logo: branchDetail.logo,\r\n                    isOffice: branchDetail.isOffice,\r\n                    concurrencyStamp: branchDetail.concurrencyStamp,\r\n                });\r\n                this.listBranchItem = branchDetail.branchContactDetails;\r\n                if (branchDetail.branchContactTranslations && branchDetail.branchContactTranslations.length > 0) {\r\n                    this.modelTranslations.controls.forEach(\r\n                        (model: FormGroup) => {\r\n                            const detail = _.find(\r\n                                branchDetail.branchContactTranslations,\r\n                                (branchTranslations: BranchTranslation) => {\r\n                                    return (\r\n                                        branchTranslations.languageId ===\r\n                                        model.value.languageId\r\n                                    );\r\n                                }\r\n                            );\r\n                            if (detail) {\r\n                                model.patchValue(detail);\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onImageSelected(file: ExplorerItem) {\r\n        if (file.isImage) {\r\n            this.model.patchValue({logo: file.absoluteUrl});\r\n        } else {\r\n            this.toastr.error('Please select file image');\r\n        }\r\n    }\r\n\r\n    closeForm() {\r\n        this.onCloseForm.emit();\r\n    }\r\n\r\n    private inertDefaultBranchItem() {\r\n        if (!this.listBranchItem || this.listBranchItem.length === 0) {\r\n            this.listBranchItem.push(new BranchItem('', '', ContactType.email, '', true, true));\r\n        }\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['googleMap', 'workTime', 'website', 'logo']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'googleMap': ['maxLength']},\r\n            {'workTime': ['maxLength']},\r\n            {'website': ['maxLength', 'pattern']},\r\n            {'logo': ['maxLength']}\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            workTime: [this.branch.workTime,\r\n                [Validators.maxLength(256)]],\r\n            googleMap: [this.branch.googleMap, [\r\n                Validators.maxLength(500)\r\n            ]],\r\n            website: [this.branch.website, [Validators.maxLength(500), Validators.pattern(Pattern.url)]],\r\n            logo: [this.branch.logo, [Validators.maxLength(500)]],\r\n            isOffice: [this.branch.isOffice],\r\n            concurrencyStamp: [this.branch.concurrencyStamp],\r\n            modelTranslations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name', 'address']\r\n        );\r\n        this.translationValidationMessage[language] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxLength']},\r\n            {address: ['maxLength']},\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256)]\r\n            ],\r\n            address: [this.modelTranslation.address,\r\n                [Validators.maxLength(500)]],\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslationModel(false)\r\n        );\r\n        return translationModel;\r\n    };\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            id: null,\r\n            workTime: '',\r\n            googleMap: '',\r\n            website: '',\r\n            logo: '',\r\n            isOffice: false,\r\n            concurrencyStamp: '',\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                address: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-hover table-stripped\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th class=\\\"middle w150\\\" i18n=\\\"@@contactType\\\">Contact Type</th>\\r\\n            <th class=\\\"middle\\\" i18n=\\\"@@contactValue\\\">Contact Value</th>\\r\\n            <th class=\\\"center middle w100\\\" i18n=\\\"@@action\\\" *ngIf=\\\"permission.delete || permission.add\\\">\\r\\n                <button class=\\\"btn btn-sm blue\\\" (click)=\\\"addBranchItem()\\\" type=\\\"button\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                </button>\\r\\n            </th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let item of listBranchItem; let i = index\\\">\\r\\n            <td class=\\\"middle center\\\">\\r\\n                <nh-select [data]=\\\"contactTypes\\\"\\r\\n                           [(ngModel)]=\\\"item.contactType\\\"\\r\\n                           i18n-title=\\\"@@titelContactType\\\"\\r\\n                           [title]=\\\"'-- Select contact type'\\\"></nh-select>\\r\\n            </td>\\r\\n            <td class=\\\"middle\\\">\\r\\n                <span *ngIf=\\\"!item.isEdit && !item.isNew; else valueInput\\\">{{item.contactValue}}</span>\\r\\n                <ng-template #valueInput>\\r\\n                    <input class=\\\"form-control\\\" [(ngModel)]=\\\"item.contactValue\\\" i18n-placeHolder=\\\"valuePlaceHolder\\\"\\r\\n                           placeholder=\\\"Please enter value\\\" name=\\\"contactvalue\\\">\\r\\n                </ng-template>\\r\\n            </td>\\r\\n            <td class=\\\"middle center\\\">\\r\\n                <button *ngIf=\\\"permission.edit && item.id && item.isEdit\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn blue btn-sm\\\"\\r\\n                        (click)=\\\"item.isEdit = true\\\">\\r\\n                    <i class=\\\"fa fa-save\\\"></i>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"permission.edit && item.id && !item.isEdit\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn blue btn-sm\\\"\\r\\n                        (click)=\\\"item.isEdit = true\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"permission.edit && item.id && item.isEdit\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn red btn-sm\\\"\\r\\n                        (click)=\\\"item.isEdit = false\\\">\\r\\n                    <i class=\\\"fa fa-ban\\\"></i>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"permission.delete && !(item.isEdit && item.id)\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn red btn-sm\\\"\\r\\n                        (click)=\\\"deleteBranchItem(i)\\\">\\r\\n                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\"","import {Component, Input} from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport {BranchItem, ContactType} from '../model/branch-item.model';\r\nimport {BaseListComponent} from '../../../../../base-list.component';\r\n\r\n@Component({\r\n    selector: 'app-config-branch-item',\r\n    templateUrl: './branch-item.component.html'\r\n})\r\n\r\nexport class BranchItemComponent extends BaseListComponent<BranchItem> {\r\n    @Input() listBranchItem: BranchItem[] = [];\r\n    contactTypes = [{\r\n        id: ContactType.email,\r\n        name: 'Email'\r\n    }, {\r\n        id: ContactType.mobilePhone,\r\n        name: 'Mobile Phone'\r\n    }, {\r\n        id: ContactType.homePhone,\r\n        name: 'Home Phone'\r\n    }, {\r\n        id: ContactType.fax,\r\n        name: 'Fax'\r\n    }];\r\n\r\n    addBranchItem() {\r\n        this.listBranchItem.push(new BranchItem('', '', ContactType.email, '', true, true));\r\n    }\r\n\r\n    deleteBranchItem(index) {\r\n        _.pullAt(this.listBranchItem, [index]);\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n             <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@contactInformation\\\">\\r\\n                  <i class=\\\"fa fa-compress\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                 Contact information\\r\\n             </span>\\r\\n        </div>\\r\\n        <div class=\\\"actions\\\">\\r\\n            <button class=\\\"btn blue btn-circle\\\" *ngIf=\\\"!isShowForm\\\" type=\\\"button\\\" (click)=\\\"isShowForm = !isShowForm\\\">\\r\\n                <span i18n=\\\"@@add\\\"><i class=\\\"fa fa-plus\\\"></i> Add</span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <div class=\\\"col-sm-12\\\" *ngIf=\\\"isShowForm\\\">\\r\\n            <app-config-website-branch-form (onSaveSuccess)=\\\"search(1)\\\"\\r\\n                                            (onCloseForm)=\\\"isShowForm = false\\\"></app-config-website-branch-form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <table class=\\\"table table-hover table-striped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th class=\\\"middle w300\\\" i18n=\\\"@@name\\\">Name</th>\\r\\n                <th class=\\\"middle center\\\" i18n=\\\"@@address\\\">Address</th>\\r\\n                <th class=\\\"middle w50 center\\\" i18n=\\\"@@isOffice\\\"> Is Office</th>\\r\\n                <th class=\\\"middle center w100\\\" i18n=\\\"@@action\\\">\\r\\n                    Action\\r\\n                </th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listBranch; let i = index\\\">\\r\\n                <td class=\\\"middle center\\\">{{i + 1}}</td>\\r\\n                <td class=\\\"middle\\\">\\r\\n                    <div class=\\\"media\\\" [class.cursor-pointer]=\\\"permission.edit\\\"\\r\\n                         (click)=\\\"permission.edit ? edit(item.id) : ''\\\"\\r\\n                         title=\\\"{{item.name}}\\\">\\r\\n                        <div class=\\\"media-left middle\\\">\\r\\n                            <img ghmImage=\\\"\\\" [src]=\\\"item.logo\\\" [isUrlAbsolute]=\\\"true\\\" class=\\\"media-object w50\\\"\\r\\n                                 alt=\\\"{{item.name}}\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"media-body middle\\\">\\r\\n                            <h4 class=\\\"media-heading\\\">{{ item.name }}</h4>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"middle\\\">{{item.address}}</td>\\r\\n                <td class=\\\"middle center\\\"><i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"item.isOffice\\\"></i></td>\\r\\n                <td class=\\\"center middle\\\">\\r\\n                    <nh-dropdown>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\"\\r\\n                                matTooltip=\\\"Menu\\\">\\r\\n                            <mat-icon>more_horiz</mat-icon>\\r\\n                        </button>\\r\\n                        <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                            <li>\\r\\n                                <a *ngIf=\\\"permission.edit\\\"\\r\\n                                   (click)=\\\"edit(item.id)\\\"\\r\\n                                   i18n=\\\"@@edit\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                    Edit\\r\\n                                </a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a [swal]=\\\"confirmDeleteContactInformation\\\"\\r\\n                                   (confirm)=\\\"delete(item.id)\\\" i18n=\\\"@@delete\\\">\\r\\n                                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                    Delete\\r\\n                                </a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </nh-dropdown>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [pageSize]=\\\"pageSize\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\"\\r\\n                    (pageClick)=\\\"search($event)\\\"\\r\\n                    [isDisabled]=\\\"isSearching\\\" i18n-pageName=\\\"@@branch\\\" pageName=\\\"Branch\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<swal #confirmDeleteContactInformation\\r\\n      i18n=\\\"@@confirmDeleteContactInformation\\\"\\r\\n      i18n-title=\\\"@@confirmTitleDeleteContactInformation\\\"\\r\\n      i18n-text=\\\"@@confirmTextDeleteContactInformation\\\"\\r\\n      title=\\\"Are you sure for this contact information?\\\"\\r\\n      text=\\\"You can't recover this contact information after delete.\\\"\\r\\n      type=\\\"question\\\"\\r\\n      i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n      i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n      confirmButtonText=\\\"Accept\\\"\\r\\n      cancelButtonText=\\\"Cancel\\\"\\r\\n      [showCancelButton]=\\\"true\\\"\\r\\n      [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\"","import {Component, ViewChild} from '@angular/core';\r\nimport {BaseListComponent} from '../../../../base-list.component';\r\nimport {BranchSearchViewModel} from './viewmodel/branch-search.viewmodel';\r\nimport {BranchService} from './branch.service';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport * as  _ from 'lodash';\r\nimport {BranchFormComponent} from './branch-form/branch-form.component';\r\n\r\n@Component({\r\n    selector: 'app-config-website-branch',\r\n    templateUrl: './branch.component.html',\r\n    providers: [BranchService]\r\n})\r\n\r\nexport class BranchComponent extends BaseListComponent<BranchSearchViewModel> {\r\n    @ViewChild(BranchFormComponent) branchFormComponent: BranchFormComponent;\r\n    listBranch;\r\n    isShowForm;\r\n    branchId;\r\n\r\n    constructor(private  branchService: BranchService) {\r\n        super();\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.branchService.search('', this.currentPage, this.pageSize)\r\n            .subscribe((result: SearchResultViewModel<BranchSearchViewModel>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listBranch = result.items;\r\n            });\r\n    }\r\n\r\n    add() {\r\n        this.isShowForm = true;\r\n        this.branchFormComponent.add();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.branchId = id;\r\n        this.isShowForm = true;\r\n        setTimeout(() => {\r\n            console.log(this.branchFormComponent);\r\n            this.branchFormComponent.edit(id);\r\n        }, 100);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.branchService.delete(id).subscribe(() => {\r\n            _.remove(this.listBranch, (item: BranchSearchViewModel) => {\r\n               return item.id === id;\r\n            });\r\n        });\r\n    }\r\n}\r\n","import {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Inject} from '@angular/core';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {Branch} from './model/branch.model';\r\nimport {Observable} from 'rxjs';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {BranchSearchViewModel} from './viewmodel/branch-search.viewmodel';\r\nimport {SpinnerService} from '../../../../core/spinner/spinner.service';\r\nimport {BranchDetailViewModel} from './viewmodel/branch-detail.viewmodel';\r\n\r\nexport class BranchService {\r\n    url = 'branchs/';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private httpClient: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService) {\r\n        this.url = `${this.appConfig.WEBSITE_API_URL}${this.url}`;\r\n    }\r\n\r\n    search(keyword: string, page: number = 1, pageSize: number = this.appConfig.PAGE_SIZE)\r\n    : Observable<SearchResultViewModel<BranchSearchViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.httpClient.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page.toString())\r\n                .set('pageSize', pageSize.toString())\r\n        }).pipe(finalize(() => this.spinnerService.hide()), map((result: SearchResultViewModel<BranchSearchViewModel>) => {\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<BranchSearchViewModel>>;\r\n    }\r\n\r\n    insert(branch: Branch): Observable<ActionResultViewModel> {\r\n        return this.httpClient.post(`${this.url}`, {\r\n            workTime: branch.workTime,\r\n            link: branch.googleMap,\r\n            website: branch.website,\r\n            logo: branch.logo,\r\n            isOffice: branch.isOffice,\r\n            concurrencyStamp: branch.concurrencyStamp,\r\n            branchContactDetails: branch.branchItems,\r\n            branchContactTranslations: branch.modelTranslations,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<BranchDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.httpClient.get(`${this.url}${id}`, {})\r\n            .pipe(finalize(() => {\r\n                this.spinnerService.hide();\r\n            })) as Observable<ActionResultViewModel<BranchDetailViewModel>>;\r\n    }\r\n\r\n    update(id: string, branch: Branch): Observable<ActionResultViewModel> {\r\n        return this.httpClient.post(`${this.url}${id}`, {\r\n            workTime: branch.workTime,\r\n            link: branch.googleMap,\r\n            website: branch.website,\r\n            logo: branch.logo,\r\n            isOffice: branch.isOffice,\r\n            concurrencyStamp: branch.concurrencyStamp,\r\n            branchContactDetails: branch.branchItems,\r\n            branchContactTranslations: branch.modelTranslations,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.httpClient.delete(`${this.url}/${id}`).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","\r\nexport const  ContactType = {\r\n    homePhone: 0,\r\n    mobilePhone: 1,\r\n    email: 2,\r\n    fax: 3\r\n}\r\n\r\nexport class BranchItem {\r\n    id: string;\r\n    branchId: string;\r\n    contactType: number;\r\n    contactValue: string;\r\n    isNew: boolean;\r\n    isEdit: boolean;\r\n\r\n    constructor(id?: string, branchId?: string, contactType?: number, contactValue?: string, isNew?: boolean, isEdit?: boolean) {\r\n        this.id = id;\r\n        this.branchId = this.branchId;\r\n        this.contactType = contactType;\r\n        this.contactValue = contactValue;\r\n        this.isNew = isNew;\r\n        this.isEdit = isEdit;\r\n    }\r\n}\r\n","export class BranchTranslation {\r\n    languageId: string;\r\n    name: string;\r\n    address: string;\r\n    tel: string;\r\n}\r\n","import {BranchTranslation} from './branch-translation.model';\r\nimport {BranchItem} from './branch-item.model';\r\n\r\nexport class Branch {\r\n    workTime: string;\r\n    googleMap: string;\r\n    website: string;\r\n    logo: string;\r\n    isOffice: boolean;\r\n    concurrencyStamp: string;\r\n    branchItems: BranchItem[];\r\n    modelTranslations: BranchTranslation[];\r\n\r\n    constructor(workTime?: string, googleMap?: string, website?: string, logo?: string, isOffice?: boolean, concurrencyStamp?: string) {\r\n        this.workTime = workTime;\r\n        this.googleMap = googleMap;\r\n        this.website = website;\r\n        this.logo = logo;\r\n        this.isOffice = false;\r\n        this.modelTranslations = [];\r\n        this.concurrencyStamp = this.concurrencyStamp;\r\n    }\r\n}\r\n","module.exports = \"<form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n    <div class=\\\"tab-content\\\" formArrayName=\\\"translations\\\">\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"languages && languages.length > 1\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                   class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n                <nh-select [data]=\\\"languages\\\"\\r\\n                           i18n-title=\\\"@@pleaseSelectLanguage\\\"\\r\\n                           title=\\\"-- Please select language --\\\"\\r\\n                           name=\\\"language\\\"\\r\\n                           [(value)]=\\\"currentLanguage\\\"\\r\\n                           (onSelectItem)=\\\"currentLanguage = $event.id\\\"></nh-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\"\\r\\n             [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n             *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n             [formGroupName]=\\\"i\\\"\\r\\n             [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@name\\\" ghmLabel=\\\"Name\\\" class=\\\"col-sm-3 control-label\\\"\\r\\n                   [required]=\\\"true\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@namePlaceHolder\\\"\\r\\n                       id=\\\"{{'name ' + currentLanguage}}\\\"\\r\\n                       placeholder=\\\"Please enter name \\\"\\r\\n                       formControlName=\\\"name\\\"/>\\r\\n                <span class=\\\"help-block\\\">{ translationFormErrors[modelTranslation.value.languageId]?.name, select, required {Name is required} maxLength {Name not allowed\\r\\n                                                    over 256 characters} }</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n             *ngFor=\\\"let modelTranslation of translations.controls; index as i\\\"\\r\\n             [formGroupName]=\\\"i\\\"\\r\\n             [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@description\\\" ghmLabel=\\\"Description\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <textarea type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@descriptionPlaceHolder\\\"\\r\\n                          placeholder=\\\"Please enter description\\\"\\r\\n                          formControlName=\\\"description\\\" rows=\\\"3\\\"></textarea>\\r\\n                <span class=\\\"help-block\\\">{ translationFormErrors[modelTranslation.value.languageId]?.description, select, maxLength {Description not allowed\\r\\n                                                    over 500 characters}}\\r\\n                 </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group cm-mg-0\\\" [formGroup]=\\\"model\\\"\\r\\n             [class.has-error]=\\\"formErrors?.order\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@order\\\" ghmLabel=\\\"Order\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" i18n-placeholder=\\\"@@orderPlaceHolder\\\"\\r\\n                       placeholder=\\\"Please enter Order\\\"\\r\\n                       formControlName=\\\"order\\\"/>\\r\\n                {{formErrors?.order}}\\r\\n                <span class=\\\"help-block\\\">{ formErrors?.order, select,\\r\\n                                            isValid {Order must is number}\\r\\n                                            greaterThan {Order must greater than 0}}\\r\\n                 </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group cm-mg-0\\\" [formGroup]=\\\"model\\\"\\r\\n             [class.has-error]=\\\"formErrors?.order\\\">\\r\\n            <label i18n-ghmLabel=\\\"@@isActive\\\" ghmLabel=\\\"IsActive\\\" class=\\\"col-sm-3 control-label\\\"></label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n                <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                    {model.value.isActive, select, 0 {Not Active} 1 {Active}}\\r\\n                </mat-checkbox>\\r\\n                <span class=\\\"help-block\\\">{ formErrors?.isActive, select,\\r\\n                                            required {IsActive is required}}\\r\\n                 </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-9 col-sm-offset-3\\\">\\r\\n                <button class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\">Save</button>\\r\\n                <button class=\\\"btn default\\\" i18n=\\\"@@cancel\\\" type=\\\"button\\\" (click)=\\\"closeForm()\\\">Cancel</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {CoreValue} from '../model/core-value.model';\r\nimport {CoreValuesTranslation} from '../model/core-values.translation';\r\nimport {CoreValuesService} from '../core-values.service';\r\nimport {CoreValueDetailViewModel} from '../viewmodel/core-value-detail.viewmodel';\r\nimport * as _ from 'lodash';\r\nimport {NumberValidator} from '../../../../../validators/number.validator';\r\n\r\n@Component({\r\n    selector: 'app-config-website-core-values-form',\r\n    templateUrl: './core-values-form.component.html',\r\n    providers: [NumberValidator]\r\n})\r\n\r\nexport class CoreValuesFormComponent extends BaseFormComponent implements OnInit {\r\n    @Output() onCloseForm = new EventEmitter();\r\n    @Output() onSaveSuccess = new EventEmitter();\r\n    coreValue = new CoreValue();\r\n    modelTranslation = new CoreValuesTranslation();\r\n\r\n    constructor(private utilService: UtilService,\r\n                private toastr: ToastrService,\r\n                private fb: FormBuilder,\r\n                private numberValidator: NumberValidator,\r\n                private coreValueService: CoreValuesService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n    }\r\n\r\n    add() {\r\n        this.utilService.focusElement('name ' + this.currentLanguage);\r\n        this.isUpdate = false;\r\n        this.renderForm();\r\n        this.resetForm();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.utilService.focusElement('name ' + this.currentLanguage);\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        const isLanguageValid = this.validateLanguage();\r\n        if (isValid && isLanguageValid) {\r\n            this.coreValue = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.coreValueService.update(this.id, this.coreValue)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.onSaveSuccess.emit();\r\n                    });\r\n            } else {\r\n                this.coreValueService.insert(this.coreValue)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.utilService.focusElement('name ' + this.currentLanguage);\r\n                        this.isModified = true;\r\n                        this.onSaveSuccess.emit();\r\n                        this.resetForm();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    getDetail(id: string) {\r\n        this.coreValueService.getDetail(id).subscribe((result: ActionResultViewModel<CoreValueDetailViewModel>) => {\r\n            const coreValueDetail = result.data;\r\n            if (coreValueDetail) {\r\n                this.model.patchValue({\r\n                    id: coreValueDetail.id,\r\n                    isActive: coreValueDetail.isActive,\r\n                    order: coreValueDetail.order,\r\n                    concurrencyStamp: coreValueDetail.concurrencyStamp,\r\n                });\r\n                if (coreValueDetail.translations && coreValueDetail.translations.length > 0) {\r\n                    this.translations.controls.forEach(\r\n                        (model: FormGroup) => {\r\n                            const detail = _.find(\r\n                                coreValueDetail.translations,\r\n                                (translations: CoreValuesTranslation) => {\r\n                                    return (\r\n                                        translations.languageId ===\r\n                                        model.value.languageId\r\n                                    );\r\n                                }\r\n                            );\r\n                            if (detail) {\r\n                                model.patchValue(detail);\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    closeForm() {\r\n        this.onCloseForm.emit();\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['isActive', 'order']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'isActive': ['required']},\r\n            {'order': ['isValid', 'greaterThan']}\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            order: [this.coreValue.order,\r\n                [this.numberValidator.isValid, this.numberValidator.greaterThan(0)]],\r\n            isActive: [this.coreValue.isActive, [\r\n                Validators.required\r\n            ]],\r\n            concurrencyStamp: [this.coreValue.concurrencyStamp],\r\n            translations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name', 'description']\r\n        );\r\n        this.translationValidationMessage[language] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxLength']},\r\n            {description: ['maxLength']},\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256)]\r\n            ],\r\n            description: [this.modelTranslation.description,\r\n                [Validators.maxLength(500)]],\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslation(false)\r\n        );\r\n        return translationModel;\r\n    };\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue(new CoreValue(0, true, ''));\r\n        this.translations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n             <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@coreValues\\\">\\r\\n                  <i class=\\\"fa fa-compress\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                 Core Values\\r\\n             </span>\\r\\n        </div>\\r\\n        <div class=\\\"actions\\\">\\r\\n            <button class=\\\"btn blue btn-circle\\\" *ngIf=\\\"!isShowForm\\\" type=\\\"button\\\" (click)=\\\"isShowForm = !isShowForm\\\">\\r\\n                <span i18n=\\\"@@add\\\"><i class=\\\"fa fa-plus\\\"></i> Add</span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <div class=\\\"col-sm-12\\\" *ngIf=\\\"isShowForm\\\">\\r\\n            <app-config-website-core-values-form (onSaveSuccess)=\\\"search(1)\\\"\\r\\n                                                 (onCloseForm)=\\\"isShowForm = false\\\"></app-config-website-core-values-form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <table class=\\\"table table-hover table-striped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th class=\\\"middle w300\\\" i18n=\\\"@@name\\\">Name</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@address\\\">Description</th>\\r\\n                <th class=\\\"middle w50 center\\\" i18n=\\\"@@isOffice\\\"> IsActive</th>\\r\\n                <th class=\\\"middle w100 center\\\" i18n=\\\"@@order\\\"> Order</th>\\r\\n                <th class=\\\"middle center w100\\\" i18n=\\\"@@action\\\">\\r\\n                    Action\\r\\n                </th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody cdkDropList [cdkDropListData]=\\\"listCoreValue\\\"\\r\\n                   (cdkDropListDropped)=\\\"drop($event)\\\" style=\\\"width: 30%\\\">\\r\\n            <tr *ngFor=\\\"let item of listCoreValue; let i = index\\\" cdkDrag class=\\\"drag-and-drop\\\">\\r\\n                <td class=\\\"middle center\\\">{{i + 1}}</td>\\r\\n                <td class=\\\"middle\\\">\\r\\n                    {{item.name}}\\r\\n                </td>\\r\\n                <td class=\\\"middle\\\">{{item.description}}</td>\\r\\n                <td class=\\\"middle center\\\"><i class=\\\"fa fa-check color-green\\\" *ngIf=\\\"item.isActive\\\"></i></td>\\r\\n                <td class=\\\"middle center\\\">{{item.order}}</td>\\r\\n                <td class=\\\"center middle\\\">\\r\\n                    <nh-dropdown>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-light btn-no-background no-border\\\"\\r\\n                                matTooltip=\\\"Menu\\\">\\r\\n                            <mat-icon>more_horiz</mat-icon>\\r\\n                        </button>\\r\\n                        <ul class=\\\"nh-dropdown-menu right\\\" role=\\\"menu\\\">\\r\\n                            <li>\\r\\n                                <a *ngIf=\\\"permission.edit\\\"\\r\\n                                   (click)=\\\"edit(item.id)\\\"\\r\\n                                   i18n=\\\"@@edit\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                    Edit\\r\\n                                </a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a [swal]=\\\"confirmDeleteCoreValue\\\"\\r\\n                                   (confirm)=\\\"delete(item.id)\\\" i18n=\\\"@@delete\\\">\\r\\n                                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                                    Delete\\r\\n                                </a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </nh-dropdown>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <ghm-paging [totalRows]=\\\"totalRows\\\" [pageSize]=\\\"pageSize\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\"\\r\\n                    (pageClick)=\\\"search($event)\\\"\\r\\n                    [isDisabled]=\\\"isSearching\\\" i18n-pageName=\\\"@@branch\\\" pageName=\\\"Branch\\\"></ghm-paging>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<swal #confirmDeleteCoreValue\\r\\n      i18n=\\\"@@confirmDeleteCoreValue\\\"\\r\\n      i18n-title=\\\"@@confirmTitleDeleteCoreValue\\\"\\r\\n      i18n-text=\\\"@@confirmTextDeleteCoreValue\\\"\\r\\n      title=\\\"Are you sure for delete this core value?\\\"\\r\\n      text=\\\"You can't recover this core value after delete.\\\"\\r\\n      type=\\\"question\\\"\\r\\n      i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n      i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n      confirmButtonText=\\\"Accept\\\"\\r\\n      cancelButtonText=\\\"Cancel\\\"\\r\\n      [showCancelButton]=\\\"true\\\"\\r\\n      [focusCancel]=\\\"true\\\">\\r\\n</swal>\"","import {Component, ViewChild} from '@angular/core';\r\nimport {BranchSearchViewModel} from '../branch/viewmodel/branch-search.viewmodel';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {CoreValuesSearchViewModel} from './viewmodel/core-values-search.viewmodel';\r\nimport {BaseListComponent} from '../../../../base-list.component';\r\nimport {CoreValuesService} from './core-values.service';\r\nimport {CoreValuesFormComponent} from './core-values-form/core-values-form.component';\r\nimport * as _ from 'lodash';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n    selector: 'app-config-website-core-values',\r\n    templateUrl: './core-values.component.html',\r\n    providers: [CoreValuesService]\r\n})\r\n\r\nexport class CoreValuesComponent extends BaseListComponent<CoreValuesSearchViewModel> {\r\n    @ViewChild(CoreValuesFormComponent) coreValueFormComponent: CoreValuesFormComponent;\r\n    listCoreValue: CoreValuesSearchViewModel[];\r\n    isShowForm;\r\n    branchId;\r\n\r\n    constructor(private  coreValueService: CoreValuesService) {\r\n        super();\r\n    }\r\n\r\n    search(currentPage: number) {\r\n        this.currentPage = currentPage;\r\n        this.coreValueService.search('', this.currentPage, this.pageSize)\r\n            .subscribe((result: SearchResultViewModel<CoreValuesSearchViewModel>) => {\r\n                this.totalRows = result.totalRows;\r\n                this.listCoreValue = result.items;\r\n            });\r\n    }\r\n\r\n    add() {\r\n        this.isShowForm = true;\r\n        this.coreValueFormComponent.add();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.branchId = id;\r\n        this.isShowForm = true;\r\n        setTimeout(() => {\r\n            this.coreValueFormComponent.edit(id);\r\n        }, 100);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.coreValueService.delete(id).subscribe(() => {\r\n            _.remove(this.listCoreValue, (item: BranchSearchViewModel) => {\r\n                return item.id === id;\r\n            });\r\n        });\r\n    }\r\n\r\n    drop(event: CdkDragDrop<CoreValuesSearchViewModel[]>) {\r\n        moveItemInArray(this.listCoreValue, event.previousIndex, event.currentIndex);\r\n        console.log(this.listCoreValue[event.currentIndex]);\r\n    }\r\n}\r\n","import {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Inject} from '@angular/core';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {Observable} from 'rxjs';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {SpinnerService} from '../../../../core/spinner/spinner.service';\r\nimport {CoreValuesSearchViewModel} from './viewmodel/core-values-search.viewmodel';\r\nimport {CoreValue} from './model/core-value.model';\r\nimport {CoreValueDetailViewModel} from './viewmodel/core-value-detail.viewmodel';\r\n\r\nexport class CoreValuesService {\r\n    url = 'core-values/';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private httpClient: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService) {\r\n        this.url = `${this.appConfig.WEBSITE_API_URL}${this.url}`;\r\n    }\r\n\r\n    search(keyword: string, page: number = 1, pageSize: number = this.appConfig.PAGE_SIZE)\r\n        : Observable<SearchResultViewModel<CoreValuesSearchViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.httpClient.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('page', page.toString())\r\n                .set('pageSize', pageSize.toString())\r\n        }).pipe(finalize(() => this.spinnerService.hide()), map((result: SearchResultViewModel<CoreValuesSearchViewModel>) => {\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<CoreValuesSearchViewModel>>;\r\n    }\r\n\r\n    insert(coreValue: CoreValue): Observable<ActionResultViewModel> {\r\n        return this.httpClient.post(`${this.url}`, coreValue).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<CoreValueDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.httpClient.get(`${this.url}${id}`, {})\r\n            .pipe(finalize(() => {\r\n                this.spinnerService.hide();\r\n            })) as Observable<ActionResultViewModel<CoreValueDetailViewModel>>;\r\n    }\r\n\r\n    update(id: string, coreValue: CoreValue): Observable<ActionResultViewModel> {\r\n        return this.httpClient.post(`${this.url}${id}`, coreValue).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.httpClient.delete(`${this.url}/${id}`).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n}","import {CoreValuesTranslation} from './core-values.translation';\r\n\r\nexport class CoreValue {\r\n    order: number;\r\n    isActive: boolean;\r\n    concurrencyStamp: string;\r\n    translations: CoreValuesTranslation[];\r\n\r\n    constructor(order?: number,\r\n                isActive?: boolean,\r\n                concurrencyStamp?: string) {\r\n        this.order = order ? order : 0;\r\n        this.isActive = isActive;\r\n        this.concurrencyStamp = concurrencyStamp ? concurrencyStamp : '';\r\n        this.translations = [];\r\n    }\r\n}\r\n","export class CoreValuesTranslation {\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n}","module.exports = \"<form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n    <div class=\\\"form-group\\\"\\r\\n         [class.has-error]=\\\"formErrors?.name\\\">\\r\\n        <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\" class=\\\"col-sm-3 control-label\\\"\\r\\n               [required]=\\\"true\\\"></label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <nh-select [data]=\\\"listLanguage\\\"\\r\\n                       i18n-title=\\\"@@titleLanguage\\\"\\r\\n                       [title]=\\\"'Please select language'\\\"\\r\\n                       formControlName=\\\"languageId\\\"\\r\\n                       (onSelectItem)=\\\"selectLanguage($event)\\\"></nh-select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n        <div class=\\\"col-sm-9 col-sm-offset-3\\\">\\r\\n            <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                {model.value.isActive, select, 0 {InActive} 1 {Active}}\\r\\n            </mat-checkbox>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n        <div class=\\\"col-sm-9 col-sm-offset-3\\\">\\r\\n            <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isDefault\\\" i18n=\\\"@@isDefault\\\">\\r\\n                {model.value.isDefault, select, 0 {Not Default} 1 {Default}}\\r\\n            </mat-checkbox>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group form-actions \\\">\\r\\n        <div class=\\\"col-sm-9 col-sm-offset-3\\\">\\r\\n            <button class=\\\"btn blue cm-mgr-5\\\" i18n=\\\"@@save\\\">Save</button>\\r\\n            <button class=\\\"btn default\\\" i18n=\\\"@@cancel\\\" type=\\\"button\\\" (click)=\\\"closeForm()\\\">Cancel</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {Language} from '../model/language.model';\r\nimport {LanguageService} from '../service/language.service';\r\nimport {SearchResultViewModel} from '../../../../../shareds/view-models/search-result.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-config-language-form',\r\n    templateUrl: './language-form.component.html'\r\n})\r\n\r\nexport class LanguageFormComponent extends BaseFormComponent implements OnInit {\r\n    @Output() onCloseForm = new EventEmitter();\r\n    @Output() onSaveSuccess = new EventEmitter();\r\n    listLanguage: Language[] = [];\r\n    language = new Language('', true, false, '');\r\n\r\n    constructor(private utilService: UtilService,\r\n                private fb: FormBuilder,\r\n                private languageService: LanguageService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n        if (!this.listLanguage || this.listLanguage.length === 0) {\r\n            this.languageService.getALlLanguage().subscribe((result: SearchResultViewModel<Language>) => {\r\n                this.listLanguage = result.items;\r\n            });\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.isUpdate = false;\r\n        this.renderForm();\r\n        this.resetForm();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (isValid) {\r\n            this.language = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                // this.branchService.update(this.id, this.branch)\r\n                //     .pipe(finalize(() => this.isSaving = false))\r\n                //     .subscribe(() => {\r\n                //         this.isModified = true;\r\n                //         this.onSaveSuccess.emit();\r\n                //     });\r\n            } else {\r\n                this.languageService.insert(this.language)\r\n                    .pipe(finalize(() => this.isSaving = false))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.onSaveSuccess.emit();\r\n                        this.resetForm();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    closeForm() {\r\n        this.onCloseForm.emit();\r\n    }\r\n\r\n    selectLanguage(value) {\r\n        if (value) {\r\n            this.model.patchValue({languageId: value.id, name: value.name});\r\n        }\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['languageId', 'name']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {'languageId': ['required, maxLength']},\r\n            {'name': ['required', 'maxLength']}\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            languageId: [this.language.languageId,\r\n                [Validators.required, Validators.maxLength(50)]],\r\n            name: [this.language.name, [\r\n                Validators.required,\r\n                Validators.maxLength(500)\r\n            ]],\r\n            isActive: [this.language.isActive],\r\n            isDefault: [this.language.isDefault]\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue(new Language('', true, false, ''));\r\n        this.clearFormError(this.formErrors);\r\n    }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n             <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@language\\\">\\r\\n                   <i class=\\\"fa fa-language\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                   Language\\r\\n             </span>\\r\\n        </div>\\r\\n        <div class=\\\"actions\\\">\\r\\n            <button type=\\\"button\\\" *ngIf=\\\"!isShowForm\\\" class=\\\"btn blue btn-circle\\\" i18n=\\\"@@add\\\"\\r\\n                    (click)=\\\"isShowForm = !isShowForm\\\">\\r\\n                <span i18n=\\\"@@add\\\"><i class=\\\"fa fa-plus\\\"></i> Add</span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <div *ngIf=\\\"isShowForm\\\" class=\\\"col-sm-12\\\">\\r\\n            <app-config-language-form (onSaveSuccess)=\\\"search()\\\"\\r\\n                                      (onCloseForm)=\\\"isShowForm = false\\\"></app-config-language-form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <table class=\\\"table table-hover table-striped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"center middle w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n                <th class=\\\"middle w100\\\" i18n=\\\"@@code\\\">Code</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@name\\\">Name</th>\\r\\n                <th class=\\\"middle center w100\\\" i18n=\\\"@@default\\\">Default</th>\\r\\n                <th class=\\\"middle center w100\\\" i18n=\\\"@@isActive\\\">Active</th>\\r\\n                <th class=\\\"middle center w100\\\" i18n=\\\"@@action\\\">Action</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listLanguage; let i = index\\\">\\r\\n                <td class=\\\"middle center\\\">{{i + 1}}</td>\\r\\n                <td class=\\\"middle\\\">{{item.languageId}}</td>\\r\\n                <td class=\\\"middle\\\">{{item.name}}</td>\\r\\n                <td class=\\\"middle center\\\">\\r\\n                    <mat-checkbox color=\\\"primary\\\" [checked]=\\\"item.isDefault\\\"\\r\\n                                  (change)=\\\"updateDefault(item, item.isDefault)\\\"></mat-checkbox>\\r\\n                </td>\\r\\n                <td class=\\\"middle center\\\">\\r\\n                    {{item.id}}\\r\\n                    <mat-checkbox color=\\\"primary\\\" [checked]=\\\"item.isActive\\\"\\r\\n                                  (change)=\\\"updateStatus(item, item.isActive)\\\"></mat-checkbox>\\r\\n                </td>\\r\\n                <td class=\\\"center middle\\\">\\r\\n                    <a [swal]=\\\"confirmDeleteLanguage\\\" class=\\\"btn btn-sm red\\\"\\r\\n                       (confirm)=\\\"delete(item.languageId)\\\" i18n=\\\"@@delete\\\">\\r\\n                        <i class=\\\"fa fa-trash\\\"></i>\\r\\n                    </a>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<swal  #confirmDeleteLanguage\\r\\n        i18n=\\\"@@confirmDeleteLanguage\\\"\\r\\n        i18n-title=\\\"@@confirmTitleDeleteLanguage\\\"\\r\\n        i18n-text=\\\"@@confirmTextDeleteLanguage\\\"\\r\\n        title=\\\"Are you sure for delete this language?\\\"\\r\\n        text=\\\"You can't recover this video after language.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\"\\r\\n        [showCancelButton]=\\\"true\\\"\\r\\n        [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseListComponent} from '../../../../base-list.component';\r\nimport {LanguageService} from './service/language.service';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {LanguageFormComponent} from './language-form/language-form.component';\r\nimport {LanguageSearchViewModel} from './viewmodel/language-search.viewmodel';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'app-config-language',\r\n    templateUrl: './language.component.html',\r\n    providers: [LanguageService]\r\n})\r\n\r\nexport class LanguageComponent extends BaseListComponent<LanguageSearchViewModel> implements OnInit {\r\n    @ViewChild(LanguageFormComponent) languageFormComponent: LanguageFormComponent;\r\n    isShowForm;\r\n    listLanguage;\r\n\r\n    constructor(private languageService: LanguageService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    search() {\r\n        this.languageService.search()\r\n            .subscribe((result: SearchResultViewModel<LanguageSearchViewModel>) => {\r\n                this.listLanguage = result.items;\r\n            });\r\n    }\r\n\r\n    updateStatus(language: LanguageSearchViewModel, isActive: boolean) {\r\n        this.languageService.updateStatus(language.languageId, !isActive).subscribe(() => {\r\n            language.isActive = !isActive;\r\n        });\r\n    }\r\n\r\n    updateDefault(language: LanguageSearchViewModel, isDefault: boolean) {\r\n        this.languageService.updateDefault(language.languageId, !isDefault).subscribe(() => {\r\n            language.isDefault = !isDefault;\r\n        });\r\n    }\r\n\r\n    delete(languageId: string) {\r\n        this.languageService.delete(languageId).subscribe(() => {\r\n            _.remove(this.listLanguage, (item: LanguageSearchViewModel) => {\r\n                return item.languageId === languageId;\r\n            });\r\n        });\r\n    }\r\n}\r\n","export class Language {\r\n    id: string;\r\n    languageId: string;\r\n    isActive: boolean;\r\n    isDefault: boolean;\r\n    name: string;\r\n\r\n    constructor(languageId?: string, isActive?: boolean, isDefault?: boolean, name?: string) {\r\n        this.languageId = languageId;\r\n        this.isActive = isActive;\r\n        this.isDefault = isDefault;\r\n        this.name = name;\r\n    }\r\n}\r\n","import {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../../configs/app.config';\r\nimport {Inject} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {SearchResultViewModel} from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport {Language} from '../model/language.model';\r\nimport {SpinnerService} from '../../../../../core/spinner/spinner.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../../shareds/view-models/action-result.viewmodel';\r\nimport {LanguageSearchViewModel} from '../viewmodel/language-search.viewmodel';\r\n\r\nexport class LanguageService {\r\n    url = 'api/v1/core/languages';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService) {\r\n        this.url = `${this.appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    getALlLanguage(): Observable<SearchResultViewModel<Language>> {\r\n        return this.http.get(`${this.url}`) as Observable<SearchResultViewModel<Language>>;\r\n    }\r\n\r\n    search(): Observable<SearchResultViewModel<LanguageSearchViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}/tenants`)\r\n            .pipe(finalize(() => this.spinnerService.hide()),\r\n                map((result: SearchResultViewModel<LanguageSearchViewModel>) => {\r\n                    return result;\r\n                })) as Observable<SearchResultViewModel<LanguageSearchViewModel>>;\r\n    }\r\n\r\n    insert(language: Language): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/tenant`, {\r\n            languageId: language.languageId,\r\n            isActive: language.isActive,\r\n            isDefault: language.isDefault,\r\n            name: language.name,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateStatus(languageId: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/tenant/${languageId}/active/`, {}, {\r\n            params: new HttpParams()\r\n                .set('isActive', isActive ? isActive.toString() : 'false')\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateDefault(languageId: string, isDefault: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/tenant/${languageId}/default/`, {}, {\r\n            params: new HttpParams()\r\n                .set('isDefault', isDefault ? isDefault.toString() : 'false')\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(languageId: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/tenant/${languageId}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","import {WebsiteInfoTranslation} from './website-info.translation';\r\n\r\nexport class WebsiteInfo {\r\n    logo: string;\r\n    favicon: string;\r\n    ip: string;\r\n    modelTranslation: WebsiteInfoTranslation[];\r\n}\r\n","\r\nexport class WebsiteInfoTranslation {\r\n    languageId: string;\r\n    brand: string;\r\n    instruction: string;\r\n    metaTitle: string;\r\n    metaDescription: string;\r\n    metaKeyword: string;\r\n    description: string;\r\n}\r\n","import { APP_CONFIG, IAppConfig } from '../../../../configs/app.config';\r\nimport { Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { WebsiteInfo } from '../model/website-info.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ActionResultViewModel } from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { SettingViewModel } from '../view-models/setting.viewmodel';\r\nimport { SearchResultViewModel } from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport { SpinnerService } from '../../../../core/spinner/spinner.service';\r\n\r\nexport class WebsiteService {\r\n    url = 'api/v1/website/settings/';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n\r\n        this.url = `${this.appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    save(settings: SettingViewModel[]): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, settings)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    getWebsiteSetting(languageId): Observable<SettingViewModel[]> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}${languageId}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: SearchResultViewModel<SettingViewModel>) => result.items)\r\n            ) as Observable<SettingViewModel[]>;\r\n    }\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n             <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@language\\\">\\r\\n                   <i class=\\\"fa fa-globe\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                   Social Netwok\\r\\n             </span>\\r\\n        </div>\\r\\n        <div class=\\\"actions\\\">\\r\\n            <button class=\\\"btn btn-circle blue\\\" (click)=\\\"addSocialNetWork()\\\" type=\\\"button\\\" i18n=\\\"@@add\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i> Add\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <table class=\\\"table table-hover table-stripped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"middle w50\\\" i18n=\\\"@@icon\\\">Image</th>\\r\\n                <th class=\\\"middle w150\\\" i18n=\\\"@@name\\\">Social Netwok</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@url\\\">Url</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@icon\\\">Icon</th>\\r\\n                <th class=\\\"middle\\\" i18n=\\\"@@icon\\\">Order</th>\\r\\n                <th class=\\\"center middle w100\\\" i18n=\\\"@@action\\\"\\r\\n                    *ngIf=\\\"permission.delete || permission.edit\\\">\\r\\n                </th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of listSocialNetwork ; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"!item.isEdit && !item.isNew; else formInput\\\">\\r\\n                    <td class=\\\"middle\\\">\\r\\n                        <img ghmImage [src]=\\\"item.image\\\" class=\\\"w50\\\" [isUrlAbsolute]=\\\"true\\\">\\r\\n                    </td>\\r\\n                    <td class=\\\"middle\\\">\\r\\n                        <span *ngIf=\\\"!item.isEdit && !item.isNew\\\">{{item.name}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\\"middle\\\">\\r\\n                        <a *ngIf=\\\"!item.isEdit && !item.isNew\\\" href=\\\"{{item.url}}\\\">{{item.url}}</a>\\r\\n                    </td>\\r\\n                    <td class=\\\"middle\\\">\\r\\n                        <span *ngIf=\\\"!item.isEdit && !item.isNew\\\">{{item.icon}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\\"middle\\\">\\r\\n                        <span *ngIf=\\\"!item.isEdit && !item.isNew\\\">{{item.order}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\\"middle center\\\">\\r\\n                        <button *ngIf=\\\"permission.edit && item.isEdit\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                class=\\\"btn blue btn-sm\\\" (click)=\\\"save(item)\\\">\\r\\n                            <i class=\\\"fa fa-save\\\"></i>\\r\\n                        </button>\\r\\n                        <button *ngIf=\\\"permission.edit && item.id && !item.isEdit\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                class=\\\"btn blue btn-sm\\\"\\r\\n                                (click)=\\\"edit(item)\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                        </button>\\r\\n                        <button *ngIf=\\\"item.id && item.isEdit\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                class=\\\"btn red btn-sm\\\"\\r\\n                                (click)=\\\"item.isEdit = false\\\">\\r\\n                            <i class=\\\"fa fa-ban\\\"></i>\\r\\n                        </button>\\r\\n                        <button *ngIf=\\\"permission.delete && !(item.isEdit && item.id)\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                class=\\\"btn red btn-sm\\\"\\r\\n                                [swal]=\\\"confirmDeleteSocialNetwork\\\"\\r\\n                                (confirm)=\\\"delete(item, i)\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\"></i>\\r\\n                        </button>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #formInput>\\r\\n    <!--<form action=\\\"\\\" [formGroup]=\\\"model\\\" (ngSubmit)=\\\"save()\\\" style=\\\"display: contents\\\">-->\\r\\n    <td class=\\\"middle\\\">\\r\\n        <div class=\\\"fileinput fileinput-new\\\" [class.has-error]=\\\"formErrors?.image\\\">\\r\\n            <div class=\\\"fileinput-new thumbnail\\\" [formGroup]=\\\"model\\\">\\r\\n                <img ghmImage [errorImageUrl]=\\\"'/assets/images/no-image.png'\\\" class=\\\"w150 cm-mgb-5\\\"\\r\\n                     [isUrlAbsolute]=\\\"true\\\" *ngIf=\\\"model.value.image\\\"\\r\\n                     [src]=\\\"model.value.image\\\">\\r\\n                <ghm-file-explorer [buttonText]=\\\"'Select image'\\\"\\r\\n                                   (itemSelected)=\\\"onImageSelected($event)\\\"></ghm-file-explorer>\\r\\n                <span class=\\\"help-block\\\">{formErrors?.image, select, maxLength {Image is over 500 character}}</span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </td>\\r\\n    <td class=\\\"middle\\\">\\r\\n        <div [class.has-error]=\\\"formErrors?.name\\\" [formGroup]=\\\"model\\\">\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"name\\\" i18n-placeHolder=\\\"namePlaceHolder\\\"\\r\\n                   placeholder=\\\"Please enter name\\\">\\r\\n            {{formErrors?.name}}\\r\\n            <span class=\\\"help-block\\\">{formErrors?.name, select, required {Name is required} maxLength {Name is over 256 character}}</span>\\r\\n        </div>\\r\\n    </td>\\r\\n    <td class=\\\"middle\\\">\\r\\n        <div [class.has-error]=\\\"formErrors?.url\\\" [formGroup]=\\\"model\\\">\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"url\\\" i18n-placeHolder=\\\"namePlaceHolder\\\"\\r\\n                   placeholder=\\\"Please enter url\\\">\\r\\n            <span class=\\\"help-block\\\" i18n=\\\"@@urlNotCorrect\\\">{formErrors?.url , select, maxLength {Url is over 500 character} pattern {Url is not valid}}</span>\\r\\n        </div>\\r\\n    </td>\\r\\n    <td class=\\\"middle\\\">\\r\\n        <div [class.has-error]=\\\"formErrors?.icon\\\" [formGroup]=\\\"model\\\">\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"icon\\\" i18n-placeHolder=\\\"namePlaceHolder\\\"\\r\\n                   placeholder=\\\"Please enter icon\\\">\\r\\n            <span class=\\\"help-block\\\">{formErrors?.icon , select, maxLength {Icon is over 50 character}}</span>\\r\\n        </div>\\r\\n    </td>\\r\\n    <td class=\\\"middle\\\">\\r\\n        <div [class.has-error]=\\\"formErrors?.icon\\\" [formGroup]=\\\"model\\\">\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"order\\\" i18n-placeHolder=\\\"namePlaceHolder\\\"\\r\\n                   placeholder=\\\"Please enter order\\\">\\r\\n            <span class=\\\"help-block\\\">{formErrors?.order , select, isValid {Order must is numder}}</span>\\r\\n        </div>\\r\\n    </td>\\r\\n    <td class=\\\"middle center\\\">\\r\\n        <button *ngIf=\\\"permission.edit\\\"\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn blue btn-sm\\\" (click)=\\\"save()\\\">\\r\\n            <i class=\\\"fa fa-save\\\"></i>\\r\\n        </button>\\r\\n        <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn red btn-sm\\\"\\r\\n                (click)=\\\"hideForm()\\\">\\r\\n            <i class=\\\"fa fa-ban\\\"></i>\\r\\n        </button>\\r\\n    </td>\\r\\n    <!--</form>-->\\r\\n</ng-template>\\r\\n\\r\\n<swal\\r\\n        #confirmDeleteSocialNetwork\\r\\n        i18n=\\\"@@confirmDeleteSocialNetwork\\\"\\r\\n        i18n-title=\\\"@@confirmTitleDeleteSocialNetwork\\\"\\r\\n        i18n-text=\\\"@@confirmTextDeleteSocialNetwork\\\"\\r\\n        title=\\\"Are you sure for delete this socialNetwork?\\\"\\r\\n        text=\\\"You can't recover this socialNetwork after delete.\\\"\\r\\n        type=\\\"question\\\"\\r\\n        i18n-confirmButtonText=\\\"@@accept\\\"\\r\\n        i18n-cancelButtonText=\\\"@@cancel\\\"\\r\\n        confirmButtonText=\\\"Accept\\\"\\r\\n        cancelButtonText=\\\"Cancel\\\"\\r\\n        [showCancelButton]=\\\"true\\\"\\r\\n        [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {SocialNetwork} from './social-network.model';\r\nimport * as _ from 'lodash';\r\nimport {SocialNetworkService} from './social-network.service';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {BaseFormComponent} from '../../../../base-form.component';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {ExplorerItem} from '../../../../shareds/components/ghm-file-explorer/explorer-item.model';\r\nimport {NumberValidator} from '../../../../validators/number.validator';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n    selector: 'app-config-social-network',\r\n    templateUrl: './social-network.component.html',\r\n    providers: [SocialNetworkService, NumberValidator]\r\n})\r\nexport class SocialNetworkComponent extends BaseFormComponent implements OnInit {\r\n    listSocialNetwork: SocialNetwork[] = [];\r\n    errorName;\r\n    errorUrl;\r\n    socialNetwork = new SocialNetwork();\r\n\r\n    constructor(private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private fb: FormBuilder,\r\n                private numberValidator: NumberValidator,\r\n                private socialNetworkService: SocialNetworkService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.inertDefaultSocialNetworkItem();\r\n        this.renderForm();\r\n    }\r\n\r\n    search() {\r\n        this.socialNetworkService.search().subscribe((result: SearchResultViewModel<SocialNetwork>) => {\r\n            this.listSocialNetwork = result.items;\r\n            this.errorName = false;\r\n            this.errorUrl = false;\r\n        });\r\n    }\r\n\r\n    edit(item: SocialNetwork) {\r\n        this.isUpdate = true;\r\n        this.id = item.id;\r\n        item.isEdit = true;\r\n        this.model.patchValue({\r\n            name: item.name,\r\n            image: item.image,\r\n            url: item.url,\r\n            icon: item.icon,\r\n            order: item.order,\r\n            concurrencyStamp: item.concurrencyStamp\r\n        });\r\n    }\r\n\r\n    addSocialNetWork() {\r\n        this.renderForm();\r\n        this.isUpdate = false;\r\n        this.listSocialNetwork.push(new SocialNetwork(null, '', '', '', '', 1, true, true, ''));\r\n        this.resetForm();\r\n    }\r\n\r\n    save() {\r\n        this.socialNetwork = this.model.value;\r\n        const isValid = this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages, true);\r\n        if (isValid) {\r\n            if (this.isUpdate) {\r\n                this.socialNetworkService.update(this.id, this.socialNetwork).subscribe(() => {\r\n                    this.search();\r\n                });\r\n            } else {\r\n                this.socialNetworkService.insert(this.socialNetwork).subscribe(() => {\r\n                    this.search();\r\n                    this.listSocialNetwork.push(new SocialNetwork(null, '', '', '', '', 1, true, true, ''));\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    inertDefaultSocialNetworkItem() {\r\n        if (!this.listSocialNetwork || this.listSocialNetwork.length === 0) {\r\n            this.addSocialNetWork();\r\n        }\r\n    }\r\n\r\n    delete(value: SocialNetwork, index: number) {\r\n        if (value.id) {\r\n            this.socialNetworkService.delete(value.id).subscribe(() => {\r\n                _.pullAt(this.listSocialNetwork, [index]);\r\n            });\r\n        } else {\r\n            _.pullAt(this.listSocialNetwork, [index]);\r\n        }\r\n    }\r\n\r\n    onImageSelected(value: ExplorerItem) {\r\n        if (value.isImage) {\r\n            this.model.patchValue({\r\n                image: value.absoluteUrl\r\n            });\r\n        } else {\r\n            this.model.patchValue({\r\n                image: ''\r\n            });\r\n        }\r\n    }\r\n\r\n    hideForm() {\r\n        _.each(this.listSocialNetwork, (item: SocialNetwork) => {\r\n            item.isNew = false;\r\n            item.isEdit = false;\r\n        });\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError(['image', 'name', 'url', 'icon', 'order']);\r\n        this.validationMessages = this.utilService.renderFormErrorMessage([\r\n            {name: ['required, maxLength']},\r\n            {image: ['maxLength']},\r\n            {url: ['pattern', 'maxLength']},\r\n            {icon: ['maxLength']},\r\n            {order: ['isValid']}\r\n        ]);\r\n\r\n        this.model = this.fb.group({\r\n            name: [this.socialNetwork,\r\n                [Validators.required, Validators.maxLength(256)]],\r\n            image: [this.socialNetwork.image, [Validators.maxLength(500)]],\r\n            url: [this.socialNetwork.url, [Validators.maxLength(500),\r\n                Validators.pattern('(http(s)?://)?([\\\\w-]+\\\\.)+[\\\\w-]+(/[\\\\w- ;,./?%&=]*)?')]],\r\n            icon: [this.socialNetwork.icon, [Validators.maxLength(50)]],\r\n            order: [this.socialNetwork.order, this.numberValidator.isValid],\r\n            concurrencyStamp: [this.socialNetwork.concurrencyStamp]\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            name: '',\r\n            image: '',\r\n            url: '',\r\n            icon: '',\r\n            concurrencyStamp: ''\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n    }\r\n}\r\n","export class SocialNetwork {\r\n    id: string;\r\n    name: string;\r\n    image: string;\r\n    url: string;\r\n    icon: string;\r\n    order: number;\r\n    isEdit: boolean;\r\n    isNew: boolean;\r\n    concurrencyStamp: string;\r\n\r\n    constructor(id?: string, name?: string, image?: string, utl?: string, icon?: string, order?: number, isEdit?: boolean, isNew?: boolean, concurrencyStamp?: string) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.image = image;\r\n        this.url = utl;\r\n        this.icon = icon;\r\n        this.order = order;\r\n        this.isEdit = isEdit;\r\n        this.isNew = isNew;\r\n        this.concurrencyStamp = concurrencyStamp;\r\n    }\r\n}\r\n","import {SocialNetwork} from './social-network.model';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Inject} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {SearchResultViewModel} from '../../../../shareds/view-models/search-result.viewmodel';\r\nimport {SpinnerService} from '../../../../core/spinner/spinner.service';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\n\r\nexport class SocialNetworkService {\r\n    url = 'social-networks/';\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private toastr: ToastrService,\r\n                private spinnerService: SpinnerService,\r\n                private httpClient: HttpClient) {\r\n        this.url = `${this.appConfig.WEBSITE_API_URL}${this.url}`;\r\n    }\r\n\r\n    search(): Observable<SearchResultViewModel<SocialNetwork>> {\r\n        this.spinnerService.show();\r\n        return this.httpClient.get(`${this.url}`, {})\r\n            .pipe(finalize(() => this.spinnerService.hide())) as Observable<SearchResultViewModel<SocialNetwork>>;\r\n    }\r\n\r\n    insert(socialNetwork: SocialNetwork): Observable<ActionResultViewModel> {\r\n        return this.httpClient.post(`${this.url}`, {\r\n            name: socialNetwork.name,\r\n            image: socialNetwork.image,\r\n            url: socialNetwork.url,\r\n            icon: socialNetwork.icon,\r\n            order: socialNetwork.order,\r\n            concurrencyStamp: socialNetwork.concurrencyStamp,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: string, socialNetwork: SocialNetwork): Observable<ActionResultViewModel> {\r\n        return this.httpClient.post(`${this.url}${id}`, {\r\n            name: socialNetwork.name,\r\n            image: socialNetwork.image,\r\n            url: socialNetwork.url,\r\n            icon: socialNetwork.icon,\r\n            order: socialNetwork.order,\r\n            concurrencyStamp: socialNetwork.concurrencyStamp,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.httpClient.delete(`${this.url}${id}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"portlet light\\\">\\r\\n    <div class=\\\"portlet-title cm-mgb-0\\\">\\r\\n        <div class=\\\"caption\\\">\\r\\n             <span class=\\\"caption-subject bold uppercase\\\" i18n=\\\"@@information\\\">\\r\\n                  <i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                 Information\\r\\n             </span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"portlet-body\\\">\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\">\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"languages && languages.length > 1\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                           class=\\\"col-sm-2 control-label\\\"></label>\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <nh-select [data]=\\\"languages\\\"\\r\\n                                   i18n-title=\\\"@@pleaseSelectLanguage\\\"\\r\\n                                   title=\\\"-- Please select language --\\\"\\r\\n                                   name=\\\"language\\\"\\r\\n                                   [(value)]=\\\"currentLanguage\\\"\\r\\n                                   (onSelectItem)=\\\"selectLanguage($event)\\\"></nh-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" *ngFor=\\\"let item of settings\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\" ghmLabel=\\\"{{ item.displayName }}\\\"></label>\\r\\n                    <div class=\\\"col-sm-10\\\">\\r\\n                        <div class=\\\"fileinput fileinput-new\\\" *ngIf=\\\"item.key === 'GHM.Website.Domain.Models.WebsiteSetting.Logo'\\r\\n                                    || item.key === 'GHM.Website.Domain.Models.WebsiteSetting.Favicon' || item.key === 'GHM.Website.Domain.Models.WebsiteSetting.LogoMobile'; else editorTemplate\\\">\\r\\n                            <div class=\\\"fileinput-new thumbnail\\\">\\r\\n                                <img ghmImage [errorImageUrl]=\\\"'/assets/images/no-image.png'\\\" class=\\\"w150 cm-mgb-5\\\"\\r\\n                                     [src]=\\\"item.value\\\" [isUrlAbsolute]=\\\"true\\\">\\r\\n                                <ghm-file-explorer i18n-buttonText=\\\"@@selectImage\\\" [buttonText]=\\\"'Select image'\\\"\\r\\n                                                   (itemSelected)=\\\"onImageSelected($event, item)\\\"></ghm-file-explorer>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-template #editorTemplate>\\r\\n                            <ng-container\\r\\n                                    *ngIf=\\\"item.key === 'GHM.Website.Domain.Models.WebsiteSetting.Instruction'; else inputTemplate\\\">\\r\\n                                <tinymce elementId=\\\"instruction\\\"\\r\\n                                         [(ngModel)]=\\\"item.value\\\" [height]=\\\"150\\\"\\r\\n                                         name=\\\"item.key\\\"></tinymce>\\r\\n                            </ng-container>\\r\\n                        </ng-template>\\r\\n                        <ng-template #inputTemplate>\\r\\n                            <textarea type=\\\"text\\\" [(ngModel)]=\\\"item.value\\\" class=\\\"form-control\\\"\\r\\n                                      rows=\\\"3\\\"\\r\\n                                      name=\\\"{{ item.key }}\\\"></textarea>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-10 col-sm-offset-2\\\">\\r\\n                        <button class=\\\"btn blue cm-mgr-5\\\" type=\\\"submit\\\"\\r\\n                                [disabled]=\\\"isSaving\\\" i18n=\\\"@@save\\\">\\r\\n                            Save\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import {AfterViewInit, Component, Inject, OnInit, QueryList, ViewChildren} from '@angular/core';\r\nimport {BaseFormComponent} from '../../../../base-form.component';\r\nimport {WebsiteService} from '../service/website.service';\r\nimport {WebsiteInfo} from '../model/website-info.model';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {WebsiteInfoTranslation} from '../model/website-info.translation';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {ExplorerItem} from '../../../../shareds/components/ghm-file-explorer/explorer-item.model';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {SettingViewModel} from '../view-models/setting.viewmodel';\r\nimport {ActionResultViewModel} from '../../../../shareds/view-models/action-result.viewmodel';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {TinymceComponent} from '../../../../shareds/components/tinymce/tinymce.component';\r\n\r\n@Component({\r\n    selector: 'app-config-website-info',\r\n    templateUrl: './website-info.component.html',\r\n})\r\n\r\nexport class WebsiteInfoComponent extends BaseFormComponent implements OnInit, AfterViewInit {\r\n    @ViewChildren(TinymceComponent) eventContentEditors: QueryList<TinymceComponent>;\r\n    websiteInfo = new WebsiteInfo();\r\n    modelTranslation = new WebsiteInfoTranslation();\r\n    settings: SettingViewModel[] = [];\r\n    currentSetting: SettingViewModel;\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private utilService: UtilService,\r\n                private websiteService: WebsiteService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.renderForm();\r\n        this.websiteService.getWebsiteSetting(this.currentLanguage)\r\n            .subscribe((result: SettingViewModel[]) => {\r\n                this.settings = result;\r\n            });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initEditor();\r\n    }\r\n\r\n    save() {\r\n        this.websiteInfo = this.model.value;\r\n        this.isSaving = true;\r\n        this.websiteService.save(this.settings)\r\n            .pipe(finalize(() => this.isSaving = false))\r\n            .subscribe((result: ActionResultViewModel) => {\r\n            });\r\n    }\r\n\r\n    selectLanguage(value) {\r\n        this.currentLanguage = value.id;\r\n        this.websiteService.getWebsiteSetting(this.currentLanguage)\r\n            .subscribe((result: SettingViewModel[]) => {\r\n                this.settings = result;\r\n                this.initEditor();\r\n            });\r\n    }\r\n\r\n    onImageSelected(file: ExplorerItem, setting: SettingViewModel) {\r\n        if (file.isImage) {\r\n            setting.value = file.absoluteUrl;\r\n        } else {\r\n            this.toastr.error('Please select file image');\r\n        }\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.model = this.fb.group({\r\n            logo: [this.websiteInfo.logo],\r\n            favicon: [this.websiteInfo.favicon],\r\n            ip: [this.websiteInfo.ip],\r\n            modelTranslations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(() => this.utilService.onValueChanged(this.model, this.formErrors, this.validationMessages));\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            brand: [this.modelTranslation.brand],\r\n            instruction: [this.modelTranslation.instruction],\r\n            metaTitle: [this.modelTranslation.metaTitle],\r\n            metaDescription: [this.modelTranslation.metaDescription],\r\n            metaKeyword: [this.modelTranslation.metaKeyword],\r\n            description: [this.modelTranslation.description],\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslationModel(false)\r\n        );\r\n        return translationModel;\r\n    };\r\n\r\n    private initEditor() {\r\n        this.eventContentEditors.forEach((eventContentEditor: TinymceComponent) => {\r\n            eventContentEditor.initEditor();\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@configInformation\\\">Config Information</span>\\r\\n    <small i18n=\\\"@@configModuleTitle\\\">Config</small>\\r\\n</h1>\\r\\n<div class=\\\"tabbable-custom\\\">\\r\\n    <ul class=\\\"nav nav-tabs \\\">\\r\\n        <li class=\\\"active\\\">\\r\\n            <a href=\\\"#info\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"true\\\" i18n=\\\"@@info\\\">Information </a>\\r\\n        </li>\\r\\n        <li class=\\\"\\\">\\r\\n            <a href=\\\"#socialNetwork\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\" i18n=\\\"@@socialNetwork\\\" (click)=\\\"searchSocialNetwork()\\\"> Social Network</a>\\r\\n        </li>\\r\\n        <li class=\\\"\\\">\\r\\n            <a href=\\\"#contactInformation\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\" i18n=\\\"@@contactInformation\\\" (click)=\\\"searchBranch()\\\">Contact Information </a>\\r\\n        </li>\\r\\n        <li class=\\\"\\\">\\r\\n            <a href=\\\"#coreValues\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\" i18n=\\\"@@coreValues\\\" (click)=\\\"searchCoreValue()\\\">Core Values </a>\\r\\n        </li>\\r\\n        <li class=\\\"\\\">\\r\\n            <a href=\\\"#language\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\" i18n=\\\"@@language\\\" (click)=\\\"searchLanguage()\\\"> Language</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n    <div class=\\\"tab-content\\\">\\r\\n        <div class=\\\"tab-pane active\\\" id=\\\"info\\\">\\r\\n            <app-config-website-info></app-config-website-info>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"socialNetwork\\\">\\r\\n           <app-config-social-network></app-config-social-network>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"contactInformation\\\">\\r\\n            <app-config-website-branch></app-config-website-branch>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"coreValues\\\">\\r\\n            <app-config-website-core-values></app-config-website-core-values>\\r\\n        </div>\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"language\\\">\\r\\n            <app-config-language></app-config-language>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {IPageId, PAGE_ID} from '../../../configs/page-id.config';\r\nimport {BaseFormComponent} from '../../../base-form.component';\r\nimport {APP_CONFIG, IAppConfig} from '../../../configs/app.config';\r\nimport {WebsiteService} from './service/website.service';\r\nimport {LanguageComponent} from './language/language.component';\r\nimport {BranchComponent} from './branch/branch.component';\r\nimport {SocialNetworkComponent} from './social-network/social-network.component';\r\nimport {CoreValuesComponent} from './core-values/core-values.component';\r\n\r\n@Component({\r\n    selector: 'app-info-website',\r\n    templateUrl: './website.component.html',\r\n    providers: [WebsiteService]\r\n})\r\n\r\nexport class WebsiteComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild(LanguageComponent) languageComponent: LanguageComponent;\r\n    @ViewChild(BranchComponent) branchComponent: BranchComponent;\r\n    @ViewChild(CoreValuesComponent) coreValueComponent: CoreValuesComponent;\r\n    @ViewChild(SocialNetworkComponent) socialNetworkComponent: SocialNetworkComponent;\r\n\r\n    constructor(@Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                @Inject(PAGE_ID) public pageId: IPageId) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appService.setupPage(this.pageId.WEBSITE_CONFIG, this.pageId.CONFIG_WEBSITE);\r\n    }\r\n\r\n    searchLanguage() {\r\n        this.languageComponent.search();\r\n    }\r\n\r\n    searchBranch() {\r\n        this.branchComponent.search(1);\r\n    }\r\n\r\n    searchSocialNetwork() {\r\n        this.socialNetworkComponent.search();\r\n    }\r\n\r\n    searchCoreValue() {\r\n        this.coreValueComponent.search(1);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, forwardRef, Inject } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'nh-image',\r\n    template: `\r\n        <img alt=\"\" [class]=\"cssClass\"\r\n             src=\"{{ value }}\"\r\n             alt=\"{{ alt }}\"\r\n             (error)=\"onImageError()\"/>\r\n    `,\r\n    providers: [\r\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NhImageComponent), multi: true}\r\n    ],\r\n})\r\n\r\nexport class NhImageComponent implements OnInit, ControlValueAccessor {\r\n    @Input() alt;\r\n    @Input() cssClass = 'img-circle';\r\n    @Input() mode = 'crop';\r\n    @Input() width = 40;\r\n    @Input() height = 40;\r\n    @Input() errorImageUrl = '/assets/images/noavatar.png';\r\n    @Input() baseUrl = '';\r\n\r\n    @Input()\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n\r\n    private _value: string;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onImageError() {\r\n        this.value = this.errorImageUrl;\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    writeValue(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n\r\n    propagateChange: any = () => {\r\n    }\r\n}\r\n","/**\r\n * Created by HoangNH on 3/2/2017.\r\n */\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { NhImageComponent } from \"./nh-image.component\";\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [NhImageComponent],\r\n    exports: [NhImageComponent]\r\n})\r\n\r\nexport class NhImageModule { }\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {APP_CONFIG, IAppConfig} from '../../configs/app.config';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {LanguageSearchViewModel} from '../models/language.viewmodel';\r\nimport {SearchResultViewModel} from '../view-models/search-result.viewmodel';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport {ActionResultViewModel} from '../view-models/action-result.viewmodel';\r\nimport {Language} from '../../modules/configs/website/language/model/language.model';\r\nimport {SpinnerService} from '../../core/spinner/spinner.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {SuggestionViewModel} from '../view-models/SuggestionViewModel';\r\n\r\n@Injectable()\r\nexport class LanguageService {\r\n    url = 'api/v1/core/languages';\r\n\r\n    constructor(@Inject(APP_CONFIG) appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    getListSupportedLanguage(): Observable<LanguageSearchViewModel[]> {\r\n        if (localStorage) {\r\n            const language = localStorage.getItem('_lang');\r\n            if (!language) {\r\n                return this.http.get(`${this.url}`) as Observable<LanguageSearchViewModel[]>;\r\n            } else {\r\n                const languages = JSON.parse(language);\r\n                return new BehaviorSubject(languages) as Observable<LanguageSearchViewModel[]>;\r\n            }\r\n        } else {\r\n            return this.http.get(`${this.url}`) as Observable<LanguageSearchViewModel[]>;\r\n        }\r\n    }\r\n\r\n    getAllLanguage(): Observable<LanguageSearchViewModel[]> {\r\n        return this.http.get(this.url)\r\n            .pipe(map((result: SearchResultViewModel<LanguageSearchViewModel>) => result.items)) as Observable<LanguageSearchViewModel[]>;\r\n    }\r\n\r\n    getLanguageSupport(): Observable<LanguageSearchViewModel[]> {\r\n        return this.http.get(`${this.url}/support`)\r\n            .pipe(map((result: SearchResultViewModel<LanguageSearchViewModel>) => result.items)) as Observable<LanguageSearchViewModel[]>;\r\n    }\r\n\r\n    search(): Observable<SearchResultViewModel<Language>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}`, {})\r\n            .pipe(finalize(() => this.spinnerService.hide()),\r\n                map((result: SearchResultViewModel<Language>) => {\r\n                    return result;\r\n                })) as Observable<SearchResultViewModel<Language>>;\r\n    }\r\n\r\n    insert(language: Language): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/tenant`, {\r\n            languageId: language.languageId,\r\n            isActive: language.isActive,\r\n            isDefault: language.isDefault,\r\n            name: language.name,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateStatus(languageId: string, isActive: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/tenant/${languageId}/active`, {}, {\r\n            params: new HttpParams()\r\n                .set('isActive', isActive.toString())\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    updateDefault(languageId: string, isDefault: boolean): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}/tenant/${languageId}/default`, {}, {\r\n            params: new HttpParams()\r\n                .set('isDefault', isDefault.toString())\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(languageId: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}/tenant/${languageId}`)\r\n            .pipe(map((result: ActionResultViewModel) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    suggestion(keyword: string): Observable<SuggestionViewModel<string>[]> {\r\n        return this.http\r\n            .get(`${this.url}/suggestions`, {\r\n                params: new HttpParams()\r\n                    .set('keyword', keyword ? keyword : '')\r\n            })\r\n            .pipe(\r\n                map((result: SearchResultViewModel<SuggestionViewModel<string>>) => {\r\n                    return result.items;\r\n                })\r\n            ) as Observable<SuggestionViewModel<string>[]>;\r\n    }\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { FormControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class DateTimeValidator implements Validators {\r\n    isValid(c: FormControl) {\r\n        if (c && c.value && c.value != null) {\r\n            const isValid = moment(c.value, [\r\n                'DD/MM/YYYY',\r\n                'DD/MM/YYYY HH:mm',\r\n                'DD/MM/YYYY HH:mm:ss',\r\n                'DD/MM/YYYY HH:mm Z',\r\n                'DD-MM-YYYY',\r\n                'DD-MM-YYYY HH:mm',\r\n                'DD-MM-YYYY HH:mm:ss',\r\n                'DD-MM-YYYY HH:mm Z',\r\n                'MM/DD/YYYY',\r\n                'MM/DD/YYYY HH:mm',\r\n                'MM/DD/YYYY HH:mm:ss',\r\n                'MM/DD/YYYY HH:mm Z',\r\n                'MM-DD-YYYY',\r\n                'MM-DD-YYYY HH:mm',\r\n                'MM-DD-YYYY HH:mm:ss',\r\n                'MM-DD-YYYY HH:mm Z',\r\n            ]).isValid() || moment(c.value, [\r\n                'DD/MM/YYYY',\r\n                'DD/MM/YYYY HH:mm',\r\n                'DD/MM/YYYY HH:mm:ss',\r\n                'DD/MM/YYYY HH:mm Z',\r\n                'DD-MM-YYYY',\r\n                'DD-MM-YYYY HH:mm',\r\n                'DD-MM-YYYY HH:mm:ss',\r\n                'DD-MM-YYYY HH:mm Z',\r\n                'MM/DD/YYYY',\r\n                'MM/DD/YYYY HH:mm',\r\n                'MM/DD/YYYY HH:mm:ss',\r\n                'MM/DD/YYYY HH:mm Z',\r\n                'MM-DD-YYYY',\r\n                'MM-DD-YYYY HH:mm',\r\n                'MM-DD-YYYY HH:mm:ss',\r\n                'MM-DD-YYYY HH:mm Z',\r\n            ]).isValid();\r\n            if (!isValid) {\r\n                return { isValid: false };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    notBefore(ref: string): ValidatorFn {\r\n        return (c: FormControl) => {\r\n            const v = c.value;\r\n            const r = c.root.get(ref);\r\n\r\n            if (r && r.value) {\r\n                if (moment(v, [\r\n                    'DD/MM/YYYY',\r\n                    'DD/MM/YYYY HH:mm',\r\n                    'DD/MM/YYYY HH:mm:ss',\r\n                    'DD/MM/YYYY HH:mm Z',\r\n                    'DD-MM-YYYY',\r\n                    'DD-MM-YYYY HH:mm',\r\n                    'DD-MM-YYYY HH:mm:ss',\r\n                    'DD-MM-YYYY HH:mm Z',\r\n                    'MM/DD/YYYY',\r\n                    'MM/DD/YYYY HH:mm',\r\n                    'MM/DD/YYYY HH:mm:ss',\r\n                    'MM/DD/YYYY HH:mm Z',\r\n                    'MM-DD-YYYY',\r\n                    'MM-DD-YYYY HH:mm',\r\n                    'MM-DD-YYYY HH:mm:ss',\r\n                    'MM-DD-YYYY HH:mm Z',\r\n                ]).isBefore(moment(r.value, [\r\n                    'DD/MM/YYYY',\r\n                    'DD/MM/YYYY HH:mm',\r\n                    'DD/MM/YYYY HH:mm:ss',\r\n                    'DD/MM/YYYY HH:mm Z',\r\n                    'DD-MM-YYYY',\r\n                    'DD-MM-YYYY HH:mm',\r\n                    'DD-MM-YYYY HH:mm:ss',\r\n                    'DD-MM-YYYY HH:mm Z',\r\n                    'MM/DD/YYYY',\r\n                    'MM/DD/YYYY HH:mm',\r\n                    'MM/DD/YYYY HH:mm:ss',\r\n                    'MM/DD/YYYY HH:mm Z',\r\n                    'MM-DD-YYYY',\r\n                    'MM-DD-YYYY HH:mm',\r\n                    'MM-DD-YYYY HH:mm:ss',\r\n                    'MM-DD-YYYY HH:mm Z',\r\n                ]))) {\r\n                    return { notBefore: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n\r\n    notAfter(ref: string): ValidatorFn {\r\n        return (c: FormControl) => {\r\n            const v = c.value;\r\n            const r = c.root.get(ref);\r\n\r\n            if (r && r.value) {\r\n                if (moment(v, [\r\n                    'DD/MM/YYYY',\r\n                    'DD/MM/YYYY HH:mm',\r\n                    'DD/MM/YYYY HH:mm:ss',\r\n                    'DD/MM/YYYY HH:mm Z',\r\n                    'DD-MM-YYYY',\r\n                    'DD-MM-YYYY HH:mm',\r\n                    'DD-MM-YYYY HH:mm:ss',\r\n                    'DD-MM-YYYY HH:mm Z',\r\n                    'MM/DD/YYYY',\r\n                    'MM/DD/YYYY HH:mm',\r\n                    'MM/DD/YYYY HH:mm:ss',\r\n                    'MM/DD/YYYY HH:mm Z',\r\n                    'MM-DD-YYYY',\r\n                    'MM-DD-YYYY HH:mm',\r\n                    'MM-DD-YYYY HH:mm:ss',\r\n                    'MM-DD-YYYY HH:mm Z',\r\n                ]).isAfter(moment(r.value, [\r\n                    'DD/MM/YYYY',\r\n                    'DD/MM/YYYY HH:mm',\r\n                    'DD/MM/YYYY HH:mm:ss',\r\n                    'DD/MM/YYYY HH:mm Z',\r\n                    'DD-MM-YYYY',\r\n                    'DD-MM-YYYY HH:mm',\r\n                    'DD-MM-YYYY HH:mm:ss',\r\n                    'DD-MM-YYYY HH:mm Z',\r\n                    'MM/DD/YYYY',\r\n                    'MM/DD/YYYY HH:mm',\r\n                    'MM/DD/YYYY HH:mm:ss',\r\n                    'MM/DD/YYYY HH:mm Z',\r\n                    'MM-DD-YYYY',\r\n                    'MM-DD-YYYY HH:mm',\r\n                    'MM-DD-YYYY HH:mm:ss',\r\n                    'MM-DD-YYYY HH:mm Z',\r\n                ]))) {\r\n                    return { notAfter: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n\r\n    notEqual(ref: string): ValidatorFn {\r\n        return (c: FormControl) => {\r\n            const v = c.value;\r\n            const r = c.root.get(ref);\r\n\r\n            if (r && r.value) {\r\n                if (moment(r.value, [\r\n                    'DD/MM/YYYY',\r\n                    'DD/MM/YYYY HH:mm',\r\n                    'DD/MM/YYYY HH:mm:ss',\r\n                    'DD/MM/YYYY HH:mm Z',\r\n                    'DD-MM-YYYY',\r\n                    'DD-MM-YYYY HH:mm',\r\n                    'DD-MM-YYYY HH:mm:ss',\r\n                    'DD-MM-YYYY HH:mm Z',\r\n                    'MM/DD/YYYY',\r\n                    'MM/DD/YYYY HH:mm',\r\n                    'MM/DD/YYYY HH:mm:ss',\r\n                    'MM/DD/YYYY HH:mm Z',\r\n                    'MM-DD-YYYY',\r\n                    'MM-DD-YYYY HH:mm',\r\n                    'MM-DD-YYYY HH:mm:ss',\r\n                    'MM-DD-YYYY HH:mm Z',\r\n                ]).isSame(moment(v, [\r\n                    'DD/MM/YYYY',\r\n                    'DD/MM/YYYY HH:mm',\r\n                    'DD/MM/YYYY HH:mm:ss',\r\n                    'DD/MM/YYYY HH:mm Z',\r\n                    'DD-MM-YYYY',\r\n                    'DD-MM-YYYY HH:mm',\r\n                    'DD-MM-YYYY HH:mm:ss',\r\n                    'DD-MM-YYYY HH:mm Z',\r\n                    'MM/DD/YYYY',\r\n                    'MM/DD/YYYY HH:mm',\r\n                    'MM/DD/YYYY HH:mm:ss',\r\n                    'MM/DD/YYYY HH:mm Z',\r\n                    'MM-DD-YYYY',\r\n                    'MM-DD-YYYY HH:mm',\r\n                    'MM-DD-YYYY HH:mm:ss',\r\n                    'MM-DD-YYYY HH:mm Z',\r\n                ]))) {\r\n                    return { notEqual: false };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}