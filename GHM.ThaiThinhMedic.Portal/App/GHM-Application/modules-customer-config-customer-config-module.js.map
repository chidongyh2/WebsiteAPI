{"version":3,"sources":["webpack:///./src/app/modules/customer/config/customer-config-routing.module.ts","webpack:///./src/app/modules/customer/config/customer-config.module.ts","webpack:///./src/app/modules/customer/config/jobs/job-form/job-form.component.html","webpack:///./src/app/modules/customer/config/jobs/job-form/job-form.component.ts","webpack:///./src/app/modules/customer/config/jobs/job.component.html","webpack:///./src/app/modules/customer/config/jobs/job.component.ts","webpack:///./src/app/modules/customer/config/jobs/models/job-translations.model.ts","webpack:///./src/app/modules/customer/config/patient-source/models/patient-resource-translation.model.ts","webpack:///./src/app/modules/customer/config/patient-source/patient-resource-form/patient-resource-form.component.html","webpack:///./src/app/modules/customer/config/patient-source/patient-resource-form/patient-resource-form.component.ts","webpack:///./src/app/modules/customer/config/patient-source/patient-resource.component.html","webpack:///./src/app/modules/customer/config/patient-source/patient-resource.component.ts","webpack:///./src/app/modules/customer/config/patient-subject/models/patient-subject-translation.model.ts","webpack:///./src/app/modules/customer/config/patient-subject/models/patient-subject.model.ts","webpack:///./src/app/modules/customer/config/patient-subject/patient-subject-form/patient-subject-form.component.html","webpack:///./src/app/modules/customer/config/patient-subject/patient-subject-form/patient-subject-form.component.ts","webpack:///./src/app/modules/customer/config/patient-subject/patient-subject.component.html","webpack:///./src/app/modules/customer/config/patient-subject/patient-subject.component.ts","webpack:///./src/app/modules/customer/config/patient-subject/service/patient-subject.service.ts","webpack:///./src/app/shareds/models/filter-link.model.ts"],"names":[],"mappings":"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","file":"modules-customer-config-customer-config-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {JobComponent} from './jobs/job.component';\r\nimport {JobService} from './jobs/service/job.service';\r\nimport {PatientResourceComponent} from './patient-source/patient-resource.component';\r\nimport {PatientResourceService} from './patient-source/service/patient-resource.service';\r\nimport {PatientSubjectComponent} from './patient-subject/patient-subject.component';\r\nimport {PatientSubjectService} from './patient-subject/service/patient-subject.service';\r\n\r\nexport const userRoutes: Routes = [\r\n    {\r\n        path: 'jobs',\r\n        component: JobComponent,\r\n        resolve: {\r\n            data: JobService\r\n        }\r\n    },\r\n    {\r\n        path: 'patient-source',\r\n        component: PatientResourceComponent,\r\n        resolve: {\r\n            data: PatientResourceService\r\n        }\r\n    },\r\n    {\r\n        path: 'patient-subject',\r\n        component: PatientSubjectComponent,\r\n        resolve: {\r\n            data: PatientSubjectService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(userRoutes)],\r\n    exports: [RouterModule],\r\n    providers: [JobService, PatientResourceService, PatientSubjectService]\r\n})\r\n\r\nexport class CustomerConfigRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule, MatCheckboxModule, MatIconModule } from '@angular/material';\r\nimport { CoreModule } from '../../../core/core.module';\r\nimport { NhModalModule } from '../../../shareds/components/nh-modal/nh-modal.module';\r\nimport { NhSelectModule } from '../../../shareds/components/nh-select/nh-select.module';\r\nimport { NHTreeModule } from '../../../shareds/components/nh-tree/nh-tree.module';\r\nimport { GhmPagingModule } from '../../../shareds/components/ghm-paging/ghm-paging.module';\r\nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\r\nimport { CustomerConfigRoutingModule } from './customer-config-routing.module';\r\nimport { JobComponent } from './jobs/job.component';\r\nimport { JobFormComponent } from './jobs/job-form/job-form.component';\r\nimport { PatientResourceComponent } from './patient-source/patient-resource.component';\r\nimport { PatientResourceFormComponent } from './patient-source/patient-resource-form/patient-resource-form.component';\r\nimport { PatientSubjectComponent } from './patient-subject/patient-subject.component';\r\nimport { PatientSubjectFormComponent } from './patient-subject/patient-subject-form/patient-subject-form.component';\r\nimport { TreeTableModule, SharedModule } from 'primeng/primeng';\r\n\r\n@NgModule({\r\n    imports: [\r\n        FormsModule, CommonModule, CustomerConfigRoutingModule, MatButtonModule, MatCheckboxModule, TreeTableModule, SharedModule,\r\n        NHTreeModule, NhSelectModule, ReactiveFormsModule, FormsModule, CoreModule, NhModalModule,\r\n        MatButtonModule, MatIconModule, GhmPagingModule,\r\n        SweetAlert2Module.forRoot({\r\n            buttonsStyling: false,\r\n            customClass: 'modal-content',\r\n            confirmButtonClass: 'btn btn-primary',\r\n            cancelButtonClass: 'btn',\r\n            confirmButtonText: 'Đồng ý',\r\n            showCancelButton: true,\r\n            cancelButtonText: 'Hủy bỏ'\r\n        }),\r\n    ],\r\n    declarations: [\r\n        JobComponent, JobFormComponent, PatientResourceComponent, PatientResourceFormComponent,\r\n        PatientSubjectComponent, PatientSubjectFormComponent\r\n    ],\r\n    providers: []\r\n})\r\n\r\nexport class CustomerConfigModule {\r\n}\r\n","module.exports = \"<nh-modal #jobFormModal size=\\\"md\\\"\\r\\n          (show)=\\\"onModalShow()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n        {isUpdate, select, 0 {Add new job} 1 {Update job} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div formArrayName=\\\"modelTranslations\\\">\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"languages.length > 1\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <nh-select [data]=\\\"languages\\\"\\r\\n                                   [(value)]=\\\"currentLanguage\\\"></nh-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@groupJob\\\" ghmLabel=\\\"Group job\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\" [formGroup]=\\\"model\\\">\\r\\n                        <nh-dropdown-tree\\r\\n                            [data]=\\\"jobTree\\\" i18n-title=\\\"@@selectGroupJob\\\"\\r\\n                            title=\\\"-- Select group job --\\\"\\r\\n                            formControlName=\\\"parentId\\\">\\r\\n                        </nh-dropdown-tree>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@jobName\\\" ghmLabel=\\\"Job name\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                               i18n-placeholder=\\\"@@enterJobNamePlaceHolder\\\"\\r\\n                               placeholder=\\\"Enter job name.\\\"\\r\\n                               formControlName=\\\"name\\\">\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                           { translationFormErrors[modelTranslation.value.languageId]?.name, select, required {Job name is required} maxlength {Job name\\r\\n                              name not allowed over 256 characters}}\\r\\n                         </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                    <label i18n=\\\"@@description\\\" i18n-ghmLabel ghmLabel=\\\"Description\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                                                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"description\\\"\\r\\n                                                          i18n=\\\"@@enterDescriptionPlaceholder\\\" i18n-placeholder\\r\\n                                                          placeholder=\\\"Enter description.\\\"></textarea>\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                                                    { translationFormErrors[modelTranslation.value.languageId]?.description, select, maxlength {Job description not allowed\\r\\n                                                    over 500 characters} }\\r\\n                                                </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                    <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                        <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                            {model.value.isActive, select, 0 {Inactive} 1 {Active}}\\r\\n                        </mat-checkbox>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@Save\\\">Save</span>\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn btn-default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Close</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Inject,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { BaseFormComponent } from '../../../../../base-form.component';\r\nimport { TreeData } from '../../../../../view-model/tree-data';\r\nimport { IPageId, PAGE_ID } from '../../../../../configs/page-id.config';\r\nimport { SpinnerService } from '../../../../../core/spinner/spinner.service';\r\nimport { UtilService } from '../../../../../shareds/services/util.service';\r\nimport * as _ from 'lodash';\r\nimport { JobTranslation } from '../models/job-translations.model';\r\nimport { Job } from '../models/job.model';\r\nimport { JobService } from '../service/job.service';\r\nimport { JobDetailViewModel } from '../models/job-detail.viewmodel';\r\nimport { NhModalComponent } from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport { ActionResultViewModel } from '../../../../../shareds/view-models/action-result.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-job-form',\r\n    templateUrl: './job-form.component.html',\r\n    providers: [JobService]\r\n})\r\n\r\nexport class JobFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('jobFormModal') jobFormModal: NhModalComponent;\r\n    @Input() elementId: string;\r\n    @Output() onEditorKeyup = new EventEmitter<any>();\r\n    @Output() onCloseForm = new EventEmitter<any>();\r\n    jobTree: TreeData[] = [];\r\n    job: Job;\r\n    modelTranslation = new JobTranslation();\r\n    isGettingTree = false;\r\n\r\n    constructor(@Inject(PAGE_ID) pageId: IPageId,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private spinnerService: SpinnerService,\r\n                private jobService: JobService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.job = new Job();\r\n        this.renderForm();\r\n        this.getJobTree();\r\n    }\r\n\r\n    onModalShow() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.getJobTree();\r\n        this.jobFormModal.open();\r\n    }\r\n\r\n    edit(id: number) {\r\n        this.getJobTree();\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n        this.jobFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.job = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.jobService\r\n                    .update(this.id, this.job)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.jobFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.jobService\r\n                    .insert(this.job)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.getJobTree();\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.jobFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    closeForm() {\r\n        this.onCloseForm.emit();\r\n    }\r\n\r\n    reloadTree() {\r\n        this.isGettingTree = true;\r\n        this.jobService.getTree().subscribe((result: any) => {\r\n            this.isGettingTree = false;\r\n            this.jobTree = result;\r\n        });\r\n    }\r\n\r\n    onParentSelect(job: TreeData) {\r\n        this.model.patchValue({parentId: job ? job.id : null});\r\n    }\r\n\r\n    private getDetail(id: number) {\r\n        this.subscribers.jobService = this.jobService\r\n            .getDetail(id)\r\n            .subscribe(\r\n                (result: ActionResultViewModel<JobDetailViewModel>) => {\r\n                    const jobDetail = result.data;\r\n                    if (jobDetail) {\r\n                        this.model.patchValue({\r\n                            isActive: jobDetail.isActive,\r\n                            order: jobDetail.order,\r\n                            parentId: jobDetail.parentId\r\n                        });\r\n                        if (jobDetail.jobTranslations && jobDetail.jobTranslations.length > 0) {\r\n                            this.modelTranslations.controls.forEach(\r\n                                (model: FormGroup) => {\r\n                                    const detail = _.find(\r\n                                        jobDetail.jobTranslations,\r\n                                        (jobTranslation: JobTranslation) => {\r\n                                            return (\r\n                                                jobTranslation.languageId ===\r\n                                                model.value.languageId\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    if (detail) {\r\n                                        model.patchValue(detail);\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    private getJobTree() {\r\n        this.subscribers.getTree = this.jobService\r\n            .getTree()\r\n            .subscribe((result: TreeData[]) => {\r\n                this.jobTree = result;\r\n            });\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError([\r\n            'name',\r\n            'description',\r\n        ]);\r\n        this.model = this.fb.group({\r\n            parentId: [this.job.parentId],\r\n            isActive: [this.job.isActive],\r\n            modelTranslations: this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            parentId: null,\r\n            isActive: true\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name', 'description']\r\n        );\r\n        this.translationValidationMessage[\r\n            language\r\n            ] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxlength']},\r\n            {description: ['maxlength']},\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256)]\r\n            ],\r\n            description: [\r\n                this.modelTranslation.description,\r\n                [Validators.maxLength(500)]\r\n            ]\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslationModel(false)\r\n        );\r\n        return translationModel;\r\n    };\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listJobPageTitle\\\">List job</span>\\r\\n    <small i18n=\\\"@@jobModuleTitle\\\">Job management</small>\\r\\n</h1>\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@keywordSearch\\\" i18n-placeholder\\r\\n               placeholder=\\\"Enter keyword for search please.\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'InActive'},{id: true, name: 'Active'}]\\\"\\r\\n            i18n-title=\\\"@@selectStatus\\\"\\r\\n            [title]=\\\"'-- Select status --'\\\"\\r\\n            [(value)]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"search(1)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button class=\\\"btn btn-primary cm-mgr-5\\\" *ngIf=\\\"permission.add\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\"\\r\\n                type=\\\"button\\\">\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n<p-treeTable [value]=\\\"jobs\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\">\\r\\n        <tr>\\r\\n            <th class=\\\"middle  w150\\\" i18n=\\\"@@jobName\\\">Job name</th>\\r\\n            <th class=\\\"middle \\\" i18n=\\\"@@description\\\">Description</th>\\r\\n            <th class=\\\"middle center w100\\\" i18n=\\\"@@status\\\">Status</th>\\r\\n            <th class=\\\"middle text-right w150\\\" i18n=\\\"@@action\\\">Action</th>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\">\\r\\n        <tr>\\r\\n            <td>\\r\\n                <p-treeTableToggler [rowNode]=\\\"rowNode\\\"></p-treeTableToggler>\\r\\n                {{rowData.name}}\\r\\n            </td>\\r\\n            <td>{{rowData.description}}</td>\\r\\n            <td class=\\\"center\\\">\\r\\n                <span class=\\\"badge\\\" [class.badge-danger]=\\\"!rowData.isActive\\\"\\r\\n                      [class.badge-success]=\\\"rowData.isActive\\\">{rowData.isActive, select, 0 {InActive} 1 {Activated}}\\r\\n                </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n                <button class=\\\"btn btn-primary btn-sm\\\"\\r\\n                        *ngIf=\\\"permission.edit\\\"\\r\\n                (click)=\\\"edit(rowData)\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-danger btn-sm cm-mgl-5\\\"\\r\\n                        *ngIf=\\\"permission.delete\\\"\\r\\n                        [swal]=\\\"confirmDeleteJob\\\"\\r\\n                        (click)=\\\"delete(rowData.id)\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                </button>\\r\\n                <!--<ghm-button-->\\r\\n                    <!--*ngIf=\\\"permission.edit\\\"-->\\r\\n                    <!--icon=\\\"fa fa-edit\\\" classes=\\\"btn btn-primary btn-sm\\\"-->\\r\\n                    <!--(clicked)=\\\"edit(rowData)\\\"></ghm-button>-->\\r\\n                <!--<ghm-button-->\\r\\n                    <!--*ngIf=\\\"permission.delete\\\"-->\\r\\n                    <!--icon=\\\"fa fa-trash-o\\\" classes=\\\"btn btn-danger btn-sm cm-mgl-5\\\"-->\\r\\n                    <!--[swal]=\\\"confirmDeleteJob\\\"-->\\r\\n                    <!--(confirm)=\\\"delete(rowData.id)\\\"></ghm-button>-->\\r\\n            </td>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n</p-treeTable>\\r\\n\\r\\n<app-job-form (saveSuccessful)=\\\"search(1)\\\" (onCloseForm)=\\\"search(1)\\\"></app-job-form>\\r\\n<swal\\r\\n    #confirmDeleteJob\\r\\n    i18n=\\\"@@confirmDeleteJob\\\"\\r\\n    i18n-title\\r\\n    i18n-text\\r\\n    title=\\\"Are you sure for delete this job?\\\"\\r\\n    text=\\\"You can't recover this job after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, Inject, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { JobSearchViewModel } from './models/job-search.viewmodel';\r\nimport { JobService } from './service/job.service';\r\nimport { HelperService } from '../../../../shareds/services/helper.service';\r\nimport { BaseListComponent } from '../../../../base-list.component';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../configs/app.config';\r\nimport { IPageId, PAGE_ID } from '../../../../configs/page-id.config';\r\nimport { UtilService } from '../../../../shareds/services/util.service';\r\nimport { FilterLink } from '../../../../shareds/models/filter-link.model';\r\nimport { JobFormComponent } from './job-form/job-form.component';\r\nimport { TreeNode } from 'primeng/api';\r\n\r\n@Component({\r\n    selector: 'app-job',\r\n    templateUrl: './job.component.html',\r\n    providers: [\r\n        Location, {provide: LocationStrategy, useClass: PathLocationStrategy},\r\n        HelperService, JobService\r\n    ]\r\n})\r\n\r\nexport class JobComponent extends BaseListComponent<JobSearchViewModel> implements OnInit, AfterViewInit {\r\n    @ViewChild(JobFormComponent) jobFormComponent: JobFormComponent;\r\n    isActive;\r\n    jobs: TreeNode[] = [];\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private location: Location,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private toastr: ToastrService,\r\n                private jobService: JobService,\r\n                private helperService: HelperService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.PATIENT, this.pageId.CONFIG_JOB, 'Quản lý khách hàng', 'Cấu hình nghề nghiệp');\r\n        this.subscribers.routeDataJobTree = this.route.data.subscribe((result: { data: TreeNode[] }) => {\r\n            // const data = result.data;\r\n            // this.totalRows = data.totalRows;\r\n            // return data.items;\r\n            console.log(result.data);\r\n            this.jobs = result.data;\r\n        });\r\n\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.isActive = params.isActive !== null && params.isActive !== '' && params.isActive !== undefined\r\n                ? Boolean(params.isActive) : '';\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    searchKeyUp(keyword) {\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderFilterLink();\r\n        // this.listItems$ = this.jobService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n        //     .pipe(finalize(() => this.isSearching = false),\r\n        //         map((data: ISearchResult<JobSearchViewModel>) => {\r\n        //             this.totalRows = data.totalRows;\r\n        //             return data.items;\r\n        //         }));\r\n\r\n        this.subscribers.searchJobTree = this.jobService.search(this.keyword, this.isActive)\r\n            .subscribe((result: TreeNode[]) => {\r\n                this.jobs = result;\r\n            });\r\n        // .pipe(finalize(() => this.isSearching = false),\r\n        //     map((data: ISearchResult<JobSearchViewModel>) => {\r\n        //         this.totalRows = data.totalRows;\r\n        //         return data.items;\r\n        //     }));\r\n    }\r\n\r\n    onPageClick(page: number) {\r\n        this.currentPage = page;\r\n        this.search(1);\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    add() {\r\n        this.jobFormComponent.add();\r\n    }\r\n\r\n    edit(job: JobSearchViewModel) {\r\n        this.jobFormComponent.edit(job.id);\r\n    }\r\n\r\n    delete(id: number) {\r\n        this.jobService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(this.currentPage);\r\n                return;\r\n            });\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = 'config-customer/jobs';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","export class JobTranslation {\r\n    jobId: number;\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n\r\n    constructor() {\r\n        this.jobId = 0;\r\n        this.description = '';\r\n    }\r\n}\r\n","export class PatientResourceTranslation {\r\n    patientResourceId: string;\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n","module.exports = \"<nh-modal #patientSourceFormModal size=\\\"md\\\"\\r\\n          (show)=\\\"onModalShow()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n        {isUpdate, select, 0 {Add new patient resource} 1 {Update patient resource} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div formArrayName=\\\"modelTranslations\\\">\\r\\n                <div class=\\\"tab-pane active\\\">\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"languages.length > 1\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                               class=\\\"col-sm-4 control-label\\\"\\r\\n                               [required]=\\\"true\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <nh-select [data]=\\\"languages\\\"\\r\\n                                       [(value)]=\\\"currentLanguage\\\"></nh-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"\\r\\n                         *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                         [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                         [formGroupName]=\\\"i\\\"\\r\\n                         [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@patientSource\\\" ghmLabel=\\\"Patient source\\\"\\r\\n                               class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                   i18n-placeholder=\\\"@@enterPatientSourceNamePlaceHolder\\\"\\r\\n                                   placeholder=\\\"Enter patient source.\\\"\\r\\n                                   formControlName=\\\"name\\\">\\r\\n                            <span class=\\\"help-block\\\">\\r\\n                                { translationFormErrors[modelTranslation.value.languageId]?.name, select, required {patient resource is required} maxlength {patient resource\\r\\n                                name not allowed over 256 characters} }\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"\\r\\n                         [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                         *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                         [formGroupName]=\\\"i\\\"\\r\\n                         [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                        <label i18n=\\\"@@description\\\" i18n-ghmLabel ghmLabel=\\\"Description\\\"\\r\\n                               class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                                                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"description\\\"\\r\\n                                                          i18n=\\\"@@enterDescriptionPlaceholder\\\" i18n-placeholder\\r\\n                                                          placeholder=\\\"Enter description.\\\"></textarea>\\r\\n                            <span class=\\\"help-block\\\">\\r\\n                                { translationFormErrors[modelTranslation.value.languageId]?.description, select, maxlength {patient source description not allowed\\r\\n                                over 500 characters} }\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n                         [class.has-error]=\\\"formErrors.order\\\">\\r\\n                        <label i18n-ghmLabel=\\\"@@order\\\" ghmLabel=\\\"Order\\\"\\r\\n                               class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                   i18n-placeholder=\\\"@@enterOrder\\\"\\r\\n                                   placeholder=\\\"Enter order.\\\"\\r\\n                                   formControlName=\\\"order\\\">\\r\\n                            <span class=\\\"help-block\\\">\\r\\n                                {{formErrors.order}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                        <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                            <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                                {model.value.isActive, select, 0 {Inactive} 1 {Active}}\\r\\n                            </mat-checkbox>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- END: .tab-pane -->\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@Save\\\">Save</span>\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn btn-default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Close</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Inject,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {TreeData} from '../../../../../view-model/tree-data';\r\nimport {IPageId, PAGE_ID} from '../../../../../configs/page-id.config';\r\nimport {SpinnerService} from '../../../../../core/spinner/spinner.service';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {IActionResultResponse} from '../../../../../interfaces/iaction-result-response.result';\r\nimport * as _ from 'lodash';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {PatientResourceService} from '../service/patient-resource.service';\r\nimport {PatientResource} from '../models/patient-resource.model';\r\nimport {PatientResourceTranslation} from '../models/patient-resource-translation.model';\r\nimport {PatientResourceDetailViewModel} from '../models/patient-resource-detail.viewmodel';\r\nimport {NumberValidator} from '../../../../../validators/number.validator';\r\n\r\n@Component({\r\n    selector: 'app-patient-source-form',\r\n    templateUrl: './patient-resource-form.component.html',\r\n    providers: [PatientResourceService, NumberValidator]\r\n})\r\n\r\nexport class PatientResourceFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('patientSourceFormModal') patientSourceFormModal: NhModalComponent;\r\n    @Input() elementId: string;\r\n    @Output() onEditorKeyup = new EventEmitter<any>();\r\n    @Output() onCloseForm = new EventEmitter<any>();\r\n    patientResource: PatientResource;\r\n    modelTranslation = new PatientResourceTranslation();\r\n\r\n    constructor(@Inject(PAGE_ID) pageId: IPageId,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private spinnerService: SpinnerService,\r\n                private patientResourceService: PatientResourceService,\r\n                private numberValidator: NumberValidator,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.patientResource = new PatientResource();\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalShow() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.patientSourceFormModal.open();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n        this.patientSourceFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.patientResource = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.patientResourceService\r\n                    .update(this.id, this.patientResource)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.patientSourceFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.patientResourceService\r\n                    .insert(this.patientResource)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.patientSourceFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    closeForm() {\r\n        this.onCloseForm.emit();\r\n    }\r\n\r\n    onParentSelect(job: TreeData) {\r\n        this.model.patchValue({parentId: job ? job.id : null});\r\n    }\r\n\r\n    private getDetail(id: string) {\r\n        this.subscribers.patientResourceService = this.patientResourceService\r\n            .getDetail(id)\r\n            .subscribe((result: IActionResultResponse<PatientResourceDetailViewModel>) => {\r\n                    const patientResourceDetail = result.data;\r\n                    if (patientResourceDetail) {\r\n                        this.model.patchValue({\r\n                            isActive: patientResourceDetail.isActive,\r\n                            order: patientResourceDetail.order,\r\n                            id: patientResourceDetail.id,\r\n                            concurrencyStamp: patientResourceDetail.concurrencyStamp\r\n                        });\r\n                        if (patientResourceDetail.patientResourceTranslations\r\n                            && patientResourceDetail.patientResourceTranslations.length > 0) {\r\n                            this.modelTranslations.controls.forEach(\r\n                                (model: FormGroup) => {\r\n                                    const detail = _.find(\r\n                                        patientResourceDetail.patientResourceTranslations,\r\n                                        (patientResourceTranslation: PatientResourceTranslation) => {\r\n                                            return (\r\n                                                patientResourceTranslation.languageId ===\r\n                                                model.value.languageId\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    if (detail) {\r\n                                        model.patchValue(detail);\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError([\r\n            'order'\r\n        ]);\r\n        this.validationMessages = {\r\n            'order': {\r\n                'required': 'Số thứ tự không được để trống',\r\n                'isValid': 'Số thứ tự phải là số'\r\n            },\r\n        };\r\n        this.model = this.fb.group({\r\n            'order': [this.patientResource.order, [Validators.required, this.numberValidator.isValid]],\r\n            'isActive': [this.patientResource.isActive],\r\n            'concurrencyStamp': [this.patientResource.concurrencyStamp],\r\n            'modelTranslations': this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            parentId: null,\r\n            isActive: true,\r\n            order: 1,\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n            });\r\n        });\r\n\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name', 'description']\r\n        );\r\n        this.translationValidationMessage[\r\n            language\r\n            ] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxlength']},\r\n            {description: ['maxlength']},\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256)]\r\n            ],\r\n            description: [\r\n                this.modelTranslation.description,\r\n                [Validators.maxLength(500)]\r\n            ]\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslationModel(false)\r\n        );\r\n        return translationModel;\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listPatientResourcePageTitle\\\">List patient resource</span>\\r\\n    <small i18n=\\\"@@patientResourceModuleTitle\\\">Job management</small>\\r\\n</h1>\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@keywordSearch\\\" i18n-placeholder\\r\\n               placeholder=\\\"Enter keyword for search please.\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'inActive'},{id: true, name: 'Active'}]\\\"\\r\\n            i18n=\\\"@@selectStatus\\\"\\r\\n            i18n-title\\r\\n            [title]=\\\"'-- Select status --'\\\"\\r\\n            [(value)]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"search(1)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button class=\\\"btn btn-primary cm-mgr-5\\\" *ngIf=\\\"permission.add\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\"\\r\\n                type=\\\"button\\\">\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n<div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n            <th class=\\\"middle w200\\\" i18n=\\\"@@patientSourceName\\\">Patient Source Name</th>\\r\\n            <th class=\\\"middle\\\" i18n=\\\"@@description\\\">Description</th>\\r\\n            <th class=\\\"middle center w100\\\" i18n=\\\"@@status\\\">Status</th>\\r\\n            <th class=\\\"middle text-right w150\\\" i18n=\\\"@@action\\\">Action</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let patientSource of listItems$ | async; let i = index\\\">\\r\\n            <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n            <td class=\\\" w50 middle\\\">{{ patientSource.name }}</td>\\r\\n            <td class=\\\"middle\\\">{{patientSource.description}}</td>\\r\\n            <td class=\\\"middl center\\\"> <span class=\\\"badge\\\" [class.badge-danger]=\\\"!patientSource.isActive\\\"\\r\\n                                            [class.badge-success]=\\\"patientSource.isActive\\\">{patientSource.activeStatus, select, active {Activated} inActive {In active}}</span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n                <ghm-button\\r\\n                    *ngIf=\\\"permission.edit\\\"\\r\\n                    icon=\\\"fa fa-edit\\\" classes=\\\"btn btn-primary btn-sm\\\"\\r\\n                    (clicked)=\\\"edit(patientSource)\\\"></ghm-button>\\r\\n                <ghm-button\\r\\n                    *ngIf=\\\"permission.delete\\\"\\r\\n                    icon=\\\"fa fa-trash-o\\\" classes=\\\"btn btn-danger btn-sm\\\"\\r\\n                    [swal]=\\\"confirmDeletePatientSource\\\"\\r\\n                    (confirm)=\\\"delete(patientSource.id)\\\"></ghm-button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\" i18n=\\\"@@patientSource\\\" i18n-pageName [pageName]=\\\"'PatientSource'\\\"></ghm-paging>\\r\\n\\r\\n<app-patient-source-form (saveSuccessful)=\\\"search(1)\\\" (onCloseForm)=\\\"search(1)\\\"> </app-patient-source-form>\\r\\n<swal\\r\\n    #confirmDeletePatientSource\\r\\n    i18n=\\\"@@confirmDeletePatientSource\\\"\\r\\n    i18n-title\\r\\n    i18n-text\\r\\n    title=\\\"Are you sure for delete this patient source?\\\"\\r\\n    text=\\\"You can't recover this patient source after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit, Inject, AfterContentInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {HelperService} from '../../../../shareds/services/helper.service';\r\nimport {DestroySubscribers} from '../../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport {CheckPermission} from '../../../../shareds/decorator/check-permission.decorator';\r\nimport {BaseListComponent} from '../../../../base-list.component';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {IPageId, PAGE_ID} from '../../../../configs/page-id.config';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {FilterLink} from '../../../../shareds/models/filter-link.model';\r\nimport {PatientResourceSearchViewModel} from './models/patient-resource-search.viewmodel';\r\nimport {PatientResourceService} from './service/patient-resource.service';\r\nimport {PatientResourceFormComponent} from './patient-resource-form/patient-resource-form.component';\r\nimport {ISearchResult} from '../../../../interfaces/isearch.result';\r\n\r\n@Component({\r\n    selector: 'app-patient-source',\r\n    templateUrl: './patient-resource.component.html',\r\n    providers: [\r\n        Location, {provide: LocationStrategy, useClass: PathLocationStrategy},\r\n        HelperService, PatientResourceService\r\n    ]\r\n})\r\n\r\nexport class PatientResourceComponent extends BaseListComponent<PatientResourceSearchViewModel> implements OnInit, AfterViewInit {\r\n    @ViewChild(PatientResourceFormComponent) patientSourceForm: PatientResourceFormComponent;\r\n    isActive;\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private location: Location,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private toastr: ToastrService,\r\n                private patientResourceService: PatientResourceService,\r\n                private helperService: HelperService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.PATIENT, this.pageId.CONFIG_PATIENT_SOURCE, 'Quản lý khách hàng', 'Cấu hình nguồn khách');\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: ISearchResult<PatientResourceSearchViewModel> }) => {\r\n                const data = result.data;\r\n                this.totalRows = data.totalRows;\r\n                return data.items;\r\n            })\r\n        );\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.isActive = params.isActive !== null && params.isActive !== '' && params.isActive !== undefined\r\n                ? Boolean(params.isActive) : '';\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    searchKeyUp(keyword) {\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderFilterLink();\r\n        this.listItems$ = this.patientResourceService.search(this.keyword, this.isActive, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((data: ISearchResult<PatientResourceSearchViewModel>) => {\r\n                    this.totalRows = data.totalRows;\r\n                    return data.items;\r\n                }));\r\n    }\r\n\r\n    onPageClick(page: number) {\r\n        this.currentPage = page;\r\n        this.search(1);\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    add() {\r\n        this.patientSourceForm.add();\r\n    }\r\n\r\n    edit(patientResource: PatientResourceSearchViewModel) {\r\n        this.patientSourceForm.edit(patientResource.id);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.patientResourceService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(this.currentPage);\r\n                return;\r\n            });\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = 'config-customer/patient-source';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","export class PatientSubjectTranslation {\r\n    patientSubjectId: string;\r\n    languageId: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n","import {PatientSubjectTranslation} from './patient-subject-translation.model';\r\n\r\nexport class PatientSubject {\r\n    patientSubjectId: string;\r\n    concurrencyStamp: string;\r\n    isActive?: boolean;\r\n    order: number;\r\n    totalReduction: number;\r\n    modelTranslations: PatientSubjectTranslation[];\r\n\r\n    constructor() {\r\n        this.order = 1;\r\n        this.isActive = true;\r\n        this.modelTranslations = [];\r\n        this.patientSubjectId = '';\r\n    }\r\n}\r\n","module.exports = \"<nh-modal #patientSubjectFormModal size=\\\"md\\\"\\r\\n          (show)=\\\"onModalShow()\\\"\\r\\n          (hidden)=\\\"onModalHidden()\\\">\\r\\n    <nh-modal-header>\\r\\n        {isUpdate, select, 0 {Add new patient subject} 1 {Update patient subject} other {}}\\r\\n    </nh-modal-header>\\r\\n    <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"save()\\\" [formGroup]=\\\"model\\\">\\r\\n        <nh-modal-content>\\r\\n            <div formArrayName=\\\"modelTranslations\\\">\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"languages.length > 1\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@language\\\" ghmLabel=\\\"Language\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\"\\r\\n                           [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <nh-select [data]=\\\"languages\\\"\\r\\n                                   [(value)]=\\\"currentLanguage\\\"></nh-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.name\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@patientSubject\\\" ghmLabel=\\\"Patient subject\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                               i18n-placeholder=\\\"@@enterPatientSubjectNamePlaceHolder\\\"\\r\\n                               placeholder=\\\"Enter patient subject.\\\"\\r\\n                               formControlName=\\\"name\\\">\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                            { translationFormErrors[modelTranslation.value.languageId]?.name, select, required {patient subject is required} maxlength {patient subject\\r\\n                                                    name not allowed over 256 characters} }\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\"\\r\\n                     [hidden]=\\\"modelTranslation.value.languageId !== currentLanguage\\\"\\r\\n                     *ngFor=\\\"let modelTranslation of modelTranslations.controls; index as i\\\"\\r\\n                     [formGroupName]=\\\"i\\\"\\r\\n                     [class.has-error]=\\\"translationFormErrors[modelTranslation.value.languageId]?.description\\\">\\r\\n                    <label i18n=\\\"@@description\\\" i18n-ghmLabel ghmLabel=\\\"Description\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\"></label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                         <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"description\\\"\\r\\n                                                          i18n=\\\"@@enterDescriptionPlaceholder\\\" i18n-placeholder\\r\\n                                                          placeholder=\\\"Enter description.\\\"></textarea>\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                             {translationFormErrors[modelTranslation.value.languageId]?.description, select, maxlength {patient source description not allowed\\r\\n                               over 500 characters} }\\r\\n                         </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n                     [class.has-error]=\\\"formErrors.order\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@order\\\" ghmLabel=\\\"Order\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\" [required]=\\\"true\\\"></label>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                               i18n-placeholder=\\\"@@enterOrder\\\"\\r\\n                               placeholder=\\\"Enter order.\\\"\\r\\n                               formControlName=\\\"order\\\">\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                                                    {{formErrors.order}}\\r\\n                                                </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\"\\r\\n                     [class.has-error]=\\\"formErrors.totalReduction\\\">\\r\\n                    <label i18n-ghmLabel=\\\"@@totalReduction\\\" ghmLabel=\\\"Total Reduction\\\"\\r\\n                           class=\\\"col-sm-4 control-label\\\" [required]=\\\"false\\\"></label>\\r\\n                    <div class=\\\"col-sm-4\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                   i18n-placeholder=\\\"@@enterTotalReduction\\\"\\r\\n                                   placeholder=\\\"Enter totalReduction.\\\"\\r\\n                                   formControlName=\\\"totalReduction\\\">\\r\\n                            <div class=\\\"input-group-btn\\\">\\r\\n                                <button class=\\\"btn btn-default\\\" type=\\\"button\\\">VND</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <span class=\\\"help-block\\\">\\r\\n                                                    {{formErrors.totalReduction}}\\r\\n                                             </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [formGroup]=\\\"model\\\">\\r\\n                    <div class=\\\"col-sm-8 col-sm-offset-4\\\">\\r\\n                        <mat-checkbox color=\\\"primary\\\" formControlName=\\\"isActive\\\" i18n=\\\"@@isActive\\\">\\r\\n                            {model.value.isActive, select, 0 {Inactive} 1 {Active}}\\r\\n                        </mat-checkbox>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nh-modal-content>\\r\\n        <nh-modal-footer>\\r\\n            <mat-checkbox [checked]=\\\"isCreateAnother\\\" (change)=\\\"isCreateAnother = !isCreateAnother\\\"\\r\\n                          *ngIf=\\\"!isUpdate\\\"\\r\\n                          i18n=\\\"@@isCreateAnother\\\"\\r\\n                          class=\\\"cm-mgr-5\\\"\\r\\n                          color=\\\"primary\\\">\\r\\n                Create another\\r\\n            </mat-checkbox>\\r\\n            <ghm-button classes=\\\"btn btn-primary cm-mgr-5\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@Save\\\">Save</span>\\r\\n            </ghm-button>\\r\\n            <ghm-button classes=\\\"btn btn-default\\\"\\r\\n                        nh-dismiss=\\\"true\\\"\\r\\n                        [type]=\\\"'button'\\\"\\r\\n                        [loading]=\\\"isSaving\\\">\\r\\n                <span i18n=\\\"@@close\\\">Close</span>\\r\\n            </ghm-button>\\r\\n        </nh-modal-footer>\\r\\n    </form>\\r\\n</nh-modal>\\r\\n\"","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Inject,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {BaseFormComponent} from '../../../../../base-form.component';\r\nimport {TreeData} from '../../../../../view-model/tree-data';\r\nimport {IPageId, PAGE_ID} from '../../../../../configs/page-id.config';\r\nimport {SpinnerService} from '../../../../../core/spinner/spinner.service';\r\nimport {UtilService} from '../../../../../shareds/services/util.service';\r\nimport {IActionResultResponse} from '../../../../../interfaces/iaction-result-response.result';\r\nimport * as _ from 'lodash';\r\nimport {NhModalComponent} from '../../../../../shareds/components/nh-modal/nh-modal.component';\r\nimport {JobTranslation} from '../../jobs/models/job-translations.model';\r\nimport {NumberValidator} from '../../../../../validators/number.validator';\r\nimport {PatientSubjectService} from '../service/patient-subject.service';\r\nimport {PatientSubject} from '../models/patient-subject.model';\r\nimport {PatientSubjectTranslation} from '../models/patient-subject-translation.model';\r\nimport {PatientSubjectDetailViewModel} from '../models/patient-subject-detail.viewmodel';\r\n\r\n@Component({\r\n    selector: 'app-patient-subject-form',\r\n    templateUrl: './patient-subject-form.component.html',\r\n    providers: [PatientSubjectService, NumberValidator]\r\n})\r\n\r\nexport class PatientSubjectFormComponent extends BaseFormComponent implements OnInit {\r\n    @ViewChild('patientSubjectFormModal') patientSubjectFormModal: NhModalComponent;\r\n    @Input() elementId: string;\r\n    @Output() onEditorKeyup = new EventEmitter<any>();\r\n    @Output() onCloseForm = new EventEmitter<any>();\r\n    patientSubject: PatientSubject;\r\n    modelTranslation = new PatientSubjectTranslation();\r\n\r\n    constructor(@Inject(PAGE_ID) pageId: IPageId,\r\n                private fb: FormBuilder,\r\n                private toastr: ToastrService,\r\n                private spinnerService: SpinnerService,\r\n                private patientSubjectService: PatientSubjectService,\r\n                private numberValidator: NumberValidator,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.patientSubject = new PatientSubject();\r\n        this.renderForm();\r\n    }\r\n\r\n    onModalShow() {\r\n        this.isModified = false;\r\n    }\r\n\r\n    onModalHidden() {\r\n        this.isUpdate = false;\r\n        this.resetForm();\r\n        if (this.isModified) {\r\n            this.saveSuccessful.emit();\r\n        }\r\n    }\r\n\r\n    add() {\r\n        this.renderForm();\r\n        this.patientSubjectFormModal.open();\r\n    }\r\n\r\n    edit(id: string) {\r\n        this.isUpdate = true;\r\n        this.id = id;\r\n        this.getDetail(id);\r\n        this.patientSubjectFormModal.open();\r\n    }\r\n\r\n    save() {\r\n        const isValid = this.utilService.onValueChanged(\r\n            this.model,\r\n            this.formErrors,\r\n            this.validationMessages,\r\n            true\r\n        );\r\n        const isLanguageValid = this.checkLanguageValid();\r\n        if (isValid && isLanguageValid) {\r\n            this.patientSubject = this.model.value;\r\n            this.isSaving = true;\r\n            if (this.isUpdate) {\r\n                this.patientSubjectService\r\n                    .update(this.id, this.patientSubject)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        this.patientSubjectFormModal.dismiss();\r\n                    });\r\n            } else {\r\n                this.patientSubjectService\r\n                    .insert(this.patientSubject)\r\n                    .pipe(finalize(() => (this.isSaving = false)))\r\n                    .subscribe(() => {\r\n                        this.isModified = true;\r\n                        if (this.isCreateAnother) {\r\n                            this.resetForm();\r\n                        } else {\r\n                            this.patientSubjectFormModal.dismiss();\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    closeForm() {\r\n        this.onCloseForm.emit();\r\n    }\r\n\r\n    onParentSelect(job: TreeData) {\r\n        this.model.patchValue({parentId: job ? job.id : null});\r\n    }\r\n\r\n    private getDetail(id: string) {\r\n        this.subscribers.patientSourceService = this.patientSubjectService\r\n            .getDetail(id)\r\n            .subscribe((result: IActionResultResponse<PatientSubjectDetailViewModel>) => {\r\n                    const patientSubjectDetail = result.data;\r\n                    if (patientSubjectDetail) {\r\n                        this.model.patchValue({\r\n                            isActive: patientSubjectDetail.isActive,\r\n                            order: patientSubjectDetail.order,\r\n                            patientSubjectId: patientSubjectDetail.patientSubjectId,\r\n                            totalReduction: patientSubjectDetail.totalReduction,\r\n                            concurrencyStamp: patientSubjectDetail.concurrencyStamp\r\n                        });\r\n                        if (patientSubjectDetail.patientSubjectTranslations && patientSubjectDetail.patientSubjectTranslations.length > 0) {\r\n                            this.modelTranslations.controls.forEach(\r\n                                (model: FormGroup) => {\r\n                                    const detail = _.find(\r\n                                        patientSubjectDetail.patientSubjectTranslations,\r\n                                        (jobTranslation: JobTranslation) => {\r\n                                            return (\r\n                                                jobTranslation.languageId ===\r\n                                                model.value.languageId\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    if (detail) {\r\n                                        model.patchValue(detail);\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    private renderForm() {\r\n        this.buildForm();\r\n        this.renderTranslationFormArray(this.buildFormLanguage);\r\n    }\r\n\r\n    private buildForm() {\r\n        this.formErrors = this.utilService.renderFormError([\r\n            'order', 'totalReduction'\r\n        ]);\r\n        this.validationMessages = {\r\n            'order': {\r\n                'required': 'Số thứ tự không được để trống',\r\n                'isValid': 'Số thứ tự phải là số'\r\n            },\r\n            'totalReduction': {\r\n                'isValid': 'Tổng số tiền phải là số'\r\n            }\r\n        };\r\n        this.model = this.fb.group({\r\n            'order': [this.patientSubject.order, [Validators.required, this.numberValidator.isValid]],\r\n            'isActive': [this.patientSubject.isActive],\r\n            'concurrencyStamp': [this.patientSubject.concurrencyStamp],\r\n            'totalReduction': [this.patientSubject.totalReduction, [this.numberValidator.isValid]],\r\n            'modelTranslations': this.fb.array([])\r\n        });\r\n        this.model.valueChanges.subscribe(data => this.validateModel(false));\r\n    }\r\n\r\n    private resetForm() {\r\n        this.id = null;\r\n        this.model.patchValue({\r\n            parentId: null,\r\n            isActive: true,\r\n            order: 1,\r\n        });\r\n        this.modelTranslations.controls.forEach((model: FormGroup) => {\r\n            model.patchValue({\r\n                name: '',\r\n                description: '',\r\n            });\r\n        });\r\n        this.clearFormError(this.formErrors);\r\n        this.clearFormError(this.translationFormErrors);\r\n    }\r\n\r\n    private buildFormLanguage = (language: string) => {\r\n        this.translationFormErrors[language] = this.utilService.renderFormError(\r\n            ['name', 'description']\r\n        );\r\n        this.translationValidationMessage[\r\n            language\r\n            ] = this.utilService.renderFormErrorMessage([\r\n            {name: ['required', 'maxlength']},\r\n            {description: ['maxlength']},\r\n        ]);\r\n        const translationModel = this.fb.group({\r\n            languageId: [language],\r\n            name: [\r\n                this.modelTranslation.name,\r\n                [Validators.required, Validators.maxLength(256)]\r\n            ],\r\n            description: [\r\n                this.modelTranslation.description,\r\n                [Validators.maxLength(500)]\r\n            ]\r\n        });\r\n        translationModel.valueChanges.subscribe((data: any) =>\r\n            this.validateTranslationModel(false)\r\n        );\r\n        return translationModel;\r\n    }\r\n}\r\n","module.exports = \"<h1 class=\\\"page-title\\\">\\r\\n    <span class=\\\"cm-mgr-5\\\" i18n=\\\"@@listPatientSubjectPageTitle\\\">List patient subject</span>\\r\\n    <small i18n=\\\"@@jobModulePatientSubject\\\">Patient Subject management</small>\\r\\n</h1>\\r\\n<form class=\\\"form-inline cm-mgb-10\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" i18n=\\\"@@keywordSearch\\\" i18n-placeholder\\r\\n               placeholder=\\\"Enter keyword for search please.\\\"\\r\\n               name=\\\"searchInput\\\" [(ngModel)]=\\\"keyword\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" i18n=\\\"@@totalReduction\\\" i18n-placeholder\\r\\n               placeholder=\\\"Enter total reduction for search please.\\\"\\r\\n               name=\\\"totalReduction\\\" [(ngModel)]=\\\"totalReduction\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgr-5\\\">\\r\\n        <nh-select\\r\\n            [data]=\\\"[{id: false, name: 'inActive'},{id: true, name: 'Active'}]\\\"\\r\\n            i18n=\\\"@@selectStatus\\\"\\r\\n            i18n-title\\r\\n            [title]=\\\"'-- Select status --'\\\"\\r\\n            [(value)]=\\\"isActive\\\"\\r\\n            (onSelectItem)=\\\"search(1)\\\"></nh-select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n            <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group cm-mgl-5\\\">\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"resetFormSearch()\\\">\\r\\n            <i class=\\\"fa fa-refresh\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group pull-right\\\">\\r\\n        <button class=\\\"btn btn-primary cm-mgr-5\\\" *ngIf=\\\"permission.add\\\" i18n=\\\"@@add\\\" (click)=\\\"add()\\\"\\r\\n                type=\\\"button\\\">\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\\r\\n<div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th class=\\\"middle center w50\\\" i18n=\\\"@@no\\\">No</th>\\r\\n            <th class=\\\"middle w200\\\" i18n=\\\"@@patientSubjectName\\\">Patient subject Name</th>\\r\\n            <th class=\\\"middle center w200\\\" i18n=\\\"@@totalReductionMax\\\">Total Reduction Max</th>\\r\\n            <th class=\\\"middle \\\" i18n=\\\"@@description\\\">Description</th>\\r\\n            <th class=\\\"middle center w100\\\" i18n=\\\"@@status\\\">Status</th>\\r\\n            <th class=\\\"middle text-right w150\\\" i18n=\\\"@@action\\\">Action</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let patientSubject of listItems$ | async; let i = index\\\">\\r\\n            <td class=\\\"center middle\\\">{{ (currentPage - 1) * pageSize + i + 1 }}</td>\\r\\n            <td class=\\\"w150 \\\">{{ patientSubject.name }}</td>\\r\\n            <td class=\\\"center w150 middle\\\">{{patientSubject.totalReduction}}</td>\\r\\n            <td class=\\\"middle\\\">{{patientSubject.description}}</td>\\r\\n            <td class=\\\"middl center\\\">\\r\\n                <span class=\\\"badge\\\" [class.badge-danger]=\\\"!patientSubject.isActive\\\"\\r\\n                      [class.badge-success]=\\\"patientSubject.isActive\\\">\\r\\n                    {patientSubject.activeStatus, select, active {Activated} inActive {In active}}\\r\\n                </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-right middle\\\">\\r\\n                <ghm-button\\r\\n                    *ngIf=\\\"permission.edit\\\"\\r\\n                    icon=\\\"fa fa-edit\\\" classes=\\\"btn btn-primary btn-sm\\\"\\r\\n                    (clicked)=\\\"edit(patientSubject)\\\"></ghm-button>\\r\\n                <ghm-button\\r\\n                    *ngIf=\\\"permission.delete\\\"\\r\\n                    icon=\\\"fa fa-trash-o\\\" classes=\\\"btn btn-danger btn-sm\\\"\\r\\n                    [swal]=\\\"confirmDeletePatientSubject\\\"\\r\\n                    (confirm)=\\\"delete(patientSubject.id)\\\"></ghm-button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<ghm-paging [totalRows]=\\\"totalRows\\\" [currentPage]=\\\"currentPage\\\" [pageShow]=\\\"6\\\" (pageClick)=\\\"search($event)\\\"\\r\\n            [isDisabled]=\\\"isSearching\\\" i18n=\\\"@@patientSource\\\" i18n-pageName [pageName]=\\\"'PatientSource'\\\"></ghm-paging>\\r\\n\\r\\n<app-patient-subject-form (saveSuccessful)=\\\"search(1)\\\" (onCloseForm)=\\\"search(1)\\\"></app-patient-subject-form>\\r\\n<swal\\r\\n    #confirmDeletePatientSubject\\r\\n    i18n=\\\"@@confirmDeletePatientSubject\\\"\\r\\n    i18n-title\\r\\n    i18n-text\\r\\n    title=\\\"Are you sure for delete this patient subject?\\\"\\r\\n    text=\\\"You can't recover this patient subject after delete.\\\"\\r\\n    type=\\\"question\\\"\\r\\n    [showCancelButton]=\\\"true\\\"\\r\\n    [focusCancel]=\\\"true\\\">\\r\\n</swal>\\r\\n\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit, Inject, AfterContentInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\nimport {finalize, map} from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {HelperService} from '../../../../shareds/services/helper.service';\r\nimport {DestroySubscribers} from '../../../../shareds/decorator/destroy-subscribes.decorator';\r\nimport {CheckPermission} from '../../../../shareds/decorator/check-permission.decorator';\r\nimport {BaseListComponent} from '../../../../base-list.component';\r\nimport {APP_CONFIG, IAppConfig} from '../../../../configs/app.config';\r\nimport {IPageId, PAGE_ID} from '../../../../configs/page-id.config';\r\nimport {UtilService} from '../../../../shareds/services/util.service';\r\nimport {FilterLink} from '../../../../shareds/models/filter-link.model';\r\nimport {ISearchResult} from '../../../../interfaces/isearch.result';\r\nimport {PatientSubjectSearchViewModel} from './models/patient-subject-search.viewmodel';\r\nimport {PatientSubjectService} from './service/patient-subject.service';\r\nimport {PatientSubjectFormComponent} from './patient-subject-form/patient-subject-form.component';\r\n\r\n@Component({\r\n    selector: 'app-patient-subject',\r\n    templateUrl: './patient-subject.component.html',\r\n    providers: [\r\n        Location, {provide: LocationStrategy, useClass: PathLocationStrategy},\r\n        HelperService, PatientSubjectService\r\n    ]\r\n})\r\n\r\nexport class PatientSubjectComponent extends BaseListComponent<PatientSubjectSearchViewModel> implements OnInit, AfterViewInit {\r\n     @ViewChild(PatientSubjectFormComponent) patientSubjectForm: PatientSubjectFormComponent;\r\n    isActive;\r\n    totalReduction;\r\n\r\n    constructor(@Inject(PAGE_ID) public pageId: IPageId,\r\n                @Inject(APP_CONFIG) public appConfig: IAppConfig,\r\n                private location: Location,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private toastr: ToastrService,\r\n                private patientSubjectService: PatientSubjectService,\r\n                private helperService: HelperService,\r\n                private utilService: UtilService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.appService.setupPage(this.pageId.PATIENT, this.pageId.CONFIG_PATIENT_SUBJECT,\r\n            'Quản lý khách hàng', 'Cấu hình đối tượng khách hàng');\r\n        this.listItems$ = this.route.data.pipe(map((result: { data: ISearchResult<PatientSubjectSearchViewModel> }) => {\r\n                const data = result.data;\r\n                this.totalRows = data.totalRows;\r\n                return data.items;\r\n            })\r\n        );\r\n        this.subscribers.queryParams = this.route.queryParams.subscribe(params => {\r\n            this.keyword = params.keyword ? params.keyword : '';\r\n            this.totalReduction = params.totalReduction !== null && params.totalReduction !== ''\r\n                && params.totalReduction !== undefined ? parseFloat(params.totalReduction) : '';\r\n            this.isActive = params.isActive !== null && params.isActive !== '' && params.isActive !== undefined\r\n                ? Boolean(params.isActive) : '';\r\n            this.currentPage = params.page ? parseInt(params.page) : 1;\r\n            this.pageSize = params.pageSize ? parseInt(params.pageSize) : this.appConfig.PAGE_SIZE;\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    searchKeyUp(keyword) {\r\n        this.keyword = keyword;\r\n        this.search(1);\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.renderFilterLink();\r\n        this.listItems$ = this.patientSubjectService.search(this.keyword, this.totalReduction, this.isActive,\r\n            this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false),\r\n                map((data: ISearchResult<PatientSubjectSearchViewModel>) => {\r\n                    this.totalRows = data.totalRows;\r\n                    return data.items;\r\n                }));\r\n    }\r\n\r\n    onPageClick(page: number) {\r\n        this.currentPage = page;\r\n        this.search(1);\r\n    }\r\n\r\n    resetFormSearch() {\r\n        this.keyword = '';\r\n        this.totalReduction = '';\r\n        this.isActive = null;\r\n        this.search(1);\r\n    }\r\n\r\n    add() {\r\n         this.patientSubjectForm.add();\r\n    }\r\n\r\n    edit(patientSubject: PatientSubjectSearchViewModel) {\r\n         this.patientSubjectForm.edit(patientSubject.id);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.patientSubjectService.delete(id)\r\n            .subscribe(() => {\r\n                this.search(this.currentPage);\r\n                return;\r\n            });\r\n    }\r\n\r\n    private renderFilterLink() {\r\n        const path = 'config-customer/patient-subject';\r\n        const query = this.utilService.renderLocationFilter([\r\n            new FilterLink('keyword', this.keyword),\r\n            new FilterLink('totalReduction', this.totalReduction),\r\n            new FilterLink('isActive', this.isActive),\r\n            new FilterLink('page', this.currentPage),\r\n            new FilterLink('pageSize', this.pageSize)\r\n        ]);\r\n        this.location.go(path, query);\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport { PatientSubjectSearchViewModel } from '../models/patient-subject-search.viewmodel';\r\nimport { PatientSubjectDetailViewModel } from '../models/patient-subject-detail.viewmodel';\r\nimport { PatientSubject } from '../models/patient-subject.model';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { SearchResultViewModel } from '../../../../../shareds/view-models/search-result.viewmodel';\r\nimport { ActionResultViewModel } from '../../../../../shareds/view-models/action-result.viewmodel';\r\n\r\n@Injectable()\r\nexport class PatientSubjectService implements Resolve<PatientSubject> {\r\n    url = 'patient-subjects/';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private http: HttpClient,\r\n                private toastr: ToastrService) {\r\n        this.url = `${appConfig.PATIENT_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.isActive,\r\n            queryParams.totalReduction,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string, totalReduction: number, isActive?: boolean, page: number = 1,\r\n           pageSize: number = 20): Observable<SearchResultViewModel<PatientSubjectSearchViewModel>> {\r\n        const params = new HttpParams()\r\n            .set('keyword', keyword ? keyword : '')\r\n            .set('totalReduction', totalReduction ? totalReduction.toString() : '')\r\n            .set('isActive', isActive !== null && isActive !== undefined ? isActive.toString() : '')\r\n            .set('page', page ? page.toString() : '1')\r\n            .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString());\r\n\r\n        return this.http.get(`${this.url}`, {\r\n            params: params\r\n        }).pipe(map((result: SearchResultViewModel<PatientSubjectSearchViewModel>) => {\r\n            result.items.forEach((item: PatientSubjectSearchViewModel) => {\r\n                item.activeStatus = item.isActive\r\n                    ? 'Active'\r\n                    : 'InActive';\r\n            });\r\n            return result;\r\n        })) as Observable<SearchResultViewModel<PatientSubjectSearchViewModel>>;\r\n    }\r\n\r\n    getDetail(id: string): Observable<ActionResultViewModel<PatientSubjectDetailViewModel>> {\r\n        return this.http.get(`${this.url}${id}`, {})as Observable<ActionResultViewModel<PatientSubjectDetailViewModel>>;\r\n    }\r\n\r\n    insert(patientSubject: PatientSubject): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}`, {\r\n            order: patientSubject.order,\r\n            isActive: patientSubject.isActive,\r\n            totalReduction: patientSubject.totalReduction,\r\n            patientSubjectTranslations: patientSubject.modelTranslations,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    update(id: number, patientSubject: PatientSubject): Observable<ActionResultViewModel> {\r\n        return this.http.post(`${this.url}${id}`, {\r\n            order: patientSubject.order,\r\n            isActive: patientSubject.isActive,\r\n            concurrencyStamp: patientSubject.concurrencyStamp,\r\n            totalReduction: patientSubject.totalReduction,\r\n            patientSubjectTranslations: patientSubject.modelTranslations,\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n    delete(id: string): Observable<ActionResultViewModel> {\r\n        return this.http.delete(`${this.url}${id}`, {\r\n            params: new HttpParams()\r\n                .set('id', id)\r\n        }).pipe(map((result: ActionResultViewModel) => {\r\n            this.toastr.success(result.message);\r\n            return result;\r\n        })) as Observable<ActionResultViewModel>;\r\n    }\r\n\r\n}\r\n","export class FilterLink {\r\n    constructor(public key: string,\r\n        public value: any) {\r\n    }\r\n}\r\n"],"sourceRoot":""}