{"version":3,"sources":["webpack:///./src/app/modules/hr/organization/office/services/office.service.ts","webpack:///./src/app/shareds/components/nh-user-picker/nh-user-picker.component.html","webpack:///./src/app/shareds/components/nh-user-picker/nh-user-picker.component.scss","webpack:///./src/app/shareds/components/nh-user-picker/nh-user-picker.component.ts","webpack:///./src/app/shareds/components/nh-user-picker/nh-user-picker.model.ts","webpack:///./src/app/shareds/components/nh-user-picker/nh-user-picker.module.ts","webpack:///./src/app/shareds/components/nh-user-picker/nh-user-picker.service.ts"],"names":[],"mappings":"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","file":"modules-configs-config-module~modules-event-event-module~modules-surveys-survey-module.js","sourcesContent":["﻿import { IActionResultResponse } from './../../../../../interfaces/iaction-result-response.result';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Office } from '../models/office.model';\r\nimport { APP_CONFIG, IAppConfig } from '../../../../../configs/app.config';\r\nimport { ISearchResult } from '../../../../../interfaces/isearch.result';\r\nimport { OfficeSearchViewModel } from '../models/office-search.viewmodel';\r\nimport { OfficeDetailViewModel } from '../models/office-detail.viewmodel';\r\nimport { TreeData } from '../../../../../view-model/tree-data';\r\nimport { OfficeContact } from '../models/office-contact.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SpinnerService } from '../../../../../core/spinner/spinner.service';\r\nimport { OfficeSuggestionViewModel } from '../models/office-suggestion.viewmodel';\r\nimport { NhSuggestion } from '../../../../../shareds/components/nh-suggestion/nh-suggestion.component';\r\nimport { OfficeEditViewModel } from '../models/office-edit.viewmodel';\r\n\r\n@Injectable()\r\nexport class OfficeService implements Resolve<Office> {\r\n    url = 'offices/';\r\n\r\n    constructor(@Inject(APP_CONFIG) private appConfig: IAppConfig,\r\n                private spinnerService: SpinnerService,\r\n                private toastr: ToastrService,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.HR_API_URL}${this.url}`;\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: Object): any {\r\n        const queryParams = route.queryParams;\r\n        return this.search(\r\n            queryParams.keyword,\r\n            queryParams.isActive,\r\n            queryParams.page,\r\n            queryParams.pageSize\r\n        );\r\n    }\r\n\r\n    search(keyword: string,\r\n           isActive?: boolean,\r\n           page: number = 1,\r\n           pageSize: number = 10): Observable<ISearchResult<OfficeSearchViewModel>> {\r\n        return this.http\r\n            .get(`${this.url}`, {\r\n                params: new HttpParams()\r\n                    .set('keyword', keyword ? keyword : '')\r\n                    .set(\r\n                        'isActive',\r\n                        isActive != null ? isActive.toString() : ''\r\n                    )\r\n                    .set('page', page ? page.toString() : '0')\r\n                    .set('pageSize', pageSize ? pageSize.toString() : this.appConfig.PAGE_SIZE.toString())\r\n            })\r\n            .pipe(\r\n                map((result: ISearchResult<OfficeSearchViewModel>) => {\r\n                    result.items.forEach((item: OfficeSearchViewModel) => {\r\n                        item.activeStatus = item.isActive\r\n                            ? 'active'\r\n                            : 'inActive';\r\n                        const level = item.idPath.split('.');\r\n                        item.nameLevel = '';\r\n                        for (let i = 1; i < level.length; i++) {\r\n                            item.nameLevel += '<i class=\"fa fa-long-arrow-right cm-mgr-5\"></i>';\r\n                        }\r\n                    });\r\n                    return result;\r\n                })\r\n            ) as Observable<ISearchResult<OfficeSearchViewModel>>;\r\n    }\r\n\r\n    searchName(keyword: string,\r\n               isActive?: boolean,\r\n               page: number = 1,\r\n               pageSize: number = 20): Observable<any> {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('isActive', isActive != null ? isActive.toString() : '')\r\n                .set('page', page ? page.toString() : '0')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '10')\r\n        });\r\n    }\r\n\r\n    getDetail(id: number): Observable<IActionResultResponse<OfficeDetailViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}${id}`).pipe(\r\n            finalize(() => this.spinnerService.hide()),\r\n            map((result: IActionResultResponse<OfficeDetailViewModel>) => {\r\n                const data = result.data;\r\n                data.activeStatus = data.isActive ? 'active' : 'inActive';\r\n                return result;\r\n            })\r\n        ) as Observable<IActionResultResponse<OfficeDetailViewModel>>;\r\n    }\r\n\r\n    getEditDetail(id: number): Observable<IActionResultResponse<OfficeEditViewModel>> {\r\n        this.spinnerService.show();\r\n        return this.http.get(`${this.url}edit/${id}`).pipe(\r\n            finalize(() => this.spinnerService.hide()),\r\n            map((result: IActionResultResponse<OfficeEditViewModel>) => {\r\n                const data = result.data;\r\n                data.activeStatus = data.isActive ? 'active' : 'inActive';\r\n                return result;\r\n            })\r\n        ) as Observable<IActionResultResponse<OfficeEditViewModel>>;\r\n    }\r\n\r\n    insert(office: Office): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}`, {\r\n            isActive: office.isActive,\r\n            code: office.code,\r\n            officeType: office.officeType,\r\n            parentId: office.parentId,\r\n            officeTranslations: office.modelTranslations,\r\n            officeContacts: office.officeContacts\r\n        })\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    update(id: string, office: Office): Observable<IActionResultResponse> {\r\n        return this.http.post(`${this.url}${id}`, {\r\n            isActive: office.isActive,\r\n            code: office.code,\r\n            officeType: office.officeType,\r\n            parentId: office.parentId,\r\n            officeTranslations: office.modelTranslations,\r\n            officeContacts: office.officeContacts\r\n        })\r\n            .pipe(map((result: IActionResultResponse) => {\r\n                this.toastr.success(result.message);\r\n                return result;\r\n            })) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    // updateIsActive(office: Office): Observable<IActionResultResponse> {\r\n    //     return this.http.post(`${this.url}update-active-status`, '', {\r\n    //         params: new HttpParams()\r\n    //             .set('id', office.id.toString())\r\n    //             .set('isActive', office.isActive.toString())\r\n    //     }) as Observable<IActionResultResponse>;\r\n    // }\r\n\r\n    delete(id: number): Observable<IActionResultResponse> {\r\n        this.spinnerService.show();\r\n        return this.http.delete(`${this.url}${id}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: IActionResultResponse) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                }))as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    getTree(): Observable<TreeData[]> {\r\n        return this.http.get(`${this.url}trees`) as Observable<TreeData[]>;\r\n    }\r\n\r\n    getOfficeUserTree() {\r\n        return this.http.get(`${this.url}`);\r\n    }\r\n\r\n    getOfficeUserTreeLazy(parentId: number) {\r\n        return this.http.get(`${this.url}`, {\r\n            params: new HttpParams().set(\r\n                'parentId',\r\n                parentId ? parentId.toString() : ''\r\n            )\r\n        });\r\n    }\r\n\r\n    searchForSuggestion(keyword: string): Observable<NhSuggestion[]> {\r\n        return this.http\r\n            .get(`${this.url}suggestions`, {\r\n                params: new HttpParams()\r\n                    .set('keyword', keyword ? keyword : '')\r\n            })\r\n            .pipe(map((result: ISearchResult<OfficeSuggestionViewModel>) => {\r\n                return result.items.map((item: OfficeSuggestionViewModel) => {\r\n                    return new NhSuggestion(item.id, item.name);\r\n                });\r\n            })) as Observable<NhSuggestion[]>;\r\n    }\r\n\r\n    // Contacts.\r\n    updateContact(officeId: number,\r\n                  id: string,\r\n                  contact: OfficeContact): Observable<IActionResultResponse> {\r\n        return this.http\r\n            .post(`${this.url}${officeId}/contacts/${id}`, {\r\n                userId: contact.userId,\r\n                email: contact.email,\r\n                phoneNumber: contact.phoneNumber,\r\n                fax: contact.fax\r\n            })\r\n            .pipe(\r\n                map((result: IActionResultResponse) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    addContact(officeId: number, contact: OfficeContact) {\r\n        return this.http\r\n            .post(`${this.url}${officeId}/contacts`, {\r\n                userId: contact.userId,\r\n                email: contact.email,\r\n                phoneNumber: contact.phoneNumber,\r\n                fax: contact.fax\r\n            })\r\n            .pipe(\r\n                map((result: IActionResultResponse) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            ) as Observable<IActionResultResponse>;\r\n    }\r\n\r\n    deleteContact(officeId: number, contactId: string): Observable<IActionResultResponse> {\r\n        this.spinnerService.show();\r\n        return this.http\r\n            .delete(`${this.url}${officeId}/contacts/${contactId}`)\r\n            .pipe(\r\n                finalize(() => this.spinnerService.hide()),\r\n                map((result: IActionResultResponse) => {\r\n                    this.toastr.success(result.message);\r\n                    return result;\r\n                })\r\n            );\r\n    }\r\n\r\n    // searchPositions(officeId: number, keyword: string, page: number,\r\n    //                 pageSize: number): Observable<ISearchResult<OfficePositionSearchViewModel>> {\r\n    //     return this.http.get(`${this.url}${officeId}/positions`, {\r\n    //         params: new HttpParams()\r\n    //             .set('keyword', keyword ? keyword : '')\r\n    //             .set('page', page ? page.toString() : '1')\r\n    //             .set('pageSize', pageSize ? pageSize.toString() : '20')\r\n    //     }) as Observable<ISearchResult<OfficePositionSearchViewModel>>;\r\n    // }\r\n    //\r\n    // deletePosition(officeId: number, positionId: string): Observable<IActionResultResponse> {\r\n    //     return this.http.delete(`${this.url}${officeId}/positions/${positionId}`)\r\n    //         .pipe(\r\n    //             map((result: IActionResultResponse) => {\r\n    //                 this.toastr.success(result.message);\r\n    //                 return result;\r\n    //             })\r\n    //         )as Observable<IActionResultResponse>;\r\n    // }\r\n}\r\n","module.exports = \"<div class=\\\"nh-user-picker-container\\\" *ngIf=\\\"isShow\\\">\\r\\n    <div class=\\\"nh-user-picker-header\\\" *ngIf=\\\"title\\\">\\r\\n        <h4 class=\\\"bold\\\">{{ title }}</h4>\\r\\n    </div><!-- END: .nh-user-picker-header -->\\r\\n    <div class=\\\"nh-user-picker-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"alert alert-danger\\\" i18n=\\\"@@PleaseSelectAtLeastOneItem\\\" *ngIf=\\\"errorMessage\\\">\\r\\n                    {errorMessage, select, required {Please select at least one item} other {}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"nh-user-picker-left\\\">\\r\\n            <h4 class=\\\"title\\\">{{allTitle}}</h4>\\r\\n            <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n                <div class=\\\"form-group cm-mgr-5\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                               i18n=\\\"@@enterKeyword\\\"\\r\\n                               placeholder=\\\"Enter keyword\\\"\\r\\n                               [(ngModel)]=\\\"keyword\\\"\\r\\n                               name=\\\"keyword\\\">\\r\\n                        <span class=\\\"input-group-btn\\\">\\r\\n                            <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\r\\n                                <i class=\\\"fa fa-pulse fa-spinner\\\" *ngIf=\\\"isSearching\\\"></i>\\r\\n                                <i class=\\\"fa fa-search\\\" *ngIf=\\\"!isSearching\\\"></i>\\r\\n                            </button>\\r\\n                        </span>\\r\\n                    </div><!-- /input-group -->\\r\\n                </div>\\r\\n            </form>\\r\\n            <ul class=\\\"nh-user-picker-items\\\">\\r\\n                <li *ngFor=\\\"let user of source\\\" (click)=\\\"selectItem(user)\\\"\\r\\n                    class=\\\"user-item\\\"\\r\\n                    [class.selected]=\\\"user.isSelected\\\">\\r\\n                    <div class=\\\"avatar-wrapper\\\">\\r\\n                        <img class=\\\"avatar-sm rounded-avatar\\\"\\r\\n                             ghmImage\\r\\n                             [src]=\\\"user.avatar\\\"\\r\\n                             alt=\\\"{{ user.fullName }}\\\">\\r\\n                    </div><!-- END: .avatar-wrapper -->\\r\\n                    <div class=\\\"user-info\\\">\\r\\n                        <span class=\\\"full-name\\\">{{ user.fullName }}</span>\\r\\n                        <div class=\\\"description\\\"> {{user.description }}</div>\\r\\n                    </div><!-- END: .info -->\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div><!-- END: .nh-user-picker-left -->\\r\\n        <div class=\\\"nh-user-picker-right\\\">\\r\\n            <h4 class=\\\"title\\\">{{selectedTitle}}</h4>\\r\\n            <form class=\\\"form-inline\\\" (ngSubmit)=\\\"search(1)\\\">\\r\\n                <div class=\\\"form-group text-right\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" i18n=\\\"@@deleteAll\\\" (click)=\\\"deleteAllSelected()\\\">\\r\\n                        Delete all\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form>\\r\\n            <ul class=\\\"nh-user-picker-items\\\">\\r\\n                <li *ngFor=\\\"let user of selectedItems\\\"\\r\\n                    class=\\\"user-item\\\"\\r\\n                    (click)=\\\"removeSelectedUser(user)\\\">\\r\\n                    <div class=\\\"avatar-wrapper\\\">\\r\\n                        <img class=\\\"avatar-sm rounded-avatar\\\"\\r\\n                             ghmImage\\r\\n                             [src]=\\\" user.avatar \\\"\\r\\n                             alt=\\\"{{ user.fullName }}\\\">\\r\\n                    </div><!-- END: .avatar-wrapper -->\\r\\n                    <div class=\\\"user-info\\\">\\r\\n                        <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\"\\r\\n                             role=\\\"presentation\\\">\\r\\n                            <path\\r\\n                                    d=\\\"M12 10.586L6.707 5.293a1 1 0 0 0-1.414 1.414L10.586 12l-5.293 5.293a1 1 0 0 0 1.414 1.414L12 13.414l5.293 5.293a1 1 0 0 0 1.414-1.414L13.414 12l5.293-5.293a1 1 0 1 0-1.414-1.414L12 10.586z\\\"\\r\\n                                    fill=\\\"currentColor\\\">\\r\\n                            </path>\\r\\n                        </svg>\\r\\n                        <span class=\\\"full-name\\\">{{ user.fullName }}</span>\\r\\n                        <div class=\\\"description\\\"> {{user.description }}</div>\\r\\n                    </div><!-- END: .info -->\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div><!-- END: .nh-user-picker-right -->\\r\\n    </div><!-- END: .nh-user-picker-body -->\\r\\n    <div class=\\\"nh-user-picker-footer\\\">\\r\\n        <ghm-paging\\r\\n                [totalRows]=\\\"totalRows\\\"\\r\\n                [currentPage]=\\\"currentPage\\\"\\r\\n                [pageShow]=\\\"6\\\"\\r\\n                [isDisabled]=\\\"isSearching\\\"\\r\\n                [pageSize]=\\\"pageSize\\\"\\r\\n                (pageClick)=\\\"search($event)\\\"\\r\\n        ></ghm-paging>\\r\\n        <button class=\\\"btn btn-primary\\\" i18n=\\\"@@accept\\\" (click)=\\\"accept()\\\">Accept</button>\\r\\n        <button class=\\\"btn btn-default\\\" i18n=\\\"@@cancel\\\" (click)=\\\"dismiss()\\\">Cancel</button>\\r\\n    </div><!-- END: .nh-user-picker-footer -->\\r\\n</div><!-- END: .nh-user-picker-container -->\\r\\n\"","module.exports = \".rounded-avatar {\\n  border-radius: 50%; }\\n\\n.avatar-wrapper {\\n  overflow: hidden; }\\n\\n.avatar-xs {\\n  width: 16px;\\n  hight: 16px; }\\n\\n.avatar-sm {\\n  width: 32px;\\n  height: 32px; }\\n\\n.nh-user-picker-container {\\n  border: 1px solid #ddd;\\n  width: 60%;\\n  margin: 0px auto;\\n  position: fixed;\\n  top: 20%;\\n  left: 0;\\n  right: 0;\\n  background: white;\\n  z-index: 9999999; }\\n\\n.nh-user-picker-container ul.nh-user-picker-items {\\n    list-style: none;\\n    padding-left: 0;\\n    margin-top: 10px;\\n    margin-bottom: 0;\\n    border: 1px solid #ddd;\\n    height: 250px;\\n    min-height: 250px;\\n    max-height: 250px;\\n    overflow-y: auto; }\\n\\n.nh-user-picker-container ul.nh-user-picker-items li {\\n      border-bottom: 1px solid #ddd;\\n      padding: 3px 7px; }\\n\\n.nh-user-picker-container ul.nh-user-picker-items li:last-child {\\n        border-bottom: none; }\\n\\n.nh-user-picker-container ul.nh-user-picker-items li:hover {\\n        cursor: pointer;\\n        background: #eaeaea; }\\n\\n.nh-user-picker-container ul.nh-user-picker-items li a.nh-user-picker-item-action {\\n        float: right;\\n        color: #D91E18; }\\n\\n.nh-user-picker-container .nh-user-picker-header, .nh-user-picker-container .nh-user-picker-body, .nh-user-picker-container .nh-user-picker-footer {\\n    padding: 10px; }\\n\\n.nh-user-picker-container .nh-user-picker-header {\\n    border-bottom: 1px solid #ddd; }\\n\\n.nh-user-picker-container .nh-user-picker-body {\\n    position: relative;\\n    overflow: hidden; }\\n\\n.nh-user-picker-container .nh-user-picker-body .nh-user-picker-left {\\n      padding-right: 5px; }\\n\\n.nh-user-picker-container .nh-user-picker-body .nh-user-picker-right {\\n      padding-left: 5px; }\\n\\n.nh-user-picker-container .nh-user-picker-body .nh-user-picker-left, .nh-user-picker-container .nh-user-picker-body .nh-user-picker-right {\\n      width: 50%;\\n      display: block;\\n      float: left; }\\n\\n.nh-user-picker-container .nh-user-picker-body .nh-user-picker-left h4.title, .nh-user-picker-container .nh-user-picker-body .nh-user-picker-right h4.title {\\n        font-size: 14px;\\n        font-weight: bold; }\\n\\n.nh-user-picker-container .nh-user-picker-footer {\\n    border-top: 1px solid #ddd;\\n    text-align: right; }\\n\\n.nh-user-picker-container .nh-user-picker-footer button {\\n      margin-left: 5px; }\\n\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { NhUserPicker } from './nh-user-picker.model';\r\nimport { NhUserPickerService } from './nh-user-picker.service';\r\nimport { SearchResultViewModel } from '../../view-models/search-result.viewmodel';\r\nimport { SuggestionViewModel } from '../../view-models/SuggestionViewModel';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { TreeData } from '../../../view-model/tree-data';\r\nimport { OfficeService } from '../../../modules/hr/organization/office/services/office.service';\r\n\r\n@Component({\r\n    selector: 'nh-user-picker',\r\n    templateUrl: './nh-user-picker.component.html',\r\n    styleUrls: ['./nh-user-picker.component.scss'],\r\n    providers: [OfficeService],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class NhUserPickerComponent implements OnInit, OnChanges {\r\n    @Input() isShow = false;\r\n    @Input() allTitle = '';\r\n    @Input() selectedTitle = '';\r\n    @Input() source: NhUserPicker[] = [];\r\n    @Input() totalRows = 0;\r\n    @Input() pageSize = 0;\r\n    @Input() title = '';\r\n\r\n    @Output() selectedItem = new EventEmitter();\r\n    @Output() selectedPage = new EventEmitter();\r\n    @Output() removedItem = new EventEmitter();\r\n    @Output() accepted = new EventEmitter();\r\n\r\n    errorMessage = '';\r\n    currentPage = 1;\r\n    keyword: string;\r\n    isSearching = false;\r\n    // officeId: number;\r\n    // officeTree: TreeData[] = [];\r\n\r\n    private _selectedItems = [];\r\n\r\n    @Input()\r\n    set selectedItems(value: NhUserPicker[]) {\r\n        this._selectedItems = _.cloneDeep(value);\r\n    }\r\n\r\n    get selectedItems(): NhUserPicker[] {\r\n        return this._selectedItems;\r\n    }\r\n\r\n    constructor(private userPickerService: NhUserPickerService,\r\n                private officeService: OfficeService) {\r\n        // this.officeService.getTree()\r\n        //     .subscribe((result: TreeData[]) => this.officeTree = result);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.search(1);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n    }\r\n\r\n    // onSelectOffice(officeTree: TreeData) {\r\n    //     this.officeId = officeTree ? officeTree.id : null;\r\n    //     this.search(1);\r\n    // }\r\n\r\n    show() {\r\n        // this.officeId = null;\r\n        this.isShow = true;\r\n        _.each(this.source, (item: SuggestionViewModel<string>) => {\r\n            const selectedItemInfo = _.find(this.selectedItems, (selectedItem: NhUserPicker) => {\r\n                return selectedItem.id === item.id;\r\n            });\r\n            item.isSelected = selectedItemInfo != null && selectedItemInfo !== undefined;\r\n        });\r\n    }\r\n\r\n    deleteAllSelected() {\r\n        this.selectedItems = [];\r\n        _.each(this.source, (item: NhUserPicker) => {\r\n            item.isSelected = false;\r\n        });\r\n    }\r\n\r\n    removeSelectedUser(user: NhUserPicker) {\r\n        _.remove(this.selectedItems, (item: any) => {\r\n            return item.id === user.id;\r\n        });\r\n\r\n        const userInfo = _.find(this.source, (item: any) => {\r\n            return item.id === user.id;\r\n        });\r\n\r\n        if (userInfo) {\r\n            userInfo.isSelected = false;\r\n        }\r\n    }\r\n\r\n    dismiss() {\r\n        this.isShow = false;\r\n    }\r\n\r\n    selectItem(item: NhUserPicker) {\r\n        this.errorMessage = '';\r\n        this.selectedItem.emit(item);\r\n        const existingItem = _.find(this.selectedItems, (selectedItem: NhUserPicker) => {\r\n            return selectedItem.id === item.id;\r\n        });\r\n        if (existingItem) {\r\n            return;\r\n        }\r\n\r\n        item.isSelected = true;\r\n        this.selectedItems.push(item);\r\n    }\r\n\r\n    removeItem(id: any) {\r\n        _.remove(this.selectedItems, (selectedItem: NhUserPicker) => {\r\n            return selectedItem.id === id;\r\n        });\r\n        this.removedItem.emit(id);\r\n    }\r\n\r\n    accept() {\r\n        if (!this.selectedItems || this.selectedItems.length === 0) {\r\n            this.errorMessage = 'required';\r\n            return;\r\n        }\r\n        this.accepted.emit(this.selectedItems);\r\n        this.isShow = false;\r\n        this.selectedItems = [];\r\n    }\r\n\r\n    search(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.isSearching = true;\r\n        this.userPickerService.search(this.keyword, this.currentPage, this.pageSize)\r\n            .pipe(finalize(() => this.isSearching = false))\r\n            .subscribe((result: SearchResultViewModel<NhUserPicker>) => {\r\n                this.totalRows = result.totalRows;\r\n                _.each(result.items, (item: SuggestionViewModel<string>) => {\r\n                    const selectedItemInfo = _.find(this.selectedItems, (selectedItem: NhUserPicker) => {\r\n                        return selectedItem.id === item.id;\r\n                    });\r\n                    item.isSelected = selectedItemInfo != null && selectedItemInfo !== undefined;\r\n                });\r\n                this.source = result.items;\r\n            });\r\n    }\r\n}\r\n","export class NhUserPicker {\r\n    id: string | number;\r\n    fullName: string;\r\n    avatar: string;\r\n    description: string;\r\n    isSelected: boolean;\r\n\r\n    constructor(id: any, fullName: string, avatar?: string, description?: string) {\r\n        this.id = id;\r\n        this.fullName = fullName;\r\n        this.avatar = avatar;\r\n        this.description = description;\r\n        this.isSelected = false;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NhUserPickerComponent } from './nh-user-picker.component';\r\nimport { NhUserPickerService } from './nh-user-picker.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CoreModule } from '../../../core/core.module';\r\nimport { GhmPagingModule } from '../ghm-paging/ghm-paging.module';\r\nimport { NHTreeModule } from '../nh-tree/nh-tree.module';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, CoreModule, GhmPagingModule, NHTreeModule],\r\n    exports: [NhUserPickerComponent],\r\n    declarations: [NhUserPickerComponent],\r\n    providers: [NhUserPickerService],\r\n})\r\nexport class NhUserPickerModule {\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { APP_CONFIG, IAppConfig } from '../../../configs/app.config';\r\nimport { Observable } from 'rxjs';\r\nimport { SearchResultViewModel } from '../../view-models/search-result.viewmodel';\r\nimport { NhUserPicker } from './nh-user-picker.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { UserSuggestion } from '../ghm-user-suggestion/ghm-user-suggestion.component';\r\n\r\n@Injectable()\r\nexport class NhUserPickerService {\r\n    url = 'api/v1/core/accounts';\r\n\r\n    constructor(@Inject(APP_CONFIG) appConfig: IAppConfig,\r\n                private http: HttpClient) {\r\n        this.url = `${appConfig.API_GATEWAY_URL}${this.url}`;\r\n    }\r\n\r\n    search(keyword: string, officeId?: number, page: number = 1, pageSize: number = 10): Observable<SearchResultViewModel<NhUserPicker>> {\r\n        return this.http.get(`${this.url}/suggestions`, {\r\n            params: new HttpParams()\r\n                .set('keyword', keyword ? keyword : '')\r\n                .set('officeId', officeId ? officeId.toString() : '')\r\n                .set('page', page ? page.toString() : '1')\r\n                .set('pageSize', pageSize ? pageSize.toString() : '10')\r\n\r\n        }).pipe(map((result: SearchResultViewModel<UserSuggestion>) => {\r\n            return {\r\n                items: result.items.map((item: UserSuggestion) => {\r\n                    const description = item.userName ? item.userName : '';\r\n                    return new NhUserPicker(item.id, item.name, item.avatar, description);\r\n                }) as NhUserPicker[],\r\n                totalRows: result.totalRows\r\n            } as SearchResultViewModel<NhUserPicker>;\r\n        }))as Observable<SearchResultViewModel<NhUserPicker>>;\r\n    }\r\n}\r\n"],"sourceRoot":""}