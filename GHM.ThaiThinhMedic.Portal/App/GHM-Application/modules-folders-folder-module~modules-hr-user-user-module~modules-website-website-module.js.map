{"version":3,"sources":["webpack:///./src/app/shareds/components/nh-upload/nh-upload.component.ts","webpack:///./src/app/shareds/components/nh-upload/nh-upload.model.ts","webpack:///./src/app/shareds/components/nh-upload/nh-upload.module.ts","webpack:///./src/app/shareds/components/nh-upload/nh-upload.service.ts"],"names":[],"mappings":"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","file":"modules-folders-folder-module~modules-hr-user-user-module~modules-website-website-module.js","sourcesContent":["﻿import {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    forwardRef,\r\n    Input,\r\n    OnChanges,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\nimport {FileUpload} from './nh-upload.model';\r\nimport {NhUploadService} from './nh-upload.service';\r\nimport * as _ from 'lodash';\r\n\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n    encapsulation: ViewEncapsulation.None,\r\n    selector: 'nh-upload',\r\n    template: `\r\n        <form>\r\n            <span *ngIf=\"!multiple\">\r\n                <div class=\"fileinput fileinput-new cm-mg-0\" data-provides=\"fileinput\" *ngIf=\"type == 'button'\"\r\n                     (change)=\"add($event)\">\r\n                    <span [class]=\"classBtn\">\r\n                        <i *ngIf=\"!uploading\" [class]=\"iconSelect\"></i>\r\n                        <i class=\"fa fa-pulse fa-spinner\" *ngIf=\"uploading\"></i>\r\n                        <input type=\"hidden\"/>\r\n                        <input type=\"file\" [id]=\"id\"/>\r\n                        {{ selectText }}\r\n                    </span>\r\n                    <button type=\"button\" [class]=\"classBtn\" *ngIf=\"!autoUpload\" [disabled]=\"!file\">\r\n                        <i *ngIf=\"!uploading\" [class]=\"iconUpload\"></i>\r\n                        {{ uploadText }}\r\n                    </button>\r\n                </div>\r\n                <div class=\"fileinput fileinput-new cm-mgb-0\" data-provides=\"fileinput\" *ngIf=\"type === 'buttongroup'\">\r\n                    <div class=\"input-group input-large\">\r\n                        <div class=\"form-control uneditable-input input-fixed input-medium\" data-trigger=\"fileinput\">\r\n                            <span class=\"fileinput-filename\">{{ text }}</span>\r\n                        </div>\r\n                        <span class=\"input-group-addon btn default btn-file\">\r\n                            <i [class]=\"iconUpload\" *ngIf=\"file && !file.isUploading\"></i>\r\n                            <i class=\"fa fa-spinner fa-pulse\" *ngIf=\"file && file.isUploading\"></i>\r\n                            <span class=\"fileinput-new\">{{ text ? changeText : uploadText }}</span>\r\n                            <input type=\"hidden\" value=\"\"/><input type=\"file\" name=\"\" [id]=\"id\" (change)=\"add($event)\">\r\n                        </span>\r\n                        <a href=\"javascript:;\" class=\"input-group-addon btn red\" data-dismiss=\"fileinput\" *ngIf=\"text\"\r\n                           (click)=\"deleteFile()\">{{ deleteText }}</a>\r\n                    </div>\r\n                </div>\r\n            </span><!-- end single -->\r\n\r\n            <span *ngIf=\"multiple\">\r\n                <div class=\"fileinput fileinput-new cm-mgb-0\" data-provides=\"fileinput\" *ngIf=\"type == 'button'\"\r\n                     (change)=\"add($event)\">\r\n                    <span [class]=\"classBtn\">\r\n                        <i *ngIf=\"!uploading\" [class]=\"iconSelect\"></i>\r\n                        <i class=\"fa fa-pulse fa-spinner\" *ngIf=\"uploading\"></i>\r\n                        <input type=\"hidden\"/>\r\n                        <input type=\"file\" [id]=\"id\" multiple/>\r\n                        {{ selectText }}\r\n                    </span>\r\n                    <button type=\"button\" [class]=\"classBtn\" *ngIf=\"!autoUpload\" [disabled]=\"!file\">\r\n                        <i *ngIf=\"!uploading\" [class]=\"iconUpload\"></i>\r\n                        {{ uploadText }}\r\n                    </button>\r\n                </div>\r\n                <div class=\"fileinput fileinput-new cm-mgb-0\" data-provides=\"fileinput\" *ngIf=\"type === 'buttongroup'\">\r\n                    <div class=\"input-group input-large\">\r\n                        <div class=\"form-control uneditable-input input-fixed input-medium\" data-trigger=\"fileinput\">\r\n                            <span class=\"fileinput-filename\">{{ text }}</span>\r\n                        </div>\r\n                        <span class=\"input-group-addon btn default btn-file\">\r\n                            <i [class]=\"iconUpload\" *ngIf=\"file && !file.isUploading\"></i>\r\n                            <i class=\"fa fa-spinner fa-pulse\" *ngIf=\"file && file.isUploading\"></i>\r\n                            <span class=\"fileinput-new\">{{ text ? changeText : uploadText }}</span>\r\n                            <input type=\"hidden\" value=\"\"/><input type=\"file\" name=\"\" multiple [id]=\"id\"\r\n                                                                  (change)=\"add($event)\">\r\n                        </span>\r\n                        <a href=\"javascript:;\" class=\"input-group-addon btn red\" data-dismiss=\"fileinput\" *ngIf=\"text\"\r\n                           (click)=\"deleteFile()\">{{ deleteText }}</a>\r\n                    </div>\r\n                </div>\r\n            </span><!-- end multiple -->\r\n        </form>\r\n    `,\r\n    providers: [\r\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NhUploadComponent), multi: true }\r\n    ]\r\n})\r\n\r\nexport class NhUploadComponent implements OnChanges, ControlValueAccessor {\r\n    @Input() id: string = new Date().getMilliseconds().toLocaleString();\r\n    @Input() url: string;\r\n    @Input() type = 'button'; // Button - Button Group\r\n    @Input() showPreivew = true;\r\n    @Input() autoUpload = true;\r\n    @Input() iconUpload = 'fa fa-cloud-upload';\r\n    @Input() iconSelect = 'fa fa-television';\r\n    @Input() selectText = 'Chọn file từ máy tính';\r\n    @Input() changeText = 'Thay đổi';\r\n    @Input() uploadText = 'Tải file lên';\r\n    @Input() deleteText = 'Xóa file';\r\n    @Input() singleRequest = true;\r\n    @Input() multiple = false;\r\n    @Input() text = '';\r\n    @Input() allowFileTypes = ['.png', '.jpg', '.jpeg', '.gif', '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx', '.rar', '.zip'];\r\n    @Input() isAttchImage = false;\r\n    @Input() classBtn = 'btn btn-primary btn-file';\r\n\r\n    @Output() onAdd = new EventEmitter();\r\n    @Output() onAbort = new EventEmitter();\r\n    @Output() onComplete = new EventEmitter();\r\n    @Output() onError = new EventEmitter();\r\n    @Output() onProgress = new EventEmitter();\r\n    @Output() onStart = new EventEmitter();\r\n    @Output() onStop = new EventEmitter();\r\n    @Output() onDelete = new EventEmitter();\r\n\r\n    uploading;\r\n    listFilesUpload: FileUpload[] = [];\r\n\r\n    propagateChange: any = () => {\r\n    }\r\n\r\n    constructor(private el: ElementRef,\r\n        private renderer: Renderer2,\r\n        private toastr: ToastrService,\r\n        private uploadService: NhUploadService) {\r\n        this.id = this.isAttchImage === true ? `file-upload-image-${new Date().getTime()}` : `file-upload-${new Date().getTime()}`;\r\n        this.uploadService.url = this.url;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.hasOwnProperty('url')) {\r\n            if (changes['url'].currentValue) {\r\n                this.uploadService.url = changes['url'].currentValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched() {\r\n    }\r\n\r\n    writeValue(value) {\r\n        this.text = value;\r\n    }\r\n\r\n    add(event) {\r\n        const files = event.target.files;\r\n        this.listFilesUpload = [];\r\n        if (this.multiple) {\r\n            _.each(files, (file: any, index) => {\r\n                if (!this.validateFileType(files)) {\r\n                    this.toastr.error('Tệp tin tải lên không đúng định dạng');\r\n                } else {\r\n                    this.listFilesUpload.push(new FileUpload(file.name, file.size, file));\r\n                }\r\n            });\r\n\r\n            if (this.autoUpload) {\r\n                this.upload();\r\n            }\r\n        } else {\r\n            if (!this.validateFileType(files)) {\r\n                this.toastr.error('Tệp tin tải lên không đúng định dạng');\r\n                return;\r\n            }\r\n\r\n            this.listFilesUpload = [];\r\n            this.listFilesUpload.push(new FileUpload(files[0].name, files[0].size, files[0]));\r\n            if (this.autoUpload) {\r\n                this.upload();\r\n            }\r\n        }\r\n    }\r\n\r\n    upload() {\r\n        if (this.listFilesUpload.length <= 0) {\r\n            this.toastr.error('Vui lòng chọn ít nhất một tệp tin tải lên');\r\n            return;\r\n        }\r\n\r\n        this.uploadService.upload(this.listFilesUpload)\r\n            .subscribe(x => {\r\n                if (x.data === -1) {\r\n                    this.toastr.error('Vui lòng chọn ít nhất 1 ảnh');\r\n                    this.onComplete.emit(null);\r\n                    return;\r\n                }\r\n\r\n                if (x.data === -2) {\r\n                    this.toastr.error('Ảnh tải lên không đúng định dạng. Vui lòng kiểm tra lại');\r\n                    this.onComplete.emit(null);\r\n                    return;\r\n                }\r\n\r\n                if (x.data === -3) {\r\n                    this.toastr.error('Ảnh tải lên không được vượt quá 5MB');\r\n                    this.onComplete.emit(null);\r\n                    return;\r\n                }\r\n\r\n                (<HTMLFormElement>$(`#${this.id}`).wrap('<form>').closest('form').get(0)).reset();\r\n                $(`#${this.id}`).unwrap();\r\n                const data = JSON.parse(x.data);\r\n                switch (x.status) {\r\n                    case 'complete':\r\n                        this.onComplete.emit(!this.multiple ? data[0] : data);\r\n                        break;\r\n                    case 'error':\r\n                        this.onError.emit(JSON.parse(x.data));\r\n                        break;\r\n                    case 'abort':\r\n                        this.onAbort.emit(JSON.parse(x.data));\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    abort(file: FileUpload) {\r\n\r\n    }\r\n\r\n    deleteFile() {\r\n        this.onDelete.emit();\r\n        this.text == null;\r\n    }\r\n\r\n    delete(fileUpload: FileUpload) {\r\n        swal({\r\n            title: `Bạn có chắc chắn muốn xóa tệp tin: \"${fileUpload.originalName}\"`,\r\n            text: 'Lưu ý: sau khi xóa bạn không thể lấy lại tệp tin này.',\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#DD6B55',\r\n            confirmButtonText: 'Đồng ý',\r\n            cancelButtonText: 'Hủy bỏ'\r\n        }, (isConfirm: boolean) => {\r\n            if (isConfirm) {\r\n                _.remove(this.listFilesUpload, (item) => {\r\n                    return item === fileUpload;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private validateFileType(files) {\r\n        const file = files[0];\r\n        const regex = /(?:\\.([^.]+))?$/; // Regex get extension\r\n        const ext = regex.exec(file.name)[1];\r\n        if (ext) {\r\n            return this.allowFileTypes.indexOf(`.${ext.toLowerCase()}`) !== -1;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","﻿export class FileUpload {\r\n    id: string;\r\n    status: number;\r\n    statusText: string;\r\n    progress: any;\r\n    originalName: string;\r\n    size: number;\r\n    sizeString: string;\r\n    response: string;\r\n    done: boolean;\r\n    error: boolean;\r\n    abort: boolean;\r\n    startTime: number;\r\n    endTime: number;\r\n    speedAverage: number;\r\n    file: File;\r\n    path: string;\r\n    isUploading: boolean;\r\n\r\n    constructor(originalName?: string, size?: number, file?: File) {\r\n        this.id = this.generateRandomIndex();\r\n        this.originalName = originalName;\r\n        this.size = size;\r\n        this.progress = {\r\n            loaded: 0,\r\n            total: 0,\r\n            percent: 0,\r\n            speed: 0,\r\n            speedHumanized: null\r\n        };\r\n        this.done = false;\r\n        this.error = false;\r\n        this.abort = false;\r\n        this.startTime = new Date().getTime();\r\n        this.endTime = 0;\r\n        this.speedAverage = 0;\r\n        this.sizeString = this.formatFileSize(size);\r\n        this.file = file;\r\n        this.path = '';\r\n        this.isUploading = false;\r\n    }\r\n\r\n    setProgres(progress: Object): void {\r\n        this.progress = progress;\r\n    }\r\n\r\n    setError(): void {\r\n        this.error = true;\r\n        this.done = true;\r\n    }\r\n\r\n    setAbort(): void {\r\n        this.abort = true;\r\n        this.done = true;\r\n    }\r\n\r\n    setUploadingStatus(isUploading: boolean) {\r\n        this.isUploading = isUploading;\r\n    }\r\n\r\n    onFinished(status: number, statusText: string, response: string): void {\r\n        this.endTime = new Date().getTime();\r\n        this.speedAverage = this.size / (this.endTime - this.startTime) * 1000;\r\n        this.speedAverage = parseInt(<any>this.speedAverage, 10);\r\n        this.sizeString = this.formatFileSize(this.speedAverage);\r\n        this.status = status;\r\n        this.statusText = statusText;\r\n        this.response = response;\r\n        this.done = true;\r\n    }\r\n\r\n    private formatFileSize(bytes: number) {\r\n        if (bytes === 0) {\r\n            return '0 Byte';\r\n        }\r\n        let k = 1024;\r\n        const sizes: string[] = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\r\n        let i: number = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    private generateRandomIndex(): string {\r\n        return Math.random().toString(36).substring(7);\r\n    }\r\n}\r\n","﻿import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NhUploadComponent } from './nh-upload.component';\r\nimport { NhUploadService } from './nh-upload.service';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [NhUploadComponent],\r\n    exports: [NhUploadComponent],\r\n    providers: [NhUploadService]\r\n})\r\n\r\nexport class NhUploadModule { }\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { HttpClient, HttpEventType, HttpHeaders, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { FileUpload } from './nh-upload.model';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NhUploadService {\r\n    total = new Subject();\r\n    loaded = new Subject();\r\n    percent = new Subject();\r\n    speed = new Subject();\r\n\r\n    beforeEmitter = new Subject();\r\n    emitter = new Subject();\r\n    onError = new Subject();\r\n    onAbort = new Subject();\r\n    onFinish = new Subject();\r\n\r\n    url: string;\r\n    withCredentials = true;\r\n\r\n    data: { [key: string]: any } = {};\r\n\r\n    constructor(private http: HttpClient,\r\n        private authService: AuthService) {\r\n    }\r\n\r\n    upload(listFiles: FileUpload[], singleRequest: boolean = true): Observable<any> {\r\n        const response = new Subject();\r\n        if (singleRequest) {\r\n            const formData = new FormData();\r\n            Object.keys(this.data).forEach(k => {\r\n                formData.append(k, this.data[k]);\r\n            });\r\n\r\n            listFiles.forEach(file => {\r\n                formData.append(file.originalName, file.file);\r\n            });\r\n\r\n            const xhr = new XMLHttpRequest();\r\n            let time: number = new Date().getTime();\r\n            let load = 0;\r\n            let speed = 0;\r\n\r\n            xhr.upload.onprogress = (e: ProgressEvent) => {\r\n                if (e.lengthComputable) {\r\n                    time = new Date().getTime() - time;\r\n                    load = e.loaded - load;\r\n                    speed = load / time * 1000;\r\n                    speed = parseInt(<any>speed, 10);\r\n                }\r\n\r\n                const percent = Math.round(e.loaded / e.total * 100);\r\n\r\n                if (speed === 0) {\r\n                    this.total.next(e.total);\r\n                    this.loaded.next(e.loaded);\r\n                    this.percent.next(percent);\r\n                    // fileUpload.setProgres({\r\n                    //     total: e.total,\r\n                    //     loaded: e.loaded,\r\n                    //     percent: percent\r\n                    // });\r\n                } else {\r\n                    this.total.next(e.total);\r\n                    this.loaded.next(e.loaded);\r\n                    this.percent.next(percent);\r\n                    this.speed.next(speed);\r\n                    // fileUpload.setProgres({\r\n                    //     total: e.total,\r\n                    //     loaded: e.loaded,\r\n                    //     percent: percent,\r\n                    //     speed: speed\r\n                    // });\r\n                }\r\n            };\r\n\r\n            xhr.upload.onabort = (e: Event) => {\r\n                response.next({ status: 'abort', data: e });\r\n            };\r\n\r\n            xhr.upload.onerror = (e: Event) => {\r\n                response.next({ status: 'error', data: e });\r\n            };\r\n\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                    response.next({ status: 'complete', data: xhr.response });\r\n                }\r\n            };\r\n\r\n            xhr.open('POST', this.url, true);\r\n            xhr.withCredentials = this.withCredentials;\r\n            // xhr.setRequestHeader('Authorization', `bearer ${this.authService.token}`);\r\n            xhr.send(formData);\r\n            return response;\r\n        } else {\r\n            listFiles.forEach(file => {\r\n                const formData = new FormData();\r\n                Object.keys(this.data).forEach(k => {\r\n                    formData.append(k, this.data[k]);\r\n                });\r\n\r\n                formData.append(file.originalName, file.file);\r\n\r\n                const xhr = new XMLHttpRequest();\r\n                let time: number = new Date().getTime();\r\n                let load = 0;\r\n                let speed = 0;\r\n\r\n                xhr.upload.onprogress = (e: ProgressEvent) => {\r\n                    if (e.lengthComputable) {\r\n                        time = new Date().getTime() - time;\r\n                        load = e.loaded - load;\r\n                        speed = load / time * 1000;\r\n                        speed = parseInt(<any>speed, 10);\r\n                    }\r\n\r\n                    const percent = Math.round(e.loaded / e.total * 100);\r\n\r\n                    if (speed === 0) {\r\n                        file.setProgres({\r\n                            total: e.total,\r\n                            loaded: e.loaded,\r\n                            percent: percent\r\n                        });\r\n                    } else {\r\n                        file.setProgres({\r\n                            total: e.total,\r\n                            loaded: e.loaded,\r\n                            percent: percent,\r\n                            speed: speed\r\n                        });\r\n                    }\r\n                };\r\n\r\n                xhr.upload.onabort = (e: Event) => {\r\n                    response.next({ status: 'abort', data: e });\r\n                };\r\n\r\n                xhr.upload.onerror = (e: Event) => {\r\n                    response.next({ status: 'error', data: e });\r\n                };\r\n\r\n                xhr.onreadystatechange = () => {\r\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                        response.next({ status: 'complete', data: xhr.response });\r\n                    }\r\n                };\r\n\r\n                xhr.open('POST', this.url, true);\r\n                xhr.withCredentials = this.withCredentials;\r\n                // xhr.setRequestHeader('Authorization', `bearer ${this.authService.token}`);\r\n\r\n                if (!file.abort) {\r\n                    xhr.send(formData);\r\n                }\r\n            }\r\n            );\r\n            return response;\r\n        }\r\n    }\r\n\r\n    // upload(files: any) {\r\n    //     // const formData = new FormData();\r\n    //     // Object.keys(this.data).forEach(k => {\r\n    //     //     formData.append(k, this.data[k]);\r\n    //     // });\r\n    //     // files.forEach((file) => {\r\n    //     //     formData.append(file.originalName, file.file);\r\n    //     // });\r\n    //     // console.log(files[0].file);\r\n    //     const request = new HttpRequest('POST', 'upload/files', files, {\r\n    //         reportProgress: true,\r\n    //         headers: new HttpHeaders()\r\n    //             .set('Content-Type', 'multipart/form-data')\r\n    //     });\r\n    //     this.http.request(request)\r\n    //         .subscribe(event => {\r\n    //             if (event.type === HttpEventType.UploadProgress) {\r\n    //                 const percentDone = Math.round(100 * event.loaded / event.total);\r\n    //                 console.log(`File is ${percentDone}% uploaded`);\r\n    //             } else if (event instanceof HttpResponse) {\r\n    //                 console.log('File is completly uploaded!');\r\n    //             }\r\n    //         });\r\n    // }\r\n}\r\n"],"sourceRoot":""}